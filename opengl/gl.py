'''
OpenGL binding For python
WARNING - This is generated code, do not modify directly.
'''
import sys
import ctypes as ct

from opengl.bindutils import gl_func

c_ptrdiff_t = ct.c_ssize_t

GLenum = ct.c_uint
GLbitfield = ct.c_uint
GLuint = ct.c_uint
GLint = ct.c_int
GLsizei = ct.c_int
GLboolean = ct.c_ubyte
GLbyte = ct.c_char
GLshort = ct.c_short
GLubyte = ct.c_ubyte
GLushort = ct.c_ushort
GLulong = ct.c_ulong
GLfloat = ct.c_float
GLclampf = ct.c_float
GLdouble = ct.c_double
GLclampd = ct.c_double
void = GLvoid = None
GLchar = ct.c_char

GLintptr = c_ptrdiff_t
GLsizeiptr = c_ptrdiff_t

GLhandleARB = ct.c_uint
GLcharARB = ct.c_char

GLhalfARB = ct.c_ushort
GLhalfNV = ct.c_ushort

GL_MAX_ACTIVE_LIGHTS_SGIX = 0x8405
GL_TEXTURE28_ARB = 0x84DC
GL_MAP1_VERTEX_ATTRIB13_4_NV = 0x866D
GL_VERTEX_ARRAY_RANGE_POINTER_NV = 0x8521
GL_BLEND_EQUATION_RGB_OES = 0x8009
GL_TRANSFORM_FEEDBACK_VARYING = 0x92F4
GL_TEXTURE15_ARB = 0x84CF
GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD = 0x9160
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 = 0x93D6
GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8
GL_TEXTURE_FILTER_CONTROL_EXT = 0x8500
GL_COLOR_INDEX2_EXT = 0x80E3
GL_STORAGE_CACHED_APPLE = 0x85BE
GL_FRAMEBUFFER_SRGB_EXT = 0x8DB9
GL_SOURCE0_RGB_ARB = 0x8580
GL_ISOLINES_EXT = 0x8E7A
GL_PROGRAM_TEX_INDIRECTIONS_ARB = 0x8807
GL_TANGENT_ARRAY_POINTER_EXT = 0x8442
GL_Q = 0x2003
GL_LUMINANCE8_EXT = 0x8040
GL_OBJECT_INFO_LOG_LENGTH_ARB = 0x8B84
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV = 0x8851
GL_PERFQUERY_DONOT_FLUSH_INTEL = 0x83F9
GL_NEGATIVE_Y_EXT = 0x87DA
GL_VIEW_CLASS_BPTC_FLOAT = 0x82D3
GL_RENDERBUFFER_RED_SIZE_EXT = 0x8D50
GL_SET = 0x150F
GL_PREVIOUS = 0x8578
GL_DRAW_BUFFER13_ATI = 0x8832
GL_FLOAT_RG_NV = 0x8881
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI = 0x80B6
GL_BOOL = 0x8B56
GL_TEXTURE_BASE_LEVEL_SGIS = 0x813C
GL_EVAL_VERTEX_ATTRIB13_NV = 0x86D3
GL_TEXTURE_2D_ARRAY = 0x8C1A
GL_POST_CONVOLUTION_BLUE_BIAS = 0x8022
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV = 0x84F8
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B
GL_DEBUG_OUTPUT_SYNCHRONOUS = 0x8242
GL_ATOMIC_COUNTER_BARRIER_BIT = 0x00001000
GL_POINT_SIZE_GRANULARITY = 0x0B13
GL_SELECT = 0x1C02
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2
GL_STENCIL_REF_COMMAND_NV = 0x000C
GL_LINEAR_DETAIL_COLOR_SGIS = 0x8099
GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0
GL_PN_TRIANGLES_ATI = 0x87F0
GL_FRACTIONAL_EVEN_OES = 0x8E7C
GL_PROGRAM_OBJECT_ARB = 0x8B40
GL_UNSIGNED_INT_IMAGE_BUFFER = 0x9067
GL_PATH_DASH_OFFSET_NV = 0x907E
GL_FOG_COORD_ARRAY_TYPE = 0x8454
GL_STENCIL_TAG_BITS_EXT = 0x88F2
GL_SHADER_STORAGE_BUFFER_BINDING = 0x90D3
GL_IMAGE_TRANSLATE_X_HP = 0x8157
GL_OBJECT_SUBTYPE_ARB = 0x8B4F
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE = 0x8A05
GL_TEXTURE_INTENSITY_SIZE = 0x8061
GL_COLOR_BUFFER_BIT1_QCOM = 0x00000002
GL_ONE_MINUS_SRC1_COLOR_EXT = 0x88FA
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX = 0x8188
GL_COLOR_TABLE_LUMINANCE_SIZE = 0x80DE
GL_CURRENT_WEIGHT_ARB = 0x86A8
GL_GUILTY_CONTEXT_RESET_EXT = 0x8253
GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E
GL_DUAL_ALPHA8_SGIS = 0x8111
GL_INTERLACE_READ_OML = 0x8981
GL_COMBINE_ARB = 0x8570
GL_TEXTURE_BUFFER_OFFSET_EXT = 0x919D
GL_COLOR_ATTACHMENT3_EXT = 0x8CE3
GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8C14
GL_COLOR_BUFFER_BIT6_QCOM = 0x00000040
GL_SCALAR_EXT = 0x87BE
GL_STACK_OVERFLOW_KHR = 0x0503
GL_COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93B9
GL_ASYNC_MARKER_SGIX = 0x8329
GL_LUMINANCE_ALPHA32F_EXT = 0x8819
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE = 0x8521
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93DD
GL_MAP1_TANGENT_EXT = 0x8444
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV = 0x8909
GL_RENDERBUFFER_COLOR_SAMPLES_NV = 0x8E10
GL_CONSTANT_BORDER_HP = 0x8151
GL_DEPTH_COMPONENT24_OES = 0x81A6
GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5
GL_LOGIC_OP = 0x0BF1
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF
GL_ALPHA_TEST_REF_QCOM = 0x0BC2
GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES = 0x9102
GL_ACTIVE_ATTRIBUTES = 0x8B89
GL_MAP1_TEXTURE_COORD_4 = 0x0D96
GL_BLEND_SRC_ALPHA_OES = 0x80CB
GL_TEXTURE_BASE_LEVEL = 0x813C
GL_QUAD_INTENSITY8_SGIS = 0x8123
GL_PROGRAM_SEPARABLE_EXT = 0x8258
GL_IMAGE_SCALE_X_HP = 0x8155
GL_BOUNDING_BOX_NV = 0x908D
GL_COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93B7
GL_EFFECTIVE_RASTER_SAMPLES_EXT = 0x932C
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT = 0x850E
GL_FLAT = 0x1D00
GL_IGNORE_BORDER_HP = 0x8150
GL_TEXTURE14 = 0x84CE
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B3
GL_IMAGE_CLASS_1_X_8 = 0x82C1
GL_OBJECT_TYPE_ARB = 0x8B4E
GL_2X_BIT_ATI = 0x00000001
GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95
GL_PRIMITIVE_RESTART_INDEX_NV = 0x8559
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB = 0x933D
GL_CONJOINT_NV = 0x9284
GL_ATTRIB_STACK_DEPTH = 0x0BB0
GL_PIXEL_MAP_I_TO_B = 0x0C74
GL_TRIANGLE_FAN = 0x0006
GL_TEXTURE_STORAGE_HINT_APPLE = 0x85BC
GL_DEPTH_FUNC = 0x0B74
GL_MAP2_NORMAL = 0x0DB2
GL_GLOBAL_ALPHA_FACTOR_SUN = 0x81DA
GL_GENERATE_MIPMAP_HINT = 0x8192
GL_QUERY_BUFFER = 0x9192
GL_INTERNALFORMAT_BLUE_TYPE = 0x827A
GL_VIEW_CLASS_RGTC1_RED = 0x82D0
GL_SIGNED_LUMINANCE_NV = 0x8701
GL_TRANSPOSE_COLOR_MATRIX = 0x84E6
GL_DEBUG_OUTPUT = 0x92E0
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB = 0x8DA8
GL_SMOOTH_CUBIC_CURVE_TO_NV = 0x10
GL_RELATIVE_ROUNDED_RECT8_NV = 0xEF
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB = 0x9381
GL_SOURCE0_ALPHA_EXT = 0x8588
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB
GL_LIGHTING_BIT = 0x00000040
GL_MIRRORED_REPEAT_OES = 0x8370
GL_UNIFORM_BUFFER_BINDING = 0x8A28
GL_SHADER = 0x82E1
GL_TEXTURE_BORDER_COLOR_OES = 0x1004
GL_INDEX_ARRAY_TYPE = 0x8085
GL_SAMPLE_MASK = 0x8E51
GL_DEPTH_SAMPLES_NV = 0x932D
GL_TRIANGLES = 0x0004
GL_LUMINANCE12_ALPHA12 = 0x8047
GL_CLIPPING_INPUT_PRIMITIVES_ARB = 0x82F6
GL_SIGNED_INTENSITY8_NV = 0x8708
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x8518
GL_SRGB_ALPHA_EXT = 0x8C42
GL_CALLIGRAPHIC_FRAGMENT_SGIX = 0x8183
GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D
GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES = 0x8D68
GL_BLUE_MIN_CLAMP_INGR = 0x8562
GL_TEXTURE_MATRIX = 0x0BA8
GL_TEXTURE_ALPHA_SIZE = 0x805F
GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0
GL_HSL_HUE_KHR = 0x92AD
GL_TESS_GEN_MODE = 0x8E76
GL_SHADE_MODEL = 0x0B54
GL_UNSIGNED_SHORT_8_8_APPLE = 0x85BA
GL_MAX_SPARSE_TEXTURE_SIZE_EXT = 0x9198
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB = 0x8247
GL_UNSIGNED_INT16_VEC4_NV = 0x8FF3
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB = 0x90EB
GL_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900C
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV = 0x88F4
GL_VERTEX_SHADER_OPTIMIZED_EXT = 0x87D4
GL_UNSIGNED_INT64_VEC2_ARB = 0x8FF5
GL_PN_TRIANGLES_NORMAL_MODE_ATI = 0x87F3
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX = 0x813F
GL_AUX0 = 0x0409
GL_LUMINANCE_ALPHA_FLOAT16_APPLE = 0x881F
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE = 0x8D56
GL_COMPUTE_SUBROUTINE = 0x92ED
GL_POINT_SIZE_MIN = 0x8126
GL_COPY_INVERTED = 0x150C
GL_PROGRAM_STRING_NV = 0x8628
GL_TEXTURE_PRIORITY_EXT = 0x8066
GL_FONT_HEIGHT_BIT_NV = 0x00800000
GL_PREVIOUS_ARB = 0x8578
GL_R11F_G11F_B10F = 0x8C3A
GL_RGB16_SNORM = 0x8F9A
GL_LINEAR_DETAIL_ALPHA_SGIS = 0x8098
GL_COLOR_TABLE_FORMAT_SGI = 0x80D8
GL_TEXTURE_INTENSITY_TYPE = 0x8C15
GL_RETURN = 0x0102
GL_INT_IMAGE_CUBE_MAP_ARRAY_OES = 0x905F
GL_SPHERE_MAP = 0x2402
GL_NEGATE_BIT_ATI = 0x00000004
GL_UNPACK_CLIENT_STORAGE_APPLE = 0x85B2
GL_PATCH_VERTICES_OES = 0x8E72
GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8C01
GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506
GL_REG_17_ATI = 0x8932
GL_COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93BA
GL_SAMPLE_COVERAGE_VALUE_ARB = 0x80AA
GL_RELATIVE_LARGE_CCW_ARC_TO_NV = 0x17
GL_STENCIL_BACK_WRITEMASK = 0x8CA5
GL_VIEWPORT_SUBPIXEL_BITS_NV = 0x825C
GL_MAX_VIEWS_OVR = 0x9631
GL_RED_MIN_CLAMP_INGR = 0x8560
GL_SM_COUNT_NV = 0x933B
GL_COMPRESSED_RGBA_ASTC_10x5 = 0x93B8
GL_RGBA4_DXT5_S3TC = 0x83A5
GL_PER_STAGE_CONSTANTS_NV = 0x8535
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1
GL_TEXTURE_MAG_SIZE_NV = 0x871F
GL_SELECTION_BUFFER_POINTER = 0x0DF3
GL_IMAGE_2D_RECT_EXT = 0x904F
GL_MAP2_VERTEX_ATTRIB11_4_NV = 0x867B
GL_T2F_IUI_V3F_EXT = 0x81B2
GL_COMBINER_SCALE_NV = 0x8548
GL_MAX_CLIP_DISTANCES = 0x0D32
GL_INCR_WRAP_EXT = 0x8507
GL_CONSTANT_ALPHA = 0x8003
GL_SAMPLE_ALPHA_TO_MASK_SGIS = 0x809E
GL_SUPERSAMPLE_SCALE_Y_NV = 0x9373
GL_RGB5_A1_EXT = 0x8057
GL_MAP2_GRID_DOMAIN = 0x0DD2
GL_FONT_HAS_KERNING_BIT_NV = 0x10000000
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x8517
GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3
GL_NORMAL_ARRAY = 0x8075
GL_CON_11_ATI = 0x894C
GL_ALL_BARRIER_BITS = 0xFFFFFFFF
GL_COMBINER3_NV = 0x8553
GL_BGRA_INTEGER = 0x8D9B
GL_COLOR_TABLE_BIAS_SGI = 0x80D7
GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE = 0x93A0
GL_RELATIVE_CUBIC_CURVE_TO_NV = 0x0D
GL_CONVOLUTION_WIDTH_EXT = 0x8018
GL_SIGNED_NEGATE_NV = 0x853D
GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA = 0x8BB2
GL_TRANSFORM_FEEDBACK_RECORD_NV = 0x8C86
GL_RGB8_EXT = 0x8051
GL_PATH_FOG_GEN_MODE_NV = 0x90AC
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9
GL_NORMAL_MAP_OES = 0x8511
GL_TEXTURE_MAX_LOD = 0x813B
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV = 0x8DA5
GL_FRAMEBUFFER_RENDERABLE = 0x8289
GL_FRAGMENT_LIGHT7_SGIX = 0x8413
GL_REPLACEMENT_CODE_SUN = 0x81D8
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86
GL_SECONDARY_COLOR_ARRAY = 0x845E
GL_LIGHT_ENV_MODE_SGIX = 0x8407
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93D3
GL_VERTEX_ARRAY_OBJECT_EXT = 0x9154
GL_COLOR_FLOAT_APPLE = 0x8A0F
GL_CON_29_ATI = 0x895E
GL_IMAGE_CLASS_2_X_8 = 0x82C0
GL_ALL_BARRIER_BITS_EXT = 0xFFFFFFFF
GL_R1UI_C4UB_V3F_SUN = 0x85C5
GL_COLOR_RENDERABLE = 0x8286
GL_TEXTURE_2D_STACK_MESAX = 0x875A
GL_TEXTURE_VIEW_NUM_LEVELS_OES = 0x82DC
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5E
GL_CPU_OPTIMIZED_QCOM = 0x8FB1
GL_OPERAND0_ALPHA_EXT = 0x8598
GL_LINEAR_DETAIL_SGIS = 0x8097
GL_OPERAND2_RGB = 0x8592
GL_SOURCE2_RGB_EXT = 0x8582
GL_TEXTURE_COORD_ARRAY_EXT = 0x8078
GL_MAGNITUDE_BIAS_NV = 0x8718
GL_INT64_VEC4_ARB = 0x8FEB
GL_DEBUG_SEVERITY_HIGH_AMD = 0x9146
GL_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A6
GL_CIRCULAR_TANGENT_ARC_TO_NV = 0xFC
GL_COMPRESSED_RGBA_ASTC_8x5 = 0x93B5
GL_SCREEN_KHR = 0x9295
GL_DRAW_BUFFER7_ATI = 0x882C
GL_ALL_COMPLETED_NV = 0x84F2
GL_TEXTURE_BINDING_BUFFER_OES = 0x8C2C
GL_LUMINANCE8_ALPHA8_OES = 0x8045
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT = 0x8DDE
GL_TEXTURE_COMPARE_FUNC_ARB = 0x884D
GL_MULTISAMPLE_BUFFER_BIT3_QCOM = 0x08000000
GL_COMPRESSED_RGBA = 0x84EE
GL_CONVOLUTION_BORDER_MODE_EXT = 0x8013
GL_T2F_C4F_N3F_V3F = 0x2A2C
GL_SRC2_ALPHA = 0x858A
GL_SIGNED_LUMINANCE8_ALPHA8_NV = 0x8704
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262
GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1
GL_HINT_BIT = 0x00008000
GL_COLOR_TABLE_ALPHA_SIZE = 0x80DD
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT = 0x8C3B
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES = 0x8CDB
GL_POST_CONVOLUTION_GREEN_SCALE_EXT = 0x801D
GL_MAX_FRAMEBUFFER_SAMPLES = 0x9318
GL_NORMAL_ARRAY_STRIDE_EXT = 0x807F
GL_TEXTURE_VIEW_NUM_LAYERS = 0x82DE
GL_DEBUG_CATEGORY_OTHER_AMD = 0x9150
GL_DEBUG_SOURCE_SHADER_COMPILER_KHR = 0x8248
GL_GEOMETRY_INPUT_TYPE_EXT = 0x8DDB
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34
GL_DEPTH_COMPONENT32_ARB = 0x81A7
GL_PROXY_TEXTURE_2D_EXT = 0x8064
GL_DRAW_BUFFER4_NV = 0x8829
GL_SYNC_CL_EVENT_COMPLETE_ARB = 0x8241
GL_ALPHA32F_EXT = 0x8816
GL_MODELVIEW23_ARB = 0x8737
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV = 0x80
GL_UNSIGNED_INT_8_8_8_8_EXT = 0x8035
GL_COVERAGE_MODULATION_TABLE_SIZE_NV = 0x9333
GL_VIRTUAL_PAGE_SIZE_Z_ARB = 0x9197
GL_INVALID_FRAMEBUFFER_OPERATION_OES = 0x0506
GL_EXTENSIONS = 0x1F03
GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA = 0x8BB7
GL_RELATIVE_HORIZONTAL_LINE_TO_NV = 0x07
GL_TESS_GEN_VERTEX_ORDER_OES = 0x8E78
GL_TEXTURE_1D = 0x0DE0
GL_EVAL_VERTEX_ATTRIB3_NV = 0x86C9
GL_POINT_SPRITE_R_MODE_NV = 0x8863
GL_FRAGMENT_MATERIAL_EXT = 0x8349
GL_REG_19_ATI = 0x8934
GL_RGB5_EXT = 0x8050
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8C4C
GL_ENABLE_BIT = 0x00002000
GL_DECR_WRAP_OES = 0x8508
GL_COLORDODGE_NV = 0x9299
GL_LIGHTEN_NV = 0x9298
GL_TRIANGLE_STRIP_ADJACENCY_OES = 0x000D
GL_RELEASED_APPLE = 0x8A19
GL_TEXTURE_MATERIAL_PARAMETER_EXT = 0x8352
GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT = 0x8A57
GL_UNSIGNED_INT_IMAGE_3D_EXT = 0x9064
GL_SAMPLER_2D_SHADOW_EXT = 0x8B62
GL_MIN_EXT = 0x8007
GL_DRAW_BUFFER15_ATI = 0x8834
GL_MAX_RENDERBUFFER_SIZE = 0x84E8
GL_GEOMETRY_SUBROUTINE = 0x92EB
GL_PIXEL_MAP_R_TO_R = 0x0C76
GL_COLOR_SUM_CLAMP_NV = 0x854F
GL_CND_ATI = 0x896A
GL_FILTER = 0x829A
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 = 0x93DB
GL_LIST_INDEX = 0x0B33
GL_READ_FRAMEBUFFER_BINDING_EXT = 0x8CAA
GL_SRC0_ALPHA = 0x8588
GL_HSL_COLOR = 0x92AF
GL_LUMINANCE_ALPHA_FLOAT32_ATI = 0x8819
GL_MAP1_VERTEX_ATTRIB4_4_NV = 0x8664
GL_STENCIL_INDEX1_OES = 0x8D46
GL_CURRENT_VERTEX_EXT = 0x87E2
GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87D2
GL_SLUMINANCE = 0x8C46
GL_TEXTURE_GEN_STR_OES = 0x8D60
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV = 0x8E5A
GL_VERTEX_STREAM6_ATI = 0x8772
GL_INTERNALFORMAT_SUPPORTED = 0x826F
GL_CULL_VERTEX_EYE_POSITION_EXT = 0x81AB
GL_FUNC_SUBTRACT_OES = 0x800A
GL_TEXTURE_CLIPMAP_DEPTH_SGIX = 0x8176
GL_FLOAT_RGB32_NV = 0x8889
GL_DEPTH_PASS_INSTRUMENT_SGIX = 0x8310
GL_WRAP_BORDER_SUN = 0x81D4
GL_PATH_STROKE_COVER_MODE_NV = 0x9083
GL_COVERAGE_BUFFERS_NV = 0x8ED3
GL_RGBA_SNORM = 0x8F93
GL_QUERY_NO_WAIT = 0x8E14
GL_ONE = 1
GL_PRIMITIVES_GENERATED_EXT = 0x8C87
GL_STENCIL_VALUE_MASK = 0x0B93
GL_MODELVIEW_STACK_DEPTH = 0x0BA3
GL_FLOAT_RG16_NV = 0x8886
GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37
GL_DYNAMIC_DRAW_ARB = 0x88E8
GL_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8906
GL_PIXEL_MAP_A_TO_A = 0x0C79
GL_REG_25_ATI = 0x893A
GL_DRAW_BUFFER9_EXT = 0x882E
GL_MULTISAMPLE_BUFFER_BIT7_QCOM = 0x80000000
GL_INT_IMAGE_2D_ARRAY_EXT = 0x905E
GL_INDEX_MATERIAL_PARAMETER_EXT = 0x81B9
GL_PIXEL_MODE_BIT = 0x00000020
GL_MAX_EVAL_ORDER = 0x0D30
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT = 0x8C88
GL_SPOT_DIRECTION = 0x1204
GL_CLIP_PLANE5 = 0x3005
GL_PERFMON_RESULT_AMD = 0x8BC6
GL_UNPACK_IMAGE_HEIGHT = 0x806E
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8
GL_CLIP_PLANE3 = 0x3003
GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG = 0x93F1
GL_R16_SNORM = 0x8F98
GL_COLOR_TABLE_ALPHA_SIZE_SGI = 0x80DD
GL_SEPARATE_ATTRIBS_NV = 0x8C8D
GL_IS_PER_PATCH = 0x92E7
GL_RGB10_EXT = 0x8052
GL_VERTEX_ARRAY = 0x8074
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D
GL_RGB10_A2_EXT = 0x8059
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8C4D
GL_NEAREST_MIPMAP_LINEAR = 0x2702
GL_VERTEX_WEIGHTING_EXT = 0x8509
GL_FLOAT_VEC2_ARB = 0x8B50
GL_TEXTURE24_ARB = 0x84D8
GL_CLAMP_VERTEX_COLOR = 0x891A
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR = 0x824E
GL_UNPACK_ALIGNMENT = 0x0CF5
GL_CONTEXT_LOST_WEBGL = 0x9242
GL_VERTEX_ATTRIB_ARRAY1_NV = 0x8651
GL_MAX_COLOR_ATTACHMENTS_EXT = 0x8CDF
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL = 0x94FE
GL_OPERAND0_RGB_ARB = 0x8590
GL_RECLAIM_MEMORY_HINT_PGI = 0x1A1FE
GL_TIMEOUT_EXPIRED_APPLE = 0x911B
GL_REPLICATE_BORDER = 0x8153
GL_BUMP_TEX_UNITS_ATI = 0x8778
GL_REG_12_ATI = 0x892D
GL_RGBA2 = 0x8055
GL_DOT3_ATI = 0x8966
GL_INT_IMAGE_3D = 0x9059
GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D
GL_MAX_VARYING_COMPONENTS_EXT = 0x8B4B
GL_DISPLAY_LIST = 0x82E7
GL_PROGRAM_OBJECT_EXT = 0x8B40
GL_ZOOM_Y = 0x0D17
GL_BGRA_INTEGER_EXT = 0x8D9B
GL_IMAGE_2D_EXT = 0x904D
GL_MAX_VARYING_FLOATS_ARB = 0x8B4B
GL_T2F_C3F_V3F = 0x2A2A
GL_SAMPLER_BUFFER_OES = 0x8DC2
GL_LAYER_PROVOKING_VERTEX = 0x825E
GL_ISOLINES_OES = 0x8E7A
GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A
GL_T2F_N3F_V3F = 0x2A2B
GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD
GL_OUTPUT_TEXTURE_COORD27_EXT = 0x87B8
GL_VERTEX_ARRAY_LIST_IBM = 103070
GL_COMPRESSED_R11_EAC_OES = 0x9270
GL_RENDERBUFFER_SAMPLES_EXT = 0x8CAB
GL_BUFFER_SERIALIZED_MODIFY_APPLE = 0x8A12
GL_FRAMEBUFFER_BARRIER_BIT = 0x00000400
GL_TEXTURE_MIN_LOD_SGIS = 0x813A
GL_BLEND_COLOR_EXT = 0x8005
GL_VERTEX_ATTRIB_ARRAY_LONG = 0x874E
GL_MODELVIEW_MATRIX = 0x0BA6
GL_CURRENT_VERTEX_ATTRIB = 0x8626
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A
GL_INTENSITY8 = 0x804B
GL_STANDARD_FONT_NAME_NV = 0x9072
GL_CLIP_DISTANCE5_APPLE = 0x3005
GL_RGBA16F = 0x881A
GL_PROGRAM_KHR = 0x82E2
GL_TEXTURE_DEPTH_QCOM = 0x8BD4
GL_RG_INTEGER = 0x8228
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES = 0x9279
GL_MAD_ATI = 0x8968
GL_OPERAND0_ALPHA = 0x8598
GL_COLOR_ATTACHMENT8_NV = 0x8CE8
GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES = 0x90CD
GL_DONT_CARE = 0x1100
GL_UNSIGNED_INT_VEC4 = 0x8DC8
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C
GL_PASS_THROUGH_NV = 0x86E6
GL_DEPTH_STENCIL_TO_RGBA_NV = 0x886E
GL_LOW_INT = 0x8DF3
GL_CLIP_PLANE0 = 0x3000
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX = 0x8186
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX = 0x8402
GL_VERTEX_ATTRIB_MAP2_APPLE = 0x8A01
GL_POLYGON_OFFSET_FACTOR = 0x8038
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV = 0x90BE
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES = 0x8DA7
GL_GENERATE_MIPMAP_SGIS = 0x8191
GL_MATERIAL_SIDE_HINT_PGI = 0x1A22C
GL_FRAGMENT_PROGRAM_ARB = 0x8804
GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8C70
GL_IMAGE_BUFFER_OES = 0x9051
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88
GL_STORAGE_PRIVATE_APPLE = 0x85BD
GL_PROXY_TEXTURE_2D_ARRAY_EXT = 0x8C1B
GL_PATH_COVER_DEPTH_FUNC_NV = 0x90BF
GL_TEXTURE_APPLICATION_MODE_EXT = 0x834F
GL_LARGE_CW_ARC_TO_NV = 0x18
GL_STENCIL_BACK_FUNC_ATI = 0x8800
GL_DEBUG_TYPE_MARKER = 0x8268
GL_HSL_LUMINOSITY_KHR = 0x92B0
GL_COLOR_MATERIAL_PARAMETER = 0x0B56
GL_DRAW_BUFFER6_ATI = 0x882B
GL_LIGHT4 = 0x4004
GL_SOURCE3_RGB_NV = 0x8583
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES = 0x8E81
GL_MAX_SPARSE_TEXTURE_SIZE_ARB = 0x9198
GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55
GL_422_REV_EXT = 0x80CD
GL_PERFQUERY_WAIT_INTEL = 0x83FB
GL_OP_MOV_EXT = 0x8799
GL_STREAM_DRAW = 0x88E0
GL_CLIP_DISTANCE2 = 0x3002
GL_OP_SET_LT_EXT = 0x878D
GL_READ_FRAMEBUFFER_BINDING = 0x8CAA
GL_INVALID_VALUE = 0x0501
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB = 0x8242
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV = 0x9026
GL_POLYGON_TOKEN = 0x0703
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES = 0x93E8
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F1
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES = 0x886C
GL_COVERAGE_ATTACHMENT_NV = 0x8ED2
GL_CLIENT_ACTIVE_TEXTURE_ARB = 0x84E1
GL_EXCLUSION_NV = 0x92A0
GL_MAX_ASYNC_DRAW_PIXELS_SGIX = 0x8360
GL_VERSION_ES_CL_1_1 = 1
GL_COMPRESSED_RGBA8_ETC2_EAC_OES = 0x9278
GL_BACK_SECONDARY_COLOR_NV = 0x8C78
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT = 0x851A
GL_FIRST_TO_REST_NV = 0x90AF
GL_COMPRESSED_LUMINANCE_ARB = 0x84EA
GL_4PASS_1_SGIS = 0x80A5
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT = 0x8DE3
GL_HISTOGRAM_WIDTH_EXT = 0x8026
GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104
GL_ARRAY_OBJECT_BUFFER_ATI = 0x8766
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB = 0x84E3
GL_PIXEL_TILE_CACHE_SIZE_SGIX = 0x8145
GL_CURRENT_SECONDARY_COLOR_EXT = 0x8459
GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22
GL_DEBUG_TYPE_MARKER_KHR = 0x8268
GL_STENCIL_BUFFER_BIT5_QCOM = 0x00200000
GL_FRAMEBUFFER_COMPLETE = 0x8CD5
GL_COLOR_CLEAR_VALUE = 0x0C22
GL_DRAW_INDIRECT_ADDRESS_NV = 0x8F41
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT = 0x8C8A
GL_MAX_PROGRAM_ATTRIBS_ARB = 0x88AD
GL_PROGRAM_STRING_ARB = 0x8628
GL_PATH_PROJECTION_NV = 0x1701
GL_NUM_PROGRAM_BINARY_FORMATS_OES = 0x87FE
GL_TEXTURE_GATHER_SHADOW = 0x82A3
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES = 0x8E5D
GL_UNSIGNED_INT16_NV = 0x8FF0
GL_FOG_COORDINATE_ARRAY_POINTER_EXT = 0x8456
GL_MODELVIEW0_ARB = 0x1700
GL_ADD_ATI = 0x8963
GL_COLOR_ARRAY_TYPE_EXT = 0x8082
GL_CLIP_PLANE0_IMG = 0x3000
GL_SAMPLE_MASK_INVERT_SGIS = 0x80AB
GL_COLOR_ATTACHMENT4_EXT = 0x8CE4
GL_COLOR_ATTACHMENT6_NV = 0x8CE6
GL_DRAW_BUFFER13_ARB = 0x8832
GL_SAMPLER_1D_ARRAY_EXT = 0x8DC0
GL_COMPRESSED_RGBA_ASTC_6x6x5_OES = 0x93C8
GL_SCALE_BY_ONE_HALF_NV = 0x8540
GL_SAMPLE_MASK_INVERT_EXT = 0x80AB
GL_TRANSPOSE_TEXTURE_MATRIX_ARB = 0x84E5
GL_VERTEX_BINDING_OFFSET = 0x82D7
GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD = 0x9199
GL_SOURCE1_RGB_EXT = 0x8581
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI = 0x87F4
GL_FRAME_NV = 0x8E26
GL_RG8_EXT = 0x822B
GL_IMAGE_CLASS_4_X_8 = 0x82BF
GL_ARRAY_BUFFER = 0x8892
GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30
GL_MEDIUM_INT = 0x8DF4
GL_TEXTURE_COMPARE_FUNC_EXT = 0x884D
GL_SYSTEM_FONT_NAME_NV = 0x9073
GL_RGB_INTEGER = 0x8D98
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI = 0x80DE
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES = 0x8221
GL_MITER_TRUNCATE_NV = 0x90A8
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB = 0x9341
GL_SHADER_IMAGE_STORE = 0x82A5
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV = 0x8853
GL_DRAW_BUFFER1_NV = 0x8826
GL_POLYGON_STIPPLE_BIT = 0x00000010
GL_RENDERBUFFER_SAMPLES_NV = 0x8CAB
GL_SAMPLER_BUFFER = 0x8DC2
GL_DEBUG_CATEGORY_PERFORMANCE_AMD = 0x914D
GL_RENDERBUFFER_RED_SIZE = 0x8D50
GL_X_EXT = 0x87D5
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9
GL_COLOR_INDEX12_EXT = 0x80E6
GL_TIMESTAMP = 0x8E28
GL_RGBA8I = 0x8D8E
GL_COLOR_ATTACHMENT15_EXT = 0x8CEF
GL_RG32I = 0x823B
GL_R3_G3_B2 = 0x2A10
GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT = 0x8E5A
GL_POINT_SIZE_RANGE = 0x0B12
GL_SAMPLE_MASK_SGIS = 0x80A0
GL_RASTER_MULTISAMPLE_EXT = 0x9327
GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B
GL_STENCIL_ATTACHMENT_EXT = 0x8D20
GL_DRAW_FRAMEBUFFER_BINDING_APPLE = 0x8CA6
GL_TEXTURE23 = 0x84D7
GL_COMPUTE_WORK_GROUP_SIZE = 0x8267
GL_HISTOGRAM_RED_SIZE = 0x8028
GL_READ_FRAMEBUFFER_BINDING_NV = 0x8CAA
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV = 0x8C8F
GL_3_BYTES = 0x1408
GL_VERTEX_PRECLIP_HINT_SGIX = 0x83EF
GL_FLOAT_RGB16_NV = 0x8888
GL_CCW = 0x0901
GL_GS_PROGRAM_BINARY_MTK = 0x9641
GL_CURRENT_TANGENT_EXT = 0x843B
GL_LEQUAL = 0x0203
GL_4PASS_2_EXT = 0x80A6
GL_MAX_PIXEL_MAP_TABLE = 0x0D34
GL_CURRENT_PALETTE_MATRIX_ARB = 0x8843
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL = 0x94F3
GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364
GL_IMAGE_CLASS_2_X_32 = 0x82BA
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6
GL_IMAGE_SCALE_Y_HP = 0x8156
GL_SYNC_CONDITION = 0x9113
GL_4PASS_0_SGIS = 0x80A4
GL_OP_ADD_EXT = 0x8787
GL_BLEND_DST_RGB = 0x80C8
GL_GLYPH_WIDTH_BIT_NV = 0x01
GL_DEPTH_CLAMP_NV = 0x864F
GL_VECTOR_EXT = 0x87BF
GL_POINT_SPRITE = 0x8861
GL_CUBIC_HP = 0x815F
GL_LOW_FLOAT = 0x8DF0
GL_REDUCE = 0x8016
GL_OFFSET_TEXTURE_2D_MATRIX_NV = 0x86E1
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV = 0x9035
GL_MULT = 0x0103
GL_FRONT_LEFT = 0x0400
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES = 0x8CD7
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV = 0x8C85
GL_ROUNDED_RECT8_NV = 0xEE
GL_PACK_COMPRESSED_BLOCK_DEPTH = 0x912D
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB = 0x9199
GL_DOUBLE_MAT3x4 = 0x8F4C
GL_RELATIVE_ROUNDED_RECT2_NV = 0xEB
GL_ALPHA12_EXT = 0x803D
GL_R32F = 0x822E
GL_UNSIGNED_SHORT_1_15_REV_MESA = 0x8754
GL_STENCIL_OP_VALUE_AMD = 0x874C
GL_FLOAT = 0x1406
GL_COLOR_SAMPLES_NV = 0x8E20
GL_FOG_COORD = 0x8451
GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV = 0x933F
GL_ALL_SHADER_BITS = 0xFFFFFFFF
GL_NEGATIVE_W_EXT = 0x87DC
GL_STENCIL_INDEX1 = 0x8D46
GL_LINE_WIDTH_COMMAND_NV = 0x000D
GL_PATH_TERMINAL_END_CAP_NV = 0x9078
GL_DSDT_MAG_VIB_NV = 0x86F7
GL_CONTINUOUS_AMD = 0x9007
GL_FLOAT_MAT2 = 0x8B5A
GL_PERFMON_RESULT_SIZE_AMD = 0x8BC5
GL_POST_COLOR_MATRIX_GREEN_BIAS = 0x80B9
GL_EQUAL = 0x0202
GL_COLOR_ARRAY_POINTER_EXT = 0x8090
GL_TEXTURE9_ARB = 0x84C9
GL_DEBUG_TYPE_POP_GROUP = 0x826A
GL_COLOR_INDEX = 0x1900
GL_LUMINANCE16UI_EXT = 0x8D7A
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x8515
GL_VERTEX_SHADER_INVARIANTS_EXT = 0x87D1
GL_AUX_DEPTH_STENCIL_APPLE = 0x8A14
GL_FLOAT_MAT3 = 0x8B5B
GL_STATIC_DRAW = 0x88E4
GL_STACK_UNDERFLOW_KHR = 0x0504
GL_TEXTURE_4DSIZE_SGIS = 0x8136
GL_ASYNC_TEX_IMAGE_SGIX = 0x835C
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900E
GL_OUTPUT_TEXTURE_COORD4_EXT = 0x87A1
GL_FOG_SPECULAR_TEXTURE_WIN = 0x80EC
GL_TEXTURE_CLIPMAP_CENTER_SGIX = 0x8171
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT = 0x88FF
GL_RG16UI = 0x823A
GL_RGBA8_OES = 0x8058
GL_CONSTANT_COLOR = 0x8001
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB = 0x91A9
GL_ASYNC_DRAW_PIXELS_SGIX = 0x835D
GL_UNCORRELATED_NV = 0x9282
GL_IMAGE_CUBE = 0x9050
GL_BEVEL_NV = 0x90A6
GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800
GL_TEXTURE_BINDING_BUFFER_EXT = 0x8C2C
GL_CONVOLUTION_FORMAT = 0x8017
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB = 0x919A
GL_MAJOR_VERSION = 0x821B
GL_UNSIGNED_NORMALIZED_ARB = 0x8C17
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI = 0x80BA
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT = 0x8DD4
GL_MAX_GENERAL_COMBINERS_NV = 0x854D
GL_TRANSPOSE_PROGRAM_MATRIX_EXT = 0x8E2E
GL_INDEX_ARRAY_EXT = 0x8077
GL_PRIMITIVES_GENERATED_OES = 0x8C87
GL_BUFFER_IMMUTABLE_STORAGE_EXT = 0x821F
GL_VIVIDLIGHT_NV = 0x92A6
GL_TEXTURE_LOD_BIAS_R_SGIX = 0x8190
GL_IR_INSTRUMENT1_SGIX = 0x817F
GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5
GL_RGB16UI_EXT = 0x8D77
GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092
GL_FRAMEBUFFER = 0x8D40
GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT = 0x8A55
GL_COMBINER_AB_DOT_PRODUCT_NV = 0x8545
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV = 0x00000010
GL_ALLOW_DRAW_OBJ_HINT_PGI = 0x1A20E
GL_SAMPLE_ALPHA_TO_ONE_ARB = 0x809F
GL_MAX_SHININESS_NV = 0x8504
GL_SUBTRACT_ARB = 0x84E7
GL_INTENSITY16 = 0x804D
GL_SWIZZLE_STQ_DQ_ATI = 0x8979
GL_READ_FRAMEBUFFER_BINDING_APPLE = 0x8CAA
GL_MATRIX24_ARB = 0x88D8
GL_VERTEX_ARRAY_BINDING_OES = 0x85B5
GL_COLOR_ATTACHMENT14_EXT = 0x8CEE
GL_R1UI_T2F_C4F_N3F_V3F_SUN = 0x85CB
GL_TEXTURE_LIGHT_EXT = 0x8350
GL_TEXTURE_BINDING_1D_ARRAY_EXT = 0x8C1C
GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE
GL_BUMP_ROT_MATRIX_ATI = 0x8775
GL_PIXEL_TEX_GEN_MODE_SGIX = 0x832B
GL_MATRIX2_NV = 0x8632
GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT = 0x8A54
GL_MAP1_VERTEX_ATTRIB7_4_NV = 0x8667
GL_CURRENT_TEXTURE_COORDS = 0x0B03
GL_FRAGMENT_COLOR_EXT = 0x834C
GL_TEXTURE_INDEX_SIZE_EXT = 0x80ED
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x906A
GL_DRAW_BUFFER5_NV = 0x882A
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI = 0x80B7
GL_PERFMON_GLOBAL_MODE_QCOM = 0x8FA0
GL_PROGRAM_POINT_SIZE = 0x8642
GL_ALPHA4_EXT = 0x803B
GL_SRC1_ALPHA_EXT = 0x8589
GL_ALPHA32I_EXT = 0x8D84
GL_INTERNALFORMAT_ALPHA_SIZE = 0x8274
GL_FUNC_SUBTRACT_EXT = 0x800A
GL_CON_15_ATI = 0x8950
GL_FRAMEBUFFER_UNSUPPORTED_EXT = 0x8CDD
GL_MAP2_COLOR_4 = 0x0DB0
GL_POST_COLOR_MATRIX_RED_SCALE_SGI = 0x80B4
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI = 0x87F8
GL_CONSTANT_ARB = 0x8576
GL_STRICT_SCISSOR_HINT_PGI = 0x1A218
GL_RENDERBUFFER_STENCIL_SIZE_EXT = 0x8D55
GL_CLIP_PLANE2_IMG = 0x3002
GL_MIRRORED_REPEAT_IBM = 0x8370
GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B
GL_INTERPOLATE = 0x8575
GL_QUERY_RESULT = 0x8866
GL_ONE_MINUS_SRC_COLOR = 0x0301
GL_INT_SAMPLER_BUFFER = 0x8DD0
GL_EYE_POINT_SGIS = 0x81F4
GL_RGBA16UI_EXT = 0x8D76
GL_CONSTANT = 0x8576
GL_POINT_SIZE_MAX_SGIS = 0x8127
GL_CMYKA_EXT = 0x800D
GL_UNIFORM_ADDRESS_COMMAND_NV = 0x000A
GL_SAMPLER_3D_OES = 0x8B5F
GL_PATH_OBJECT_BOUNDING_BOX_NV = 0x908A
GL_MAX_NAME_LENGTH = 0x92F6
GL_DOT_PRODUCT_TEXTURE_1D_NV = 0x885C
GL_VIEW_CLASS_BPTC_UNORM = 0x82D2
GL_TEXTURE_BINDING_CUBE_MAP_ARB = 0x8514
GL_NEGATIVE_Z_EXT = 0x87DB
GL_TRIANGULAR_NV = 0x90A5
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV = 0x90BD
GL_TESS_EVALUATION_SHADER_EXT = 0x8E87
GL_2_BYTES_NV = 0x1407
GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F
GL_SHADOW_AMBIENT_SGIX = 0x80BF
GL_CMYK_EXT = 0x800C
GL_OUTPUT_TEXTURE_COORD12_EXT = 0x87A9
GL_MIRRORED_REPEAT_ARB = 0x8370
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX = 0x8185
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV = 0x8F27
GL_XOR = 0x1506
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x851A
GL_PATH_MITER_LIMIT_NV = 0x907A
GL_TEXTURE_STORAGE_SPARSE_BIT_AMD = 0x00000001
GL_DEBUG_SOURCE_OTHER_KHR = 0x824B
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV = 0x8E23
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT = 0x87C7
GL_POLYGON_OFFSET_BIAS_EXT = 0x8039
GL_TEXTURE_BORDER_COLOR_NV = 0x1004
GL_PATH_DASH_OFFSET_RESET_NV = 0x90B4
GL_RG_EXT = 0x8227
GL_TEXTURE_IMMUTABLE_LEVELS = 0x82DF
GL_READ_FRAMEBUFFER = 0x8CA8
GL_BUFFER_SIZE = 0x8764
GL_PROGRAM_PIPELINE_BINDING_EXT = 0x825A
GL_STENCIL_TEST = 0x0B90
GL_REG_29_ATI = 0x893E
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT = 0x8C8F
GL_COLOR_TABLE_SCALE = 0x80D6
GL_FLOAT_MAT4x3 = 0x8B6A
GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT = 0x9312
GL_STENCIL_BUFFER_BIT0_QCOM = 0x00010000
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900F
GL_STENCIL_INDEX8 = 0x8D48
GL_PROXY_TEXTURE_CUBE_MAP_ARB = 0x851B
GL_DEBUG_TYPE_PERFORMANCE_ARB = 0x8250
GL_LESS = 0x0201
GL_VIEW_COMPATIBILITY_CLASS = 0x82B6
GL_VERTEX_SHADER_ARB = 0x8B31
GL_BLOCK_INDEX = 0x92FD
GL_VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD
GL_COLORBURN_NV = 0x929A
GL_COMBINER7_NV = 0x8557
GL_UTF16_NV = 0x909B
GL_RGBA16F_ARB = 0x881A
GL_ALLOW_DRAW_MEM_HINT_PGI = 0x1A211
GL_TEXTURE16 = 0x84D0
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES = 0x93E1
GL_PACK_COMPRESSED_BLOCK_SIZE = 0x912E
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8C02
GL_COMPRESSED_RGBA_ASTC_12x12 = 0x93BD
GL_OBJECT_LINE_SGIS = 0x81F7
GL_PACK_SKIP_VOLUMES_SGIS = 0x8130
GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19
GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3
GL_QUERY_RESULT_NO_WAIT_AMD = 0x9194
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5F
GL_TEXTURE_BINDING_CUBE_MAP_EXT = 0x8514
GL_PACK_RESAMPLE_SGIX = 0x842E
GL_BLUE = 0x1905
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70
GL_MATRIX12_ARB = 0x88CC
GL_HALF_FLOAT = 0x140B
GL_MAX_UNIFORM_LOCATIONS = 0x826E
GL_CON_17_ATI = 0x8952
GL_CIRCULAR_CCW_ARC_TO_NV = 0xF8
GL_POLYGON_OFFSET_EXT = 0x8037
GL_UNSIGNED_INT_SAMPLER_2D_EXT = 0x8DD2
GL_REFLECTION_MAP_OES = 0x8512
GL_TEXTURE_COMPONENTS = 0x1003
GL_DRAW_BUFFER0_NV = 0x8825
GL_LAST_VIDEO_CAPTURE_STATUS_NV = 0x9027
GL_FRAGMENT_LIGHT2_SGIX = 0x840E
GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C
GL_COPY_WRITE_BUFFER = 0x8F37
GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367
GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899
GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD = 0x00000004
GL_HISTOGRAM_LUMINANCE_SIZE = 0x802C
GL_BLUE_BITS = 0x0D54
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS = 0x80B0
GL_MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD
GL_ALPHA32F_ARB = 0x8816
GL_SPECULAR = 0x1202
GL_COMBINER_MUX_SUM_NV = 0x8547
GL_COLOR3_BIT_PGI = 0x00010000
GL_ELEMENT_ARRAY_BUFFER = 0x8893
GL_BACK_RIGHT = 0x0403
GL_INT_IMAGE_2D = 0x9058
GL_TEXTURE_LUMINANCE_TYPE = 0x8C14
GL_MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C
GL_INT_SAMPLER_2D_ARRAY_EXT = 0x8DCF
GL_OUT_OF_MEMORY = 0x0505
GL_SIGNED_LUMINANCE8_NV = 0x8702
GL_TEXTURE_BINDING_CUBE_MAP_OES = 0x8514
GL_POINT_SIZE_MIN_EXT = 0x8126
GL_PROXY_TEXTURE_COLOR_TABLE_SGI = 0x80BD
GL_FLOAT_RGBA32_NV = 0x888B
GL_FUNC_ADD_OES = 0x8006
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31
GL_COUNTER_RANGE_AMD = 0x8BC1
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR = 0x00000008
GL_PROXY_TEXTURE_CUBE_MAP_EXT = 0x851B
GL_COVERAGE_AUTOMATIC_NV = 0x8ED7
GL_FRAGMENT_LIGHT3_SGIX = 0x840F
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE = 0x8A06
GL_RGBA8_SNORM = 0x8F97
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93DC
GL_SIGNED_RGB8_NV = 0x86FF
GL_COLOR_ATTACHMENT10_NV = 0x8CEA
GL_COORD_REPLACE = 0x8862
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103
GL_TRANSPOSE_COLOR_MATRIX_ARB = 0x84E6
GL_TEXTURE_LOD_BIAS_T_SGIX = 0x818F
GL_CURRENT_NORMAL = 0x0B02
GL_BACK_PRIMARY_COLOR_NV = 0x8C77
GL_RGBA16F_EXT = 0x881A
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV = 0x9348
GL_DEPTH_RENDERABLE = 0x8287
GL_PIXEL_MAP_I_TO_G = 0x0C73
GL_GLYPH_HEIGHT_BIT_NV = 0x02
GL_MAP1_NORMAL = 0x0D92
GL_PATH_TERMINAL_DASH_CAP_NV = 0x907D
GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE = 0x83F3
GL_ELEMENT_ARRAY_ATI = 0x8768
GL_QUERY_RESULT_AVAILABLE = 0x8867
GL_CON_1_ATI = 0x8942
GL_COLOR_ATTACHMENT20 = 0x8CF4
GL_DEPTH_STENCIL_NV = 0x84F9
GL_RGBA16 = 0x805B
GL_BLUE_MAX_CLAMP_INGR = 0x8566
GL_VARIABLE_F_NV = 0x8528
GL_INT_IMAGE_3D_EXT = 0x9059
GL_SLUMINANCE_ALPHA = 0x8C44
GL_TEXTURE_GEN_Q = 0x0C63
GL_COMPRESSED_RGBA_ASTC_5x5x4_OES = 0x93C5
GL_MOVE_TO_NV = 0x02
GL_TRIANGLE_LIST_SUN = 0x81D7
GL_VIRTUAL_PAGE_SIZE_INDEX_EXT = 0x91A7
GL_DEPTH_STENCIL_MESA = 0x8750
GL_TEXTURE_BINDING_BUFFER = 0x8C2C
GL_RGBA_FLOAT16_ATI = 0x881A
GL_TEXTURE_BINDING_RENDERBUFFER_NV = 0x8E53
GL_UNPACK_SUBSAMPLE_RATE_SGIX = 0x85A1
GL_TEXTURE1_ARB = 0x84C1
GL_SAMPLES_3DFX = 0x86B4
GL_GEOMETRY_SHADER_BIT_EXT = 0x00000004
GL_SPARSE_BUFFER_PAGE_SIZE_ARB = 0x82F8
GL_CON_19_ATI = 0x8954
GL_PROGRAM_PIPELINE_OBJECT_EXT = 0x8A4F
GL_TEXTURE_BLUE_TYPE_ARB = 0x8C12
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE = 0x8A08
GL_T2F_IUI_V2F_EXT = 0x81B1
GL_MATRIX0_ARB = 0x88C0
GL_OR_REVERSE = 0x150B
GL_COMPRESSED_RGBA_FXT1_3DFX = 0x86B1
GL_MAX_TESS_GEN_LEVEL = 0x8E7E
GL_LINEAR_MIPMAP_NEAREST = 0x2701
GL_READ_FRAMEBUFFER_BINDING_ANGLE = 0x8CAA
GL_TRANSFORM_BIT = 0x00001000
GL_OBJECT_COMPILE_STATUS_ARB = 0x8B81
GL_PROXY_TEXTURE_1D_STACK_MESAX = 0x875B
GL_OFFSET_TEXTURE_2D_NV = 0x86E8
GL_INDEX_ARRAY_STRIDE_EXT = 0x8086
GL_INT_SAMPLER_1D_EXT = 0x8DC9
GL_PRIMITIVE_BOUNDING_BOX = 0x92BE
GL_UNPACK_SKIP_IMAGES = 0x806D
GL_INT64_VEC4_NV = 0x8FEB
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL = 0x94F8
GL_COLOR_ATTACHMENT29 = 0x8CFD
GL_TEXTURE12 = 0x84CC
GL_DRAW_BUFFER5_ATI = 0x882A
GL_MAP2_VERTEX_ATTRIB9_4_NV = 0x8679
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD
GL_V3F = 0x2A21
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB = 0x8624
GL_DRAW_ARRAYS_COMMAND_NV = 0x0003
GL_VERTEX_ARRAY_POINTER_EXT = 0x808E
GL_GEOMETRY_SHADER_OES = 0x8DD9
GL_CLIENT_ACTIVE_TEXTURE = 0x84E1
GL_NEGATIVE_X_EXT = 0x87D9
GL_PATH_STROKE_WIDTH_NV = 0x9075
GL_GENERATE_MIPMAP = 0x8191
GL_MAX_TEXTURE_UNITS = 0x84E2
GL_DEPTH_COMPONENT16 = 0x81A5
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x8810
GL_VERTEX_PROGRAM_POINT_SIZE_NV = 0x8642
GL_TRIANGLES_ADJACENCY_ARB = 0x000C
GL_NEAREST_MIPMAP_NEAREST = 0x2700
GL_MODELVIEW9_ARB = 0x8729
GL_WRITEONLY_RENDERING_QCOM = 0x8823
GL_INT8_VEC4_NV = 0x8FE3
GL_INTERNALFORMAT_SHARED_SIZE = 0x8277
GL_VERTEX_PRECLIP_SGIX = 0x83EE
GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX = 0x9048
GL_ALPHA16UI_EXT = 0x8D78
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C
GL_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5
GL_TEXTURE8 = 0x84C8
GL_DRAW_BUFFER5_ARB = 0x882A
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD = 0x9003
GL_DEBUG_SOURCE_THIRD_PARTY_KHR = 0x8249
GL_ALPHA_MIN_SGIX = 0x8320
GL_REDUCE_EXT = 0x8016
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B
GL_EIGHTH_BIT_ATI = 0x00000020
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT = 0x88FC
GL_COMBINER4_NV = 0x8554
GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643
GL_RG_SNORM = 0x8F91
GL_STENCIL_BACK_FUNC = 0x8800
GL_EDGEFLAG_BIT_PGI = 0x00040000
GL_LUMINANCE16_ALPHA16 = 0x8048
GL_INT_IMAGE_1D = 0x9057
GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C
GL_FRAGMENT_PROGRAM_BINDING_NV = 0x8873
GL_RGB16 = 0x8054
GL_NOR = 0x1508
GL_STATIC_ATI = 0x8760
GL_RGB9_E5_EXT = 0x8C3D
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES = 0x90CB
GL_MULTISAMPLE_BIT_ARB = 0x20000000
GL_INT_IMAGE_CUBE_MAP_ARRAY = 0x905F
GL_POLYGON_OFFSET_POINT = 0x2A01
GL_TEXTURE_4D_SGIS = 0x8134
GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD = 0x00000001
GL_EVAL_BIT = 0x00010000
GL_DRAW_BUFFER9_ARB = 0x882E
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT = 0x8DA9
GL_SHARED_EDGE_NV = 0xC0
GL_TRANSFORM_FEEDBACK_BUFFER_EXT = 0x8C8E
GL_COLOR_ARRAY_COUNT_EXT = 0x8084
GL_STENCIL_BUFFER_BIT = 0x00000400
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8DDF
GL_Z4Y12Z4CB12Z4CR12_444_NV = 0x9037
GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101
GL_POLYGON_BIT = 0x00000008
GL_RELATIVE_RECT_NV = 0xF7
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV = 0x870D
GL_MAX_NUM_ACTIVE_VARIABLES = 0x92F7
GL_TEXTURE_BINDING_1D = 0x8068
GL_FONT_ASCENDER_BIT_NV = 0x00200000
GL_MAX_PROGRAM_TEXEL_OFFSET_NV = 0x8905
GL_PARAMETER_BUFFER_BINDING_ARB = 0x80EF
GL_STATIC_COPY = 0x88E6
GL_TEXTURE2 = 0x84C2
GL_DRAW_BUFFER11 = 0x8830
GL_TEXTURE_CUBE_MAP_ARRAY_OES = 0x9009
GL_OP_FRAC_EXT = 0x8789
GL_PRIMITIVE_RESTART_INDEX = 0x8F9E
GL_GEOMETRY_LINKED_INPUT_TYPE_EXT = 0x8917
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT = 0x9068
GL_UNSIGNED_INT_10_10_10_2 = 0x8036
GL_COLOR_ATTACHMENT15 = 0x8CEF
GL_FIRST_VERTEX_CONVENTION_EXT = 0x8E4D
GL_VERTEX_ARRAY_LENGTH_NV = 0x8F2B
GL_CONTEXT_RELEASE_BEHAVIOR = 0x82FB
GL_TEXTURE_COMPARE_MODE_ARB = 0x884C
GL_DEPTH_BUFFER_BIT4_QCOM = 0x00001000
GL_DRAW_BUFFER7_ARB = 0x882C
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF
GL_VIEW_CLASS_64_BITS = 0x82C6
GL_MAP_INVALIDATE_BUFFER_BIT = 0x0008
GL_PREVIOUS_EXT = 0x8578
GL_COLOR_ATTACHMENT1_EXT = 0x8CE1
GL_WEIGHT_ARRAY_SIZE_ARB = 0x86AB
GL_FLOAT_RGBA16_NV = 0x888A
GL_TEXTURE_IMMUTABLE_FORMAT = 0x912F
GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0
GL_BGRA_EXT = 0x80E1
GL_VERTICES_SUBMITTED_ARB = 0x82EE
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8178
GL_GEOMETRY_OUTPUT_TYPE = 0x8918
GL_VERTEX_BINDING_DIVISOR = 0x82D6
GL_PROGRAM_BINDING_ARB = 0x8677
GL_NEAREST_CLIPMAP_LINEAR_SGIX = 0x844E
GL_ELEMENT_ARRAY_UNIFIED_NV = 0x8F1F
GL_HISTOGRAM_BLUE_SIZE = 0x802A
GL_S = 0x2000
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB = 0x9343
GL_DEPTH_ATTACHMENT_OES = 0x8D00
GL_RGBA32UI_EXT = 0x8D70
GL_SECONDARY_COLOR_ARRAY_EXT = 0x845E
GL_ROUNDED_RECT_NV = 0xE8
GL_TEXTURE_VIEW_MIN_LEVEL = 0x82DB
GL_SRGB_READ = 0x8297
GL_DEPTH_BUFFER_BIT = 0x00000100
GL_COLOR_ATTACHMENT7_NV = 0x8CE7
GL_STENCIL_INDEX4_EXT = 0x8D47
GL_SRGB = 0x8C40
GL_TANGENT_ARRAY_EXT = 0x8439
GL_MINOR_VERSION = 0x821C
GL_REFERENCE_PLANE_EQUATION_SGIX = 0x817E
GL_POST_TEXTURE_FILTER_BIAS_SGIX = 0x8179
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV = 0x02000000
GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50
GL_LINEAR_SHARPEN_ALPHA_SGIS = 0x80AE
GL_MATRIX_INDEX_ARRAY_TYPE_ARB = 0x8847
GL_VERTEX_SHADER_BIT_EXT = 0x00000001
GL_QUAD_STRIP = 0x0008
GL_PERTURB_EXT = 0x85AE
GL_EYE_LINE_SGIS = 0x81F6
GL_EYE_PLANE_ABSOLUTE_NV = 0x855C
GL_VIEW_CLASS_RGTC2_RG = 0x82D1
GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC
GL_COLOR_ATTACHMENT15_NV = 0x8CEF
GL_PROGRAM_ATTRIBS_ARB = 0x88AC
GL_FOG_COLOR = 0x0B66
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD = 0x9144
GL_BLEND_DST = 0x0BE0
GL_CLIP_DEPTH_MODE = 0x935D
GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515
GL_COMPRESSED_SRGB_S3TC_DXT1_NV = 0x8C4C
GL_TEXTURE14_ARB = 0x84CE
GL_MAX_ELEMENTS_VERTICES = 0x80E8
GL_LINE_STIPPLE = 0x0B24
GL_DOMAIN = 0x0A02
GL_PACK_MAX_COMPRESSED_SIZE_SGIX = 0x831B
GL_COMBINER_AB_OUTPUT_NV = 0x854A
GL_MAX_SAMPLES_ANGLE = 0x8D57
GL_LINE_STIPPLE_REPEAT = 0x0B26
GL_RELATIVE_ROUNDED_RECT4_NV = 0xED
GL_BLEND_SRC_RGB_OES = 0x80C9
GL_UNPACK_ROW_BYTES_APPLE = 0x8A16
GL_TEXTURE_FLOAT_COMPONENTS_NV = 0x888C
GL_MAX_COLOR_ATTACHMENTS = 0x8CDF
GL_TEXTURE_GREEN_SIZE = 0x805D
GL_DEPTH_CLAMP_FAR_AMD = 0x901F
GL_PROGRAM_RESIDENT_NV = 0x8647
GL_COMBINER_BIAS_NV = 0x8549
GL_TEXTURE5_ARB = 0x84C5
GL_UNSIGNED_SHORT_4_4_4_4_EXT = 0x8033
GL_COLOR_ATTACHMENT27 = 0x8CFB
GL_DEBUG_SOURCE_API_ARB = 0x8246
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B3
GL_TEXT_FRAGMENT_SHADER_ATI = 0x8200
GL_RGBA_FLOAT32_ATI = 0x8814
GL_TEXTURE_2D_ARRAY_EXT = 0x8C1A
GL_MAX_IMAGE_SAMPLES = 0x906D
GL_RGBA_SIGNED_COMPONENTS_EXT = 0x8C3C
GL_MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8
GL_CONTRAST_NV = 0x92A1
GL_SAMPLE_POSITION = 0x8E50
GL_NOOP = 0x1505
GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83F0
GL_MATRIX_INDEX_ARRAY_ARB = 0x8844
GL_CONSERVATIVE_RASTER_DILATE_NV = 0x9379
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB = 0x8B4D
GL_LUMINANCE8_ALPHA8 = 0x8045
GL_PROVOKING_VERTEX_EXT = 0x8E4F
GL_COORD_REPLACE_OES = 0x8862
GL_TRANSLATE_3D_NV = 0x9091
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT = 0x884E
GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA = 0x8BB6
GL_MAP1_VERTEX_ATTRIB1_4_NV = 0x8661
GL_TEXTURE_SWIZZLE_B = 0x8E44
GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905
GL_BLEND_COLOR = 0x8005
GL_RENDER = 0x1C00
GL_UNIFORM_BARRIER_BIT_EXT = 0x00000004
GL_INTERNALFORMAT_RED_SIZE = 0x8271
GL_PROGRAM_POINT_SIZE_ARB = 0x8642
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX = 0x8184
GL_BGR_EXT = 0x80E0
GL_GREEN_MAX_CLAMP_INGR = 0x8565
GL_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E12
GL_MAP1_VERTEX_ATTRIB15_4_NV = 0x866F
GL_DEPTH_RANGE = 0x0B70
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB = 0x8DDF
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV = 0x9343
GL_MATRIX7_ARB = 0x88C7
GL_SYNC_CL_EVENT_ARB = 0x8240
GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0
GL_NORMAL_ARRAY_POINTER = 0x808F
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV = 0x8E24
GL_IMAGE_PIXEL_FORMAT = 0x82A9
GL_BUFFER_ACCESS_OES = 0x88BB
GL_TESS_CONTROL_SHADER_BIT_OES = 0x00000008
GL_OUTPUT_TEXTURE_COORD31_EXT = 0x87BC
GL_COLOR_TABLE_GREEN_SIZE_SGI = 0x80DB
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89
GL_RASTER_POSITION_UNCLIPPED_IBM = 0x19262
GL_BUFFER_MAP_POINTER = 0x88BD
GL_EXCLUSION_KHR = 0x92A0
GL_4_BYTES = 0x1409
GL_CON_26_ATI = 0x895B
GL_REFLECTION_MAP_ARB = 0x8512
GL_UNSIGNED_INT_IMAGE_2D_RECT = 0x9065
GL_RASTERIZER_DISCARD_EXT = 0x8C89
GL_UNSIGNED_SHORT_15_1_MESA = 0x8753
GL_COLOR_ARRAY_LENGTH_NV = 0x8F2D
GL_DITHER = 0x0BD0
GL_RGB4_S3TC = 0x83A1
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49
GL_IS_PER_PATCH_OES = 0x92E7
GL_UNPACK_FLIP_Y_WEBGL = 0x9240
GL_RGBA16_SNORM_EXT = 0x8F9B
GL_PACK_SKIP_IMAGES = 0x806B
GL_SRC_ATOP_NV = 0x928E
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV = 0x8E58
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES = 0x93E0
GL_MODELVIEW20_ARB = 0x8734
GL_SIGNED_LUMINANCE_ALPHA_NV = 0x8703
GL_PRIMARY_COLOR = 0x8577
GL_DEBUG_TYPE_OTHER_ARB = 0x8251
GL_SCISSOR_TEST = 0x0C11
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1
GL_DRAW_BUFFER8_NV = 0x882D
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV = 0x8C4F
GL_VIRTUAL_PAGE_SIZE_Z_EXT = 0x9197
GL_POINT_SIZE_ARRAY_STRIDE_OES = 0x898B
GL_RASTER_SAMPLES_EXT = 0x9328
GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT = 0x00000800
GL_PALETTE8_RGBA8_OES = 0x8B96
GL_RGBA_FLOAT_MODE_ARB = 0x8820
GL_UNSIGNED_INT_IMAGE_1D = 0x9062
GL_TIMEOUT_IGNORED_APPLE = 0xFFFFFFFFFFFFFFFF
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA4
GL_OUTPUT_TEXTURE_COORD18_EXT = 0x87AF
GL_R1UI_V3F_SUN = 0x85C4
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI = 0x87F7
GL_VIDEO_BUFFER_NV = 0x9020
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV = 0x11
GL_MAX_3D_TEXTURE_SIZE_EXT = 0x8073
GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7
GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG = 0x93F0
GL_DEPTH24_STENCIL8_EXT = 0x88F0
GL_UNSIGNED_INT_24_8_EXT = 0x84FA
GL_HALF_APPLE = 0x140B
GL_REG_5_ATI = 0x8926
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS = 0x8355
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93D1
GL_MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263
GL_RGBA2_EXT = 0x8055
GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3
GL_DRAW_BUFFER10 = 0x882F
GL_CURRENT_OCCLUSION_QUERY_ID_NV = 0x8865
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX = 0x813E
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8DBE
GL_PERFQUERY_COUNTER_EVENT_INTEL = 0x94F0
GL_CULL_VERTEX_IBM = 103050
GL_COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93B1
GL_DEBUG_TYPE_PUSH_GROUP = 0x8269
GL_MODELVIEW29_ARB = 0x873D
GL_TESS_GEN_SPACING_OES = 0x8E77
GL_OPERAND2_RGB_ARB = 0x8592
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB = 0x880A
GL_BUFFER_ACCESS_ARB = 0x88BB
GL_COMPUTE_SUBROUTINE_UNIFORM = 0x92F3
GL_WIDE_LINE_HINT_PGI = 0x1A222
GL_TEXTURE_3D_BINDING_EXT = 0x806A
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES = 0x8CDC
GL_DEPTH_BUFFER_BIT3_QCOM = 0x00000800
GL_PROGRAM_INSTRUCTIONS_ARB = 0x88A0
GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A
GL_SOURCE2_ALPHA_ARB = 0x858A
GL_TRIANGLE_STRIP_ADJACENCY_EXT = 0x000D
GL_CURRENT_TIME_NV = 0x8E28
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT = 0x8CDB
GL_GREEN_BIT_ATI = 0x00000002
GL_DEPTH_COMPONENT32 = 0x81A7
GL_VERTEX_SHADER_VARIANTS_EXT = 0x87D0
GL_COUNT_UP_NV = 0x9088
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS = 0x809C
GL_OUTPUT_TEXTURE_COORD30_EXT = 0x87BB
GL_LINE_STIPPLE_PATTERN = 0x0B25
GL_POLYGON_MODE = 0x0B40
GL_PROGRAM = 0x82E2
GL_CLIENT_STORAGE_BIT_EXT = 0x0200
GL_NOTEQUAL = 0x0205
GL_AUX2 = 0x040B
GL_RENDERBUFFER_HEIGHT_OES = 0x8D43
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV = 0x902C
GL_DRAW_BUFFER13_EXT = 0x8832
GL_REPLICATE_BORDER_HP = 0x8153
GL_YCBCR_MESA = 0x8757
GL_BLEND_SRC = 0x0BE1
GL_RESAMPLE_DECIMATE_OML = 0x8989
GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E
GL_MODULATE = 0x2100
GL_FOG_COORDINATE_ARRAY = 0x8457
GL_UNSIGNED_INT_IMAGE_2D = 0x9063
GL_RGBA32F_EXT = 0x8814
GL_ABGR_EXT = 0x8000
GL_LUMINANCE12_ALPHA12_EXT = 0x8047
GL_MAX_SPOT_EXPONENT_NV = 0x8505
GL_PRESENT_TIME_NV = 0x8E2A
GL_EVAL_VERTEX_ATTRIB1_NV = 0x86C7
GL_TEXTURE7 = 0x84C7
GL_TEXTURE_VIEW_NUM_LEVELS_EXT = 0x82DC
GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4
GL_GUILTY_CONTEXT_RESET_KHR = 0x8253
GL_MATRIX8_ARB = 0x88C8
GL_VARIANT_VALUE_EXT = 0x87E4
GL_RGB_FLOAT16_APPLE = 0x881B
GL_CONTEXT_LOST_KHR = 0x0507
GL_CURRENT_MATRIX_STACK_DEPTH_ARB = 0x8640
GL_CLIP_PLANE2 = 0x3002
GL_LINEAR_ATTENUATION = 0x1208
GL_DECODE_EXT = 0x8A49
GL_COLOR_ATTACHMENT5_NV = 0x8CE5
GL_VIDEO_BUFFER_BINDING_NV = 0x9021
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX = 0x8187
GL_DRAW_BUFFER11_NV = 0x8830
GL_FEEDBACK = 0x1C01
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV = 0x8C8A
GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI = 0x8837
GL_TEXTURE_CUBE_MAP = 0x8513
GL_CON_2_ATI = 0x8943
GL_MAX_TEXTURE_LOD_BIAS = 0x84FD
GL_CON_18_ATI = 0x8953
GL_COLOR_TABLE_FORMAT = 0x80D8
GL_DEBUG_TYPE_PUSH_GROUP_KHR = 0x8269
GL_CURRENT_RASTER_DISTANCE = 0x0B09
GL_COLOR_MATERIAL_FACE = 0x0B55
GL_POST_CONVOLUTION_BLUE_SCALE_EXT = 0x801E
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93D9
GL_TEXTURE_RECTANGLE_NV = 0x84F5
GL_OP_NEGATE_EXT = 0x8783
GL_TIMEOUT_EXPIRED = 0x911B
GL_TEXTURE27 = 0x84DB
GL_IS_ROW_MAJOR = 0x9300
GL_RED_NV = 0x1903
GL_RESCALE_NORMAL_EXT = 0x803A
GL_UNSIGNED_INT_S8_S8_8_8_NV = 0x86DA
GL_VERTEX_SHADER_INVOCATIONS_ARB = 0x82F0
GL_3D = 0x0601
GL_DEPENDENT_RGB_TEXTURE_3D_NV = 0x8859
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES = 0x93E2
GL_R = 0x2002
GL_MAP1_TEXTURE_COORD_3 = 0x0D95
GL_UNSIGNED_NORMALIZED = 0x8C17
GL_BUFFER_ACCESS_FLAGS = 0x911F
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24
GL_EYE_PLANE = 0x2502
GL_TEXTURE_BUFFER_BINDING_EXT = 0x8C2A
GL_COMBINER0_NV = 0x8550
GL_PATCH_DEFAULT_OUTER_LEVEL_EXT = 0x8E74
GL_PROGRAM_PARAMETER_NV = 0x8644
GL_TEXTURE_DEPTH = 0x8071
GL_PATH_FILL_MODE_NV = 0x9080
GL_MODELVIEW27_ARB = 0x873B
GL_LINE_SMOOTH_HINT = 0x0C52
GL_INTERNALFORMAT_DEPTH_SIZE = 0x8275
GL_WEIGHT_SUM_UNITY_ARB = 0x86A6
GL_RED_SCALE = 0x0D14
GL_RGBA_FLOAT16_APPLE = 0x881A
GL_UNSIGNED_INT_24_8_MESA = 0x8751
GL_EVAL_VERTEX_ATTRIB12_NV = 0x86D2
GL_SRC_OVER_NV = 0x9288
GL_FIELD_UPPER_NV = 0x9022
GL_INT_IMAGE_CUBE = 0x905B
GL_MATRIX21_ARB = 0x88D5
GL_TEXTURE_GATHER = 0x82A2
GL_COLOR_ATTACHMENT7 = 0x8CE7
GL_EMBOSS_CONSTANT_NV = 0x855E
GL_SOURCE2_RGB_ARB = 0x8582
GL_INDEX_ARRAY_LIST_STRIDE_IBM = 103083
GL_SIGNED_RGBA_NV = 0x86FB
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB = 0x824E
GL_MAX_SAMPLES = 0x8D57
GL_ACTIVE_UNIFORMS = 0x8B86
GL_LAYOUT_LINEAR_INTEL = 1
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D2
GL_VERTEX_STREAM0_ATI = 0x876C
GL_GLOBAL_ALPHA_SUN = 0x81D9
GL_FRONT_AND_BACK = 0x0408
GL_UNSIGNED_INT_IMAGE_3D = 0x9064
GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4
GL_POLYGON_SMOOTH_HINT = 0x0C53
GL_OP_LOG_BASE_2_EXT = 0x8792
GL_BUMP_NUM_TEX_UNITS_ATI = 0x8777
GL_DOUBLE_MAT4x3_EXT = 0x8F4E
GL_CURRENT_FOG_COORD = 0x8453
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV = 0x864D
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX = 0x840A
GL_PATH_END_CAPS_NV = 0x9076
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT = 0x8210
GL_NEXT_BUFFER_NV = -2
GL_4D_COLOR_TEXTURE = 0x0604
GL_C4F_N3F_V3F = 0x2A26
GL_TEXTURE_SPARSE_EXT = 0x91A6
GL_VERTEX_ATTRIB_ARRAY12_NV = 0x865C
GL_RENDERBUFFER_INTERNAL_FORMAT_OES = 0x8D44
GL_MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2
GL_PROGRAM_BINARY_ANGLE = 0x93A6
GL_UNDEFINED_VERTEX = 0x8260
GL_COMPRESSED_RGB_FXT1_3DFX = 0x86B0
GL_MAP2_VERTEX_ATTRIB0_4_NV = 0x8670
GL_INCR_WRAP_OES = 0x8507
GL_RGBA16I_EXT = 0x8D88
GL_COMPRESSED_RGBA_ASTC_12x10 = 0x93BC
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85
GL_CLEAR_TEXTURE = 0x9365
GL_NORMAL_MAP_ARB = 0x8511
GL_MAX_FRAMEBUFFER_HEIGHT = 0x9316
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB = 0x889D
GL_SYNC_STATUS = 0x9114
GL_RGBA12_EXT = 0x805A
GL_BGR_INTEGER = 0x8D9A
GL_TEXTURE_VIEW_MIN_LAYER_OES = 0x82DD
GL_COMPUTE_TEXTURE = 0x82A0
GL_PLUS_CLAMPED_NV = 0x92B1
GL_UNPACK_SKIP_ROWS = 0x0CF3
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = 0x8E1F
GL_IMAGE_CLASS_1_X_16 = 0x82BE
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5
GL_PATCH_DEFAULT_INNER_LEVEL = 0x8E73
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT = 0x8DD8
GL_BINORMAL_ARRAY_TYPE_EXT = 0x8440
GL_TEXCOORD3_BIT_PGI = 0x40000000
GL_FRACTIONAL_ODD_OES = 0x8E7B
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD = 0x914E
GL_INT_10_10_10_2_OES = 0x8DF7
GL_OBJECT_DELETE_STATUS_ARB = 0x8B80
GL_ROUND_NV = 0x90A4
GL_PIXEL_TILE_GRID_DEPTH_SGIX = 0x8144
GL_TEXTURE10_ARB = 0x84CA
GL_MULTISAMPLE_BIT_3DFX = 0x20000000
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93D0
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT = 0x90CC
GL_STENCIL_FUNC = 0x0B92
GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089
GL_LOSE_CONTEXT_ON_RESET_EXT = 0x8252
GL_QUERY_BY_REGION_NO_WAIT = 0x8E16
GL_LIST_MODE = 0x0B30
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT = 0x8DD6
GL_CLIP_DISTANCE4_APPLE = 0x3004
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7
GL_COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93B8
GL_RGB_422_APPLE = 0x8A1F
GL_AUX_BUFFERS = 0x0C00
GL_TEXTURE_ENV_MODE = 0x2200
GL_GREEN_SCALE = 0x0D18
GL_MODELVIEW21_ARB = 0x8735
GL_PIXEL_BUFFER_BARRIER_BIT = 0x00000080
GL_BOOL_ARB = 0x8B56
GL_PROGRAM_PIPELINE_BINDING = 0x825A
GL_GS_SHADER_BINARY_MTK = 0x9640
GL_TESS_CONTROL_SHADER_OES = 0x8E88
GL_FIELD_LOWER_NV = 0x9023
GL_GEOMETRY_VERTICES_OUT_ARB = 0x8DDA
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF
GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F
GL_TEXTURE_ALPHA_SIZE_EXT = 0x805F
GL_FONT_UNINTELLIGIBLE_NV = 0x936B
GL_MAP1_VERTEX_ATTRIB9_4_NV = 0x8669
GL_DRAW_BUFFER6_EXT = 0x882B
GL_SIGNED_IDENTITY_NV = 0x853C
GL_TIME_ELAPSED = 0x88BF
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT = 0x00000002
GL_SAMPLER_BUFFER_AMD = 0x9001
GL_PIXEL_PACK_BUFFER = 0x88EB
GL_INT_IMAGE_2D_RECT_EXT = 0x905A
GL_MAP_UNSYNCHRONIZED_BIT_EXT = 0x0020
GL_CURRENT_BINORMAL_EXT = 0x843C
GL_RENDERBUFFER_GREEN_SIZE = 0x8D51
GL_EVAL_TRIANGULAR_2D_NV = 0x86C1
GL_COLOR_INDEXES = 0x1603
GL_MEDIUM_FLOAT = 0x8DF1
GL_IMAGE_BINDING_LAYERED_EXT = 0x8F3C
GL_INT16_VEC2_NV = 0x8FE5
GL_DRAW_BUFFER6 = 0x882B
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB = 0x8B8B
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87CC
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001
GL_POINT_SIZE_ARRAY_TYPE_OES = 0x898A
GL_MAP_COHERENT_BIT_EXT = 0x0080
GL_HISTOGRAM_GREEN_SIZE_EXT = 0x8029
GL_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF
GL_MATRIX19_ARB = 0x88D3
GL_DRAW_BUFFER0_EXT = 0x8825
GL_TEXTURE_RESIDENT_EXT = 0x8067
GL_BLEND_PREMULTIPLIED_SRC_NV = 0x9280
GL_VARIANT_EXT = 0x87C1
GL_VALIDATE_STATUS = 0x8B83
GL_IMAGE_ROTATE_ORIGIN_X_HP = 0x815A
GL_MAX_DEFORMATION_ORDER_SGIX = 0x8197
GL_BLEND_EQUATION_EXT = 0x8009
GL_DRAW_BUFFER2_EXT = 0x8827
GL_OCCLUSION_TEST_HP = 0x8165
GL_COLOR_ATTACHMENT10_EXT = 0x8CEA
GL_GEOMETRY_VERTICES_OUT = 0x8916
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83F3
GL_CONVOLUTION_FORMAT_EXT = 0x8017
GL_FOG_FUNC_POINTS_SGIS = 0x812B
GL_FONT_DESCENDER_BIT_NV = 0x00400000
GL_ALPHA16I_EXT = 0x8D8A
GL_SLIM12S_SGIX = 0x831F
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV = 0x8C27
GL_POINT_SPRITE_ARB = 0x8861
GL_RESET_NOTIFICATION_STRATEGY = 0x8256
GL_DARKEN = 0x9297
GL_MAX_CONVOLUTION_WIDTH = 0x801A
GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3
GL_RGBA4_EXT = 0x8056
GL_COLOR_ATTACHMENT17 = 0x8CF1
GL_INTERLACE_READ_INGR = 0x8568
GL_DEPTH_BUFFER_BIT5_QCOM = 0x00002000
GL_LIGHT3 = 0x4003
GL_TEXTURE_BORDER_VALUES_NV = 0x871A
GL_MAP2_VERTEX_3 = 0x0DB7
GL_SAMPLE_MASK_NV = 0x8E51
GL_EDGE_FLAG_ARRAY = 0x8079
GL_RESTART_PATH_NV = 0xF0
GL_UNPACK_RESAMPLE_OML = 0x8985
GL_COLOR_ATTACHMENT9 = 0x8CE9
GL_OCCLUSION_TEST_RESULT_HP = 0x8166
GL_DEBUG_CALLBACK_FUNCTION_KHR = 0x8244
GL_OBJECT_DISTANCE_TO_LINE_SGIS = 0x81F3
GL_PIXEL_PACK_BUFFER_BINDING_ARB = 0x88ED
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV = 0x9038
GL_UNIFORM_BUFFER_LENGTH_NV = 0x9370
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x8516
GL_INNOCENT_CONTEXT_RESET_KHR = 0x8254
GL_CLAMP_TO_BORDER_OES = 0x812D
GL_BUFFER_UPDATE_BARRIER_BIT = 0x00000200
GL_COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C
GL_MATRIX3_ARB = 0x88C3
GL_MAX_RENDERBUFFER_SIZE_OES = 0x84E8
GL_COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93B6
GL_MOVE_TO_RESETS_NV = 0x90B5
GL_SAMPLER_OBJECT_AMD = 0x9155
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB = 0x80BF
GL_DRAW_BUFFER9_ATI = 0x882E
GL_RESAMPLE_REPLICATE_SGIX = 0x8433
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT = 0x932B
GL_MAX_DRAW_BUFFERS_ARB = 0x8824
GL_COLOR_ATTACHMENT0_OES = 0x8CE0
GL_MULTISAMPLE_BUFFER_BIT1_QCOM = 0x02000000
GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT = 0x88FD
GL_COMPUTE_SHADER_BIT = 0x00000020
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93D8
GL_COLOR_TABLE_RED_SIZE = 0x80DA
GL_CON_28_ATI = 0x895D
GL_MODELVIEW13_ARB = 0x872D
GL_TEXTURE7_ARB = 0x84C7
GL_OPERAND2_ALPHA = 0x859A
GL_SAMPLE_LOCATION_NV = 0x8E50
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV = 0x933E
GL_PATCHES_EXT = 0x000E
GL_RENDERBUFFER_BINDING_ANGLE = 0x8CA7
GL_VIRTUAL_PAGE_SIZE_X_ARB = 0x9195
GL_FORCE_BLUE_TO_ONE_NV = 0x8860
GL_VIEW_CLASS_16_BITS = 0x82CA
GL_RGBA16I = 0x8D88
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES = 0x8516
GL_PATH_PROJECTION_STACK_DEPTH_NV = 0x0BA4
GL_R1UI_T2F_N3F_V3F_SUN = 0x85CA
GL_MAX_CONVOLUTION_WIDTH_EXT = 0x801A
GL_RGBA8 = 0x8058
GL_ACTIVE_TEXTURE = 0x84E0
GL_STATE_RESTORE = 0x8BDC
GL_SPARE0_NV = 0x852E
GL_SLUMINANCE8_ALPHA8 = 0x8C45
GL_COLOR_ATTACHMENT11_EXT = 0x8CEB
GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39
GL_SUPERSAMPLE_SCALE_X_NV = 0x9372
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F5
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB = 0x88B5
GL_R1UI_N3F_V3F_SUN = 0x85C7
GL_INTERLEAVED_ATTRIBS_EXT = 0x8C8C
GL_PROGRAM_OUTPUT = 0x92E4
GL_VERTEX_ARRAY_SIZE = 0x807A
GL_DEBUG_SOURCE_THIRD_PARTY_ARB = 0x8249
GL_VERTEX_ARRAY_LIST_STRIDE_IBM = 103080
GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4
GL_TEXTURE_BUFFER_ARB = 0x8C2A
GL_OBJECT_DISTANCE_TO_POINT_SGIS = 0x81F1
GL_LUMINANCE4_ALPHA4_EXT = 0x8043
GL_DUAL_ALPHA12_SGIS = 0x8112
GL_DRAW_BUFFER4_ARB = 0x8829
GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT = 0x8A2C
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x00000004
GL_RG16F_EXT = 0x822F
GL_DUAL_LUMINANCE4_SGIS = 0x8114
GL_RGB16_EXT = 0x8054
GL_SAMPLER_2D_ARRAY_SHADOW_EXT = 0x8DC4
GL_POLYGON_OFFSET_LINE = 0x2A02
GL_SPARE0_PLUS_SECONDARY_COLOR_NV = 0x8532
GL_MODELVIEW24_ARB = 0x8738
GL_MAX_PROGRAM_TEXEL_OFFSET_EXT = 0x8905
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB = 0x9144
GL_HISTOGRAM_ALPHA_SIZE = 0x802B
GL_EDGE_FLAG_ARRAY_STRIDE_EXT = 0x808C
GL_DEBUG_SOURCE_OTHER = 0x824B
GL_MAX_TEXTURE_BUFFER_SIZE_EXT = 0x8C2B
GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034
GL_IMAGE_BINDING_LEVEL_EXT = 0x8F3B
GL_MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE
GL_TESS_EVALUATION_SUBROUTINE = 0x92EA
GL_LINEARLIGHT_NV = 0x92A7
GL_READ_WRITE_ARB = 0x88BA
GL_EVAL_VERTEX_ATTRIB14_NV = 0x86D4
GL_MATRIX_INDEX_ARRAY_SIZE_ARB = 0x8846
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB = 0x82ED
GL_MAP2_TEXTURE_COORD_1 = 0x0DB3
GL_LUMINANCE16_SNORM = 0x9019
GL_COMPRESSED_SLUMINANCE_EXT = 0x8C4A
GL_IMAGE_TRANSLATE_Y_HP = 0x8158
GL_UNPACK_LSB_FIRST = 0x0CF1
GL_TEXTURE_VIEW_MIN_LAYER = 0x82DD
GL_SRC1_COLOR = 0x88F9
GL_SLUMINANCE_ALPHA_NV = 0x8C44
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT = 0x932A
GL_CON_14_ATI = 0x894F
GL_SATURATE_BIT_ATI = 0x00000040
GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES = 0x8A2C
GL_MATRIX11_ARB = 0x88CB
GL_PRIMITIVE_ID_NV = 0x8C7C
GL_INDEX_CLEAR_VALUE = 0x0C20
GL_LUMINANCE6_ALPHA2 = 0x8044
GL_DETAIL_TEXTURE_2D_SGIS = 0x8095
GL_PROGRAM_ERROR_POSITION_NV = 0x864B
GL_ELEMENT_ARRAY_TYPE_APPLE = 0x8A0D
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV = 0x909C
GL_LUMINANCE_ALPHA8UI_EXT = 0x8D81
GL_INTERNALFORMAT_BLUE_SIZE = 0x8273
GL_SRGB8_EXT = 0x8C41
GL_SAMPLER_1D_ARRAY = 0x8DC0
GL_HI_SCALE_NV = 0x870E
GL_RGB32UI = 0x8D71
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT = 0x8CD7
GL_UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243
GL_UNPACK_SKIP_PIXELS = 0x0CF4
GL_SAMPLE_ALPHA_TO_ONE = 0x809F
GL_CURRENT_VERTEX_WEIGHT_EXT = 0x850B
GL_CLOSE_PATH_NV = 0x00
GL_HISTOGRAM_ALPHA_SIZE_EXT = 0x802B
GL_CURRENT_BIT = 0x00000001
GL_NORMAL_ARRAY_STRIDE = 0x807F
GL_CONTEXT_ROBUST_ACCESS_EXT = 0x90F3
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV = 0x8DA0
GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E
GL_MODELVIEW5_ARB = 0x8725
GL_DRAW_BUFFER3 = 0x8828
GL_DRAW_BUFFER12_ATI = 0x8831
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32
GL_SRC_ALPHA_SATURATE_EXT = 0x0308
GL_OBJECT_LINEAR = 0x2401
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT = 0x8DBA
GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41
GL_MAP_TESSELLATION_NV = 0x86C2
GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117
GL_MULTISAMPLE_3DFX = 0x86B2
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D
GL_NORMAL_MAP_EXT = 0x8511
GL_FOG_DISTANCE_MODE_NV = 0x855A
GL_SELECTION_BUFFER_SIZE = 0x0DF4
GL_SYNC_CONDITION_APPLE = 0x9113
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT = 0x00000100
GL_RIGHT = 0x0407
GL_TEXTURE_MIN_LOD = 0x813A
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C
GL_FILL_RECTANGLE_NV = 0x933C
GL_FRAMEBUFFER_ATTACHMENT_ANGLE = 0x93A3
GL_VERTEX_PROGRAM_NV = 0x8620
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x880B
GL_VERTEX_DATA_HINT_PGI = 0x1A22A
GL_DETAIL_TEXTURE_2D_BINDING_SGIS = 0x8096
GL_TEXTURE_GEN_S = 0x0C60
GL_FIELDS_NV = 0x8E27
GL_STENCIL_BACK_FAIL = 0x8801
GL_FLOAT_MAT3x2_NV = 0x8B67
GL_RGB9_E5 = 0x8C3D
GL_ACTIVE_VARYINGS_NV = 0x8C81
GL_VERTEX_SOURCE_ATI = 0x8774
GL_USE_MISSING_GLYPH_NV = 0x90AA
GL_COLOR_ATTACHMENT24 = 0x8CF8
GL_PRIMARY_COLOR_EXT = 0x8577
GL_CONVOLUTION_FILTER_SCALE = 0x8014
GL_COMPRESSED_RGB8_ETC2_OES = 0x9274
GL_TEXTURE_RESIDENT = 0x8067
GL_RGBA4_S3TC = 0x83A3
GL_NUM_FRAGMENT_CONSTANTS_ATI = 0x896F
GL_CONFORMANT_NV = 0x9374
GL_ONE_MINUS_SRC_ALPHA = 0x0303
GL_DEBUG_SEVERITY_NOTIFICATION = 0x826B
GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD
GL_OUTPUT_TEXTURE_COORD25_EXT = 0x87B6
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = 0x8E80
GL_QUAD_MESH_SUN = 0x8614
GL_TRANSLATE_2D_NV = 0x9090
GL_DEPTH_BUFFER_BIT7_QCOM = 0x00008000
GL_MATRIX23_ARB = 0x88D7
GL_CLEAR = 0x1500
GL_QUERY_BY_REGION_NO_WAIT_NV = 0x8E16
GL_LIGHT1 = 0x4001
GL_CLIP_NEAR_HINT_PGI = 0x1A220
GL_TEXTURE_COORD_ARRAY = 0x8078
GL_EVAL_VERTEX_ATTRIB10_NV = 0x86D0
GL_SOURCE1_ALPHA_EXT = 0x8589
GL_TEXTURE23_ARB = 0x84D7
GL_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256
GL_COLOR_BUFFER_BIT2_QCOM = 0x00000004
GL_UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A
GL_MINMAX_EXT = 0x802E
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES = 0x900A
GL_VERTEX_ATTRIB_ARRAY13_NV = 0x865D
GL_SLUMINANCE8_ALPHA8_EXT = 0x8C45
GL_VERTEX_ATTRIB_ARRAY3_NV = 0x8653
GL_COLOR_ATTACHMENT5 = 0x8CE5
GL_SRC_ALPHA_SATURATE = 0x0308
GL_TEXTURE27_ARB = 0x84DB
GL_DST_OUT_NV = 0x928D
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES = 0x8CD1
GL_INVERTED_SCREEN_W_REND = 0x8491
GL_INT_SAMPLER_3D = 0x8DCB
GL_COMBINER_SUM_OUTPUT_NV = 0x854C
GL_LUMINANCE16 = 0x8042
GL_COLOR_ARRAY_POINTER = 0x8090
GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV = 0x84E4
GL_DEPTH_COMPONENT16_OES = 0x81A5
GL_DEPTH_TEXTURE_MODE = 0x884B
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF
GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38
GL_MATRIX_INDEX_ARRAY_POINTER_ARB = 0x8849
GL_ALPHA16_SNORM = 0x9018
GL_MIPMAP = 0x8293
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC
GL_MAX_CLIPMAP_DEPTH_SGIX = 0x8177
GL_COMBINER_CD_DOT_PRODUCT_NV = 0x8546
GL_EDGE_FLAG = 0x0B43
GL_DEBUG_GROUP_STACK_DEPTH = 0x826D
GL_MAP1_VERTEX_ATTRIB8_4_NV = 0x8668
GL_COEFF = 0x0A00
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93DA
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB = 0x8B4C
GL_MAX_PROGRAM_TEMPORARIES_ARB = 0x88A5
GL_SEPARABLE_2D = 0x8012
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL = 0x94FC
GL_EXP = 0x0800
GL_CLIP_PLANE1_IMG = 0x3001
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 = 0x93D8
GL_CLAMP_READ_COLOR_ARB = 0x891C
GL_NORMAL_ARRAY_EXT = 0x8075
GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE = 0x83F2
GL_REG_8_ATI = 0x8929
GL_MATRIX3_NV = 0x8633
GL_TEXTURE_2D_BINDING_EXT = 0x8069
GL_TEXTURE_SAMPLES_IMG = 0x9136
GL_TEXTURE_WRAP_S = 0x2802
GL_TERMINATE_SEQUENCE_COMMAND_NV = 0x0000
GL_OUTPUT_TEXTURE_COORD24_EXT = 0x87B5
GL_INTENSITY12 = 0x804C
GL_ETC1_RGB8_OES = 0x8D64
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES = 0x900D
GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT = 0x8D6A
GL_LUMINANCE32F_EXT = 0x8818
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV = 0x8908
GL_TEXTURE_2D = 0x0DE1
GL_DEPTH_STENCIL_EXT = 0x84F9
GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT = 0x9123
GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG = 0x9138
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC
GL_PATH_PROJECTION_MATRIX_NV = 0x0BA7
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C
GL_TEXTURE6 = 0x84C6
GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23
GL_CONTEXT_FLAG_DEBUG_BIT = 0x00000002
GL_RGBA32I_EXT = 0x8D82
GL_WAIT_FAILED = 0x911D
GL_READ_BUFFER_EXT = 0x0C02
GL_DOUBLE_MAT2 = 0x8F46
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT = 0x8F39
GL_DST_ALPHA = 0x0304
GL_LUMINANCE16F_ARB = 0x881E
GL_EYE_RADIAL_NV = 0x855B
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES = 0x8B8B
GL_TEXTURE_SHARED_SIZE_EXT = 0x8C3F
GL_TIMESTAMP_EXT = 0x8E28
GL_ALL_SHADER_BITS_EXT = 0xFFFFFFFF
GL_VERTEX_ARRAY_COUNT_EXT = 0x807D
GL_DEBUG_CATEGORY_DEPRECATION_AMD = 0x914B
GL_LAYOUT_LINEAR_CPU_CACHED_INTEL = 2
GL_FLOAT_CLEAR_COLOR_VALUE_NV = 0x888D
GL_COLOR_ATTACHMENT3_NV = 0x8CE3
GL_CONTEXT_FLAG_DEBUG_BIT_KHR = 0x00000002
GL_TEXTURE_POST_SPECULAR_HP = 0x8168
GL_FRAGMENT_SHADER_ATI = 0x8920
GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE = 0x9117
GL_BUFFER_BINDING = 0x9302
GL_POINT_SIZE_MAX_ARB = 0x8127
GL_POINT_DISTANCE_ATTENUATION_ARB = 0x8129
GL_ZOOM_X = 0x0D16
GL_MAX_ASYNC_READ_PIXELS_SGIX = 0x8361
GL_TRUE = 1
GL_REG_18_ATI = 0x8933
GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53
GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A
GL_DEBUG_CALLBACK_USER_PARAM_KHR = 0x8245
GL_COLOR_TABLE_BIAS = 0x80D7
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB = 0x8DE0
GL_RENDERBUFFER_STENCIL_SIZE_OES = 0x8D55
GL_FRAMEBUFFER_UNSUPPORTED_OES = 0x8CDD
GL_INDEX = 0x8222
GL_COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8DBD
GL_MULTISAMPLE_BUFFER_BIT6_QCOM = 0x40000000
GL_PREFER_DOUBLEBUFFER_HINT_PGI = 0x1A1F8
GL_MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF
GL_RGB_S3TC = 0x83A0
GL_INT_IMAGE_1D_ARRAY_EXT = 0x905D
GL_MODELVIEW7_ARB = 0x8727
GL_COMPRESSED_RGB8_ETC2 = 0x9274
GL_MAP2_VERTEX_ATTRIB4_4_NV = 0x8674
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46
GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX = 0x8314
GL_TEXTURE_VIEW_NUM_LEVELS = 0x82DC
GL_INTENSITY_SNORM = 0x9013
GL_POLYGON_OFFSET_LINE_NV = 0x2A02
GL_RENDERBUFFER_ALPHA_SIZE_OES = 0x8D53
GL_MAP1_VERTEX_ATTRIB2_4_NV = 0x8662
GL_PROXY_TEXTURE_RECTANGLE_ARB = 0x84F7
GL_MODELVIEW25_ARB = 0x8739
GL_INTERNALFORMAT_DEPTH_TYPE = 0x827C
GL_RGB_FLOAT16_ATI = 0x881B
GL_MATRIX_PALETTE_ARB = 0x8840
GL_FEEDBACK_BUFFER_POINTER = 0x0DF0
GL_RGBA12 = 0x805A
GL_FOG_COORDINATE_ARRAY_LIST_IBM = 103076
GL_MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA
GL_DEBUG_SEVERITY_MEDIUM_ARB = 0x9147
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB = 0x889F
GL_PALETTE8_RGB5_A1_OES = 0x8B99
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x906C
GL_ALWAYS_FAST_HINT_PGI = 0x1A20C
GL_SINGLE_COLOR = 0x81F9
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47
GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT = 0x8365
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43
GL_PIXEL_MAP_I_TO_I = 0x0C70
GL_DEPTH24_STENCIL8_OES = 0x88F0
GL_TRACE_TEXTURES_BIT_MESA = 0x0008
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B
GL_DSDT_MAG_NV = 0x86F6
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV = 0x887B
GL_POINT_SIZE_MIN_ARB = 0x8126
GL_IMAGE_BINDING_ACCESS = 0x8F3E
GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB
GL_TEXTURE_SPARSE_ARB = 0x91A6
GL_REG_20_ATI = 0x8935
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F
GL_COMBINER_CD_OUTPUT_NV = 0x854B
GL_DEBUG_CALLBACK_USER_PARAM_ARB = 0x8245
GL_MAP2_VERTEX_ATTRIB10_4_NV = 0x867A
GL_FENCE_STATUS_NV = 0x84F3
GL_FILTER4_SGIS = 0x8146
GL_BROWSER_DEFAULT_WEBGL = 0x9244
GL_PROXY_TEXTURE_1D_EXT = 0x8063
GL_HISTOGRAM_BLUE_SIZE_EXT = 0x802A
GL_RELATIVE_ROUNDED_RECT_NV = 0xE9
GL_LIGHTEN = 0x9298
GL_UNIFORM_BLOCK = 0x92E2
GL_MAP_UNSYNCHRONIZED_BIT = 0x0020
GL_ALPHA8_SNORM = 0x9014
GL_UNSIGNED_SHORT_8_8_REV_MESA = 0x85BB
GL_EDGE_FLAG_ARRAY_LENGTH_NV = 0x8F30
GL_VERTEX_ATTRIB_ARRAY0_NV = 0x8650
GL_MATRIX28_ARB = 0x88DC
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV = 0x8F2A
GL_COMPRESSED_INTENSITY = 0x84EC
GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C
GL_CONSTANT_ATTENUATION = 0x1207
GL_SAMPLER_EXTERNAL_OES = 0x8D66
GL_LAYER_PROVOKING_VERTEX_OES = 0x825E
GL_FILL = 0x1B02
GL_CURRENT_FOG_COORDINATE = 0x8453
GL_SHADER_STORAGE_BARRIER_BIT = 0x00002000
GL_REG_13_ATI = 0x892E
GL_FUNC_REVERSE_SUBTRACT_EXT = 0x800B
GL_PROGRAM_ERROR_POSITION_ARB = 0x864B
GL_PIXEL_MAG_FILTER_EXT = 0x8331
GL_MAX_PROGRAM_IF_DEPTH_NV = 0x88F6
GL_DECR = 0x1E03
GL_RENDERBUFFER_SAMPLES_ANGLE = 0x8CAB
GL_COMPRESSED_SIGNED_R11_EAC = 0x9271
GL_LINE_QUALITY_HINT_SGIX = 0x835B
GL_SRC2_RGB = 0x8582
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB = 0x8C29
GL_PROXY_TEXTURE_RECTANGLE_NV = 0x84F7
GL_ALPHA16F_ARB = 0x881C
GL_INVARIANT_EXT = 0x87C2
GL_TEXTURE_SWIZZLE_R = 0x8E42
GL_FRAGMENT_SHADER_INVOCATIONS_ARB = 0x82F4
GL_CLAMP_TO_BORDER_ARB = 0x812D
GL_SAMPLES_EXT = 0x80A9
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT = 0x900A
GL_PATCHES_OES = 0x000E
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80
GL_ACTIVE_VARYING_MAX_LENGTH_NV = 0x8C82
GL_VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC
GL_COMPRESSED_INTENSITY_ARB = 0x84EC
GL_INT_IMAGE_CUBE_EXT = 0x905B
GL_COMPRESSED_RGBA_ASTC_4x4x4_OES = 0x93C3
GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273
GL_DRAW_BUFFER11_ATI = 0x8830
GL_TESS_GEN_POINT_MODE_EXT = 0x8E79
GL_FRAMEBUFFER_UNDEFINED = 0x8219
GL_R16_SNORM_EXT = 0x8F98
GL_DRAW_BUFFER12 = 0x8831
GL_MODELVIEW4_ARB = 0x8724
GL_RELATIVE_VERTICAL_LINE_TO_NV = 0x09
GL_MAT_COLOR_INDEXES_BIT_PGI = 0x01000000
GL_COMPRESSED_RED = 0x8225
GL_SAMPLER_CUBE_ARB = 0x8B60
GL_BYTE = 0x1400
GL_TEXTURE_ALPHA_TYPE_ARB = 0x8C13
GL_PIXEL_UNPACK_BUFFER_ARB = 0x88EC
GL_TRANSFORM_FEEDBACK_NV = 0x8E22
GL_HALF_FLOAT_NV = 0x140B
GL_RGB10_A2UI = 0x906F
GL_FRAMEBUFFER_SRGB = 0x8DB9
GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX = 0x8408
GL_INDEX_LOGIC_OP = 0x0BF1
GL_MUL_ATI = 0x8964
GL_POINT_BIT = 0x00000002
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D
GL_TRANSFORM_HINT_APPLE = 0x85B1
GL_LIGHT6 = 0x4006
GL_POINT_FADE_THRESHOLD_SIZE_ARB = 0x8128
GL_FLOAT_MAT2x4_NV = 0x8B66
GL_INT_VEC3 = 0x8B54
GL_QUARTER_BIT_ATI = 0x00000010
GL_COLOR_ATTACHMENT0_EXT = 0x8CE0
GL_PIXEL_CUBIC_WEIGHT_EXT = 0x8333
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264
GL_NORMAL_ARRAY_COUNT_EXT = 0x8080
GL_TEXTURE12_ARB = 0x84CC
GL_DRAW_BUFFER15_ARB = 0x8834
GL_TEXTURE_INTERNAL_FORMAT_QCOM = 0x8BD5
GL_GEOMETRY_SHADER_ARB = 0x8DD9
GL_REG_30_ATI = 0x893F
GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803
GL_LINES_ADJACENCY = 0x000A
GL_INVALID_OPERATION = 0x0502
GL_IMAGE_CUBE_MAP_ARRAY_OES = 0x9054
GL_CONTEXT_ROBUST_ACCESS = 0x90F3
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB = 0x900A
GL_PROJECTION = 0x1701
GL_MAX_SAMPLES_IMG = 0x9135
GL_SWIZZLE_STR_ATI = 0x8976
GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD
GL_CONVOLUTION_HEIGHT_EXT = 0x8019
GL_COVERAGE_ALL_FRAGMENTS_NV = 0x8ED5
GL_LIST_BASE = 0x0B32
GL_RGB_SNORM = 0x8F92
GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366
GL_RELATIVE_CONIC_CURVE_TO_NV = 0x1B
GL_STENCIL_INDEX16 = 0x8D49
GL_INT_2_10_10_10_REV = 0x8D9F
GL_EYE_LINEAR_NV = 0x2400
GL_TEXTURE_ALPHA_MODULATE_IMG = 0x8C06
GL_MAX_MULTIVIEW_BUFFERS_EXT = 0x90F2
GL_AFFINE_3D_NV = 0x9094
GL_FLOAT_VEC3_ARB = 0x8B51
GL_ONE_MINUS_CONSTANT_COLOR_EXT = 0x8002
GL_DRAW_FRAMEBUFFER_BINDING_EXT = 0x8CA6
GL_INDEX_WRITEMASK = 0x0C21
GL_C3F_V3F = 0x2A24
GL_MIN_PROGRAM_TEXEL_OFFSET_NV = 0x8904
GL_INTENSITY4_EXT = 0x804A
GL_WEIGHT_ARRAY_STRIDE_OES = 0x86AA
GL_COLOR_ARRAY_LIST_IBM = 103072
GL_CURRENT_RASTER_POSITION = 0x0B07
GL_SEPARATE_ATTRIBS = 0x8C8D
GL_VERTEX_ARRAY_SIZE_EXT = 0x807A
GL_CONIC_CURVE_TO_NV = 0x1A
GL_RASTERIZER_DISCARD = 0x8C89
GL_MIN_SAMPLE_SHADING_VALUE_ARB = 0x8C37
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT = 0x8DDD
GL_INTERNALFORMAT_ALPHA_TYPE = 0x827B
GL_VERTEX_ARRAY_RANGE_APPLE = 0x851D
GL_DOUBLE_MAT3_EXT = 0x8F47
GL_RGB565_OES = 0x8D62
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES = 0x8CD4
GL_SGX_BINARY_IMG = 0x8C0A
GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES = 0x8DE0
GL_POINT_SPRITE_NV = 0x8861
GL_RELATIVE_SMALL_CW_ARC_TO_NV = 0x15
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216
GL_ZERO_EXT = 0x87DD
GL_PROGRAM_FORMAT_ASCII_ARB = 0x8875
GL_NUM_SPARSE_LEVELS_EXT = 0x91AA
GL_SAMPLER_BUFFER_EXT = 0x8DC2
GL_ROUNDED_RECT2_NV = 0xEA
GL_DUAL_LUMINANCE16_SGIS = 0x8117
GL_MATRIX18_ARB = 0x88D2
GL_DRAW_BUFFER14 = 0x8833
GL_WAIT_FAILED_APPLE = 0x911D
GL_MODELVIEW6_ARB = 0x8726
GL_PROGRAM_BINARY_FORMATS = 0x87FF
GL_VARIANT_ARRAY_TYPE_EXT = 0x87E7
GL_FRAMEBUFFER_BINDING_OES = 0x8CA6
GL_PRIMARY_COLOR_NV = 0x852C
GL_SAMPLER_2D_SHADOW_ARB = 0x8B62
GL_STREAM_COPY = 0x88E2
GL_EDGE_FLAG_ARRAY_POINTER_EXT = 0x8093
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT = 0x00001000
GL_UNSIGNED_INT_VEC3 = 0x8DC7
GL_COLOR_ATTACHMENT19 = 0x8CF3
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7
GL_DRAW_BUFFER10_ATI = 0x882F
GL_INTENSITY_EXT = 0x8049
GL_MODELVIEW0_EXT = 0x1700
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV = 0x9029
GL_INDEX_SHIFT = 0x0D12
GL_OR = 0x1507
GL_IMAGE_TRANSFORM_2D_HP = 0x8161
GL_CLIP_DISTANCE4 = 0x3004
GL_MAP_WRITE_BIT = 0x0002
GL_COLOR_ATTACHMENT21 = 0x8CF5
GL_UNIFORM_BUFFER_ADDRESS_NV = 0x936F
GL_DEPTH_COMPONENT16_NONLINEAR_NV = 0x8E2C
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5
GL_PACK_INVERT_MESA = 0x8758
GL_T2F_V3F = 0x2A27
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV = 0x8F20
GL_INTERNALFORMAT_RED_TYPE = 0x8278
GL_CON_21_ATI = 0x8956
GL_MAP_COHERENT_BIT = 0x0080
GL_1PASS_SGIS = 0x80A1
GL_TEXTURE_NORMAL_EXT = 0x85AF
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E
GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB = 0x8DA7
GL_PATH_GEN_COEFF_NV = 0x90B1
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB = 0x9342
GL_DOUBLE_MAT2x4 = 0x8F4A
GL_CLIP_PLANE4 = 0x3004
GL_PALETTE8_R5_G6_B5_OES = 0x8B97
GL_FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2
GL_ALPHA_FLOAT32_APPLE = 0x8816
GL_DSDT8_MAG8_INTENSITY8_NV = 0x870B
GL_MOVE_TO_CONTINUES_NV = 0x90B6
GL_RGB_FLOAT32_ATI = 0x8815
GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX = 0x9047
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB = 0x8622
GL_REG_22_ATI = 0x8937
GL_FOG_COORD_ARRAY_ADDRESS_NV = 0x8F28
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB = 0x9382
GL_POINT_SIZE_MAX = 0x8127
GL_OUTPUT_FOG_EXT = 0x87BD
GL_STATIC_COPY_ARB = 0x88E6
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C
GL_UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068
GL_UNSIGNED_IDENTITY_NV = 0x8536
GL_IMAGE_2D_ARRAY = 0x9053
GL_VERTEX_ARRAY_EXT = 0x8074
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV = 0x8C7E
GL_RGBA8I_EXT = 0x8D8E
GL_REG_11_ATI = 0x892C
GL_INDEX_ARRAY_COUNT_EXT = 0x8087
GL_GREATER = 0x0204
GL_R16I = 0x8233
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES = 0x919F
GL_NUM_FILL_STREAMS_NV = 0x8E29
GL_OR_INVERTED = 0x150D
GL_DRAW_BUFFER = 0x0C01
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1
GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4
GL_COLOR_TABLE_WIDTH = 0x80D9
GL_IMAGE_3D_EXT = 0x904E
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT = 0x8E89
GL_ACTIVE_VERTEX_UNITS_ARB = 0x86A5
GL_TEXTURE_MAX_CLAMP_S_SGIX = 0x8369
GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB
GL_RGB8UI_EXT = 0x8D7D
GL_INTERNALFORMAT_STENCIL_TYPE = 0x827D
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES = 0x8E83
GL_LEFT = 0x0406
GL_COMPILE = 0x1300
GL_FLOAT_MAT2x3_NV = 0x8B65
GL_ELEMENT_ADDRESS_COMMAND_NV = 0x0008
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES = 0x90D8
GL_OP_SUB_EXT = 0x8796
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC
GL_SECONDARY_COLOR_ARRAY_LIST_IBM = 103077
GL_COORD_REPLACE_NV = 0x8862
GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897
GL_DRAW_BUFFER6_NV = 0x882B
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = 0x8E1E
GL_GEOMETRY_VERTICES_OUT_EXT = 0x8DDA
GL_VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF
GL_MAX_LABEL_LENGTH_KHR = 0x82E8
GL_CON_23_ATI = 0x8958
GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8D9D
GL_DEPTH_COMPONENTS = 0x8284
GL_DYNAMIC_STORAGE_BIT_EXT = 0x0100
GL_SAMPLER_1D_ARRAY_SHADOW_EXT = 0x8DC3
GL_COLOR_ATTACHMENT13_EXT = 0x8CED
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB = 0x8C2D
GL_CURRENT_MATRIX_INDEX_ARB = 0x8845
GL_MAP2_VERTEX_ATTRIB12_4_NV = 0x867C
GL_INT64_ARB = 0x140E
GL_GREEN_BITS = 0x0D53
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49
GL_BITMAP = 0x1A00
GL_SHININESS = 0x1601
GL_COLOR_ATTACHMENT13 = 0x8CED
GL_ATOMIC_COUNTER_BUFFER = 0x92C0
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES = 0x92CD
GL_R1UI_T2F_V3F_SUN = 0x85C9
GL_SAMPLES_ARB = 0x80A9
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV = 0x88FE
GL_DEPTH_COMPONENT32_SGIX = 0x81A7
GL_SHADER_IMAGE_LOAD = 0x82A4
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES = 0x8E1E
GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX = 0x904A
GL_UNSIGNED_INT64_VEC3_NV = 0x8FF6
GL_PERFORMANCE_MONITOR_AMD = 0x9152
GL_RENDERBUFFER_BINDING_OES = 0x8CA7
GL_MATRIX2_ARB = 0x88C2
GL_VERTEX_ARRAY_OBJECT_AMD = 0x9154
GL_FRAGMENT_LIGHT6_SGIX = 0x8412
GL_COLOR_ATTACHMENT0_NV = 0x8CE0
GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT = 0x92D5
GL_DRAW_BUFFER9_NV = 0x882E
GL_BUFFER = 0x82E0
GL_ATOMIC_COUNTER_BUFFER_INDEX = 0x9301
GL_RGB_SCALE = 0x8573
GL_REGISTER_COMBINERS_NV = 0x8522
GL_INT_SAMPLER_1D_ARRAY_EXT = 0x8DCE
GL_EVAL_VERTEX_ATTRIB6_NV = 0x86CC
GL_VIEW_CLASS_24_BITS = 0x82C9
GL_RGB_FLOAT32_APPLE = 0x8815
GL_DEBUG_CATEGORY_API_ERROR_AMD = 0x9149
GL_MULTISAMPLE_EXT = 0x809D
GL_BUMP_TARGET_ATI = 0x877C
GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002
GL_QUADS_OES = 0x0007
GL_MALI_SHADER_BINARY_ARM = 0x8F60
GL_MODELVIEW10_ARB = 0x872A
GL_TEXTURE24 = 0x84D8
GL_LUMINANCE8_SNORM = 0x9015
GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B
GL_4PASS_0_EXT = 0x80A4
GL_MAX_TESS_GEN_LEVEL_OES = 0x8E7E
GL_MAX_COLOR_MATRIX_STACK_DEPTH = 0x80B3
GL_CLIP_DISTANCE7_APPLE = 0x3007
GL_MAX_CONVOLUTION_HEIGHT = 0x801B
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F
GL_COLOR_ATTACHMENT26 = 0x8CFA
GL_MAX_FRAMEBUFFER_WIDTH = 0x9315
GL_INDEX_OFFSET = 0x0D13
GL_INT_SAMPLER_BUFFER_AMD = 0x9002
GL_SEPARABLE_2D_EXT = 0x8012
GL_ADD_SIGNED_EXT = 0x8574
GL_COLOR_BUFFER_BIT5_QCOM = 0x00000020
GL_CON_22_ATI = 0x8957
GL_BLEND_DST_RGB_OES = 0x80C8
GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF
GL_MAP_INVALIDATE_BUFFER_BIT_EXT = 0x0008
GL_REG_14_ATI = 0x892F
GL_LINE = 0x1B01
GL_CURRENT_RASTER_NORMAL_SGIX = 0x8406
GL_MAX_PROGRAM_INSTRUCTIONS_ARB = 0x88A1
GL_INT_SAMPLER_2D_EXT = 0x8DCA
GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368
GL_PROGRAM_ERROR_STRING_NV = 0x8874
GL_UNPACK_IMAGE_DEPTH_SGIS = 0x8133
GL_CON_4_ATI = 0x8945
GL_PACK_COMPRESSED_SIZE_SGIX = 0x831C
GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872
GL_PROXY_TEXTURE_3D_EXT = 0x8070
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES = 0x8C29
GL_R32I = 0x8235
GL_SAMPLER_RENDERBUFFER_NV = 0x8E56
GL_FRAGMENT_SHADER_BIT_EXT = 0x00000002
GL_PARTIAL_SUCCESS_NV = 0x902E
GL_PROXY_COLOR_TABLE_SGI = 0x80D3
GL_COLOR_ATTACHMENT12_EXT = 0x8CEC
GL_MAX_HEIGHT = 0x827F
GL_OBJECT_POINT_SGIS = 0x81F5
GL_DRAW_BUFFER7_NV = 0x882C
GL_OUTPUT_TEXTURE_COORD21_EXT = 0x87B2
GL_MIRRORED_REPEAT = 0x8370
GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT = 0x825F
GL_VERTEX_ATTRIB_ARRAY11_NV = 0x865B
GL_UNSIGNED_BYTE = 0x1401
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D4
GL_TEXTURE_DEPTH_EXT = 0x8071
GL_TEXTURE_MATERIAL_FACE_EXT = 0x8351
GL_LO_BIAS_NV = 0x8715
GL_BUFFER_MAP_LENGTH = 0x9120
GL_PIXEL_SUBSAMPLE_2424_SGIX = 0x85A3
GL_RESET_NOTIFICATION_STRATEGY_EXT = 0x8256
GL_ACCUM = 0x0100
GL_MAX_VERTEX_UNITS_OES = 0x86A4
GL_WRITE_PIXEL_DATA_RANGE_NV = 0x8878
GL_UNSIGNED_INT64_ARB = 0x140F
GL_INTERNALFORMAT_PREFERRED = 0x8270
GL_SAMPLES_PASSED_ARB = 0x8914
GL_SHADER_STORAGE_BUFFER_SIZE = 0x90D5
GL_COLOR_ATTACHMENT30 = 0x8CFE
GL_LUMINANCE_ALPHA32UI_EXT = 0x8D75
GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX = 0x904B
GL_DEBUG_OUTPUT_KHR = 0x92E0
GL_UNSIGNED_SHORT_8_8_MESA = 0x85BA
GL_REG_10_ATI = 0x892B
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83F1
GL_VERTEX_SHADER_BIT = 0x00000001
GL_MIRROR_CLAMP_TO_EDGE_EXT = 0x8743
GL_SLICE_ACCUM_SUN = 0x85CC
GL_PROJECTION_MATRIX = 0x0BA7
GL_COMPRESSED_RGBA_ASTC_4x4x3_OES = 0x93C2
GL_DUAL_ALPHA16_SGIS = 0x8113
GL_ALPHA_TEST_QCOM = 0x0BC0
GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB = 0x8B49
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT = 0x8CD0
GL_LIGHT2 = 0x4002
GL_POLYGON_OFFSET_COMMAND_NV = 0x000E
GL_TESS_EVALUATION_PROGRAM_NV = 0x891F
GL_DRAW_BUFFER2 = 0x8827
GL_FRAGMENT_SHADER_ARB = 0x8B30
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F
GL_COLOR_ATTACHMENT11 = 0x8CEB
GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2
GL_FRAMEBUFFER_BINDING = 0x8CA6
GL_MODELVIEW18_ARB = 0x8732
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV = 0x8541
GL_RGBA32F = 0x8814
GL_COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93BB
GL_IMAGE_MIN_FILTER_HP = 0x815D
GL_MAP_ATTRIB_V_ORDER_NV = 0x86C4
GL_PIXEL_MIN_FILTER_EXT = 0x8332
GL_VERTEX_ATTRIB_ARRAY9_NV = 0x8659
GL_DYNAMIC_STORAGE_BIT = 0x0100
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT = 0x850D
GL_COMPRESSED_SRGB = 0x8C48
GL_VIEWPORT = 0x0BA2
GL_SAMPLER_1D = 0x8B5D
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE = 0x8A03
GL_MAP2_VERTEX_ATTRIB13_4_NV = 0x867D
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT = 0x8519
GL_MAX_INTEGER_SAMPLES = 0x9110
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT = 0x8C8B
GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8
GL_TRACE_MASK_MESA = 0x8755
GL_PATCH_VERTICES_EXT = 0x8E72
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM = 103086
GL_LUMINANCE4 = 0x803F
GL_MATRIX17_ARB = 0x88D1
GL_WEIGHT_ARRAY_TYPE_OES = 0x86A9
GL_LINE_STRIP = 0x0003
GL_FRACTIONAL_EVEN_EXT = 0x8E7C
GL_LERP_ATI = 0x8969
GL_MATRIX0_NV = 0x8630
GL_SUB_ATI = 0x8965
GL_PROGRAM_POINT_SIZE_EXT = 0x8642
GL_ONE_EXT = 0x87DE
GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2
GL_DEBUG_CATEGORY_APPLICATION_AMD = 0x914F
GL_LUMINANCE8 = 0x8040
GL_MAX_FRAMEZOOM_FACTOR_SGIX = 0x818D
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV = 0x04
GL_TEXTURE_RED_SIZE_EXT = 0x805C
GL_MULTISAMPLE_BIT = 0x20000000
GL_RESAMPLE_ZERO_FILL_SGIX = 0x8434
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93D7
GL_POINT_TOKEN = 0x0701
GL_IMAGE_CUBE_MAP_ARRAY = 0x9054
GL_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x8806
GL_COPY_WRITE_BUFFER_NV = 0x8F37
GL_POLYGON_STIPPLE = 0x0B42
GL_DIFFUSE = 0x1201
GL_POLYGON_OFFSET_FILL = 0x8037
GL_BACK_LEFT = 0x0402
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835
GL_FUNC_ADD_EXT = 0x8006
GL_MITER_REVERT_NV = 0x90A7
GL_RENDERBUFFER_WIDTH = 0x8D42
GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2
GL_UNSIGNED_INT64_VEC3_ARB = 0x8FF6
GL_IMAGE_BINDING_LAYER_EXT = 0x8F3D
GL_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0E
GL_TEXTURE_NUM_LEVELS_QCOM = 0x8BD9
GL_HIGH_FLOAT = 0x8DF2
GL_DOT3_RGB_EXT = 0x8740
GL_REG_4_ATI = 0x8925
GL_DEPTH_BUFFER_FLOAT_MODE_NV = 0x8DAF
GL_POINT_SPRITE_OES = 0x8861
GL_GET_TEXTURE_IMAGE_TYPE = 0x8292
GL_DRAW_BUFFER3_ARB = 0x8828
GL_DRAW_INDIRECT_BUFFER = 0x8F3F
GL_MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV = 0x9039
GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE
GL_DRAW_BUFFER14_ARB = 0x8833
GL_COMPRESSED_LUMINANCE_ALPHA_ARB = 0x84EB
GL_UNIFORM_BUFFER_SIZE = 0x8A2A
GL_DEPTH_COMPONENT16_SGIX = 0x81A5
GL_TEXTURE_CLIPMAP_OFFSET_SGIX = 0x8173
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC
GL_COLORDODGE = 0x9299
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124
GL_STENCIL_CLEAR_TAG_VALUE_EXT = 0x88F3
GL_MAX_ELEMENT_INDEX = 0x8D6B
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV = 0x8C7F
GL_ADD_BLEND_IMG = 0x8C09
GL_OFFSET_HILO_TEXTURE_2D_NV = 0x8854
GL_VIEWPORT_SUBPIXEL_BITS_EXT = 0x825C
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX = 0x8312
GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG = 0x8365
GL_QUAD_ALPHA8_SGIS = 0x811F
GL_VERTEX_ARRAY_TYPE_EXT = 0x807B
GL_TESS_GEN_MODE_OES = 0x8E76
GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1
GL_STENCIL_BACK_FAIL_ATI = 0x8801
GL_TEXTURE_COMPRESSION_HINT_ARB = 0x84EF
GL_SRC0_RGB = 0x8580
GL_POST_COLOR_MATRIX_GREEN_SCALE = 0x80B5
GL_LINES_ADJACENCY_ARB = 0x000A
GL_SIGNED_RGBA8_NV = 0x86FC
GL_MIN_LOD_WARNING_AMD = 0x919C
GL_INVERT_RGB_NV = 0x92A3
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI = 0x80BB
GL_SWIZZLE_STRQ_DQ_ATI = 0x897B
GL_C4UB_V3F = 0x2A23
GL_PIXEL_TILE_GRID_HEIGHT_SGIX = 0x8143
GL_COLORDODGE_KHR = 0x9299
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV = 0x0007
GL_RGBA = 0x1908
GL_ACTIVE_TEXTURE_ARB = 0x84E0
GL_SECONDARY_COLOR_NV = 0x852D
GL_MAX_TESS_PATCH_COMPONENTS_EXT = 0x8E84
GL_COMPRESSED_RGBA_ASTC_10x8 = 0x93BA
GL_NORMAL_ARRAY_LIST_IBM = 103071
GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT = 0x8918
GL_CURRENT_VERTEX_ATTRIB_ARB = 0x8626
GL_GEOMETRY_SHADER = 0x8DD9
GL_COLOR_SUM_ARB = 0x8458
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB = 0x8DE1
GL_TEXTURE_DT_SIZE_NV = 0x871E
GL_DOT3_RGBA_EXT = 0x8741
GL_PROGRAM_PIPELINE = 0x82E4
GL_DT_SCALE_NV = 0x8711
GL_DOT_PRODUCT_TEXTURE_3D_NV = 0x86EF
GL_READ_FRAMEBUFFER_APPLE = 0x8CA8
GL_RED_EXT = 0x1903
GL_INT_IMAGE_2D_EXT = 0x9058
GL_RENDERBUFFER_GREEN_SIZE_OES = 0x8D51
GL_RESAMPLE_AVERAGE_OML = 0x8988
GL_PIXEL_PACK_BUFFER_ARB = 0x88EB
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES = 0x8E1F
GL_INTENSITY8_EXT = 0x804B
GL_OP_POWER_EXT = 0x8793
GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR = 0x9630
GL_COLORBURN_KHR = 0x929A
GL_QUERY_COUNTER_BITS_EXT = 0x8864
GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES = 0x9308
GL_TRACE_PIXELS_BIT_MESA = 0x0010
GL_INT_IMAGE_1D_ARRAY = 0x905D
GL_TEXTURE_RANGE_LENGTH_APPLE = 0x85B7
GL_CLIP_DISTANCE3 = 0x3003
GL_INDEX_ARRAY = 0x8077
GL_NEGATIVE_ONE_EXT = 0x87DF
GL_TEXTURE_COMPRESSED = 0x86A1
GL_VERSION = 0x1F02
GL_FRAGMENT_PROGRAM_NV = 0x8870
GL_POST_CONVOLUTION_GREEN_BIAS_EXT = 0x8021
GL_CONSTANT_ALPHA_EXT = 0x8003
GL_FOG_DENSITY = 0x0B62
GL_TIMEOUT_IGNORED = 0xFFFFFFFFFFFFFFFF
GL_DUAL_LUMINANCE_ALPHA4_SGIS = 0x811C
GL_MAX_WIDTH = 0x827E
GL_FRAGMENT_ALPHA_MODULATE_IMG = 0x8C08
GL_REG_26_ATI = 0x893B
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV = 0x86D8
GL_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900C
GL_HISTOGRAM_SINK = 0x802D
GL_LUMINANCE_FLOAT16_ATI = 0x881E
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE = 0x8A02
GL_UNIFORM_BLOCK_INDEX = 0x8A3A
GL_INNOCENT_CONTEXT_RESET = 0x8254
GL_DRAW_BUFFER3_NV = 0x8828
GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898D
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT = 0x8DD5
GL_AND = 0x1501
GL_DEPENDENT_GB_TEXTURE_2D_NV = 0x86EA
GL_STENCIL_TEST_TWO_SIDE_EXT = 0x8910
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB = 0x8896
GL_DEPTH_COMPONENT = 0x1902
GL_ELEMENT_ARRAY_POINTER_ATI = 0x876A
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI = 0x8803
GL_DEBUG_LOGGED_MESSAGES_AMD = 0x9145
GL_EVAL_2D_NV = 0x86C0
GL_PATH_FORMAT_SVG_NV = 0x9070
GL_VERTEX_ARRAY_KHR = 0x8074
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB = 0x886A
GL_TEXTURE30_ARB = 0x84DE
GL_LINE_SMOOTH = 0x0B20
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8857
GL_PIXEL_MAP_G_TO_G = 0x0C77
GL_TEXTURE_COLOR_WRITEMASK_SGIS = 0x81EF
GL_DYNAMIC_READ_ARB = 0x88E9
GL_COLOR_TABLE = 0x80D0
GL_TEXTURE_HEIGHT_QCOM = 0x8BD3
GL_RGBA32UI = 0x8D70
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES = 0x8DA8
GL_NORMAL_MAP_NV = 0x8511
GL_NEGATIVE_ONE_TO_ONE = 0x935E
GL_RED_INTEGER_EXT = 0x8D94
GL_ALREADY_SIGNALED_APPLE = 0x911A
GL_FONT_Y_MIN_BOUNDS_BIT_NV = 0x00020000
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 = 0x93D1
GL_WRITE_ONLY_OES = 0x88B9
GL_STENCIL_PASS_DEPTH_PASS = 0x0B96
GL_MINMAX = 0x802E
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI = 0x80B9
GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517
GL_CONTEXT_FLAGS = 0x821E
GL_DRAW_BUFFER1 = 0x8826
GL_TEXTURE_FETCH_BARRIER_BIT = 0x00000008
GL_TEXTURE_OBJECT_VALID_QCOM = 0x8BDB
GL_RGB_INTEGER_EXT = 0x8D98
GL_VIRTUAL_PAGE_SIZE_Z_AMD = 0x9197
GL_MATRIX_INDEX_ARRAY_OES = 0x8844
GL_NAND = 0x150E
GL_DEPTH_COMPONENT24_SGIX = 0x81A6
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518
GL_SAMPLER_2D = 0x8B5E
GL_FUNC_REVERSE_SUBTRACT_OES = 0x800B
GL_ALPHA_TEST_FUNC_QCOM = 0x0BC1
GL_COMPRESSED_RGBA_ASTC_3x3x3_OES = 0x93C0
GL_TEXTURE_ENV_BIAS_SGIX = 0x80BE
GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D
GL_PIXEL_UNPACK_BUFFER = 0x88EC
GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43
GL_READ_ONLY_ARB = 0x88B8
GL_OPERAND0_RGB = 0x8590
GL_TEXTURE_VIEW_NUM_LAYERS_EXT = 0x82DE
GL_TEXTURE_BUFFER_FORMAT_ARB = 0x8C2E
GL_INCR_WRAP = 0x8507
GL_FLOAT_MAT2x3 = 0x8B65
GL_TEXTURE_HI_SIZE_NV = 0x871B
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV = 0x8E5E
GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA = 0x8BB3
GL_PHONG_WIN = 0x80EA
GL_SRC_OUT_NV = 0x928C
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES = 0x906A
GL_MAX_ELEMENTS_VERTICES_EXT = 0x80E8
GL_IMAGE_CUBE_MAP_ARRAY_EXT = 0x9054
GL_COLOR_ATTACHMENT9_EXT = 0x8CE9
GL_VERTEX_BINDING_BUFFER = 0x8F4F
GL_TEXTURE20_ARB = 0x84D4
GL_LUMINANCE16F_EXT = 0x881E
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES = 0x8A32
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CD
GL_PRIMITIVE_RESTART = 0x8F9D
GL_INT64_VEC2_NV = 0x8FE9
GL_4_BYTES_NV = 0x1409
GL_COLOR_TABLE_SCALE_SGI = 0x80D6
GL_SINGLE_COLOR_EXT = 0x81F9
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8
GL_TEXTURE_2D_STACK_BINDING_MESAX = 0x875E
GL_HALF_FLOAT_ARB = 0x140B
GL_DEPTH_COMPONENT24_ARB = 0x81A6
GL_FRAGMENT_SHADER_BIT = 0x00000002
GL_INTENSITY_FLOAT32_ATI = 0x8817
GL_VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE
GL_SUBSAMPLE_DISTANCE_AMD = 0x883F
GL_CON_0_ATI = 0x8941
GL_BUFFER_ACCESS = 0x88BB
GL_LOWER_LEFT = 0x8CA1
GL_MAP1_VERTEX_ATTRIB3_4_NV = 0x8663
GL_RGB = 0x1907
GL_NONE_OES = 0
GL_MAX_VIEWPORTS_NV = 0x825B
GL_ETC1_SRGB8_NV = 0x88EE
GL_TEXTURE_LOD_BIAS_EXT = 0x8501
GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F
GL_NUM_SHADER_BINARY_FORMATS = 0x8DF9
GL_REPLACE_VALUE_AMD = 0x874B
GL_POST_CONVOLUTION_ALPHA_SCALE = 0x801F
GL_OP_DOT4_EXT = 0x8785
GL_BLUE_INTEGER_EXT = 0x8D96
GL_POLYGON = 0x0009
GL_UNSIGNED_INT64_VEC4_NV = 0x8FF7
GL_FRAMEBUFFER_BINDING_ANGLE = 0x8CA6
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE
GL_ATTRIB_ARRAY_STRIDE_NV = 0x8624
GL_INTENSITY32UI_EXT = 0x8D73
GL_VERTICAL_LINE_TO_NV = 0x08
GL_IMAGE_BINDING_LAYER = 0x8F3D
GL_UNSIGNED_INT16_VEC3_NV = 0x8FF2
GL_ATTRIB_ARRAY_TYPE_NV = 0x8625
GL_COLOR_ATTACHMENT11_NV = 0x8CEB
GL_SAMPLER_KHR = 0x82E6
GL_ONE_MINUS_SRC1_ALPHA_EXT = 0x88FB
GL_CON_6_ATI = 0x8947
GL_ALPHA_BITS = 0x0D55
GL_POINT_FADE_THRESHOLD_SIZE_SGIS = 0x8128
GL_4PASS_3_EXT = 0x80A7
GL_DEBUG_TYPE_OTHER = 0x8251
GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C
GL_TEXTURE_BINDING_RECTANGLE = 0x84F6
GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV = 0x90D1
GL_OBJECT_LINK_STATUS_ARB = 0x8B82
GL_INTERLEAVED_ATTRIBS = 0x8C8C
GL_MAP_INVALIDATE_RANGE_BIT_EXT = 0x0004
GL_DEPTH_BOUNDS_TEST_EXT = 0x8890
GL_FOG_COORDINATE_SOURCE_EXT = 0x8450
GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR = 0x826C
GL_DEPTH_ATTACHMENT_EXT = 0x8D00
GL_TRANSPOSE_CURRENT_MATRIX_ARB = 0x88B7
GL_MODELVIEW8_ARB = 0x8728
GL_DEPTH_ATTACHMENT = 0x8D00
GL_WEIGHT_ARRAY_BUFFER_BINDING_OES = 0x889E
GL_EDGE_FLAG_ARRAY_POINTER = 0x8093
GL_NOP_COMMAND_NV = 0x0001
GL_ELEMENT_ARRAY_APPLE = 0x8A0C
GL_INVARIANT_VALUE_EXT = 0x87EA
GL_TESSELLATION_MODE_AMD = 0x9004
GL_TEXTURE1 = 0x84C1
GL_SHADER_COMPILER = 0x8DFA
GL_STENCIL_BITS = 0x0D57
GL_INDEX_BIT_PGI = 0x00080000
GL_RG8I = 0x8237
GL_MATRIX29_ARB = 0x88DD
GL_CURRENT_MATRIX_ARB = 0x8641
GL_LOAD = 0x0101
GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35
GL_TEXTURE_1D_BINDING_EXT = 0x8068
GL_MAX_DEBUG_MESSAGE_LENGTH = 0x9143
GL_MATRIX_PALETTE_OES = 0x8840
GL_INT_SAMPLER_1D_ARRAY = 0x8DCE
GL_TEXTURE29 = 0x84DD
GL_OUTPUT_COLOR0_EXT = 0x879B
GL_PIXEL_GROUP_COLOR_SGIS = 0x8356
GL_TEXTURE_MAX_CLAMP_R_SGIX = 0x836B
GL_POST_COLOR_MATRIX_BLUE_BIAS = 0x80BA
GL_MAX_FRAGMENT_LIGHTS_SGIX = 0x8404
GL_WEIGHT_ARRAY_SIZE_OES = 0x86AB
GL_POINT_SMOOTH_HINT = 0x0C51
GL_TEXTURE_GREEN_TYPE = 0x8C11
GL_TEXTURE_ENV_COLOR = 0x2201
GL_EVAL_VERTEX_ATTRIB7_NV = 0x86CD
GL_INNOCENT_CONTEXT_RESET_ARB = 0x8254
GL_RG16_EXT = 0x822C
GL_COMBINER_COMPONENT_USAGE_NV = 0x8544
GL_TEXTURE17_ARB = 0x84D1
GL_STREAM_COPY_ARB = 0x88E2
GL_DOT_PRODUCT_PASS_THROUGH_NV = 0x885B
GL_SURFACE_MAPPED_NV = 0x8700
GL_FRAGMENTS_INSTRUMENT_SGIX = 0x8313
GL_MULTISAMPLE_ARB = 0x809D
GL_CLAMP_TO_BORDER_SGIS = 0x812D
GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519
GL_VERTEX_SHADER_BINDING_EXT = 0x8781
GL_UNKNOWN_CONTEXT_RESET_EXT = 0x8255
GL_LINE_STRIP_ADJACENCY_OES = 0x000B
GL_RENDERBUFFER_WIDTH_OES = 0x8D42
GL_MAP2_TEXTURE_COORD_2 = 0x0DB4
GL_DST_ATOP_NV = 0x928F
GL_TEXTURE0_ARB = 0x84C0
GL_PROGRAM_PIPELINE_KHR = 0x82E4
GL_MAX_VERTEX_SHADER_VARIANTS_EXT = 0x87C6
GL_FONT_X_MIN_BOUNDS_BIT_NV = 0x00010000
GL_INT64_VEC2_ARB = 0x8FE9
GL_SHADING_LANGUAGE_VERSION = 0x8B8C
GL_BUFFER_MAPPED = 0x88BC
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI = 0x87F6
GL_DUAL_LUMINANCE8_SGIS = 0x8115
GL_MATRIX27_ARB = 0x88DB
GL_MIN_SAMPLE_SHADING_VALUE_OES = 0x8C37
GL_SCALED_RESOLVE_FASTEST_EXT = 0x90BA
GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362
GL_EVAL_FRACTIONAL_TESSELLATION_NV = 0x86C5
GL_TEXTURE = 0x1702
GL_DST_IN_NV = 0x928B
GL_DEBUG_CALLBACK_USER_PARAM = 0x8245
GL_OVERLAY_NV = 0x9296
GL_VARIABLE_B_NV = 0x8524
GL_SLUMINANCE_ALPHA_EXT = 0x8C44
GL_FACTOR_MAX_AMD = 0x901D
GL_DRAW_PIXEL_TOKEN = 0x0705
GL_GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1
GL_XOR_NV = 0x1506
GL_COMPLETION_STATUS_ARB = 0x91B1
GL_TEXTURE_RANGE_POINTER_APPLE = 0x85B8
GL_MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7
GL_INTENSITY16F_ARB = 0x881D
GL_VERTEX_ATTRIB_ARRAY10_NV = 0x865A
GL_MAX_VERTEX_HINT_PGI = 0x1A22D
GL_SOURCE3_ALPHA_NV = 0x858B
GL_DOUBLE_VEC2_EXT = 0x8FFC
GL_MALI_PROGRAM_BINARY_ARM = 0x8F61
GL_FOG_OFFSET_SGIX = 0x8198
GL_ACTIVE_STENCIL_FACE_EXT = 0x8911
GL_SHADER_BINARY_DMP = 0x9250
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES = 0x8B9B
GL_DEBUG_TYPE_PORTABILITY_ARB = 0x824F
GL_SAMPLER_CUBE = 0x8B60
GL_TEXTURE_BINDING_CUBE_MAP = 0x8514
GL_TEXTURE_STACK_DEPTH = 0x0BA5
GL_FOG_COORDINATE = 0x8451
GL_INT_IMAGE_2D_MULTISAMPLE = 0x9060
GL_DEBUG_SEVERITY_HIGH_ARB = 0x9146
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT = 0x8E81
GL_UNPACK_COMPRESSED_SIZE_SGIX = 0x831A
GL_TEXTURE_DEFORMATION_BIT_SGIX = 0x00000001
GL_TESS_GEN_SPACING_EXT = 0x8E77
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV = 0x0004
GL_UNSIGNED_SHORT_5_5_5_1_EXT = 0x8034
GL_OUTPUT_TEXTURE_COORD28_EXT = 0x87B9
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB = 0x9344
GL_4PASS_3_SGIS = 0x80A7
GL_MATRIX_INDEX_ARRAY_STRIDE_OES = 0x8848
GL_UNSIGNED_INT_VEC4_EXT = 0x8DC8
GL_COMPRESSED_RGBA_ARB = 0x84EE
GL_LUMINANCE32I_EXT = 0x8D86
GL_PATH_INITIAL_DASH_CAP_NV = 0x907C
GL_TEXTURE4_ARB = 0x84C4
GL_LUMINANCE12 = 0x8041
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN = 0x85C2
GL_LINES_ADJACENCY_OES = 0x000A
GL_UNIFORM_BUFFER_UNIFIED_NV = 0x936E
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85
GL_DEPTH_BUFFER_BIT1_QCOM = 0x00000200
GL_REG_9_ATI = 0x892A
GL_SIGNED_RGB_NV = 0x86FE
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT = 0x88FE
GL_DRAW_BUFFER10_NV = 0x882F
GL_REG_28_ATI = 0x893D
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 = 0x93D2
GL_DEBUG_LOGGED_MESSAGES_ARB = 0x9145
GL_VERTEX_STREAM2_ATI = 0x876E
GL_COLOR_BUFFER_BIT4_QCOM = 0x00000010
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC
GL_ANY_SAMPLES_PASSED_EXT = 0x8C2F
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8CDA
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL = 0x94F9
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV = 0x86F0
GL_COUNT_DOWN_NV = 0x9089
GL_DOUBLE_MAT4x2_EXT = 0x8F4D
GL_PALETTE4_RGB8_OES = 0x8B90
GL_MAP1_COLOR_4 = 0x0D90
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB = 0x880D
GL_SRC1_COLOR_EXT = 0x88F9
GL_CON_24_ATI = 0x8959
GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910B
GL_RETAINED_APPLE = 0x8A1B
GL_POST_COLOR_MATRIX_RED_BIAS_SGI = 0x80B8
GL_VIRTUAL_PAGE_SIZE_Y_EXT = 0x9196
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA
GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF
GL_FOG_MODE = 0x0B65
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV = 0x903C
GL_COPY = 0x1503
GL_DRAW_BUFFER3_EXT = 0x8828
GL_STENCIL_WRITEMASK = 0x0B98
GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E
GL_COLOR_MATRIX = 0x80B1
GL_TEXTURE21 = 0x84D5
GL_GEOMETRY_SHADER_EXT = 0x8DD9
GL_INTENSITY_FLOAT32_APPLE = 0x8817
GL_SHADER_OBJECT_ARB = 0x8B48
GL_TEXTURE6_ARB = 0x84C6
GL_QUERY_BY_REGION_NO_WAIT_INVERTED = 0x8E1A
GL_DOUBLE_MAT3x2_EXT = 0x8F4B
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8162
GL_ALPHA8UI_EXT = 0x8D7E
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES = 0x93E4
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV = 0x885A
GL_PROGRAM_LENGTH_NV = 0x8627
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A
GL_ARC_TO_NV = 0xFE
GL_COMPRESSED_RGB = 0x84ED
GL_DRAW_BUFFER7_EXT = 0x882C
GL_FRAGMENT_LIGHT4_SGIX = 0x8410
GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904
GL_COMPRESSED_RGBA_ASTC_6x5x5_OES = 0x93C7
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D
GL_MULTIPLY_KHR = 0x9294
GL_FONT_UNITS_PER_EM_BIT_NV = 0x00100000
GL_COMPATIBLE_SUBROUTINES = 0x8E4B
GL_FONT_UNAVAILABLE_NV = 0x936A
GL_TEXTURE26_ARB = 0x84DA
GL_ARRAY_BUFFER_ARB = 0x8892
GL_CONSTANT_COLOR_EXT = 0x8001
GL_COLOR_ALPHA_PAIRING_ATI = 0x8975
GL_SECONDARY_INTERPOLATOR_ATI = 0x896D
GL_FONT_TARGET_UNAVAILABLE_NV = 0x9369
GL_UNPACK_SKIP_VOLUMES_SGIS = 0x8132
GL_LOCAL_CONSTANT_DATATYPE_EXT = 0x87ED
GL_SOURCE2_RGB = 0x8582
GL_OPERAND1_ALPHA_EXT = 0x8599
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT = 0x8C2D
GL_FIXED = 0x140C
GL_FRAGMENT_SHADER = 0x8B30
GL_VIEWPORT_BOUNDS_RANGE_EXT = 0x825D
GL_STENCIL_BACK_VALUE_MASK = 0x8CA4
GL_MAX_CLIP_DISTANCES_APPLE = 0x0D32
GL_SRGB8 = 0x8C41
GL_ELEMENT_ARRAY_ADDRESS_NV = 0x8F29
GL_LUMINANCE_ALPHA8I_EXT = 0x8D93
GL_LINE_BIT = 0x00000004
GL_INDEX_MATERIAL_EXT = 0x81B8
GL_INT64_VEC3_ARB = 0x8FEA
GL_FACTOR_MIN_AMD = 0x901C
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33
GL_VERTEX_BLEND_ARB = 0x86A7
GL_PRIMITIVE_RESTART_NV = 0x8558
GL_RENDERBUFFER_EXT = 0x8D41
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT = 0x8518
GL_HSL_LUMINOSITY_NV = 0x92B0
GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD = 0x00000008
GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9278
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT = 0x886C
GL_COMBINE_RGB_ARB = 0x8571
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN = 0x85C3
GL_PIXEL_TEX_GEN_SGIX = 0x8139
GL_IS_PER_PATCH_EXT = 0x92E7
GL_CONVEX_HULL_NV = 0x908B
GL_SHADER_STORAGE_BLOCK = 0x92E6
GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069
GL_MAX_RATIONAL_EVAL_ORDER_NV = 0x86D7
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS = 0x919A
GL_UNSIGNED_SHORT_8_8_REV_APPLE = 0x85BB
GL_BOOL_VEC2_ARB = 0x8B57
GL_VERTEX_ATTRIB_ARRAY7_NV = 0x8657
GL_SAMPLE_COVERAGE_INVERT_ARB = 0x80AB
GL_LAST_VERTEX_CONVENTION_EXT = 0x8E4E
GL_SOFTLIGHT_NV = 0x929C
GL_DOUBLE_MAT4x3 = 0x8F4E
GL_RASTERIZER_DISCARD_NV = 0x8C89
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8DE1
GL_COLOR_ATTACHMENT13_NV = 0x8CED
GL_COLOR_ATTACHMENT2_EXT = 0x8CE2
GL_VIDEO_BUFFER_PITCH_NV = 0x9028
GL_TESS_GEN_VERTEX_ORDER = 0x8E78
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR = 0x82FC
GL_PIXEL_UNPACK_BUFFER_EXT = 0x88EC
GL_UNKNOWN_CONTEXT_RESET_KHR = 0x8255
GL_FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD = 0x914A
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT = 0x8A32
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES = 0x93E6
GL_REG_2_ATI = 0x8923
GL_MAX_PATCH_VERTICES_EXT = 0x8E7D
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT = 0x8CD3
GL_VIEW_CLASS_128_BITS = 0x82C4
GL_REFLECTION_MAP_EXT = 0x8512
GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES = 0x92D5
GL_ALLOW_DRAW_FRG_HINT_PGI = 0x1A210
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C
GL_MATRIX4_NV = 0x8634
GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT = 0x9308
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB = 0x88EF
GL_INTERNALFORMAT_GREEN_SIZE = 0x8272
GL_MAX_VARYING_COMPONENTS = 0x8B4B
GL_CONDITION_SATISFIED_APPLE = 0x911C
GL_MATRIX22_ARB = 0x88D6
GL_COLOR_ATTACHMENT6 = 0x8CE6
GL_DRAW_BUFFER4 = 0x8829
GL_IMAGE_1D_ARRAY = 0x9052
GL_CON_12_ATI = 0x894D
GL_MATRIX20_ARB = 0x88D4
GL_COMBINE_EXT = 0x8570
GL_MAX_SAMPLE_MASK_WORDS = 0x8E59
GL_MATRIX_INDEX_ARRAY_SIZE_OES = 0x8846
GL_PIXEL_PACK_BUFFER_BINDING_EXT = 0x88ED
GL_DEBUG_TYPE_PERFORMANCE = 0x8250
GL_MATRIX5_NV = 0x8635
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES = 0x93E5
GL_UNIFORM_BUFFER = 0x8A11
GL_DRAW_BUFFER12_NV = 0x8831
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 = 0x93DA
GL_INT_SAMPLER_RENDERBUFFER_NV = 0x8E57
GL_STRICT_DEPTHFUNC_HINT_PGI = 0x1A216
GL_OBJECT_VALIDATE_STATUS_ARB = 0x8B83
GL_DRAW_ELEMENTS_COMMAND_NV = 0x0002
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV = 0x8C4E
GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT = 0x9307
GL_RGB8UI = 0x8D7D
GL_FLOAT_MAT2x4 = 0x8B66
GL_DRAW_BUFFER3_ATI = 0x8828
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB
GL_PATCHES = 0x000E
GL_MULTISAMPLE_SGIS = 0x809D
GL_ANY_SAMPLES_PASSED = 0x8C2F
GL_NORMALIZED_RANGE_EXT = 0x87E0
GL_TABLE_TOO_LARGE = 0x8031
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE = 0x85B0
GL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252
GL_MAX_PALETTE_MATRICES_OES = 0x8842
GL_2PASS_1_EXT = 0x80A3
GL_STENCIL_BUFFER_BIT2_QCOM = 0x00040000
GL_OP_MIN_EXT = 0x878B
GL_FLOAT_VEC2 = 0x8B50
GL_FALSE = 0
GL_ALPHA8_EXT = 0x803C
GL_ONE_MINUS_SRC1_ALPHA = 0x88FB
GL_BLEND_SRC_RGB_EXT = 0x80C9
GL_T2F_C4UB_V3F = 0x2A29
GL_SAMPLE_BUFFERS_EXT = 0x80A8
GL_RESCALE_NORMAL = 0x803A
GL_IMAGE_CLASS_10_10_10_2 = 0x82C3
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV = 0x8E11
GL_HARDLIGHT_NV = 0x929B
GL_SRC_COLOR = 0x0300
GL_RGBA_FLOAT_MODE_ATI = 0x8820
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV = 0x937B
GL_DOUBLE_VEC4 = 0x8FFE
GL_DOT4_ATI = 0x8967
GL_GEOMETRY_DEFORMATION_BIT_SGIX = 0x00000002
GL_CONVOLUTION_2D_EXT = 0x8011
GL_UNIFORM_TYPE = 0x8A37
GL_CON_8_ATI = 0x8949
GL_MAP1_VERTEX_3 = 0x0D97
GL_LINEAR = 0x2601
GL_YCBYCR8_422_NV = 0x9031
GL_RENDERBUFFER_OES = 0x8D41
GL_MIN_PROGRAM_TEXEL_OFFSET_EXT = 0x8904
GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87
GL_MAP1_INDEX = 0x0D91
GL_MATRIX4_ARB = 0x88C4
GL_FRAGMENT_COVERAGE_TO_COLOR_NV = 0x92DD
GL_EMBOSS_LIGHT_NV = 0x855D
GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44
GL_R1UI_C4F_N3F_V3F_SUN = 0x85C8
GL_DECR_WRAP_EXT = 0x8508
GL_SHADER_KHR = 0x82E1
GL_MATRIX5_ARB = 0x88C5
GL_HISTOGRAM_WIDTH = 0x8026
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020
GL_TEXTURE_HEIGHT = 0x1001
GL_PATH_DASH_ARRAY_COUNT_NV = 0x909F
GL_COLOR_TABLE_BLUE_SIZE = 0x80DC
GL_PATH_STENCIL_REF_NV = 0x90B8
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES = 0x8CD3
GL_READ_FRAMEBUFFER_ANGLE = 0x8CA8
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX = 0x8311
GL_INT_IMAGE_2D_RECT = 0x905A
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT = 0x90D8
GL_FRAGMENT_DEPTH = 0x8452
GL_TEXTURE31 = 0x84DF
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT = 0x8E86
GL_INTERLACE_OML = 0x8980
GL_EDGE_FLAG_ARRAY_COUNT_EXT = 0x808D
GL_HSL_SATURATION_NV = 0x92AE
GL_VARIABLE_C_NV = 0x8525
GL_COMPARE_R_TO_TEXTURE_ARB = 0x884E
GL_QUERY_ALL_EVENT_BITS_AMD = 0xFFFFFFFF
GL_MULTISAMPLE_BUFFER_BIT0_QCOM = 0x01000000
GL_TRIANGLES_ADJACENCY_EXT = 0x000C
GL_PROXY_HISTOGRAM_EXT = 0x8025
GL_FLOAT16_VEC3_NV = 0x8FFA
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV = 0x8E54
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT = 0x8C85
GL_UNSIGNED_INT_8_8_8_8 = 0x8035
GL_FRAMEBUFFER_DEFAULT = 0x8218
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV = 0x885D
GL_PRESERVE_ATI = 0x8762
GL_LUMINANCE_ALPHA16UI_EXT = 0x8D7B
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP = 0x8163
GL_DEBUG_SOURCE_OTHER_ARB = 0x824B
GL_MODELVIEW28_ARB = 0x873C
GL_CONST_EYE_NV = 0x86E5
GL_BUFFER_MAP_POINTER_ARB = 0x88BD
GL_LOCATION_INDEX = 0x930F
GL_REG_16_ATI = 0x8931
GL_FACTOR_ALPHA_MODULATE_IMG = 0x8C07
GL_HSL_HUE = 0x92AD
GL_DEPENDENT_HILO_TEXTURE_2D_NV = 0x8858
GL_CONSTANT_BORDER = 0x8151
GL_PROGRAM_LENGTH_ARB = 0x8627
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB
GL_TEXCOORD2_BIT_PGI = 0x20000000
GL_LINE_NV = 0x1B01
GL_QUERY_OBJECT_EXT = 0x9153
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT = 0x8C76
GL_MOV_ATI = 0x8961
GL_COORD_REPLACE_ARB = 0x8862
GL_PROGRAM_TEMPORARIES_ARB = 0x88A4
GL_IMAGE_BINDING_ACCESS_EXT = 0x8F3E
GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5
GL_ALPHA_MAX_CLAMP_INGR = 0x8567
GL_LUMINANCE16_ALPHA16_EXT = 0x8048
GL_C4UB_V2F = 0x2A22
GL_STATIC_VERTEX_ARRAY_IBM = 103061
GL_MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB
GL_RGBA_MODE = 0x0C31
GL_CLIP_DISTANCE2_APPLE = 0x3002
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 = 0x93D9
GL_DRAW_BUFFER9 = 0x882E
GL_LINEAR_CLIPMAP_NEAREST_SGIX = 0x844F
GL_MAP1_TEXTURE_COORD_1 = 0x0D93
GL_POINT_FADE_THRESHOLD_SIZE = 0x8128
GL_DSDT8_MAG8_NV = 0x870A
GL_COMBINE_ALPHA_ARB = 0x8572
GL_422_AVERAGE_EXT = 0x80CE
GL_CONVOLUTION_BORDER_COLOR_HP = 0x8154
GL_GREEN_INTEGER_EXT = 0x8D95
GL_PATH_STENCIL_FUNC_NV = 0x90B7
GL_TEXTURE_RECTANGLE = 0x84F5
GL_BINORMAL_ARRAY_STRIDE_EXT = 0x8441
GL_VERTEX_PROGRAM_TWO_SIDE_NV = 0x8643
GL_CLAMP = 0x2900
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB = 0x82EC
GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E
GL_UNSIGNED_INT_8_24_REV_MESA = 0x8752
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT = 0x8DE0
GL_SAMPLER_2D_MULTISAMPLE = 0x9108
GL_MATRIX26_ARB = 0x88DA
GL_PIXEL_TEXTURE_SGIS = 0x8353
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV = 0x903A
GL_TRIANGLE_STRIP = 0x0005
GL_TANGENT_ARRAY_STRIDE_EXT = 0x843F
GL_DEBUG_SEVERITY_MEDIUM_KHR = 0x9147
GL_MAP_STENCIL = 0x0D11
GL_CLAMP_TO_EDGE = 0x812F
GL_FRAGMENT_PROGRAM_POSITION_MESA = 0x8BB0
GL_COMPRESSED_RGBA_ASTC_5x5x5_OES = 0x93C6
GL_OUTPUT_TEXTURE_COORD14_EXT = 0x87AB
GL_TESS_CONTROL_SHADER_EXT = 0x8E88
GL_UNSIGNED_BYTE_3_3_2_EXT = 0x8032
GL_LINE_TOKEN = 0x0702
GL_COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93B4
GL_POST_CONVOLUTION_BLUE_BIAS_EXT = 0x8022
GL_DEPTH = 0x1801
GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241
GL_FRAGMENT_SUBROUTINE = 0x92EC
GL_LIGHT5 = 0x4005
GL_POST_COLOR_MATRIX_ALPHA_SCALE = 0x80B7
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E
GL_TESS_GEN_MODE_EXT = 0x8E76
GL_CLIP_DISTANCE0 = 0x3000
GL_COMBINE_RGB = 0x8571
GL_ONE_MINUS_DST_ALPHA = 0x0305
GL_ELEMENT_ARRAY_BARRIER_BIT = 0x00000002
GL_BUFFER_MAP_POINTER_OES = 0x88BD
GL_RGBA_INTEGER_MODE_EXT = 0x8D9E
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA
GL_UNSIGNED_SHORT_5_6_5_REV_EXT = 0x8364
GL_STACK_OVERFLOW = 0x0503
GL_HSL_COLOR_NV = 0x92AF
GL_PRIMITIVES_GENERATED_NV = 0x8C87
GL_DRAW_FRAMEBUFFER_BINDING_ANGLE = 0x8CA6
GL_COMPRESSED_ALPHA_ARB = 0x84E9
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL = 0x94FD
GL_INT_IMAGE_BUFFER = 0x905C
GL_RGB8_OES = 0x8051
GL_DEBUG_LOGGED_MESSAGES = 0x9145
GL_REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900F
GL_RGB8_SNORM = 0x8F96
GL_TEXTURE_DEPTH_SIZE = 0x884A
GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES = 0x93E3
GL_SAMPLE_BUFFERS = 0x80A8
GL_TEXTURE9 = 0x84C9
GL_LUMINANCE12_ALPHA4 = 0x8046
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211
GL_BUFFER_OBJECT_APPLE = 0x85B3
GL_DOUBLE_MAT2_EXT = 0x8F46
GL_FORMAT_SUBSAMPLE_24_24_OML = 0x8982
GL_MULTISAMPLE_BUFFER_BIT4_QCOM = 0x10000000
GL_RELATIVE_LARGE_CW_ARC_TO_NV = 0x19
GL_PROGRAM_BINARY_LENGTH = 0x8741
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI = 0x1A203
GL_NO_RESET_NOTIFICATION_ARB = 0x8261
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT = 0x8D6C
GL_DEBUG_SOURCE_APPLICATION_KHR = 0x824A
GL_UNSIGNED_INT_IMAGE_CUBE_EXT = 0x9066
GL_R16F_EXT = 0x822D
GL_DEPTH_EXT = 0x1801
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT = 0x845C
GL_VERTEX_ID_SWIZZLE_AMD = 0x91A5
GL_INDEX_ARRAY_TYPE_EXT = 0x8085
GL_CURRENT_RASTER_POSITION_VALID = 0x0B08
GL_OPERAND2_ALPHA_EXT = 0x859A
GL_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308
GL_CLIP_PLANE5_IMG = 0x3005
GL_IMAGE_ROTATE_ORIGIN_Y_HP = 0x815B
GL_SOURCE1_ALPHA = 0x8589
GL_TEXTURE_BLUE_SIZE = 0x805E
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT = 0x8DA7
GL_1PASS_EXT = 0x80A1
GL_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x8898
GL_VARIANT_ARRAY_STRIDE_EXT = 0x87E6
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276
GL_PROVOKING_VERTEX = 0x8E4F
GL_ALPHA_MIN_CLAMP_INGR = 0x8563
GL_MAX_COMBINED_DIMENSIONS = 0x8282
GL_SLUMINANCE8_ALPHA8_NV = 0x8C45
GL_DOUBLE_VEC2 = 0x8FFC
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8337
GL_SRC_IN_NV = 0x928A
GL_VERTEX_STREAM3_ATI = 0x876F
GL_EVAL_VERTEX_ATTRIB9_NV = 0x86CF
GL_TEXTURE_DEPTH_TYPE_ARB = 0x8C16
GL_COLOR_ATTACHMENT1_NV = 0x8CE1
GL_MAX_DRAW_BUFFERS_ATI = 0x8824
GL_DARKEN_KHR = 0x9297
GL_UNPACK_CONSTANT_DATA_SUNX = 0x81D5
GL_DST_OVER_NV = 0x9289
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES = 0x93E9
GL_PALETTE4_RGBA8_OES = 0x8B91
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB = 0x82F7
GL_MAT_DIFFUSE_BIT_PGI = 0x00400000
GL_QUERY = 0x82E3
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9
GL_DEPTH_BUFFER_BIT6_QCOM = 0x00004000
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB = 0x8E8E
GL_TEXTURE3_ARB = 0x84C3
GL_ONE_MINUS_DST_COLOR = 0x0307
GL_TEXTURE_WRAP_Q_SGIS = 0x8137
GL_RGB16UI = 0x8D77
GL_DRAW_BUFFER6_ARB = 0x882B
GL_VERTEX_ATTRIB_ARRAY8_NV = 0x8658
GL_INT_IMAGE_BUFFER_OES = 0x905C
GL_NUM_PASSES_ATI = 0x8970
GL_TEXTURE_VIEW_MIN_LEVEL_OES = 0x82DB
GL_COLOR_ARRAY = 0x8076
GL_SKIP_COMPONENTS3_NV = -4
GL_GREEN = 0x1904
GL_LOCATION = 0x930E
GL_QUERY_TARGET = 0x82EA
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB = 0x8B4A
GL_DEPTH_STENCIL_TEXTURE_MODE = 0x90EA
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217
GL_DEBUG_TYPE_PORTABILITY_KHR = 0x824F
GL_TEXTURE_CONSTANT_DATA_SUNX = 0x81D6
GL_POST_CONVOLUTION_RED_SCALE_EXT = 0x801C
GL_COLORBURN = 0x929A
GL_DOUBLEBUFFER = 0x0C32
GL_IMAGE_CLASS_2_X_16 = 0x82BD
GL_FLOAT_MAT4x2 = 0x8B69
GL_LUMINANCE8I_EXT = 0x8D92
GL_REPLACEMENT_CODE_ARRAY_SUN = 0x85C0
GL_TEXTURE_BLUE_TYPE = 0x8C12
GL_MAP_INVALIDATE_RANGE_BIT = 0x0004
GL_FRACTIONAL_EVEN = 0x8E7C
GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY = 0x9382
GL_POLYGON_OFFSET_UNITS = 0x2A00
GL_HILO_NV = 0x86F4
GL_CON_10_ATI = 0x894B
GL_TEXTURE_COORD_ARRAY_POINTER_EXT = 0x8092
GL_REFERENCED_BY_VERTEX_SHADER = 0x9306
GL_HARDLIGHT = 0x929B
GL_BLEND_COLOR_COMMAND_NV = 0x000B
GL_TEXTURE_SWIZZLE_RGBA = 0x8E46
GL_SIGNED_HILO_NV = 0x86F9
GL_COLOR_BUFFER_BIT3_QCOM = 0x00000008
GL_OUTPUT_TEXTURE_COORD15_EXT = 0x87AC
GL_RGB16F_EXT = 0x881B
GL_SLIM8U_SGIX = 0x831D
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR = 0x9632
GL_TEXTURE2_ARB = 0x84C2
GL_CONVOLUTION_BORDER_COLOR = 0x8154
GL_MAP2_VERTEX_ATTRIB1_4_NV = 0x8671
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A
GL_STORAGE_SHARED_APPLE = 0x85BF
GL_MATRIX15_ARB = 0x88CF
GL_FUNC_ADD = 0x8006
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE = 0x88FE
GL_RG = 0x8227
GL_FOG_COORD_ARRAY_LENGTH_NV = 0x8F32
GL_SCREEN_NV = 0x9295
GL_TEXTURE_MAG_FILTER = 0x2800
GL_COMPRESSED_SRGB_ALPHA_EXT = 0x8C49
GL_FOG_OFFSET_VALUE_SGIX = 0x8199
GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9
GL_FLOAT_R_NV = 0x8880
GL_VERTEX_ARRAY_ADDRESS_NV = 0x8F21
GL_UNSIGNED_SHORT_5_6_5 = 0x8363
GL_RED_SNORM = 0x8F90
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB = 0x8841
GL_OUTPUT_TEXTURE_COORD5_EXT = 0x87A2
GL_COMPRESSED_RED_RGTC1_EXT = 0x8DBB
GL_PROXY_TEXTURE_4D_SGIS = 0x8135
GL_PATH_MODELVIEW_STACK_DEPTH_NV = 0x0BA3
GL_UNPACK_SKIP_ROWS_EXT = 0x0CF3
GL_PATH_COMPUTED_LENGTH_NV = 0x90A0
GL_MAX_SHADER_COMPILER_THREADS_ARB = 0x91B0
GL_DEPTH_CLAMP = 0x864F
GL_MAP_FLUSH_EXPLICIT_BIT_EXT = 0x0010
GL_BUFFER_STORAGE_FLAGS_EXT = 0x8220
GL_MODELVIEW1_MATRIX_EXT = 0x8506
GL_TEXTURE19 = 0x84D3
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES = 0x8E5B
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES = 0x8519
GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD = 0x87EE
GL_DRAW_INDIRECT_LENGTH_NV = 0x8F42
GL_SAMPLER_2D_ARRAY = 0x8DC1
GL_CONSERVATIVE_RASTERIZATION_NV = 0x9346
GL_RGBA_INTEGER = 0x8D99
GL_SAMPLER = 0x82E6
GL_BOOL_VEC4 = 0x8B59
GL_3DC_XY_AMD = 0x87FA
GL_DEBUG_SOURCE_API = 0x8246
GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE = 0x8C3B
GL_SKIP_COMPONENTS4_NV = -3
GL_TEXTURE_BUFFER_SIZE = 0x919E
GL_YCBCR_422_APPLE = 0x85B9
GL_CLAMP_TO_EDGE_SGIS = 0x812F
GL_QUERY_BUFFER_BARRIER_BIT = 0x00008000
GL_TEXTURE_CUBE_MAP_ARRAY_EXT = 0x9009
GL_COLOR_MATRIX_STACK_DEPTH_SGI = 0x80B2
GL_DEBUG_TYPE_OTHER_KHR = 0x8251
GL_CONVOLUTION_1D_EXT = 0x8010
GL_COMPRESSED_RGBA_ASTC_5x4x4_OES = 0x93C4
GL_SAMPLER_2D_RECT_SHADOW = 0x8B64
GL_DSDT_NV = 0x86F5
GL_READ_FRAMEBUFFER_EXT = 0x8CA8
GL_RGB12 = 0x8053
GL_HSL_LUMINOSITY = 0x92B0
GL_EQUIV = 0x1509
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4
GL_FONT_X_MAX_BOUNDS_BIT_NV = 0x00040000
GL_FOG_FUNC_SGIS = 0x812A
GL_LOCATION_INDEX_EXT = 0x930F
GL_TEXTURE_GEQUAL_R_SGIX = 0x819D
GL_SGX_PROGRAM_BINARY_IMG = 0x9130
GL_TEXTURE_BINDING_3D = 0x806A
GL_TEXTURE_BUFFER_BINDING = 0x8C2A
GL_LUMINANCE4_ALPHA4_OES = 0x8043
GL_SLUMINANCE_EXT = 0x8C46
GL_LINEAR_SHARPEN_COLOR_SGIS = 0x80AF
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF
GL_PRESENT_DURATION_NV = 0x8E2B
GL_DEBUG_SEVERITY_HIGH = 0x9146
GL_FIXED_ONLY_ARB = 0x891D
GL_SYNC_X11_FENCE_EXT = 0x90E1
GL_LUMINANCE_SNORM = 0x9011
GL_INT8_VEC2_NV = 0x8FE1
GL_DEBUG_TYPE_ERROR = 0x824C
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB = 0x8623
GL_MAX_ELEMENTS_INDICES = 0x80E9
GL_TESS_GEN_POINT_MODE = 0x8E79
GL_COLOR = 0x1800
GL_MAX_TESS_GEN_LEVEL_EXT = 0x8E7E
GL_TESS_CONTROL_OUTPUT_VERTICES_OES = 0x8E75
GL_DRAW_BUFFER13 = 0x8832
GL_NAME_STACK_DEPTH = 0x0D70
GL_READ_ONLY = 0x88B8
GL_MAX_DEBUG_MESSAGE_LENGTH_AMD = 0x9143
GL_MAP2_VERTEX_ATTRIB14_4_NV = 0x867E
GL_DECR_WRAP = 0x8508
GL_QUERY_BY_REGION_WAIT_NV = 0x8E15
GL_PROJECTION_STACK_DEPTH = 0x0BA4
GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR = 0x8242
GL_COMPRESSED_SIGNED_R11_EAC_OES = 0x9271
GL_LO_SCALE_NV = 0x870F
GL_SCISSOR_COMMAND_NV = 0x0011
GL_T2F_IUI_N3F_V3F_EXT = 0x81B4
GL_HILO16_NV = 0x86F8
GL_OPERAND2_RGB_EXT = 0x8592
GL_ORDER = 0x0A01
GL_COMPUTE_SHADER_INVOCATIONS_ARB = 0x82F5
GL_COVERAGE_MODULATION_NV = 0x9332
GL_UNIFORM_NAME_LENGTH = 0x8A39
GL_COLOR_INDEX8_EXT = 0x80E5
GL_QUERY_NO_WAIT_NV = 0x8E14
GL_MODULATE_ADD_ATI = 0x8744
GL_SIGNED_ALPHA8_NV = 0x8706
GL_LUMINANCE_INTEGER_EXT = 0x8D9C
GL_VIDEO_COLOR_CONVERSION_MIN_NV = 0x902B
GL_TEXTURE11 = 0x84CB
GL_COLOR_MATERIAL = 0x0B57
GL_MATRIX13_ARB = 0x88CD
GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE
GL_TEXTURE_GREEN_SIZE_EXT = 0x805D
GL_GREEN_INTEGER = 0x8D95
GL_DEPTH_COMPONENT16_ARB = 0x81A5
GL_TEXTURE_BLUE_SIZE_EXT = 0x805E
GL_TANGENT_ARRAY_TYPE_EXT = 0x843E
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI = 0x87F5
GL_TEXTURE_3D_BINDING_OES = 0x806A
GL_POST_CONVOLUTION_RED_BIAS = 0x8020
GL_COMPRESSED_SRGB8_ETC2 = 0x9275
GL_HIGH_INT = 0x8DF5
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV = 0x932F
GL_NAMED_STRING_LENGTH_ARB = 0x8DE9
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x8519
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT = 0x87C8
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT = 0x8CD4
GL_AUX1 = 0x040A
GL_TEXTURE22 = 0x84D6
GL_FRAGMENT_NORMAL_EXT = 0x834A
GL_COLOR_ATTACHMENT18 = 0x8CF2
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV = 0x20
GL_HORIZONTAL_LINE_TO_NV = 0x06
GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES = 0x8518
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT = 0x8E8A
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT = 0x8E4C
GL_PROXY_TEXTURE_CUBE_MAP = 0x851B
GL_N3F_V3F = 0x2A25
GL_CONVOLUTION_HINT_SGIX = 0x8316
GL_FRAGMENT_PROGRAM_CALLBACK_MESA = 0x8BB1
GL_UNSIGNED_INT_2_10_10_10_REV_EXT = 0x8368
GL_PROGRAM_PARAMETERS_ARB = 0x88A8
GL_GENERIC_ATTRIB_NV = 0x8C7D
GL_DIFFERENCE_KHR = 0x929E
GL_SLIM10U_SGIX = 0x831E
GL_PROGRAM_FORMAT_ARB = 0x8876
GL_UNIFORM_BUFFER_BINDING_EXT = 0x8DEF
GL_POST_CONVOLUTION_GREEN_BIAS = 0x8021
GL_VERTEX_SUBROUTINE_UNIFORM = 0x92EE
GL_TEXTURE_SWIZZLE_A = 0x8E45
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT = 0x8C80
GL_MAX_PROGRAM_CALL_DEPTH_NV = 0x88F5
GL_ARRAY_BUFFER_BINDING_ARB = 0x8894
GL_R11F_G11F_B10F_APPLE = 0x8C3A
GL_FOG_COORD_ARRAY_STRIDE = 0x8455
GL_VIRTUAL_PAGE_SIZE_Y_AMD = 0x9196
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7
GL_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9
GL_INT_SAMPLER_2D_RECT_EXT = 0x8DCD
GL_TRANSFORM_FEEDBACK = 0x8E22
GL_DOT3_RGBA_IMG = 0x86AF
GL_IMAGE_2D_MULTISAMPLE = 0x9055
GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6
GL_OP_SET_GE_EXT = 0x878C
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV = 0x8533
GL_TEXCOORD1_BIT_PGI = 0x10000000
GL_CURRENT_QUERY = 0x8865
GL_ONE_MINUS_CONSTANT_COLOR = 0x8002
GL_CLIENT_PIXEL_STORE_BIT = 0x00000001
GL_TEXTURE_GEN_R = 0x0C62
GL_NATIVE_GRAPHICS_END_HINT_PGI = 0x1A204
GL_SRGB_DECODE_ARB = 0x8299
GL_MODELVIEW_PROJECTION_NV = 0x8629
GL_TEXTURE_SHADER_NV = 0x86DE
GL_OUTPUT_TEXTURE_COORD2_EXT = 0x879F
GL_COLOR_ARRAY_EXT = 0x8076
GL_COMPUTE_SHADER = 0x91B9
GL_FULL_STIPPLE_HINT_PGI = 0x1A219
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6
GL_MODELVIEW17_ARB = 0x8731
GL_DOUBLE_MAT3x4_EXT = 0x8F4C
GL_TEXTURE_COLOR_TABLE_SGI = 0x80BC
GL_DEPTH_STENCIL_OES = 0x84F9
GL_MODELVIEW15_ARB = 0x872F
GL_OPERAND1_RGB = 0x8591
GL_TEXTURE28 = 0x84DC
GL_CON_27_ATI = 0x895C
GL_INDEX_ARRAY_POINTER = 0x8091
GL_OBJECT_ATTACHED_OBJECTS_ARB = 0x8B85
GL_COMBINER6_NV = 0x8556
GL_TEXTURE13 = 0x84CD
GL_COLOR4_BIT_PGI = 0x00020000
GL_RGB16F_ARB = 0x881B
GL_ALPHA_INTEGER_EXT = 0x8D97
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB = 0x8248
GL_8X_BIT_ATI = 0x00000004
GL_POSITION = 0x1203
GL_COLOR_LOGIC_OP = 0x0BF2
GL_TEXTURE25 = 0x84D9
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV = 0x0006
GL_MIRROR_CLAMP_TO_EDGE_ATI = 0x8743
GL_SLUMINANCE_NV = 0x8C46
GL_MAX_VERTEX_STREAMS_ATI = 0x876B
GL_MVP_MATRIX_EXT = 0x87E3
GL_MAP1_GRID_DOMAIN = 0x0DD0
GL_DEBUG_SOURCE_APPLICATION = 0x824A
GL_DRAW_BUFFER8_ARB = 0x882D
GL_COMPRESSED_RGBA_ASTC_8x6 = 0x93B6
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93D2
GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT = 0x8F63
GL_STEREO = 0x0C33
GL_BLEND_OVERLAP_NV = 0x9281
GL_COMPRESSED_R11_EAC = 0x9270
GL_4X_BIT_ATI = 0x00000002
GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6
GL_DEPTH32F_STENCIL8 = 0x8CAD
GL_SWIZZLE_STQ_ATI = 0x8977
GL_RGBA8_EXT = 0x8058
GL_ATOMIC_COUNTER_BUFFER_START = 0x92C2
GL_QUERY_COUNTER_BITS = 0x8864
GL_ALPHA_FLOAT16_ATI = 0x881C
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX = 0x840B
GL_STREAM_RASTERIZATION_AMD = 0x91A0
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT = 0x8CD2
GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV = 0x825F
GL_SOURCE0_RGB_EXT = 0x8580
GL_EXPAND_NORMAL_NV = 0x8538
GL_COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93BD
GL_COPY_READ_BUFFER = 0x8F36
GL_TESS_CONTROL_SHADER_PATCHES_ARB = 0x82F1
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL = 0x94F1
GL_SPRITE_AXIAL_SGIX = 0x814C
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A2
GL_QUERY_BY_REGION_WAIT = 0x8E15
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES = 0x851A
GL_COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93BC
GL_R16UI = 0x8234
GL_LUMINANCE12_EXT = 0x8041
GL_IMAGE_BINDING_FORMAT_EXT = 0x906E
GL_FLOAT16_VEC2_NV = 0x8FF9
GL_AMBIENT = 0x1200
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD = 0x914C
GL_DISPATCH_INDIRECT_BUFFER = 0x90EE
GL_RGB32I_EXT = 0x8D83
GL_READ_BUFFER = 0x0C02
GL_IMAGE_BUFFER = 0x9051
GL_RENDERBUFFER_SAMPLES_APPLE = 0x8CAB
GL_VOLATILE_APPLE = 0x8A1A
GL_SAMPLE_BUFFERS_3DFX = 0x86B3
GL_COMPRESSED_SLUMINANCE = 0x8C4A
GL_COLOR_ATTACHMENT4 = 0x8CE4
GL_SAMPLER_CUBE_SHADOW_NV = 0x8DC5
GL_GEOMETRY_OUTPUT_TYPE_ARB = 0x8DDC
GL_GEOMETRY_TEXTURE = 0x829E
GL_MAP1_BINORMAL_EXT = 0x8446
GL_QUAD_TEXTURE_SELECT_SGIS = 0x8125
GL_TEXTURE_CUBE_MAP_OES = 0x8513
GL_VIRTUAL_PAGE_SIZE_X_AMD = 0x9195
GL_PROXY_TEXTURE_2D = 0x8064
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX = 0x8174
GL_STATIC_READ_ARB = 0x88E5
GL_VERTEX_PROGRAM_BINDING_NV = 0x864A
GL_MAX_TESS_PATCH_COMPONENTS = 0x8E84
GL_RENDERBUFFER_BLUE_SIZE_OES = 0x8D52
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL = 0x94F5
GL_DEPTH_CLEAR_VALUE = 0x0B73
GL_R16_EXT = 0x822A
GL_MAX = 0x8008
GL_AUTO_GENERATE_MIPMAP = 0x8295
GL_INDEX_ARRAY_LENGTH_NV = 0x8F2E
GL_MAX_RASTER_SAMPLES_EXT = 0x9329
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT = 0x9124
GL_VERTEX23_BIT_PGI = 0x00000004
GL_NORMAL_ARRAY_LIST_STRIDE_IBM = 103081
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB = 0x88B2
GL_TEXTURE_WRAP_R = 0x8072
GL_SKIP_COMPONENTS2_NV = -5
GL_VERTEX_ARRAY_POINTER = 0x808E
GL_LUMINANCE32UI_EXT = 0x8D74
GL_COLOR_ARRAY_ADDRESS_NV = 0x8F23
GL_VERTEX_TEXTURE = 0x829B
GL_ALPHA4 = 0x803B
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1
GL_PARALLEL_ARRAYS_INTEL = 0x83F4
GL_NORMAL_MAP = 0x8511
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI = 0x8802
GL_STRICT_LIGHTING_HINT_PGI = 0x1A217
GL_CURRENT_INDEX = 0x0B01
GL_SR8_EXT = 0x8FBD
GL_TEXTURE_MEMORY_LAYOUT_INTEL = 0x83FF
GL_INVALID_INDEX = 0xFFFFFFFF
GL_ZERO = 0
GL_UNSIGNED_INT_8_8_8_8_REV_EXT = 0x8367
GL_UNPACK_SKIP_PIXELS_EXT = 0x0CF4
GL_MODULATE_SIGNED_ADD_ATI = 0x8745
GL_DRAW_BUFFER_EXT = 0x0C01
GL_PROGRAM_ALU_INSTRUCTIONS_ARB = 0x8805
GL_BLEND_DST_ALPHA_EXT = 0x80CA
GL_SYNC_OBJECT_APPLE = 0x8A53
GL_UNIFORM_BUFFER_START = 0x8A29
GL_TABLE_TOO_LARGE_EXT = 0x8031
GL_ADD = 0x0104
GL_VIBRANCE_BIAS_NV = 0x8719
GL_PATCH_DEFAULT_INNER_LEVEL_EXT = 0x8E73
GL_OUTPUT_TEXTURE_COORD16_EXT = 0x87AD
GL_MAP1_VERTEX_ATTRIB6_4_NV = 0x8666
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV = 0x903B
GL_LAST_VERTEX_CONVENTION = 0x8E4E
GL_DEBUG_TYPE_PERFORMANCE_KHR = 0x8250
GL_TESS_GEN_POINT_MODE_OES = 0x8E79
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A
GL_COLOR_ARRAY_SIZE = 0x8081
GL_SCALEBIAS_HINT_SGIX = 0x8322
GL_QUAD_INTENSITY4_SGIS = 0x8122
GL_STENCIL_INDEX1_EXT = 0x8D46
GL_CLIP_DISTANCE7 = 0x3007
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39
GL_REG_24_ATI = 0x8939
GL_OP_CLAMP_EXT = 0x878E
GL_PIXEL_TILE_WIDTH_SGIX = 0x8140
GL_STENCIL_INDEX16_EXT = 0x8D49
GL_RED_BIT_ATI = 0x00000001
GL_CLEAR_BUFFER = 0x82B4
GL_DEBUG_SEVERITY_LOW_ARB = 0x9148
GL_SUCCESS_NV = 0x902F
GL_ALIASED_POINT_SIZE_RANGE = 0x846D
GL_VERTEX_ARRAY_RANGE_LENGTH_NV = 0x851E
GL_ONE_MINUS_SRC1_COLOR = 0x88FA
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV = 0x887C
GL_YCBAYCR8A_4224_NV = 0x9032
GL_MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA
GL_MAX_SERVER_WAIT_TIMEOUT_APPLE = 0x9111
GL_MAX_VERTEX_UNITS_ARB = 0x86A4
GL_PATH_MODELVIEW_NV = 0x1700
GL_STENCIL_ATTACHMENT_OES = 0x8D20
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45
GL_QUADRATIC_ATTENUATION = 0x1209
GL_OFFSET = 0x92FC
GL_VERTEX_STREAM1_ATI = 0x876D
GL_PATH_INITIAL_END_CAP_NV = 0x9077
GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT = 0x8D56
GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES = 0x8E5A
GL_CLIP_DISTANCE6_APPLE = 0x3006
GL_DATA_BUFFER_AMD = 0x9151
GL_COMPUTE_PROGRAM_NV = 0x90FB
GL_VERTEX_ATTRIB_BINDING = 0x82D4
GL_DUAL_INTENSITY4_SGIS = 0x8118
GL_RED_BIAS = 0x0D15
GL_OP_RECIP_SQRT_EXT = 0x8795
GL_NORMALIZE = 0x0BA1
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV = 0x8C4D
GL_TESS_EVALUATION_SHADER = 0x8E87
GL_SAMPLE_MASK_VALUE_EXT = 0x80AA
GL_PIXEL_COUNT_NV = 0x8866
GL_SAMPLE_MASK_VALUE_NV = 0x8E52
GL_AND_REVERSE = 0x1502
GL_SRGB8_NV = 0x8C41
GL_RESET_NOTIFICATION_STRATEGY_KHR = 0x8256
GL_2PASS_1_SGIS = 0x80A3
GL_TESS_EVALUATION_TEXTURE = 0x829D
GL_SOURCE1_RGB = 0x8581
GL_FRONT_FACE_COMMAND_NV = 0x0012
GL_FRAGMENT_TEXTURE = 0x829F
GL_DEBUG_SEVERITY_HIGH_KHR = 0x9146
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87C5
GL_OUTPUT_TEXTURE_COORD9_EXT = 0x87A6
GL_BOLD_BIT_NV = 0x01
GL_VIEW_CLASS_32_BITS = 0x82C8
GL_DUP_LAST_CUBIC_CURVE_TO_NV = 0xF4
GL_OVERLAY_KHR = 0x9296
GL_DEPTH_BUFFER_BIT0_QCOM = 0x00000100
GL_COLOR_ATTACHMENT6_EXT = 0x8CE6
GL_NATIVE_GRAPHICS_HANDLE_PGI = 0x1A202
GL_VERTEX_STREAM4_ATI = 0x8770
GL_MAX_RENDERBUFFER_SIZE_EXT = 0x84E8
GL_COMPRESSED_SIGNED_RG11_EAC_OES = 0x9273
GL_PERFQUERY_COUNTER_RAW_INTEL = 0x94F4
GL_OFFSET_TEXTURE_MATRIX_NV = 0x86E1
GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83
GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB
GL_VERTEX_ATTRIB_ARRAY2_NV = 0x8652
GL_SAMPLES_PASSED = 0x8914
GL_COLOR_ATTACHMENT9_NV = 0x8CE9
GL_TRANSFORM_FEEDBACK_BUFFER_NV = 0x8C8E
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8
GL_DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF
GL_MATRIX31_ARB = 0x88DF
GL_TEXTURE26 = 0x84DA
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D
GL_CURRENT_QUERY_EXT = 0x8865
GL_RENDERBUFFER_SAMPLES_IMG = 0x9133
GL_FONT_Y_MAX_BOUNDS_BIT_NV = 0x00080000
GL_POLYGON_MODE_NV = 0x0B40
GL_RECT_NV = 0xF6
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A
GL_UTF8_NV = 0x909A
GL_VIEWPORT_SUBPIXEL_BITS = 0x825C
GL_FLOAT_VEC4 = 0x8B52
GL_WEIGHT_ARRAY_ARB = 0x86AD
GL_TEXTURE_BINDING_RECTANGLE_NV = 0x84F6
GL_RELATIVE_ARC_TO_NV = 0xFF
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI = 0x80B5
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES = 0x90D7
GL_BLEND_EQUATION_RGB_EXT = 0x8009
GL_TEXTURE_IMAGE_VALID_QCOM = 0x8BD8
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A
GL_QUERY_BUFFER_AMD = 0x9192
GL_RGBA_DXT5_S3TC = 0x83A4
GL_BLEND_DST_ALPHA_OES = 0x80CA
GL_MAP2_GRID_SEGMENTS = 0x0DD3
GL_INT_SAMPLER_2D = 0x8DCA
GL_SET_AMD = 0x874A
GL_COLOR_INDEX1_EXT = 0x80E2
GL_INDEX_MODE = 0x0C30
GL_DRAW_FRAMEBUFFER_ANGLE = 0x8CA9
GL_INT16_VEC4_NV = 0x8FE7
GL_BLEND_EQUATION_ALPHA_EXT = 0x883D
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB = 0x8F9F
GL_PARAMETER_BUFFER_ARB = 0x80EE
GL_FRAGMENT_LIGHTING_SGIX = 0x8400
GL_MODELVIEW22_ARB = 0x8736
GL_WARPS_PER_SM_NV = 0x933A
GL_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AA
GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44
GL_SHADER_BINARY_VIV = 0x8FC4
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB = 0x82F3
GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES = 0x8515
GL_RENDERBUFFER_HEIGHT_EXT = 0x8D43
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 = 0x93D3
GL_CON_25_ATI = 0x895A
GL_AMBIENT_AND_DIFFUSE = 0x1602
GL_FENCE_CONDITION_NV = 0x84F4
GL_LUMINANCE_ALPHA_FLOAT32_APPLE = 0x8819
GL_BLEND_ADVANCED_COHERENT_KHR = 0x9285
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT = 0x8E82
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT = 0x8517
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV = 0x862E
GL_DOT_PRODUCT_TEXTURE_2D_NV = 0x86EE
GL_NONE = 0
GL_RGBA16UI = 0x8D76
GL_SAMPLER_2D_RECT = 0x8B63
GL_CLAMP_FRAGMENT_COLOR_ARB = 0x891B
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT = 0x8DD7
GL_BGRA = 0x80E1
GL_PACK_IMAGE_HEIGHT = 0x806C
GL_TRACK_MATRIX_NV = 0x8648
GL_NICEST = 0x1102
GL_COMBINER5_NV = 0x8555
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212
GL_REG_7_ATI = 0x8928
GL_POLYGON_SMOOTH = 0x0B41
GL_STREAM_READ = 0x88E1
GL_PIXEL_COUNTER_BITS_NV = 0x8864
GL_R16 = 0x822A
GL_STREAM_READ_ARB = 0x88E1
GL_FLOAT_VEC4_ARB = 0x8B52
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV = 0x01000000
GL_SHADER_CONSISTENT_NV = 0x86DD
GL_FLOAT_VEC3 = 0x8B51
GL_MAX_VIEWPORTS = 0x825B
GL_TEXTURE_SRGB_DECODE_EXT = 0x8A48
GL_TEXTURE_SWIZZLE_B_EXT = 0x8E44
GL_RENDERBUFFER_BLUE_SIZE = 0x8D52
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83
GL_TEXTURE_BUFFER = 0x8C2A
GL_CUBIC_CURVE_TO_NV = 0x0C
GL_DRAW_FRAMEBUFFER_APPLE = 0x8CA9
GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3
GL_MODELVIEW26_ARB = 0x873A
GL_TOP_LEVEL_ARRAY_STRIDE = 0x930D
GL_READ_PIXEL_DATA_RANGE_NV = 0x8879
GL_PROGRAM_BINARY_FORMATS_OES = 0x87FF
GL_VARIABLE_G_NV = 0x8529
GL_TRANSPOSE_AFFINE_2D_NV = 0x9096
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV = 0x9349
GL_GENERATE_MIPMAP_HINT_SGIS = 0x8192
GL_CONSTANT_COLOR1_NV = 0x852B
GL_SPOT_CUTOFF = 0x1206
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT = 0x8A52
GL_FUNC_REVERSE_SUBTRACT = 0x800B
GL_DYNAMIC_COPY = 0x88EA
GL_COPY_READ_BUFFER_BINDING = 0x8F36
GL_STENCIL_BACK_OP_VALUE_AMD = 0x874D
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA2
GL_PATH_JOIN_STYLE_NV = 0x9079
GL_COLOR_ATTACHMENT12_NV = 0x8CEC
GL_SAMPLE_PATTERN_SGIS = 0x80AC
GL_TRACE_ALL_BITS_MESA = 0xFFFF
GL_NUM_LOOPBACK_COMPONENTS_ATI = 0x8974
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB = 0x00000004
GL_CLIP_DISTANCE0_APPLE = 0x3000
GL_COMPRESSED_RGBA_ASTC_10x10 = 0x93BB
GL_SPOT_EXPONENT = 0x1205
GL_CON_9_ATI = 0x894A
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 = 0x93D7
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT = 0x87CB
GL_MAX_LABEL_LENGTH = 0x82E8
GL_RGBA16_EXT = 0x805B
GL_RGB8I = 0x8D8F
GL_PROXY_HISTOGRAM = 0x8025
GL_UNSIGNED_INT8_NV = 0x8FEC
GL_COMPRESSED_ALPHA = 0x84E9
GL_MODELVIEW = 0x1700
GL_STENCIL_COMPONENTS = 0x8285
GL_OP_MAX_EXT = 0x878A
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE = 0x851F
GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13
GL_OP_ROUND_EXT = 0x8790
GL_VERTEX_ATTRIB_MAP1_APPLE = 0x8A00
GL_COLOR_ATTACHMENT31 = 0x8CFF
GL_3D_COLOR = 0x0602
GL_BUMP_ENVMAP_ATI = 0x877B
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV = 0x8F1E
GL_LUMINANCE8_ALPHA8_SNORM = 0x9016
GL_EVAL_VERTEX_ATTRIB5_NV = 0x86CB
GL_IMAGE_2D = 0x904D
GL_TEXTURE3 = 0x84C3
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8DA9
GL_MAX_4D_TEXTURE_SIZE_SGIS = 0x8138
GL_ACCUM_BLUE_BITS = 0x0D5A
GL_PRIMITIVES_GENERATED = 0x8C87
GL_MAX_COLOR_ATTACHMENTS_NV = 0x8CDF
GL_RED_MAX_CLAMP_INGR = 0x8564
GL_OFFSET_TEXTURE_2D_BIAS_NV = 0x86E3
GL_YCRCBA_SGIX = 0x8319
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214
GL_SCALE_BY_FOUR_NV = 0x853F
GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365
GL_INT16_VEC3_NV = 0x8FE6
GL_GEOMETRY_SHADER_BIT = 0x00000004
GL_SLUMINANCE8_NV = 0x8C47
GL_ARRAY_OBJECT_OFFSET_ATI = 0x8767
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F
GL_COMBINER_INPUT_NV = 0x8542
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5B
GL_WRITE_DISCARD_NV = 0x88BE
GL_BLEND_SRC_ALPHA_EXT = 0x80CB
GL_PACK_IMAGE_DEPTH_SGIS = 0x8131
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT = 0x905F
GL_BLEND_SRC_ALPHA = 0x80CB
GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C
GL_COLOR_TABLE_SGI = 0x80D0
GL_STENCIL_INDEX8_OES = 0x8D48
GL_CURRENT_RASTER_COLOR = 0x0B04
GL_LUMINANCE16_EXT = 0x8042
GL_TEXTURE_INTERNAL_FORMAT = 0x1003
GL_SHADER_STORAGE_BUFFER_START = 0x90D4
GL_HALF_FLOAT_OES = 0x8D61
GL_PLUS_NV = 0x9291
GL_TEXTURE_BINDING_2D_ARRAY_EXT = 0x8C1D
GL_SUBTRACT = 0x84E7
GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR = 0x8247
GL_NAME_LENGTH = 0x92F9
GL_RGB9_E5_APPLE = 0x8C3D
GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT = 0x8366
GL_TEXTURE_1D_STACK_BINDING_MESAX = 0x875D
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT = 0x81A9
GL_UNSIGNED_INT_24_8 = 0x84FA
GL_TEXTURE_COORD_ARRAY_COUNT_EXT = 0x808B
GL_QUERY_NO_WAIT_INVERTED = 0x8E18
GL_UNPACK_SKIP_IMAGES_EXT = 0x806D
GL_ALPHA_REF_COMMAND_NV = 0x000F
GL_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056
GL_HARDMIX_NV = 0x92A9
GL_TEXTURE_PRIORITY = 0x8066
GL_CLIP_DISTANCE3_APPLE = 0x3003
GL_SHADER_INCLUDE_ARB = 0x8DAE
GL_CLIP_PLANE4_IMG = 0x3004
GL_PACK_SKIP_PIXELS = 0x0D04
GL_MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265
GL_MAP2_TANGENT_EXT = 0x8445
GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT = 0x8C7F
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3
GL_DRAW_BUFFER14_ATI = 0x8833
GL_COMPARE_R_TO_TEXTURE = 0x884E
GL_INTENSITY8I_EXT = 0x8D91
GL_OP_MUL_EXT = 0x8786
GL_INT_SAMPLER_3D_EXT = 0x8DCB
GL_TEXTURE19_ARB = 0x84D3
GL_TEXTURE_SWIZZLE_G = 0x8E43
GL_MULTISAMPLE_BUFFER_BIT5_QCOM = 0x20000000
GL_RESAMPLE_ZERO_FILL_OML = 0x8987
GL_PRIMARY_COLOR_ARB = 0x8577
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB = 0x8645
GL_PATH_FILL_MASK_NV = 0x9081
GL_UNPACK_ROW_LENGTH_EXT = 0x0CF2
GL_PRIMITIVE_BOUNDING_BOX_OES = 0x92BE
GL_UNSIGNED_INT_IMAGE_1D_EXT = 0x9062
GL_YCRCB_444_SGIX = 0x81BC
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV = 0x887A
GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A
GL_IMAGE_BINDING_NAME_EXT = 0x8F3A
GL_DISTANCE_ATTENUATION_EXT = 0x8129
GL_FOG_COORDINATE_EXT = 0x8451
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A
GL_DRAW_BUFFER10_ARB = 0x882F
GL_TEXTURE_RED_SIZE = 0x805C
GL_DST_COLOR = 0x0306
GL_TEXTURE21_ARB = 0x84D5
GL_POST_CONVOLUTION_RED_SCALE = 0x801C
GL_VARIABLE_A_NV = 0x8523
GL_STORAGE_CLIENT_APPLE = 0x85B4
GL_COMPRESSED_RGBA_ASTC_6x6x6_OES = 0x93C9
GL_VIRTUAL_PAGE_SIZE_X_EXT = 0x9195
GL_TEXCOORD4_BIT_PGI = 0x80000000
GL_CON_16_ATI = 0x8951
GL_FLOAT_MAT4 = 0x8B5C
GL_STENCIL_RENDERABLE = 0x8288
GL_DUAL_TEXTURE_SELECT_SGIS = 0x8124
GL_FRAMEBUFFER_BINDING_EXT = 0x8CA6
GL_TEXTURE_IMAGE_TYPE = 0x8290
GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES = 0x8918
GL_DOUBLE_MAT4x2 = 0x8F4D
GL_AVERAGE_HP = 0x8160
GL_UNSIGNED_INT64_VEC2_NV = 0x8FF5
GL_NUM_VIRTUAL_PAGE_SIZES_ARB = 0x91A8
GL_REG_1_ATI = 0x8922
GL_DSDT_MAG_INTENSITY_NV = 0x86DC
GL_COMBINER2_NV = 0x8552
GL_FENCE_APPLE = 0x8A0B
GL_TEXTURE_LO_SIZE_NV = 0x871C
GL_DYNAMIC_DRAW = 0x88E8
GL_EYE_DISTANCE_TO_POINT_SGIS = 0x81F0
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV = 0x8868
GL_TESS_EVALUATION_SHADER_BIT_OES = 0x00000010
GL_INT_SAMPLER_BUFFER_OES = 0x8DD0
GL_VIEWPORT_BIT = 0x00000800
GL_UNSIGNALED_APPLE = 0x9118
GL_NORMAL_ARRAY_POINTER_EXT = 0x808F
GL_INSTRUMENT_BUFFER_POINTER_SGIX = 0x8180
GL_POINT_NV = 0x1B00
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266
GL_422_REV_AVERAGE_EXT = 0x80CF
GL_RGB12_EXT = 0x8053
GL_INVARIANT_DATATYPE_EXT = 0x87EB
GL_OVERLAY = 0x9296
GL_VERTEX_ATTRIB_ARRAY14_NV = 0x865E
GL_VIEW_CLASS_96_BITS = 0x82C5
GL_AND_INVERTED = 0x1504
GL_DEBUG_TYPE_PORTABILITY = 0x824F
GL_COUNTER_TYPE_AMD = 0x8BC0
GL_CONVOLUTION_WIDTH = 0x8018
GL_PACK_LSB_FIRST = 0x0D01
GL_EXCLUSION = 0x92A0
GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV = 0x90D0
GL_MAX_VERTEX_SHADER_LOCALS_EXT = 0x87C9
GL_REG_3_ATI = 0x8924
GL_R32UI = 0x8236
GL_MAP1_VERTEX_ATTRIB0_4_NV = 0x8660
GL_TEXTURE_FILTER_CONTROL = 0x8500
GL_TEXTURE_CLIPMAP_FRAME_SGIX = 0x8172
GL_SAMPLER_2D_RECT_ARB = 0x8B63
GL_BACK_NORMALS_HINT_PGI = 0x1A223
GL_DRAW_BUFFER2_ARB = 0x8827
GL_RGB4_EXT = 0x804F
GL_FONT_GLYPHS_AVAILABLE_NV = 0x9368
GL_DRAW_BUFFER12_EXT = 0x8831
GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898E
GL_CONTEXT_LOST = 0x0507
GL_FRONT_FACE = 0x0B46
GL_STENCIL_BUFFER_BIT4_QCOM = 0x00100000
GL_SYNC_FLAGS = 0x9115
GL_IMAGE_CLASS_4_X_32 = 0x82B9
GL_VIEWPORT_COMMAND_NV = 0x0010
GL_LINE_TO_NV = 0x04
GL_CLIP_VOLUME_CLIPPING_HINT_EXT = 0x80F0
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB = 0x889E
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT = 0x91A9
GL_MAX_TESS_PATCH_COMPONENTS_OES = 0x8E84
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV = 0x8D56
GL_VERTEX_WEIGHT_ARRAY_EXT = 0x850C
GL_TEXTURE10 = 0x84CA
GL_GEQUAL = 0x0206
GL_PROXY_TEXTURE_RECTANGLE = 0x84F7
GL_CLIP_FAR_HINT_PGI = 0x1A221
GL_TEXTURE_BUFFER_SIZE_EXT = 0x919E
GL_SWIZZLE_STR_DR_ATI = 0x8978
GL_TEXTURE_LIGHTING_MODE_HP = 0x8167
GL_R11F_G11F_B10F_EXT = 0x8C3A
GL_VARIABLE_E_NV = 0x8527
GL_DEPTH_STENCIL = 0x84F9
GL_INT_IMAGE_BUFFER_EXT = 0x905C
GL_NUM_VIRTUAL_PAGE_SIZES_EXT = 0x91A8
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT = 0x801F
GL_RGB32F_EXT = 0x8815
GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8C15
GL_INTENSITY16_SNORM = 0x901B
GL_COLOR_SUM = 0x8458
GL_LIST_BIT = 0x00020000
GL_NUM_SAMPLE_COUNTS = 0x9380
GL_CURRENT_COLOR = 0x0B00
GL_MAX_EXT = 0x8008
GL_PIXEL_MAP_I_TO_A = 0x0C75
GL_POST_COLOR_MATRIX_BLUE_SCALE = 0x80B6
GL_DRAW_BUFFER13_NV = 0x8832
GL_POINT = 0x1B00
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT = 0x90D7
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV = 0x8DA1
GL_REPEAT = 0x2901
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB = 0x8B88
GL_PACK_SWAP_BYTES = 0x0D00
GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1
GL_MAP_PERSISTENT_BIT = 0x0040
GL_SHADER_STORAGE_BUFFER = 0x90D2
GL_DRAW_BUFFER11_EXT = 0x8830
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB = 0x889B
GL_GEOMETRY_PROGRAM_NV = 0x8C26
GL_INTERLEAVED_ATTRIBS_NV = 0x8C8C
GL_LIGHTEN_KHR = 0x9298
GL_RGB5_A1 = 0x8057
GL_BGR_INTEGER_EXT = 0x8D9A
GL_OFFSET_TEXTURE_SCALE_NV = 0x86E2
GL_UNSIGNED_INT64_VEC4_ARB = 0x8FF7
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT = 0x8455
GL_PERFMON_RESULT_AVAILABLE_AMD = 0x8BC4
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82
GL_ARRAY_STRIDE = 0x92FE
GL_DOT_PRODUCT_NV = 0x86EC
GL_POST_TEXTURE_FILTER_SCALE_SGIX = 0x817A
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E
GL_STENCIL = 0x1802
GL_ALWAYS_SOFT_HINT_PGI = 0x1A20D
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA
GL_COLOR_WRITEMASK = 0x0C23
GL_SAMPLER_CUBE_SHADOW = 0x8DC5
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D
GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624
GL_INT8_NV = 0x8FE0
GL_MIRROR_CLAMP_ATI = 0x8742
GL_RENDERBUFFER_HEIGHT = 0x8D43
GL_DIFFERENCE = 0x929E
GL_INTENSITY12_EXT = 0x804C
GL_RG16_SNORM = 0x8F99
GL_UNSIGNED_INT_SAMPLER_3D_EXT = 0x8DD3
GL_INT_SAMPLER_2D_RECT = 0x8DCD
GL_MANUAL_GENERATE_MIPMAP = 0x8294
GL_COLOR_ATTACHMENT2_NV = 0x8CE2
GL_MODELVIEW2_ARB = 0x8722
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910D
GL_QUERY_RESULT_AVAILABLE_EXT = 0x8867
GL_QUAD_LUMINANCE8_SGIS = 0x8121
GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645
GL_RGB_RAW_422_APPLE = 0x8A51
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV = 0x937A
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT = 0x8DE4
GL_TYPE = 0x92FA
GL_INT_VEC2_ARB = 0x8B53
GL_GET_TEXTURE_IMAGE_FORMAT = 0x8291
GL_TEXTURE_BUFFER_EXT = 0x8C2A
GL_REFERENCE_PLANE_SGIX = 0x817D
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT = 0x00000020
GL_R16F = 0x822D
GL_TEXTURE_BUFFER_OFFSET = 0x919D
GL_DISCRETE_AMD = 0x9006
GL_COLOR_ATTACHMENT14 = 0x8CEE
GL_DUAL_INTENSITY16_SGIS = 0x811B
GL_POINT_SIZE = 0x0B11
GL_MATRIX_STRIDE = 0x92FF
GL_QUERY_BUFFER_BINDING = 0x9193
GL_EYE_DISTANCE_TO_LINE_SGIS = 0x81F2
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29
GL_DOT3_RGBA = 0x86AF
GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B
GL_RGB16F = 0x881B
GL_MAP2_VERTEX_ATTRIB5_4_NV = 0x8675
GL_VERTEX_ARRAY_STRIDE = 0x807C
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR = 0x8243
GL_MAX_ELEMENTS_INDICES_EXT = 0x80E9
GL_OBJECT_ACTIVE_UNIFORMS_ARB = 0x8B86
GL_MAX_TRACK_MATRICES_NV = 0x862F
GL_3DC_X_AMD = 0x87F9
GL_COMPRESSED_RG11_EAC = 0x9272
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES = 0x90CC
GL_SHADER_OPERATION_NV = 0x86DF
GL_MATRIX6_NV = 0x8636
GL_STENCIL_REF = 0x0B97
GL_RGBA16_SNORM = 0x8F9B
GL_SAMPLER_3D = 0x8B5F
GL_CLIP_DISTANCE1 = 0x3001
GL_COMMAND_BARRIER_BIT_EXT = 0x00000040
GL_SPRITE_EYE_ALIGNED_SGIX = 0x814E
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES = 0x8E89
GL_EYE_LINEAR = 0x2400
GL_INVALID_ENUM = 0x0500
GL_MAX_TEXTURE_LOD_BIAS_EXT = 0x84FD
GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516
GL_MAX_SAMPLES_NV = 0x8D57
GL_TEXTURE_BINDING_EXTERNAL_OES = 0x8D67
GL_BUFFER_USAGE = 0x8765
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV = 0x9341
GL_MIN_SPARSE_LEVEL_AMD = 0x919B
GL_DRAW_BUFFER0 = 0x8825
GL_R32F_EXT = 0x822E
GL_COLOR_ATTACHMENT25 = 0x8CF9
GL_CULL_MODES_NV = 0x86E0
GL_COMPRESSED_RED_RGTC1 = 0x8DBB
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM = 103085
GL_MAX_TEXTURE_COORDS_ARB = 0x8871
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB = 0x8E8C
GL_REG_27_ATI = 0x893C
GL_REPLACE = 0x1E01
GL_DRAW_BUFFER14_NV = 0x8833
GL_NAMED_STRING_TYPE_ARB = 0x8DEA
GL_TESS_CONTROL_PROGRAM_NV = 0x891E
GL_RGB2_EXT = 0x804E
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB = 0x8897
GL_DEBUG_LOGGED_MESSAGES_KHR = 0x9145
GL_POLYGON_OFFSET_FACTOR_EXT = 0x8038
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV = 0x86D9
GL_VERTEX_ATTRIB_ARRAY4_NV = 0x8654
GL_DETAIL_TEXTURE_LEVEL_SGIS = 0x809A
GL_RGB10_A2 = 0x8059
GL_QUERY_RESULT_NO_WAIT = 0x9194
GL_SIGNED_HILO16_NV = 0x86FA
GL_TEXTURE_CUBE_MAP_EXT = 0x8513
GL_PATH_ERROR_POSITION_NV = 0x90AB
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT = 0x88EF
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA
GL_UNKNOWN_CONTEXT_RESET = 0x8255
GL_TIME_ELAPSED_EXT = 0x88BF
GL_EXP2 = 0x0801
GL_SIGNALED = 0x9119
GL_BACK = 0x0405
GL_OBJECT_LINEAR_NV = 0x2401
GL_PURGEABLE_APPLE = 0x8A1D
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT = 0x845D
GL_FUNC_SUBTRACT = 0x800A
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT = 0x90CB
GL_PALETTE4_RGBA4_OES = 0x8B93
GL_HISTOGRAM_FORMAT_EXT = 0x8027
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV = 0x902D
GL_DOUBLE_VEC3 = 0x8FFD
GL_UNSIGNED_INT_IMAGE_BUFFER_OES = 0x9067
GL_LUMINANCE_FLOAT32_APPLE = 0x8818
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB = 0x91BF
GL_IMAGE_1D_EXT = 0x904C
GL_ALPHA8_OES = 0x803C
GL_RELATIVE_QUADRATIC_CURVE_TO_NV = 0x0B
GL_FONT_UNDERLINE_POSITION_BIT_NV = 0x04000000
GL_FLOAT_MAT4x2_NV = 0x8B69
GL_IMAGE_3D = 0x904E
GL_TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT = 0x845A
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES = 0x8DDF
GL_TEXTURE_MIN_FILTER = 0x2801
GL_DOT3_RGB_ARB = 0x86AE
GL_BLEND_DST_ALPHA = 0x80CA
GL_TEXTURE_BORDER_COLOR_EXT = 0x1004
GL_DISJOINT_NV = 0x9283
GL_MULTISAMPLE_LINE_WIDTH_RANGE = 0x9381
GL_TEXTURE_COMPARE_SGIX = 0x819A
GL_LUMINANCE16_ALPHA16_SNORM = 0x901A
GL_MAGNITUDE_SCALE_NV = 0x8712
GL_SIGNED_INTENSITY_NV = 0x8707
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT = 0x9065
GL_BLEND_SRC_RGB = 0x80C9
GL_STANDARD_FONT_FORMAT_NV = 0x936C
GL_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AE
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV = 0x86F3
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB = 0x88FE
GL_BLEND_EQUATION_ALPHA_OES = 0x883D
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX = 0x8409
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES = 0x8E8A
GL_BOOL_VEC2 = 0x8B57
GL_CONVOLUTION_FILTER_BIAS = 0x8015
GL_IMAGE_2D_ARRAY_EXT = 0x9053
GL_GEOMETRY_OUTPUT_TYPE_EXT = 0x8DDC
GL_INFO_LOG_LENGTH = 0x8B84
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB = 0x88AB
GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES = 0x900E
GL_ATC_RGB_AMD = 0x8C92
GL_CURRENT_MATRIX_STACK_DEPTH_NV = 0x8640
GL_FLOAT_MAT2_ARB = 0x8B5A
GL_COMBINER_MAPPING_NV = 0x8543
GL_LINES = 0x0001
GL_COMPRESSED_RGBA_ASTC_4x3x3_OES = 0x93C1
GL_UNIFORM_SIZE = 0x8A38
GL_MATRIX7_NV = 0x8637
GL_VERTEX_BINDING_STRIDE = 0x82D8
GL_RENDERBUFFER_DEPTH_SIZE_OES = 0x8D54
GL_DUAL_INTENSITY12_SGIS = 0x811A
GL_FLOAT_MAT3_ARB = 0x8B5B
GL_OBJECT_TYPE = 0x9112
GL_MATRIX1_NV = 0x8631
GL_CND0_ATI = 0x896B
GL_ATC_RGBA_EXPLICIT_ALPHA_AMD = 0x8C93
GL_ACTIVE_RESOURCES = 0x92F5
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC
GL_HSL_HUE_NV = 0x92AD
GL_TEXTURE_BUFFER_BINDING_OES = 0x8C2A
GL_CURRENT_PROGRAM = 0x8B8D
GL_TEXTURE_ENV = 0x2300
GL_MAP_READ_BIT = 0x0001
GL_TEXTURE_FORMAT_QCOM = 0x8BD6
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT = 0x900D
GL_TRANSLATE_X_NV = 0x908E
GL_LINE_WIDTH_RANGE = 0x0B22
GL_UNPACK_IMAGE_HEIGHT_EXT = 0x806E
GL_FOG_COORDINATE_SOURCE = 0x8450
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI = 0x80D5
GL_TRANSPOSE_PROJECTION_MATRIX_ARB = 0x84E4
GL_DRAW_BUFFER2_NV = 0x8827
GL_FRAGMENT_LIGHT1_SGIX = 0x840D
GL_TESS_EVALUATION_SHADER_BIT_EXT = 0x00000010
GL_DEBUG_SOURCE_API_KHR = 0x8246
GL_QUERY_WAIT = 0x8E13
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV = 0x8E5C
GL_INDEX_ARRAY_STRIDE = 0x8086
GL_EVAL_VERTEX_ATTRIB15_NV = 0x86D5
GL_COMBINE_ALPHA = 0x8572
GL_SRGB_ALPHA = 0x8C42
GL_BUFFER_MAPPED_OES = 0x88BC
GL_DUP_FIRST_CUBIC_CURVE_TO_NV = 0xF2
GL_LIGHT_MODEL_AMBIENT = 0x0B53
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL = 0x94FF
GL_COMBINE = 0x8570
GL_IMAGE_COMPATIBILITY_CLASS = 0x82A8
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB = 0x933E
GL_DEPTH32F_STENCIL8_NV = 0x8DAC
GL_T4F_C4F_N3F_V4F = 0x2A2D
GL_COLOR_TABLE_GREEN_SIZE = 0x80DB
GL_DOT2_ADD_ATI = 0x896C
GL_DUAL_LUMINANCE_ALPHA8_SGIS = 0x811D
GL_VERTEX_ATTRIB_ARRAY15_NV = 0x865F
GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12
GL_UNPACK_ROW_LENGTH = 0x0CF2
GL_SAMPLER_2D_SHADOW = 0x8B62
GL_PIXEL_TILE_GRID_WIDTH_SGIX = 0x8142
GL_WEIGHTED_AVERAGE_ARB = 0x9367
GL_FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A
GL_DEPTH_BITS = 0x0D56
GL_UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127
GL_LINE_STRIP_ADJACENCY = 0x000B
GL_ELEMENT_ARRAY_TYPE_ATI = 0x8769
GL_POINTS = 0x0000
GL_COLOR_ATTACHMENT12 = 0x8CEC
GL_ACCUM_BUFFER_BIT = 0x00000200
GL_PALETTE4_RGB5_A1_OES = 0x8B94
GL_SAMPLER_2D_ARRAY_SHADOW_NV = 0x8DC4
GL_RENDERBUFFER_DEPTH_SIZE_EXT = 0x8D54
GL_PROGRAM_MATRIX_EXT = 0x8E2D
GL_CURRENT_RASTER_INDEX = 0x0B05
GL_MAX_PROGRAM_LOOP_DEPTH_NV = 0x88F7
GL_MINUS_CLAMPED_NV = 0x92B3
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT = 0x8C83
GL_DUAL_ALPHA4_SGIS = 0x8110
GL_TRANSPOSE_NV = 0x862C
GL_INDEX_TEST_REF_EXT = 0x81B7
GL_OP_EXP_BASE_2_EXT = 0x8791
GL_PROGRAM_RESULT_COMPONENTS_NV = 0x8907
GL_SAMPLE_BUFFERS_SGIS = 0x80A8
GL_INDEX_ARRAY_ADDRESS_NV = 0x8F24
GL_HILO8_NV = 0x885E
GL_SRC_NV = 0x9286
GL_UNSIGNED_INT8_VEC3_NV = 0x8FEE
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CF
GL_COMPILE_AND_EXECUTE = 0x1301
GL_INTENSITY32I_EXT = 0x8D85
GL_MULTISAMPLE_BUFFER_BIT2_QCOM = 0x04000000
GL_HISTOGRAM_LUMINANCE_SIZE_EXT = 0x802C
GL_COLOR_ATTACHMENT23 = 0x8CF7
GL_OUTPUT_COLOR1_EXT = 0x879C
GL_INTENSITY_FLOAT16_APPLE = 0x881D
GL_POST_COLOR_MATRIX_RED_SCALE = 0x80B4
GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40
GL_MATRIX9_ARB = 0x88C9
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT = 0x8C4B
GL_TEXTURE_COORD_ARRAY_TYPE_EXT = 0x8089
GL_ALPHA32UI_EXT = 0x8D72
GL_TEXTURE_GEN_T = 0x0C61
GL_MAT_AMBIENT_BIT_PGI = 0x00100000
GL_BLUE_SCALE = 0x0D1A
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT = 0x9067
GL_COLOR_COMPONENTS = 0x8283
GL_DRAW_BUFFER12_ARB = 0x8831
GL_POLYGON_OFFSET_CLAMP_EXT = 0x8E1B
GL_LINEARDODGE_NV = 0x92A4
GL_DRAW_ARRAYS_STRIP_COMMAND_NV = 0x0005
GL_VERTEX_ID_NV = 0x8C7B
GL_PATH_FILL_COVER_MODE_NV = 0x9082
GL_SIGNED_ALPHA_NV = 0x8705
GL_PATH_CLIENT_LENGTH_NV = 0x907F
GL_TEXTURE_GEN_MODE = 0x2500
GL_R8UI = 0x8232
GL_SIGNED_HILO8_NV = 0x885F
GL_PIXEL_SUBSAMPLE_4242_SGIX = 0x85A4
GL_VERTEX_SHADER_LOCALS_EXT = 0x87D3
GL_SMALL_CW_ARC_TO_NV = 0x14
GL_ELEMENT_ARRAY_LENGTH_NV = 0x8F33
GL_DS_BIAS_NV = 0x8716
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV = 0x864E
GL_DISCARD_NV = 0x8530
GL_RGBA4_OES = 0x8056
GL_VIRTUAL_PAGE_SIZE_Y_ARB = 0x9196
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV = 0x9340
GL_INDEX_BITS = 0x0D51
GL_MAX_PROGRAM_MATRICES_ARB = 0x862F
GL_KEEP = 0x1E00
GL_GEOMETRY_SHADER_INVOCATIONS_OES = 0x887F
GL_PROXY_TEXTURE_1D_ARRAY_EXT = 0x8C19
GL_IMAGE_CLASS_4_X_16 = 0x82BC
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB = 0x9340
GL_DS_SCALE_NV = 0x8710
GL_TESS_EVALUATION_SHADER_OES = 0x8E87
GL_ALPHA16_EXT = 0x803E
GL_UNSIGNED_INT_VEC2_EXT = 0x8DC6
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061
GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F
GL_EMBOSS_MAP_NV = 0x855F
GL_WEIGHT_ARRAY_OES = 0x86AD
GL_TEXTURE_DS_SIZE_NV = 0x871D
GL_DEPTH_COMPONENT32F_NV = 0x8DAB
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB = 0x8B87
GL_ALREADY_SIGNALED = 0x911A
GL_UNIFORM_BARRIER_BIT = 0x00000004
GL_NEAREST_CLIPMAP_NEAREST_SGIX = 0x844D
GL_MATRIX_MODE = 0x0BA0
GL_MAP1_TEXTURE_COORD_2 = 0x0D94
GL_LAST_VERTEX_CONVENTION_OES = 0x8E4E
GL_SHADER_TYPE = 0x8B4F
GL_SHORT = 0x1402
GL_FRAMEBUFFER_EXT = 0x8D40
GL_V2F = 0x2A20
GL_INNOCENT_CONTEXT_RESET_EXT = 0x8254
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES = 0x92CF
GL_MAX_VARYING_FLOATS = 0x8B4B
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = 0x9276
GL_UNSIGNED_SHORT_5_6_5_EXT = 0x8363
GL_SAMPLE_SHADING_OES = 0x8C36
GL_IMAGE_ROTATE_ANGLE_HP = 0x8159
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8
GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622
GL_SRG8_EXT = 0x8FBE
GL_DEBUG_SEVERITY_LOW_KHR = 0x9148
GL_DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247
GL_SOURCE0_RGB = 0x8580
GL_DEPTH_STENCIL_ATTACHMENT = 0x821A
GL_RESAMPLE_DECIMATE_SGIX = 0x8430
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002
GL_LINEAR_MIPMAP_LINEAR = 0x2703
GL_ONE_MINUS_CONSTANT_ALPHA_EXT = 0x8004
GL_HSL_COLOR_KHR = 0x92AF
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV = 0x9033
GL_DOUBLE_VEC3_EXT = 0x8FFD
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT = 0x92D4
GL_MAP1_GRID_SEGMENTS = 0x0DD1
GL_PACK_ALIGNMENT = 0x0D05
GL_SYNC_STATUS_APPLE = 0x9114
GL_VERTEX_CONSISTENT_HINT_PGI = 0x1A22B
GL_RESAMPLE_REPLICATE_OML = 0x8986
GL_SCALE_BY_TWO_NV = 0x853E
GL_NEAREST = 0x2600
GL_COLOR_ATTACHMENT8 = 0x8CE8
GL_GREEN_BIAS = 0x0D19
GL_GEOMETRY_LINKED_INPUT_TYPE_OES = 0x8917
GL_SAMPLER_1D_SHADOW = 0x8B61
GL_SAMPLE_SHADING_ARB = 0x8C36
GL_UNSIGNED_INT64_AMD = 0x8BC2
GL_SYNC_FENCE = 0x9116
GL_INT64_VEC3_NV = 0x8FEA
GL_MINMAX_FORMAT_EXT = 0x802F
GL_LOCAL_EXT = 0x87C4
GL_REG_15_ATI = 0x8930
GL_LAYOUT_DEFAULT_INTEL = 0
GL_WEIGHT_ARRAY_STRIDE_ARB = 0x86AA
GL_SHADER_IMAGE_ATOMIC = 0x82A6
GL_YCRCB_422_SGIX = 0x81BB
GL_CON_5_ATI = 0x8946
GL_POINT_SMOOTH = 0x0B10
GL_ALIASED_LINE_WIDTH_RANGE = 0x846E
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT = 0x8336
GL_TEXTURE_WIDTH_QCOM = 0x8BD2
GL_BUFFER_UPDATE_BARRIER_BIT_EXT = 0x00000200
GL_TEXTURE_TARGET = 0x1006
GL_MAX_TEXTURE_COORDS_NV = 0x8871
GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A
GL_MAX_PATCH_VERTICES = 0x8E7D
GL_RGB5 = 0x8050
GL_COLOR_TABLE_INTENSITY_SIZE_SGI = 0x80DF
GL_BITMAP_TOKEN = 0x0704
GL_ATTRIB_ARRAY_SIZE_NV = 0x8623
GL_TEXTURE25_ARB = 0x84D9
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES = 0x8CD9
GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088
GL_NUM_ACTIVE_VARIABLES = 0x9304
GL_RGB8 = 0x8051
GL_READ_PIXEL_DATA_RANGE_POINTER_NV = 0x887D
GL_TEXTURE_WIDTH = 0x1000
GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06
GL_CLAMP_TO_BORDER_EXT = 0x812D
GL_PIXEL_MAP_I_TO_R = 0x0C72
GL_LAYER_NV = 0x8DAA
GL_FLOAT_RGB_NV = 0x8882
GL_CON_20_ATI = 0x8955
GL_TEXTURE_STENCIL_SIZE = 0x88F1
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV = 0x40
GL_LUMINANCE8UI_EXT = 0x8D80
GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D
GL_YCRCB_SGIX = 0x8318
GL_VERTEX4_BIT_PGI = 0x00000008
GL_MAX_MAP_TESSELLATION_NV = 0x86D6
GL_TRACE_ARRAYS_BIT_MESA = 0x0004
GL_COMBINER1_NV = 0x8551
GL_CW = 0x0900
GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES = 0x9123
GL_TEXTURE_TOO_LARGE_EXT = 0x8065
GL_UNIFORM_OFFSET = 0x8A3B
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES = 0x8B9A
GL_VERSION_ES_CM_1_1 = 1
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB = 0x824D
GL_VERTEX_PROGRAM_ARB = 0x8620
GL_PATCH_VERTICES = 0x8E72
GL_VERTEX_STATE_PROGRAM_NV = 0x8621
GL_DEPTH_STENCIL_TO_BGRA_NV = 0x886F
GL_FILL_NV = 0x1B02
GL_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B0
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0
GL_UNIFORM_ARRAY_STRIDE = 0x8A3C
GL_SRC_ALPHA = 0x0302
GL_MAX_3D_TEXTURE_SIZE_OES = 0x8073
GL_NUM_VIDEO_CAPTURE_STREAMS_NV = 0x9024
GL_IUI_V2F_EXT = 0x81AD
GL_GEOMETRY_SHADER_INVOCATIONS_EXT = 0x887F
GL_MAP1_VERTEX_ATTRIB14_4_NV = 0x866E
GL_ISOLINES = 0x8E7A
GL_SAMPLE_POSITION_NV = 0x8E50
GL_PATH_DASH_CAPS_NV = 0x907B
GL_COVERAGE_COMPONENT_NV = 0x8ED0
GL_OP_RECIP_EXT = 0x8794
GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35
GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F
GL_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x9009
GL_TEXTURE_RENDERBUFFER_NV = 0x8E55
GL_EMISSION = 0x1600
GL_RGBA_INTEGER_EXT = 0x8D99
GL_BGRA_IMG = 0x80E1
GL_MAP2_TEXTURE_COORD_3 = 0x0DB5
GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898
GL_STENCIL_INDEX_OES = 0x1901
GL_422_EXT = 0x80CC
GL_PACK_REVERSE_ROW_ORDER_ANGLE = 0x93A4
GL_RED_BITS = 0x0D52
GL_WEIGHT_ARRAY_POINTER_ARB = 0x86AC
GL_R1UI_C3F_V3F_SUN = 0x85C6
GL_UNSIGNED_BYTE_2_3_3_REV_EXT = 0x8362
GL_POST_CONVOLUTION_BLUE_SCALE = 0x801E
GL_2D = 0x0600
GL_FLOAT16_NV = 0x8FF8
GL_UNSIGNED_INT_VEC3_EXT = 0x8DC7
GL_COMPRESSED_RGBA_ASTC_8x8 = 0x93B7
GL_TEXTURE_3D = 0x806F
GL_CON_30_ATI = 0x895F
GL_TEXTURE_RED_TYPE = 0x8C10
GL_BINNING_CONTROL_HINT_QCOM = 0x8FB0
GL_TESS_CONTROL_SHADER = 0x8E88
GL_BLEND_EQUATION_ALPHA = 0x883D
GL_VIEW_CLASS_8_BITS = 0x82CB
GL_LUMINANCE_ALPHA16F_ARB = 0x881F
GL_DEPTH_BOUNDS_EXT = 0x8891
GL_FIXED_ONLY = 0x891D
GL_DEPTH_COMPONENT24 = 0x81A6
GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033
GL_QUERY_RESULT_EXT = 0x8866
GL_MAP2_VERTEX_ATTRIB3_4_NV = 0x8673
GL_Z400_BINARY_AMD = 0x8740
GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV = 0x8856
GL_POST_CONVOLUTION_COLOR_TABLE_SGI = 0x80D1
GL_PIXEL_MAP_B_TO_B = 0x0C78
GL_DOUBLE_MAT2x3_EXT = 0x8F49
GL_DEPTH_COMPONENT32F = 0x8CAC
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB = 0x9143
GL_STENCIL_INDEX4_OES = 0x8D47
GL_SYNC_FLAGS_APPLE = 0x9115
GL_REFERENCED_BY_GEOMETRY_SHADER_EXT = 0x9309
GL_COLOR_ATTACHMENT2 = 0x8CE2
GL_TEXTURE_WRAP_R_EXT = 0x8072
GL_QUERY_WAIT_INVERTED = 0x8E17
GL_RG32F = 0x8230
GL_LIGHT_MODEL_TWO_SIDE = 0x0B52
GL_MULTIPLY_NV = 0x9294
GL_RGB16I_EXT = 0x8D89
GL_TEXTURE13_ARB = 0x84CD
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB = 0x8848
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV = 0x8520
GL_MAX_IMAGE_UNITS = 0x8F38
GL_TRANSPOSE_AFFINE_3D_NV = 0x9098
GL_SHADOW_ATTENUATION_EXT = 0x834E
GL_FRAMEBUFFER_DEFAULT_LAYERS_OES = 0x9312
GL_COVERAGE_BUFFER_BIT_NV = 0x00008000
GL_UNSIGNED_INT_10_10_10_2_OES = 0x8DF6
GL_CON_13_ATI = 0x894E
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN = 0x85C1
GL_PATH_STROKE_MASK_NV = 0x9084
GL_OFFSET_TEXTURE_RECTANGLE_NV = 0x864C
GL_TEXTURE_RED_TYPE_ARB = 0x8C10
GL_IMAGE_BINDING_LAYERED = 0x8F3C
GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C
GL_DRAW_BUFFER4_ATI = 0x8829
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B
GL_FEEDBACK_BUFFER_TYPE = 0x0DF2
GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D
GL_SQUARE_NV = 0x90A3
GL_FOG_COORDINATE_ARRAY_TYPE_EXT = 0x8454
GL_IMAGE_BINDING_NAME = 0x8F3A
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB = 0x880C
GL_OFFSET_TEXTURE_2D_SCALE_NV = 0x86E2
GL_CON_7_ATI = 0x8948
GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896
GL_RGB8I_EXT = 0x8D8F
GL_MAX_CLIP_PLANES_IMG = 0x0D32
GL_TEXTURE_BINDING_RECTANGLE_ARB = 0x84F6
GL_ALPHA8 = 0x803C
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB = 0x933F
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX = 0x8403
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT = 0x886D
GL_FRAMEBUFFER_BLEND = 0x828B
GL_TRANSFORM_FEEDBACK_BINDING_NV = 0x8E25
GL_COVERAGE_EDGE_FRAGMENTS_NV = 0x8ED6
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES = 0x8517
GL_HISTOGRAM_RED_SIZE_EXT = 0x8028
GL_INVERSE_TRANSPOSE_NV = 0x862D
GL_ASYNC_HISTOGRAM_SGIX = 0x832C
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT = 0x8DE2
GL_OFFSET_TEXTURE_BIAS_NV = 0x86E3
GL_ACCUM_ALPHA_BITS = 0x0D5B
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210
GL_CURRENT_PALETTE_MATRIX_OES = 0x8843
GL_PASS_THROUGH_TOKEN = 0x0700
GL_VERTEX_SHADER = 0x8B31
GL_SRC1_RGB = 0x8581
GL_DEBUG_PRINT_MESA = 0x875A
GL_OP_CROSS_PRODUCT_EXT = 0x8797
GL_SAMPLE_BUFFERS_ARB = 0x80A8
GL_MAT_SPECULAR_BIT_PGI = 0x04000000
GL_COMPRESSED_SRGB_EXT = 0x8C48
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F8
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES = 0x8CD6
GL_PACK_CMYK_HINT_EXT = 0x800E
GL_NO_RESET_NOTIFICATION_KHR = 0x8261
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV = 0x8C8B
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES = 0x886D
GL_VIBRANCE_SCALE_NV = 0x8713
GL_PROGRAM_INPUT = 0x92E3
GL_SAMPLE_ALPHA_TO_MASK_EXT = 0x809E
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT = 0x8CD6
GL_MULTISAMPLE_FILTER_HINT_NV = 0x8534
GL_VARIANT_DATATYPE_EXT = 0x87E5
GL_VERTEX_STREAM5_ATI = 0x8771
GL_OUTPUT_TEXTURE_COORD19_EXT = 0x87B0
GL_FULL_RANGE_EXT = 0x87E1
GL_DRAW_PIXELS_APPLE = 0x8A0A
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES = 0x8DE1
GL_LUMINANCE16I_EXT = 0x8D8C
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX = 0x817B
GL_TRIANGLE_MESH_SUN = 0x8615
GL_ACCUM_GREEN_BITS = 0x0D59
GL_MAX_ASYNC_TEX_IMAGE_SGIX = 0x835F
GL_TEXTURE_COORD_ARRAY_LIST_IBM = 103074
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES = 0x8E7F
GL_UNSIGNED_INT8_VEC2_NV = 0x8FED
GL_BGR = 0x80E0
GL_TEXTURE_COORD_ARRAY_LENGTH_NV = 0x8F2F
GL_RGB_SCALE_ARB = 0x8573
GL_PACK_SKIP_ROWS = 0x0D03
GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX = 0x9049
GL_QUERY_RESULT_AVAILABLE_ARB = 0x8867
GL_INTERPOLATE_ARB = 0x8575
GL_TEXTURE31_ARB = 0x84DF
GL_CLAMP_FRAGMENT_COLOR = 0x891B
GL_SAMPLES = 0x80A9
GL_REPLACE_OLDEST_SUN = 0x0003
GL_INDEX_TEST_EXT = 0x81B5
GL_MAX_CLIP_PLANES = 0x0D32
GL_SRGB_WRITE = 0x8298
GL_DIFFERENCE_NV = 0x929E
GL_OUTPUT_TEXTURE_COORD26_EXT = 0x87B7
GL_BUFFER_OBJECT_EXT = 0x9151
GL_TEXTURE_1D_ARRAY_EXT = 0x8C18
GL_MODELVIEW1_EXT = 0x850A
GL_ACTIVE_PROGRAM_EXT = 0x8B8D
GL_TEXTURE_SWIZZLE_G_EXT = 0x8E43
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC
GL_UNSIGNED_INT_5_9_9_9_REV_APPLE = 0x8C3E
GL_PATH_COMMAND_COUNT_NV = 0x909D
GL_POINT_SIZE_MAX_EXT = 0x8127
GL_FOG_END = 0x0B64
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV = 0x8C84
GL_INT_VEC3_ARB = 0x8B54
GL_SPRITE_MODE_SGIX = 0x8149
GL_UNSIGNED_INT = 0x1405
GL_REFLECTION_MAP_NV = 0x8512
GL_RESTART_SUN = 0x0001
GL_COLOR_ENCODING = 0x8296
GL_INTERPOLATE_EXT = 0x8575
GL_NUM_PROGRAM_BINARY_FORMATS = 0x87FE
GL_MAX_VERTEX_STREAMS = 0x8E71
GL_MAX_ASYNC_HISTOGRAM_SGIX = 0x832D
GL_VERTEX_ELEMENT_SWIZZLE_AMD = 0x91A4
GL_STENCIL_BUFFER_BIT6_QCOM = 0x00400000
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES = 0x8CDA
GL_NUM_EXTENSIONS = 0x821D
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB = 0x851C
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F6
GL_TEXTURE_COMPRESSED_ARB = 0x86A1
GL_BLEND_EQUATION_RGB = 0x8009
GL_SCISSOR_BOX = 0x0C10
GL_DISCARD_ATI = 0x8763
GL_POST_COLOR_MATRIX_ALPHA_BIAS = 0x80BB
GL_MODELVIEW19_ARB = 0x8733
GL_GEOMETRY_DEFORMATION_SGIX = 0x8194
GL_MAP2_VERTEX_ATTRIB15_4_NV = 0x867F
GL_DOUBLE_MAT3 = 0x8F47
GL_DEBUG_SOURCE_SHADER_COMPILER = 0x8248
GL_REFERENCED_BY_GEOMETRY_SHADER_OES = 0x9309
GL_DEPTH_BUFFER_BIT2_QCOM = 0x00000400
GL_MAP_PERSISTENT_BIT_EXT = 0x0040
GL_UNSIGNED_INVERT_NV = 0x8537
GL_SRGB8_ALPHA8_EXT = 0x8C43
GL_LUMINANCE_ALPHA_SNORM = 0x9012
GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111
GL_SOURCE1_ALPHA_ARB = 0x8589
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES = 0x92CE
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB = 0x862E
GL_REFLECTION_MAP = 0x8512
GL_TEXTURE_2D_MULTISAMPLE = 0x9100
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D
GL_READ_PIXELS_TYPE = 0x828E
GL_NUM_FRAGMENT_REGISTERS_ATI = 0x896E
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL = 0x94F2
GL_SRGB_EXT = 0x8C40
GL_MATRIX_EXT = 0x87C0
GL_CONSTANT_COLOR0_NV = 0x852A
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV = 0x8E5D
GL_REG_6_ATI = 0x8927
GL_PROXY_TEXTURE_1D = 0x8063
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A
GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV = 0x8C80
GL_INVALID_FRAMEBUFFER_OPERATION_EXT = 0x0506
GL_RENDERBUFFER_FREE_MEMORY_ATI = 0x87FD
GL_DEBUG_SOURCE_THIRD_PARTY = 0x8249
GL_PIXEL_COUNT_AVAILABLE_NV = 0x8867
GL_DISTANCE_ATTENUATION_SGIS = 0x8129
GL_TESS_EVALUATION_SHADER_BIT = 0x00000010
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV = 0x8852
GL_HARDLIGHT_KHR = 0x929B
GL_MATRIX10_ARB = 0x88CA
GL_DYNAMIC_COPY_ARB = 0x88EA
GL_SUBPIXEL_BITS = 0x0D50
GL_WRITE_ONLY_ARB = 0x88B9
GL_QUAD_LUMINANCE4_SGIS = 0x8120
GL_VIEW_CLASS_48_BITS = 0x82C7
GL_COLOR_ATTACHMENT0 = 0x8CE0
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX = 0x812E
GL_LIGHT_MODEL_COLOR_CONTROL_EXT = 0x81F8
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8C4E
GL_READ_WRITE = 0x88BA
GL_DOT3_RGBA_ARB = 0x86AF
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES = 0x90D9
GL_MAX_TEXTURE_IMAGE_UNITS_NV = 0x8872
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB = 0x88A7
GL_OUTPUT_TEXTURE_COORD6_EXT = 0x87A3
GL_DEPTH_BIAS = 0x0D1F
GL_TRIANGLES_ADJACENCY_OES = 0x000C
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB = 0x84F8
GL_HISTOGRAM = 0x8024
GL_UNSIGNED_INT8_VEC4_NV = 0x8FEF
GL_TEXTURE_LOD_BIAS = 0x8501
GL_FLOAT_MAT3x4_NV = 0x8B68
GL_DOUBLE_MAT3x2 = 0x8F4B
GL_COLOR_ARRAY_STRIDE = 0x8083
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG = 0x9134
GL_PIXEL_SUBSAMPLE_4444_SGIX = 0x85A2
GL_MATRIX25_ARB = 0x88D9
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23
GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD = 0x00000002
GL_ACCUM_ADJACENT_PAIRS_NV = 0x90AD
GL_UNSIGNED_INT64_NV = 0x140F
GL_LINE_STRIP_ADJACENCY_EXT = 0x000B
GL_LUMINANCE4_EXT = 0x803F
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C73
GL_MAP_ATTRIB_U_ORDER_NV = 0x86C3
GL_RG8_SNORM = 0x8F95
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES = 0x8E5C
GL_BOOL_VEC3_ARB = 0x8B58
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB = 0x88B6
GL_LINES_ADJACENCY_EXT = 0x000A
GL_DEBUG_TYPE_ERROR_ARB = 0x824C
GL_MAP_COLOR = 0x0D10
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV = 0x0F
GL_MATRIX16_ARB = 0x88D0
GL_INT16_NV = 0x8FE4
GL_LUMINANCE_ALPHA_FLOAT16_ATI = 0x881F
GL_BUFFER_IMMUTABLE_STORAGE = 0x821F
GL_ADD_SIGNED = 0x8574
GL_MATRIX_INDEX_ARRAY_TYPE_OES = 0x8847
GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E
GL_OP_MULTIPLY_MATRIX_EXT = 0x8798
GL_LIST_PRIORITY_SGIX = 0x8182
GL_UNIFORM = 0x92E1
GL_COMPRESSED_SRGB8_ETC2_OES = 0x9275
GL_DRAW_BUFFER8_EXT = 0x882D
GL_BLUE_INTEGER = 0x8D96
GL_DEBUG_CALLBACK_FUNCTION_ARB = 0x8244
GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B
GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD
GL_SAMPLE_COVERAGE_ARB = 0x80A0
GL_COMPRESSED_RGBA_ASTC_4x4 = 0x93B0
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT = 0x8CD4
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B
GL_GREEN_NV = 0x1904
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB = 0x86A0
GL_MAP2_BINORMAL_EXT = 0x8447
GL_NO_RESET_NOTIFICATION = 0x8261
GL_MULTISAMPLE = 0x809D
GL_EVAL_VERTEX_ATTRIB0_NV = 0x86C6
GL_DUDV_ATI = 0x8779
GL_COLOR_ATTACHMENT4_NV = 0x8CE4
GL_REFERENCED_BY_COMPUTE_SHADER = 0x930B
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB = 0x889A
GL_BLEND = 0x0BE2
GL_COLOR_ATTACHMENT3 = 0x8CE3
GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455
GL_LIGHT7 = 0x4007
GL_BUFFER_USAGE_ARB = 0x8765
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4
GL_OUTPUT_TEXTURE_COORD13_EXT = 0x87AA
GL_OUTPUT_TEXTURE_COORD1_EXT = 0x879E
GL_INTENSITY16I_EXT = 0x8D8B
GL_BLEND_DST_RGB_EXT = 0x80C8
GL_DRAW_FRAMEBUFFER_NV = 0x8CA9
GL_TEXTURE_MAX_LEVEL_SGIS = 0x813D
GL_FOG = 0x0B60
GL_EVAL_VERTEX_ATTRIB2_NV = 0x86C8
GL_TRIANGLE_STRIP_ADJACENCY = 0x000D
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM = 103087
GL_INT64_NV = 0x140E
GL_CLIP_PLANE1 = 0x3001
GL_TEXTURE_SAMPLES = 0x9106
GL_WARP_SIZE_NV = 0x9339
GL_DRAW_BUFFER15_EXT = 0x8834
GL_FRAMEBUFFER_DEFAULT_WIDTH = 0x9310
GL_INDEX_MATERIAL_FACE_EXT = 0x81BA
GL_RENDERBUFFER_BINDING_EXT = 0x8CA7
GL_TEXTURE8_ARB = 0x84C8
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE = 0x8D56
GL_PROGRAM_ERROR_STRING_ARB = 0x8874
GL_LUMINANCE_ALPHA16I_EXT = 0x8D8D
GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2
GL_SCISSOR_BIT = 0x00080000
GL_LOSE_CONTEXT_ON_RESET = 0x8252
GL_INT_SAMPLER_1D = 0x8DC9
GL_RGBA_S3TC = 0x83A2
GL_TEXTURE_LUMINANCE_SIZE = 0x8060
GL_IMAGE_PIXEL_TYPE = 0x82AA
GL_TEXTURE_TARGET_QCOM = 0x8BDA
GL_MAX_LIGHTS = 0x0D31
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT = 0x90D9
GL_DST_NV = 0x9287
GL_DRAW_BUFFER5 = 0x882A
GL_INT_SAMPLER_BUFFER_EXT = 0x8DD0
GL_INTERNALFORMAT_GREEN_TYPE = 0x8279
GL_INVERT = 0x150A
GL_COLOR_ATTACHMENT7_EXT = 0x8CE7
GL_MAP2_VERTEX_ATTRIB7_4_NV = 0x8677
GL_FOG_COORDINATE_ARRAY_EXT = 0x8457
GL_TEXTURE_PRE_SPECULAR_HP = 0x8169
GL_MODELVIEW11_ARB = 0x872B
GL_TEXTURE30 = 0x84DE
GL_QUADS = 0x0007
GL_ADJACENT_PAIRS_NV = 0x90AE
GL_ARRAY_BUFFER_BINDING = 0x8894
GL_WEIGHT_ARRAY_TYPE_ARB = 0x86A9
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A
GL_COLOR_BUFFER_BIT0_QCOM = 0x00000001
GL_NEVER = 0x0200
GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E
GL_IMAGE_CLASS_11_11_10 = 0x82C2
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81
GL_MAX_IMAGE_SAMPLES_EXT = 0x906D
GL_STENCIL_INDEX = 0x1901
GL_SAMPLER_1D_SHADOW_ARB = 0x8B61
GL_OPERAND0_RGB_EXT = 0x8590
GL_CURRENT_SECONDARY_COLOR = 0x8459
GL_PATH_COORD_COUNT_NV = 0x909E
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56
GL_LOCATION_COMPONENT = 0x934A
GL_LINE_RESET_TOKEN = 0x0707
GL_INT_IMAGE_1D_EXT = 0x9057
GL_IMAGE_MAG_FILTER_HP = 0x815C
GL_NORMAL_BIT_PGI = 0x08000000
GL_TEXTURE11_ARB = 0x84CB
GL_SAMPLE_MASK_VALUE = 0x8E52
GL_REG_0_ATI = 0x8921
GL_VERTEX_PROGRAM_POINT_SIZE_ARB = 0x8642
GL_SAMPLER_2D_ARRAY_EXT = 0x8DC1
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93D6
GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC
GL_INTENSITY8_SNORM = 0x9017
GL_SURFACE_STATE_NV = 0x86EB
GL_LINE_WIDTH_GRANULARITY = 0x0B23
GL_TRACE_OPERATIONS_BIT_MESA = 0x0001
GL_PACK_RESAMPLE_OML = 0x8984
GL_INTENSITY_FLOAT16_ATI = 0x881D
GL_QUERY_COUNTER_BITS_ARB = 0x8864
GL_RENDER_MODE = 0x0C40
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9
GL_LUMINANCE_ALPHA32I_EXT = 0x8D87
GL_COLOR_ARRAY_LIST_STRIDE_IBM = 103082
GL_EXPAND_NEGATE_NV = 0x8539
GL_PIXEL_BUFFER_BARRIER_BIT_EXT = 0x00000080
GL_STENCIL_FAIL = 0x0B94
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT = 0x8E80
GL_PINLIGHT_NV = 0x92A8
GL_DOT_PRODUCT_DEPTH_REPLACE_NV = 0x86ED
GL_TESS_CONTROL_OUTPUT_VERTICES_EXT = 0x8E75
GL_SPRITE_OBJECT_ALIGNED_SGIX = 0x814D
GL_T = 0x2001
GL_COVERAGE_SAMPLES_NV = 0x8ED4
GL_SEPARATE_SPECULAR_COLOR = 0x81FA
GL_CLAMP_TO_BORDER_NV = 0x812D
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x906B
GL_COLOR_TABLE_RED_SIZE_SGI = 0x80DA
GL_SRC1_ALPHA = 0x8589
GL_ZERO_TO_ONE = 0x935F
GL_COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93B0
GL_FOG_COORD_SRC = 0x8450
GL_RGB4 = 0x804F
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A2
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4
GL_SPRITE_SGIX = 0x8148
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279
GL_MAX_DEBUG_MESSAGE_LENGTH_KHR = 0x9143
GL_MAP_WRITE_BIT_EXT = 0x0002
GL_MAX_TEXTURE_COORDS = 0x8871
GL_TEXTURE_COORD_ARRAY_SIZE_EXT = 0x8088
GL_REFERENCED_BY_GEOMETRY_SHADER = 0x9309
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT = 0x851C
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB = 0x8E5F
GL_MULTIPLY = 0x9294
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR = 0x824D
GL_OUTPUT_TEXTURE_COORD23_EXT = 0x87B4
GL_SAMPLE_COVERAGE = 0x80A0
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT = 0x87CE
GL_COLOR_INDEX16_EXT = 0x80E7
GL_FRAMEBUFFER_DEFAULT_LAYERS = 0x9312
GL_CULL_FACE_MODE = 0x0B45
GL_MIRROR_CLAMP_TO_EDGE = 0x8743
GL_UNSIGNED_INT_SAMPLER_1D_EXT = 0x8DD1
GL_BLUE_NV = 0x1905
GL_TEXTURE_WRAP_R_OES = 0x8072
GL_RG16 = 0x822C
GL_COMPRESSED_LUMINANCE = 0x84EA
GL_RGB565 = 0x8D62
GL_COLOR_INDEX4_EXT = 0x80E4
GL_PIXEL_TRANSFORM_2D_EXT = 0x8330
GL_TRANSFORM_FEEDBACK_BINDING = 0x8E25
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV = 0x86F1
GL_INTENSITY4 = 0x804A
GL_ALPHA_FLOAT32_ATI = 0x8816
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX = 0x818A
GL_ALPHA_INTEGER = 0x8D97
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX = 0x8175
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV = 0x86DB
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV = 0x08
GL_SHADING_LANGUAGE_VERSION_ARB = 0x8B8C
GL_ALPHA_SNORM = 0x9010
GL_IMAGE_1D = 0x904C
GL_SCREEN_COORDINATES_REND = 0x8490
GL_OPERAND1_ALPHA = 0x8599
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB = 0x8625
GL_TEXTURE_MAX_LOD_SGIS = 0x813B
GL_TEXTURE_BUFFER_OFFSET_OES = 0x919D
GL_MULTIVIEW_EXT = 0x90F1
GL_TEXTURE_LUMINANCE_SIZE_EXT = 0x8060
GL_VERTEX_PROGRAM_TWO_SIDE_ARB = 0x8643
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT = 0x00000001
GL_IMAGE_2D_MULTISAMPLE_EXT = 0x9055
GL_SAMPLE_MASK_VALUE_SGIS = 0x80AA
GL_COLOR_MATRIX_STACK_DEPTH = 0x80B2
GL_VARIABLE_D_NV = 0x8526
GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B
GL_W_EXT = 0x87D8
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9
GL_DEPTH_WRITEMASK = 0x0B72
GL_ALL_ATTRIB_BITS = 0xFFFFFFFF
GL_BINORMAL_ARRAY_POINTER_EXT = 0x8443
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7
GL_DEFORMATIONS_MASK_SGIX = 0x8196
GL_SAMPLE_LOCATION_ARB = 0x8E50
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS = 0x8354
GL_INTENSITY16UI_EXT = 0x8D79
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9056
GL_UNKNOWN_CONTEXT_RESET_ARB = 0x8255
GL_STACK_UNDERFLOW = 0x0504
GL_MAX_TEXTURE_UNITS_ARB = 0x84E2
GL_MAX_VARYING_VECTORS = 0x8DFC
GL_UNSIGNALED = 0x9118
GL_MODELVIEW3_ARB = 0x8723
GL_UNSIGNED_INT_VEC2 = 0x8DC6
GL_DEBUG_CALLBACK_FUNCTION = 0x8244
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB = 0x88AF
GL_BGRA8_EXT = 0x93A1
GL_MIRROR_CLAMP_EXT = 0x8742
GL_COMPILE_STATUS = 0x8B81
GL_3D_COLOR_TEXTURE = 0x0603
GL_4PASS_1_EXT = 0x80A5
GL_PATH_GEN_COLOR_FORMAT_NV = 0x90B2
GL_SIGNALED_APPLE = 0x9119
GL_REPLACE_MIDDLE_SUN = 0x0002
GL_CONVOLUTION_2D = 0x8011
GL_FETCH_PER_SAMPLE_ARM = 0x8F65
GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5
GL_MAX_DEPTH = 0x8280
GL_INCR = 0x1E02
GL_COMPRESSED_RGBA_ASTC_5x5 = 0x93B2
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0
GL_TEXTURE_FETCH_BARRIER_BIT_EXT = 0x00000008
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT = 0x8D44
GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6
GL_FOG_INDEX = 0x0B61
GL_CULL_FRAGMENT_NV = 0x86E7
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV = 0x8CAB
GL_PIXEL_PACK_BUFFER_EXT = 0x88EB
GL_UNIFORM_MATRIX_STRIDE = 0x8A3D
GL_DRAW_BUFFER8_ATI = 0x882D
GL_FOG_COORD_ARRAY = 0x8457
GL_SURFACE_REGISTERED_NV = 0x86FD
GL_SRGB8_ALPHA8 = 0x8C43
GL_FASTEST = 0x1101
GL_AFFINE_2D_NV = 0x9092
GL_VERTEX_PROGRAM_CALLBACK_MESA = 0x8BB5
GL_PACK_SUBSAMPLE_RATE_SGIX = 0x85A0
GL_MAX_PROGRAM_PARAMETERS_ARB = 0x88A9
GL_TEXTURE_COLOR_SAMPLES_NV = 0x9046
GL_PRIMITIVE_BOUNDING_BOX_EXT = 0x92BE
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8C72
GL_SHADER_PIXEL_LOCAL_STORAGE_EXT = 0x8F64
GL_POST_CONVOLUTION_GREEN_SCALE = 0x801D
GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F
GL_RGB10 = 0x8052
GL_SMAPHS30_PROGRAM_BINARY_DMP = 0x9251
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT = 0x9069
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB = 0x91A7
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV = 0x888F
GL_DECAL = 0x2101
GL_ALPHA12 = 0x803D
GL_TEXTURE_SWIZZLE_R_EXT = 0x8E42
GL_TEXTURE_CROP_RECT_OES = 0x8B9D
GL_SAMPLER_3D_ARB = 0x8B5F
GL_COLOR_SUM_EXT = 0x8458
GL_FIRST_VERTEX_CONVENTION_OES = 0x8E4D
GL_FULL_SUPPORT = 0x82B7
GL_ACTIVE_SUBROUTINES = 0x8DE5
GL_TEXTURE_ALPHA_TYPE = 0x8C13
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8C00
GL_FLOAT_MAT3x4 = 0x8B68
GL_MODELVIEW16_ARB = 0x8730
GL_TEXTURE_RECTANGLE_ARB = 0x84F5
GL_PROXY_TEXTURE_2D_STACK_MESAX = 0x875C
GL_MAT_EMISSION_BIT_PGI = 0x00800000
GL_PATH_STROKE_BOUNDING_BOX_NV = 0x90A2
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB
GL_CLIP_ORIGIN = 0x935C
GL_DT_BIAS_NV = 0x8717
GL_UNSIGNED_INT_10_10_10_2_EXT = 0x8036
GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A
GL_TEXTURE_1D_STACK_MESAX = 0x8759
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV = 0x8C75
GL_LOCAL_CONSTANT_VALUE_EXT = 0x87EC
GL_FRAGMENT_LIGHT5_SGIX = 0x8411
GL_CONSTANT_NV = 0x8576
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8DDD
GL_MAT_SHININESS_BIT_PGI = 0x02000000
GL_ATTENUATION_EXT = 0x834D
GL_HSL_SATURATION_KHR = 0x92AE
GL_ALL_STATIC_DATA_IBM = 103060
GL_POINT_SIZE_MIN_SGIS = 0x8126
GL_SEPARATE_ATTRIBS_EXT = 0x8C8D
GL_UNIFORM_BLOCK_BINDING = 0x8A3F
GL_IMAGE_1D_ARRAY_EXT = 0x9052
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8DDE
GL_HALF_BIAS_NORMAL_NV = 0x853A
GL_SAMPLER_BINDING = 0x8919
GL_TEXTURE_USAGE_ANGLE = 0x93A2
GL_UNDEFINED_APPLE = 0x8A1C
GL_ASYNC_READ_PIXELS_SGIX = 0x835E
GL_GREEN_MIN_CLAMP_INGR = 0x8561
GL_INT_SAMPLER_CUBE_EXT = 0x8DCC
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT = 0x919A
GL_DUAL_INTENSITY8_SGIS = 0x8119
GL_OPERAND3_ALPHA_NV = 0x859B
GL_DRAW_BUFFER11_ARB = 0x8830
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV = 0x8F44
GL_MODELVIEW31_ARB = 0x873F
GL_LINEAR_SHARPEN_SGIS = 0x80AD
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT = 0x92CE
GL_MAX_LAYERS = 0x8281
GL_CLAMP_TO_BORDER = 0x812D
GL_SOURCE0_ALPHA = 0x8588
GL_VERTEX_ARRAY_STRIDE_EXT = 0x807C
GL_MAP2_INDEX = 0x0DB1
GL_OUTPUT_TEXTURE_COORD8_EXT = 0x87A5
GL_DARKEN_NV = 0x9297
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 = 0x93D5
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES = 0x92D4
GL_SKIP_MISSING_GLYPH_NV = 0x90A9
GL_TEXTURE_4D_BINDING_SGIS = 0x814F
GL_DELETE_STATUS = 0x8B80
GL_MULTISAMPLE_BIT_EXT = 0x20000000
GL_DRAW_FRAMEBUFFER = 0x8CA9
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT = 0x8CD1
GL_DRAW_BUFFER15_NV = 0x8834
GL_TEXTURE_BINDING_BUFFER_ARB = 0x8C2C
GL_FONT_NUM_GLYPH_INDICES_BIT_NV = 0x20000000
GL_PERFQUERY_FLUSH_INTEL = 0x83FA
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV = 0x8F31
GL_OUTPUT_VERTEX_EXT = 0x879A
GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES = 0x8B9E
GL_CONDITION_SATISFIED = 0x911C
GL_COLOR_TABLE_WIDTH_SGI = 0x80D9
GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6
GL_T4F_V4F = 0x2A28
GL_SAMPLE_ALPHA_TO_ONE_EXT = 0x809F
GL_TEXTURE_VIEW_MIN_LAYER_EXT = 0x82DD
GL_REG_21_ATI = 0x8936
GL_ALPHA_MAX_SGIX = 0x8321
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI = 0x8973
GL_CONTEXT_PROFILE_MASK = 0x9126
GL_TEXTURE_MAX_LEVEL_APPLE = 0x813D
GL_QUADS_EXT = 0x0007
GL_COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93B2
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT = 0x9061
GL_DEBUG_TYPE_POP_GROUP_KHR = 0x826A
GL_GPU_OPTIMIZED_QCOM = 0x8FB2
GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102
GL_UNPACK_CMYK_HINT_EXT = 0x800F
GL_EDGE_FLAG_ARRAY_EXT = 0x8079
GL_SYNC_FLUSH_COMMANDS_BIT_APPLE = 0x00000001
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83F2
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243
GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES = 0x898F
GL_RGB32F_ARB = 0x8815
GL_MAX_SAMPLES_APPLE = 0x8D57
GL_TEXTURE_BIT = 0x00040000
GL_MAX_CULL_DISTANCES = 0x82F9
GL_OUTPUT_TEXTURE_COORD17_EXT = 0x87AE
GL_BLEND_ADVANCED_COHERENT_NV = 0x9285
GL_TEXTURE_BUFFER_OES = 0x8C2A
GL_NUM_INSTRUCTIONS_TOTAL_ATI = 0x8972
GL_QUERY_BUFFER_BINDING_AMD = 0x9193
GL_TEXTURE_COMPARE_MODE_EXT = 0x884C
GL_PLUS_CLAMPED_ALPHA_NV = 0x92B2
GL_PATH_MODELVIEW_MATRIX_NV = 0x0BA6
GL_MAX_SAMPLE_MASK_WORDS_NV = 0x8E59
GL_NO_ERROR = 0
GL_INTERNALFORMAT_STENCIL_SIZE = 0x8276
GL_RENDERBUFFER_ALPHA_SIZE_EXT = 0x8D53
GL_CULL_VERTEX_OBJECT_POSITION_EXT = 0x81AC
GL_LUMINANCE8_ALPHA8_EXT = 0x8045
GL_MATRIX_INDEX_ARRAY_POINTER_OES = 0x8849
GL_MAX_DRAW_BUFFERS_NV = 0x8824
GL_LUMINANCE_ALPHA16F_EXT = 0x881F
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES = 0x8E86
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 = 0x93DD
GL_MAX_DEBUG_LOGGED_MESSAGES_KHR = 0x9144
GL_UNSIGNED_INT16_VEC2_NV = 0x8FF1
GL_STENCIL_SAMPLES_NV = 0x932E
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT = 0x8E2F
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES = 0x9124
GL_SHADER_SOURCE_LENGTH = 0x8B88
GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT = 0x8F67
GL_MATRIX14_ARB = 0x88CE
GL_Y_EXT = 0x87D6
GL_SPRITE_AXIS_SGIX = 0x814A
GL_COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93B5
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL = 0x94FA
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV = 0x8F25
GL_RGBA8UI = 0x8D7C
GL_RGB16I = 0x8D89
GL_TESS_CONTROL_TEXTURE = 0x829C
GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74
GL_IUI_V3F_EXT = 0x81AE
GL_FRAGMENT_COLOR_MATERIAL_SGIX = 0x8401
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE = 0x8A07
GL_INT_VEC4 = 0x8B55
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB = 0x88B1
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES = 0x8E85
GL_TOP_LEVEL_ARRAY_SIZE = 0x930C
GL_CLIENT_STORAGE_BIT = 0x0200
GL_WEIGHT_ARRAY_POINTER_OES = 0x86AC
GL_DRAW_BUFFER1_ATI = 0x8826
GL_COMPRESSED_RGB_ARB = 0x84ED
GL_REG_23_ATI = 0x8938
GL_VARIANT_ARRAY_POINTER_EXT = 0x87E9
GL_VERTEX_SUBROUTINE = 0x92E8
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900F
GL_MAP1_VERTEX_ATTRIB12_4_NV = 0x866C
GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM = 0x8F66
GL_MODELVIEW14_ARB = 0x872E
GL_TESS_GEN_SPACING = 0x8E77
GL_TEXTURE_COORD_NV = 0x8C79
GL_VERTEX_ATTRIB_ARRAY5_NV = 0x8655
GL_UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT = 0x8516
GL_VERTEX_STREAM7_ATI = 0x8773
GL_PN_TRIANGLES_POINT_MODE_ATI = 0x87F2
GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454
GL_POINT_DISTANCE_ATTENUATION = 0x8129
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x8808
GL_R8I = 0x8231
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x8809
GL_INVERSE_NV = 0x862B
GL_MAX_TEXTURE_BUFFER_SIZE_OES = 0x8C2B
GL_DRAW_FRAMEBUFFER_EXT = 0x8CA9
GL_FRAMEBUFFER_COMPLETE_OES = 0x8CD5
GL_COLOR_ATTACHMENT14_NV = 0x8CEE
GL_MODULATE_SUBTRACT_ATI = 0x8746
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV = 0x933D
GL_COMBINE4_NV = 0x8503
GL_VERTEX_ARRAY_RANGE_VALID_NV = 0x851F
GL_OPERAND3_RGB_NV = 0x8593
GL_PRIMITIVE_BOUNDING_BOX_ARB = 0x92BE
GL_RGB_SCALE_EXT = 0x8573
GL_UPPER_LEFT = 0x8CA2
GL_CLAMP_READ_COLOR = 0x891C
GL_LUMINANCE_FLOAT16_APPLE = 0x881E
GL_PACK_ROW_BYTES_APPLE = 0x8A15
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES = 0x8C2D
GL_SOFTLIGHT_KHR = 0x929C
GL_IDENTITY_NV = 0x862A
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT = 0x8DED
GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642
GL_UNSIGNED_INT_SAMPLER_BUFFER_OES = 0x8DD8
GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A
GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC
GL_MAX_SAMPLES_EXT = 0x8D57
GL_FRACTIONAL_ODD = 0x8E7B
GL_SOURCE2_ALPHA = 0x858A
GL_EVAL_VERTEX_ATTRIB4_NV = 0x86CA
GL_NUM_SPARSE_LEVELS_ARB = 0x91AA
GL_SKIP_DECODE_EXT = 0x8A4A
GL_QUADRATIC_CURVE_TO_NV = 0x0A
GL_FILE_NAME_NV = 0x9074
GL_OBJECT_BUFFER_SIZE_ATI = 0x8764
GL_HISTOGRAM_SINK_EXT = 0x802D
GL_COMBINE_ALPHA_EXT = 0x8572
GL_CONVOLUTION_BORDER_MODE = 0x8013
GL_2PASS_0_EXT = 0x80A2
GL_OP_INDEX_EXT = 0x8782
GL_MAX_SPARSE_TEXTURE_SIZE_AMD = 0x9198
GL_LINE_WIDTH = 0x0B21
GL_LUMINANCE_ALPHA32F_ARB = 0x8819
GL_RENDERBUFFER_BLUE_SIZE_EXT = 0x8D52
GL_ALPHA = 0x1906
GL_TEXTURE_WRAP_T = 0x2803
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB = 0x880F
GL_DOUBLE_MAT2x4_EXT = 0x8F4A
GL_INT_SAMPLER_2D_ARRAY = 0x8DCF
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8CD9
GL_TEXTURE_BORDER = 0x1005
GL_DRAW_BUFFER5_EXT = 0x882A
GL_ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1
GL_MAX_3D_TEXTURE_SIZE = 0x8073
GL_DEPTH_SCALE = 0x0D1E
GL_2PASS_0_SGIS = 0x80A2
GL_VIEWPORT_BOUNDS_RANGE = 0x825D
GL_CURRENT_ATTRIB_NV = 0x8626
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES = 0x9277
GL_MAX_PROGRAM_LOOP_COUNT_NV = 0x88F8
GL_FRAGMENT_INPUT_NV = 0x936D
GL_PROXY_TEXTURE_3D = 0x8070
GL_FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311
GL_TEXTURE22_ARB = 0x84D6
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT = 0x8E7F
GL_NORMAL_ARRAY_TYPE = 0x807E
GL_LOCAL_CONSTANT_EXT = 0x87C3
GL_COVERAGE_MODULATION_TABLE_NV = 0x9331
GL_OBJECT_PLANE = 0x2501
GL_MAX_PALETTE_MATRICES_ARB = 0x8842
GL_TEXTURE_REDUCTION_MODE_ARB = 0x9366
GL_LARGE_CCW_ARC_TO_NV = 0x16
GL_COPY_WRITE_BUFFER_BINDING = 0x8F37
GL_4PASS_2_SGIS = 0x80A6
GL_MATRIX6_ARB = 0x88C6
GL_3_BYTES_NV = 0x1408
GL_STENCIL_EXT = 0x1802
GL_ACTIVE_PROGRAM = 0x8259
GL_INT_SAMPLER_CUBE = 0x8DCC
GL_TEXTURE_VIEW = 0x82B5
GL_TEXTURE_COMPARE_MODE = 0x884C
GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001
GL_CUBIC_EXT = 0x8334
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 = 0x93D0
GL_MODELVIEW0_STACK_DEPTH_EXT = 0x0BA3
GL_OP_FLOOR_EXT = 0x878F
GL_TEXTURE_LOD_BIAS_S_SGIX = 0x818E
GL_UNPACK_RESAMPLE_SGIX = 0x842F
GL_COLOR_ATTACHMENT_EXT = 0x90F0
GL_COLOR_ATTACHMENT28 = 0x8CFC
GL_CONSERVE_MEMORY_HINT_PGI = 0x1A1FD
GL_TEXTURE18 = 0x84D2
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT = 0x8211
GL_ALWAYS = 0x0207
GL_FRAGMENT_COVERAGE_COLOR_NV = 0x92DE
GL_TEXTURE_BINDING_3D_OES = 0x806A
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0
GL_TRACE_NAME_MESA = 0x8756
GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM = 0x8FB3
GL_DRAW_BUFFER8 = 0x882D
GL_SAMPLES_SGIS = 0x80A9
GL_CONVOLUTION_FILTER_SCALE_EXT = 0x8014
GL_NORMAL_ARRAY_LENGTH_NV = 0x8F2C
GL_MAX_SHADER_BUFFER_ADDRESS_NV = 0x8F35
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL = 0x83F7
GL_SHADER_OBJECT_EXT = 0x8B48
GL_GUILTY_CONTEXT_RESET_ARB = 0x8253
GL_TEXTURE5 = 0x84C5
GL_COLOR_ARRAY_SIZE_EXT = 0x8081
GL_DRAW_INDIRECT_UNIFIED_NV = 0x8F40
GL_FIXED_OES = 0x140C
GL_MAX_DRAW_BUFFERS = 0x8824
GL_TEXTURE20 = 0x84D4
GL_TEXTURE_VIEW_MIN_LEVEL_EXT = 0x82DB
GL_MIRROR_CLAMP_TO_BORDER_EXT = 0x8912
GL_FRACTIONAL_ODD_EXT = 0x8E7B
GL_MAP2_VERTEX_ATTRIB8_4_NV = 0x8678
GL_SLUMINANCE8 = 0x8C47
GL_INTENSITY = 0x8049
GL_IMAGE_BUFFER_EXT = 0x9051
GL_MAP1_VERTEX_ATTRIB10_4_NV = 0x866A
GL_MODELVIEW1_ARB = 0x850A
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES = 0x9105
GL_RGB32F = 0x8815
GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23
GL_TEXTURE_CUBE_MAP_ARB = 0x8513
GL_ALPHA_BIAS = 0x0D1D
GL_VERTEX_ARRAY_BINDING_APPLE = 0x85B5
GL_OPERAND1_RGB_EXT = 0x8591
GL_COLOR_ATTACHMENT1 = 0x8CE1
GL_INTERLACE_SGIX = 0x8094
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93DB
GL_BOOL_VEC4_ARB = 0x8B59
GL_TEXTURE_BINDING_2D = 0x8069
GL_COMPRESSED_RG11_EAC_OES = 0x9272
GL_SMOOTH = 0x1D01
GL_VERSION_ES_CL_1_0 = 1
GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV = 0x84E3
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT = 0x8CDC
GL_READ_PIXELS = 0x828C
GL_TEXTURE_SHADOW = 0x82A1
GL_TRACE_ERRORS_BIT_MESA = 0x0020
GL_RGB16_SNORM_EXT = 0x8F9A
GL_ALPHA_TEST_REF = 0x0BC2
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001
GL_MAP2_VERTEX_4 = 0x0DB8
GL_TRIANGLE_STRIP_ADJACENCY_ARB = 0x000D
GL_TEXTURE_LEQUAL_R_SGIX = 0x819C
GL_RELATIVE_SMALL_CCW_ARC_TO_NV = 0x13
GL_SPRITE_TRANSLATION_SGIX = 0x814B
GL_ALLOW_DRAW_WIN_HINT_PGI = 0x1A20F
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB = 0x8E8F
GL_STATIC_READ = 0x88E5
GL_COMPARE_REF_TO_TEXTURE = 0x884E
GL_TESS_CONTROL_SUBROUTINE = 0x92E9
GL_RENDERBUFFER_RED_SIZE_OES = 0x8D50
GL_RGB32I = 0x8D83
GL_COPY_READ_BUFFER_NV = 0x8F36
GL_CULL_FACE = 0x0B44
GL_ROUNDED_RECT4_NV = 0xEC
GL_UNSIGNED_INT_IMAGE_2D_EXT = 0x9063
GL_FOG_COORD_ARRAY_POINTER = 0x8456
GL_RELATIVE_LINE_TO_NV = 0x05
GL_HALF_BIAS_NEGATE_NV = 0x853B
GL_UNDEFINED_VERTEX_OES = 0x8260
GL_DRAW_BUFFER15 = 0x8834
GL_COLOR_ATTACHMENT10 = 0x8CEA
GL_BUFFER_MAPPED_ARB = 0x88BC
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128
GL_PHONG_HINT_WIN = 0x80EB
GL_COMP_BIT_ATI = 0x00000002
GL_UNSIGNED_INT_24_8_OES = 0x84FA
GL_RED = 0x1903
GL_DRAW_BUFFER1_ARB = 0x8826
GL_DOUBLE_MAT4_EXT = 0x8F48
GL_PRIMITIVES_SUBMITTED_ARB = 0x82EF
GL_MATRIX1_ARB = 0x88C1
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT = 0x8E83
GL_OUTPUT_TEXTURE_COORD3_EXT = 0x87A0
GL_MAP_READ_BIT_EXT = 0x0001
GL_SMAPHS_PROGRAM_BINARY_DMP = 0x9252
GL_INDEX_TEST_FUNC_EXT = 0x81B6
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV = 0x8F45
GL_TRIANGLES_ADJACENCY = 0x000C
GL_TESS_GEN_VERTEX_ORDER_EXT = 0x8E78
GL_COLOR_TABLE_INTENSITY_SIZE = 0x80DF
GL_OUTPUT_TEXTURE_COORD7_EXT = 0x87A4
GL_COMMAND_BARRIER_BIT = 0x00000040
GL_QUERY_BY_REGION_WAIT_INVERTED = 0x8E19
GL_R8_EXT = 0x8229
GL_RGB5_A1_OES = 0x8057
GL_TEXTURE_COMPARE_FUNC = 0x884D
GL_PACK_COMPRESSED_BLOCK_WIDTH = 0x912B
GL_TEXTURE_EXTERNAL_OES = 0x8D65
GL_GEOMETRY_INPUT_TYPE = 0x8917
GL_2_BYTES = 0x1407
GL_PREVIOUS_TEXTURE_INPUT_NV = 0x86E4
GL_DRAW_FRAMEBUFFER_BINDING_NV = 0x8CA6
GL_DU8DV8_ATI = 0x877A
GL_PACK_SKIP_IMAGES_EXT = 0x806B
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 = 0x93DC
GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F
GL_REFERENCED_BY_FRAGMENT_SHADER = 0x930A
GL_SOURCE1_RGB_ARB = 0x8581
GL_COMPRESSED_RGBA_ASTC_10x6 = 0x93B9
GL_RGBA32I = 0x8D82
GL_TEXTURE18_ARB = 0x84D2
GL_MATRIX30_ARB = 0x88DE
GL_COLOR_ATTACHMENT5_EXT = 0x8CE5
GL_DEBUG_SEVERITY_MEDIUM_AMD = 0x9147
GL_LUMINANCE = 0x1909
GL_TEXTURE_MAX_CLAMP_T_SGIX = 0x836A
GL_FRAMEZOOM_FACTOR_SGIX = 0x818C
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000
GL_QUAD_ALPHA4_SGIS = 0x811E
GL_DSDT8_NV = 0x8709
GL_MODELVIEW30_ARB = 0x873E
GL_CONTEXT_ROBUST_ACCESS_KHR = 0x90F3
GL_DEBUG_TYPE_ERROR_KHR = 0x824C
GL_PERFQUERY_SINGLE_CONTEXT_INTEL = 0x00000000
GL_BINORMAL_ARRAY_EXT = 0x843A
GL_BUFFER_KHR = 0x82E0
GL_TEXTURE_BUFFER_FORMAT_EXT = 0x8C2E
GL_OUTPUT_TEXTURE_COORD29_EXT = 0x87BA
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT = 0x8023
GL_TRACK_MATRIX_TRANSFORM_NV = 0x8649
GL_LIGHTING = 0x0B50
GL_STENCIL_INDEX4 = 0x8D47
GL_SPARE1_NV = 0x852F
GL_TEXTURE4 = 0x84C4
GL_GUILTY_CONTEXT_RESET = 0x8253
GL_ATTRIB_ARRAY_POINTER_NV = 0x8645
GL_FRONT = 0x0404
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8DBC
GL_COMPARE_REF_TO_TEXTURE_EXT = 0x884E
GL_FAILURE_NV = 0x9030
GL_CURRENT_FOG_COORDINATE_EXT = 0x8453
GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT = 0x8A56
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV = 0x8C74
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314
GL_E_TIMES_F_NV = 0x8531
GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES = 0x8B9F
GL_PATH_GEN_MODE_NV = 0x90B0
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI = 0x00200000
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES = 0x8CD2
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105
GL_TEXTURE_INTENSITY_SIZE_EXT = 0x8061
GL_PATH_GEN_COMPONENTS_NV = 0x90B3
GL_RENDERBUFFER_SAMPLES = 0x8CAB
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV = 0x8DAD
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM = 103084
GL_GEOMETRY_SHADER_BIT_OES = 0x00000004
GL_ALPHA8I_EXT = 0x8D90
GL_TEXTURE_UPDATE_BARRIER_BIT = 0x00000100
GL_QUERY_OBJECT_AMD = 0x9153
GL_MINMAX_SINK = 0x8030
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CA
GL_RENDERBUFFER_GREEN_SIZE_EXT = 0x8D51
GL_SLUMINANCE8_EXT = 0x8C47
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6
GL_PROGRAM_TARGET_NV = 0x8646
GL_TEXTURE_TYPE_QCOM = 0x8BD7
GL_MAX_VERTEX_ATTRIBS_ARB = 0x8869
GL_LUMINANCE4_ALPHA4 = 0x8043
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB = 0x900B
GL_DEPTH_TEXTURE_MODE_ARB = 0x884B
GL_COPY_PIXEL_TOKEN = 0x0706
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT = 0x850F
GL_BIAS_BIT_ATI = 0x00000008
GL_SEPARATE_SPECULAR_COLOR_EXT = 0x81FA
GL_FRAGMENT_DEPTH_EXT = 0x8452
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV = 0x9347
GL_ARRAY_SIZE = 0x92FB
GL_LUMINANCE32F_ARB = 0x8818
GL_NORMAL_ARRAY_ADDRESS_NV = 0x8F22
GL_DEBUG_SEVERITY_LOW = 0x9148
GL_VERTEX_ARRAY_RANGE_NV = 0x851D
GL_MAP1_VERTEX_ATTRIB5_4_NV = 0x8665
GL_RGBA4 = 0x8056
GL_SAMPLE_PATTERN_EXT = 0x80AC
GL_TEXTURE16_ARB = 0x84D0
GL_FRAMEBUFFER_UNDEFINED_OES = 0x8219
GL_SOURCE2_ALPHA_EXT = 0x858A
GL_PIXEL_TILE_HEIGHT_SGIX = 0x8141
GL_MULTISAMPLES_NV = 0x9371
GL_WRITE_ONLY = 0x88B9
GL_DMP_PROGRAM_BINARY_DMP = 0x9253
GL_CAVEAT_SUPPORT = 0x82B8
GL_DEBUG_SEVERITY_MEDIUM = 0x9147
GL_FLOAT_MAT4x3_NV = 0x8B6A
GL_PROXY_COLOR_TABLE = 0x80D3
GL_NO_RESET_NOTIFICATION_EXT = 0x8261
GL_SKIP_COMPONENTS1_NV = -6
GL_MINUS_NV = 0x929F
GL_BLEND_EQUATION_OES = 0x8009
GL_DEBUG_OBJECT_MESA = 0x8759
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES = 0x92D3
GL_INVERT_OVG_NV = 0x92B4
GL_LUMINANCE_FLOAT32_ATI = 0x8818
GL_DRAW_BUFFER10_EXT = 0x882F
GL_PALETTE8_RGBA4_OES = 0x8B98
GL_MAX_FRAMEBUFFER_LAYERS_OES = 0x9317
GL_TEXTURE_MAX_LEVEL = 0x813D
GL_T2F_IUI_N3F_V2F_EXT = 0x81B3
GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F
GL_LUMINANCE_ALPHA = 0x190A
GL_TEXTURE_STENCIL_SIZE_EXT = 0x88F1
GL_COLOR_BUFFER_BIT = 0x00004000
GL_OUTPUT_TEXTURE_COORD0_EXT = 0x879D
GL_RG16_SNORM_EXT = 0x8F99
GL_DRAW_BUFFER0_ATI = 0x8825
GL_COLOR_ATTACHMENT8_EXT = 0x8CE8
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE = 0x8A04
GL_UNDEFINED_VERTEX_EXT = 0x8260
GL_DYNAMIC_READ = 0x88E9
GL_COLOR_TABLE_BLUE_SIZE_SGI = 0x80DC
GL_RELATIVE_MOVE_TO_NV = 0x03
GL_PERCENTAGE_AMD = 0x8BC3
GL_DEPTH24_STENCIL8 = 0x88F0
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE = 0x8A09
GL_MAP1_VERTEX_ATTRIB11_4_NV = 0x866B
GL_IMAGE_BINDING_LEVEL = 0x8F3B
GL_RED_INTEGER = 0x8D94
GL_DEPTH_CLAMP_NEAR_AMD = 0x901E
GL_RGBA_FLOAT32_APPLE = 0x8814
GL_COMPRESSED_RGBA_ASTC_6x5 = 0x93B3
GL_DEBUG_SOURCE_APPLICATION_ARB = 0x824A
GL_COMPRESSED_RGBA_ASTC_6x6 = 0x93B4
GL_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8C71
GL_IMAGE_TEXEL_SIZE = 0x82A7
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT = 0x8510
GL_COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93B3
GL_STENCIL_BUFFER_BIT7_QCOM = 0x00800000
GL_STENCIL_INDEX8_EXT = 0x8D48
GL_TEXTURE_COVERAGE_SAMPLES_NV = 0x9045
GL_MAX_CONVOLUTION_HEIGHT_EXT = 0x801B
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT = 0x87CD
GL_MAX_TEXTURE_IMAGE_UNITS_ARB = 0x8872
GL_INT_VEC2 = 0x8B53
GL_TRANSLATE_Y_NV = 0x908F
GL_INDEX_ARRAY_LIST_IBM = 103073
GL_RG16F = 0x822F
GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623
GL_CLIP_PLANE3_IMG = 0x3003
GL_SAMPLER_CUBE_MAP_ARRAY_ARB = 0x900C
GL_MAX_DRAW_BUFFERS_EXT = 0x8824
GL_BUFFER_STORAGE_FLAGS = 0x8220
GL_BLUE_BIAS = 0x0D1B
GL_EDGE_FLAG_ARRAY_ADDRESS_NV = 0x8F26
GL_HISTOGRAM_FORMAT = 0x8027
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV = 0x9025
GL_DEPTH_TEST = 0x0B71
GL_DRAW_BUFFER7 = 0x882C
GL_ATTRIBUTE_ADDRESS_COMMAND_NV = 0x0009
GL_R8_SNORM = 0x8F94
GL_FEEDBACK_BUFFER_SIZE = 0x0DF1
GL_SOFTLIGHT = 0x929C
GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE
GL_IMAGE_CUBIC_WEIGHT_HP = 0x815E
GL_VIEWPORT_BOUNDS_RANGE_NV = 0x825D
GL_PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93D4
GL_GEOMETRY_LINKED_VERTICES_OUT_OES = 0x8916
GL_UNIFORM_BUFFER_EXT = 0x8DEE
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE = 0x851E
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107
GL_MIN = 0x8007
GL_TEXTURE_IMMUTABLE_FORMAT_EXT = 0x912F
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213
GL_SMALL_CCW_ARC_TO_NV = 0x12
GL_COMPRESSED_TEXTURE_FORMATS_ARB = 0x86A3
GL_LINEAR_CLIPMAP_LINEAR_SGIX = 0x8170
GL_SAMPLE_COVERAGE_INVERT = 0x80AB
GL_NUM_INSTRUCTIONS_PER_PASS_ATI = 0x8971
GL_INDEX_ARRAY_BUFFER_BINDING_ARB = 0x8899
GL_MODULATE_COLOR_IMG = 0x8C04
GL_POST_COLOR_MATRIX_RED_BIAS = 0x80B8
GL_FONT_UNDERLINE_THICKNESS_BIT_NV = 0x08000000
GL_INTENSITY16_EXT = 0x804D
GL_MAP2_TEXTURE_COORD_4 = 0x0DB6
GL_TEXTURE_GEN_MODE_OES = 0x2500
GL_INTENSITY8UI_EXT = 0x8D7F
GL_MAX_DEBUG_LOGGED_MESSAGES = 0x9144
GL_TESS_CONTROL_SHADER_BIT = 0x00000008
GL_MAX_VIEWPORT_DIMS = 0x0D3A
GL_TEXTURE_DEPTH_SIZE_ARB = 0x884A
GL_OPERAND0_ALPHA_ARB = 0x8598
GL_COLOR_BUFFER_BIT7_QCOM = 0x00000080
GL_SYNC_FENCE_APPLE = 0x9116
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV = 0x8855
GL_TEXTURE_DEPTH_TYPE = 0x8C16
GL_CON_3_ATI = 0x8944
GL_SWIZZLE_STRQ_ATI = 0x897A
GL_TESSELLATION_FACTOR_AMD = 0x9005
GL_Z_EXT = 0x87D7
GL_VERTEX_ARRAY_BINDING = 0x85B5
GL_TEXTURE_FILTER4_SIZE_SGIS = 0x8147
GL_CLIP_DISTANCE5 = 0x3005
GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802
GL_TEXTURE29_ARB = 0x84DD
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB = 0x809E
GL_VBO_FREE_MEMORY_ATI = 0x87FB
GL_FLOAT_R32_NV = 0x8885
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB = 0x9345
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB = 0x88A3
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT = 0x81A8
GL_MAX_FRAMEBUFFER_LAYERS = 0x9317
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB = 0x8B89
GL_GCCSO_SHADER_BINARY_FJ = 0x9260
GL_PIXEL_MAP_S_TO_S = 0x0C71
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV = 0x8850
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT = 0x8C84
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3
GL_IMAGE_CLASS_1_X_32 = 0x82BB
GL_FLOAT_MAT3x2 = 0x8B67
GL_CONVOLUTION_FILTER_BIAS_EXT = 0x8015
GL_BUFFER_MAP_OFFSET = 0x9121
GL_READ_PIXELS_FORMAT = 0x828D
GL_COMPRESSED_SRGB_ALPHA = 0x8C49
GL_COLOR_EXT = 0x1800
GL_OPERAND2_ALPHA_ARB = 0x859A
GL_MAX_TEXTURE_BUFFER_SIZE_ARB = 0x8C2B
GL_MAX_LIST_NESTING = 0x0B31
GL_TEXTURE_BORDER_COLOR = 0x1004
GL_TEXTURE_COMPARE_OPERATOR_SGIX = 0x819B
GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36
GL_PALETTE8_RGB8_OES = 0x8B95
GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG = 0x9137
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB = 0x8243
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES = 0x8E82
GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT = 0x90CD
GL_FOG_BIT = 0x00000080
GL_DRAW_BUFFER4_EXT = 0x8829
GL_VERTEX_ATTRIB_ARRAY6_NV = 0x8656
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT = 0x8338
GL_COLOR_ATTACHMENT22 = 0x8CF6
GL_HISTOGRAM_GREEN_SIZE = 0x8029
GL_SAMPLER_CUBE_SHADOW_EXT = 0x8DC5
GL_IUI_N3F_V2F_EXT = 0x81AF
GL_IMAGE_CUBE_EXT = 0x9050
GL_COMBINE_RGB_EXT = 0x8571
GL_ELEMENT_ARRAY_POINTER_APPLE = 0x8A0E
GL_SHADER_BINARY_FORMATS = 0x8DF8
GL_BUFFER_SIZE_ARB = 0x8764
GL_DOUBLE = 0x140A
GL_LUMINANCE12_ALPHA4_EXT = 0x8046
GL_POST_CONVOLUTION_ALPHA_BIAS = 0x8023
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT = 0x919F
GL_DEBUG_SEVERITY_LOW_AMD = 0x9148
GL_COLOR_MATRIX_SGI = 0x80B1
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT = 0x8C29
GL_COVERAGE_COMPONENT4_NV = 0x8ED1
GL_TEXTURE_GREEN_TYPE_ARB = 0x8C11
GL_PATH_STENCIL_VALUE_MASK_NV = 0x90B9
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV = 0x9036
GL_ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3
GL_PACK_IMAGE_HEIGHT_EXT = 0x806C
GL_SAMPLER_2D_ARB = 0x8B5E
GL_DOUBLE_EXT = 0x140A
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB = 0x8895
GL_ALPHA_SCALE = 0x0D1C
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV = 0x8C28
GL_INT8_VEC3_NV = 0x8FE2
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX = 0x8189
GL_OP_DOT3_EXT = 0x8784
GL_BUMP_ROT_MATRIX_SIZE_ATI = 0x8776
GL_PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69
GL_EDGE_FLAG_ARRAY_LIST_IBM = 103075
GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123
GL_CLIP_DISTANCE6 = 0x3006
GL_FRONT_RIGHT = 0x0401
GL_RENDERBUFFER_WIDTH_EXT = 0x8D42
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB = 0x82F2
GL_FLOAT_RGBA_MODE_NV = 0x888E
GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001
GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F
GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV = 0x0D36
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV = 0x10
GL_TEXTURE_VIEW_NUM_LAYERS_OES = 0x82DE
GL_FOG_START = 0x0B63
GL_INSTRUMENT_MEASUREMENTS_SGIX = 0x8181
GL_DOUBLE_MAT2x3 = 0x8F49
GL_LAYER_PROVOKING_VERTEX_EXT = 0x825E
GL_LOGIC_OP_MODE = 0x0BF0
GL_QUERY_WAIT_NV = 0x8E13
GL_FLOAT_RGBA_NV = 0x8883
GL_ADD_SIGNED_ARB = 0x8574
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX = 0x817C
GL_AUTO_NORMAL = 0x0D80
GL_RG8UI = 0x8238
GL_UNSIGNED_INT_5_9_9_9_REV_EXT = 0x8C3E
GL_PATH_FILL_BOUNDING_BOX_NV = 0x90A1
GL_CON_31_ATI = 0x8960
GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES = 0x851C
GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD
GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456
GL_FLOAT_MAT4_ARB = 0x8B5C
GL_TEXTURE17 = 0x84D1
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL = 0x9500
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB = 0x889C
GL_TESS_CONTROL_SHADER_BIT_EXT = 0x00000008
GL_ALPHA_TEST_FUNC = 0x0BC1
GL_POLYGON_OFFSET_POINT_NV = 0x2A01
GL_CULL_VERTEX_EXT = 0x81AA
GL_MAP1_VERTEX_4 = 0x0D98
GL_FLOAT_RG32_NV = 0x8887
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV = 0x8DA3
GL_RENDERER = 0x1F01
GL_GLYPH_HAS_KERNING_BIT_NV = 0x100
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT = 0x8515
GL_ALPHA_TEST = 0x0BC0
GL_TEXTURE_3D_OES = 0x806F
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV = 0x88FD
GL_BLEND_EQUATION = 0x8009
GL_CLAMP_VERTEX_COLOR_ARB = 0x891A
GL_TEXTURE15 = 0x84CF
GL_CIRCULAR_CW_ARC_TO_NV = 0xFA
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT = 0x00004000
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB = 0x900D
GL_PACK_ROW_LENGTH = 0x0D02
GL_MAX_PROGRAM_GENERIC_RESULTS_NV = 0x8DA6
GL_SAMPLE_MASK_EXT = 0x80A0
GL_TEXTURE_SWIZZLE_A_EXT = 0x8E45
GL_INT_IMAGE_2D_ARRAY = 0x905E
GL_SIGNED_NORMALIZED = 0x8F9C
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB = 0x88B4
GL_LINE_LOOP = 0x0002
GL_PLUS_DARKER_NV = 0x9292
GL_SAMPLER_1D_ARB = 0x8B5D
GL_VERTEX_SHADER_EXT = 0x8780
GL_COMPRESSED_RG = 0x8226
GL_MAX_FOG_FUNC_POINTS_SGIS = 0x812C
GL_EVAL_VERTEX_ATTRIB8_NV = 0x86CE
GL_IMAGE_2D_RECT = 0x904F
GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT = 0x9199
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES = 0x8CD0
GL_MAP2_VERTEX_ATTRIB2_4_NV = 0x8672
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV = 0x9342
GL_INT_VEC4_ARB = 0x8B55
GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84
GL_OUTPUT_TEXTURE_COORD11_EXT = 0x87A8
GL_TEXTURE_COMPRESSION_HINT = 0x84EF
GL_FRAMEBUFFER_COMPLETE_EXT = 0x8CD5
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E
GL_POINT_FADE_THRESHOLD_SIZE_EXT = 0x8128
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC
GL_NORMAL_ARRAY_TYPE_EXT = 0x807E
GL_GPU_DISJOINT_EXT = 0x8FBB
GL_RG16I = 0x8239
GL_HALF_BIT_ATI = 0x00000008
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 = 0x93D4
GL_BUFFER_DATA_SIZE = 0x9303
GL_FLOAT16_VEC4_NV = 0x8FFB
GL_PROGRAM_BINARY_LENGTH_OES = 0x8741
GL_UNSIGNED_INT_24_8_NV = 0x84FA
GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES = 0x9307
GL_OPERAND1_ALPHA_ARB = 0x8599
GL_DOUBLE_MAT4 = 0x8F48
GL_PATH_FORMAT_PS_NV = 0x9071
GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV = 0x90FC
GL_COMPRESSED_RGBA_ASTC_5x4 = 0x93B1
GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT = 0x8BE7
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB = 0x8E8D
GL_MAP2_VERTEX_ATTRIB6_4_NV = 0x8676
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV = 0x8C88
GL_CLIP_DISTANCE1_APPLE = 0x3001
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL = 0x00000001
GL_SOURCE0_ALPHA_ARB = 0x8588
GL_OUTPUT_TEXTURE_COORD20_EXT = 0x87B1
GL_OBJECT_BUFFER_USAGE_ATI = 0x8765
GL_BUFFER_VARIABLE = 0x92E5
GL_QUERY_KHR = 0x82E3
GL_UNPACK_SWAP_BYTES = 0x0CF0
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV = 0x870C
GL_R8 = 0x8229
GL_SAMPLER_2D_RECT_SHADOW_ARB = 0x8B64
GL_TEXTURE_3D_EXT = 0x806F
GL_READ_FRAMEBUFFER_NV = 0x8CA8
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2
GL_MINMAX_FORMAT = 0x802F
GL_BUFFER_GPU_ADDRESS_NV = 0x8F1D
GL_INDEX_ARRAY_POINTER_EXT = 0x8091
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV = 0x9034
GL_NUM_GENERAL_COMBINERS_NV = 0x854E
GL_DRAW_BUFFER0_ARB = 0x8825
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT = 0x8DA8
GL_DEPTH_COMPONENT32_OES = 0x81A7
GL_DRAW_BUFFER2_ATI = 0x8827
GL_TEXTURE_1D_ARRAY = 0x8C18
GL_RGBA8UI_EXT = 0x8D7C
GL_LUMINANCE6_ALPHA2_EXT = 0x8044
GL_TEXTURE_SWIZZLE_RGBA_EXT = 0x8E46
GL_DUAL_LUMINANCE12_SGIS = 0x8116
GL_ITALIC_BIT_NV = 0x02
GL_TRACE_PRIMITIVES_BIT_MESA = 0x0002
GL_DYNAMIC_ATI = 0x8761
GL_BOOL_VEC3 = 0x8B58
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80
GL_FRAGMENTS_INSTRUMENT_MAX_SGIX = 0x8315
GL_UNSIGNED_INT_IMAGE_CUBE = 0x9066
GL_OUTPUT_TEXTURE_COORD10_EXT = 0x87A7
GL_MAX_IMAGE_UNITS_EXT = 0x8F38
GL_SPARSE_STORAGE_BIT_ARB = 0x0400
GL_RG8 = 0x822B
GL_PROGRAM_SEPARABLE = 0x8258
GL_DEBUG_ASSERT_MESA = 0x875B
GL_BUFFER_FLUSHING_UNMAP_APPLE = 0x8A13
GL_CURRENT_MATRIX_NV = 0x8641
GL_RECIP_ADD_SIGNED_ALPHA_IMG = 0x8C05
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8C4F
GL_FRAMEBUFFER_OES = 0x8D40
GL_SCREEN = 0x9295
GL_STENCIL_BUFFER_BIT1_QCOM = 0x00020000
GL_UNSIGNED_SHORT = 0x1403
GL_FRAMEZOOM_SGIX = 0x818B
GL_FRAGMENT_LIGHT0_SGIX = 0x840C
GL_IUI_N3F_V3F_EXT = 0x81B0
GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV = 0x0D38
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES = 0x910C
GL_MAX_TEXTURE_SIZE = 0x0D33
GL_VERTEX_ARRAY_TYPE = 0x807B
GL_AVERAGE_EXT = 0x8335
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42
GL_LINK_STATUS = 0x8B82
GL_MODELVIEW0_MATRIX_EXT = 0x0BA6
GL_TEXTURE_DEFORMATION_SGIX = 0x8195
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT = 0x808A
GL_QUERY_RESULT_ARB = 0x8866
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV = 0x86F2
GL_CLIP_DISTANCE_NV = 0x8C7A
GL_UNSIGNED_NORMALIZED_EXT = 0x8C17
GL_COLOR_ATTACHMENT16 = 0x8CF0
GL_RENDERBUFFER_BINDING = 0x8CA7
GL_DEPENDENT_AR_TEXTURE_2D_NV = 0x86E9
GL_ALPHA16F_EXT = 0x881C
GL_LINE_STRIP_ADJACENCY_ARB = 0x000B
GL_FRAMEBUFFER_BARRIER_BIT_EXT = 0x00000400
GL_COMPRESSED_RG_RGTC2 = 0x8DBD
GL_DOUBLE_VEC4_EXT = 0x8FFE
GL_INTENSITY32F_ARB = 0x8817
GL_FLOAT_R16_NV = 0x8884
GL_LUMINANCE8_OES = 0x8040
GL_OUTPUT_TEXTURE_COORD22_EXT = 0x87B3
GL_MINMAX_SINK_EXT = 0x8030
GL_SHARED_TEXTURE_PALETTE_EXT = 0x81FB
GL_ELEMENT_ARRAY_BUFFER_ARB = 0x8893
GL_STREAM_DRAW_ARB = 0x88E0
GL_TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF
GL_RGB32UI_EXT = 0x8D71
GL_ALPHA_FLOAT16_APPLE = 0x881C
GL_MODELVIEW12_ARB = 0x872C
GL_COLOR_ARRAY_STRIDE_EXT = 0x8083
GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT = 0x900E
GL_STATIC_DRAW_ARB = 0x88E4
GL_TEXTURE_IMAGE_FORMAT = 0x828F
GL_GEOMETRY_LINKED_VERTICES_OUT_EXT = 0x8916
GL_TEXTURE_BUFFER_SIZE_OES = 0x919E
GL_REPLACE_EXT = 0x8062
GL_ALPHA16 = 0x803E
GL_LIGHT0 = 0x4000
GL_RG32UI = 0x823C
GL_MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF
GL_STENCIL_CLEAR_VALUE = 0x0B91
GL_VERTEX_PROGRAM_POSITION_MESA = 0x8BB4
GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75
GL_CONVOLUTION_1D = 0x8010
GL_OPERAND1_RGB_ARB = 0x8591
GL_ACCUM_CLEAR_VALUE = 0x0B80
GL_CONSTANT_EXT = 0x8576
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93D5
GL_MODELVIEW1_STACK_DEPTH_EXT = 0x8502
GL_CONTEXT_RELEASE_BEHAVIOR_KHR = 0x82FB
GL_DEBUG_GROUP_STACK_DEPTH_KHR = 0x826D
GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125
GL_ATTACHED_SHADERS = 0x8B85
GL_LOSE_CONTEXT_ON_RESET_KHR = 0x8252
GL_STENCIL_BUFFER_BIT3_QCOM = 0x00080000
GL_HSL_SATURATION = 0x92AE
GL_PALETTE4_R5_G6_B5_OES = 0x8B92
GL_OBJECT_TYPE_APPLE = 0x9112
GL_OCCLUSION_QUERY_EVENT_MASK_AMD = 0x874F
GL_FORMAT_SUBSAMPLE_244_244_OML = 0x8983
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0
GL_SAMPLE_ALPHA_TO_ONE_SGIS = 0x809F
GL_VENDOR = 0x1F00
GL_RENDERBUFFER = 0x8D41
GL_MAX_NAME_STACK_DEPTH = 0x0D37
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB = 0x880E
GL_IMAGE_BINDING_FORMAT = 0x906E
GL_ACTIVE_VARIABLES = 0x9305
GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B
GL_MAX_FRAMEBUFFER_LAYERS_EXT = 0x9317
GL_HI_BIAS_NV = 0x8714
GL_POINT_SIZE_ARRAY_OES = 0x8B9C
GL_VERTEX_SHADER_INSTRUCTIONS_EXT = 0x87CF
GL_CURRENT_QUERY_ARB = 0x8865
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL = 0x94FB
GL_GEOMETRY_INPUT_TYPE_ARB = 0x8DDB
GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B
GL_CONVOLUTION_HEIGHT = 0x8019
GL_MAX_VERTEX_ATTRIBS = 0x8869
GL_INT = 0x1404
GL_TEXTURE_FREE_MEMORY_ATI = 0x87FC
GL_MAX_PATCH_VERTICES_OES = 0x8E7D
GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8C03
GL_GPU_ADDRESS_NV = 0x8F34
GL_SAMPLE_SHADING = 0x8C36
GL_SCALED_RESOLVE_NICEST_EXT = 0x90BB
GL_STENCIL_BACK_REF = 0x8CA3
GL_HISTOGRAM_EXT = 0x8024
GL_DRAW_BUFFER14_EXT = 0x8833
GL_INT_IMAGE_2D_MULTISAMPLE_EXT = 0x9060
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES = 0x93E7
GL_FOG_HINT = 0x0C54
GL_COLOR_ARRAY_TYPE = 0x8082
GL_DEBUG_SEVERITY_NOTIFICATION_KHR = 0x826B
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT = 0x845B
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT = 0x92D3
GL_OP_MADD_EXT = 0x8788
GL_LINEARBURN_NV = 0x92A5
GL_RGBA32F_ARB = 0x8814
GL_VIDEO_COLOR_CONVERSION_MAX_NV = 0x902A
GL_POST_CONVOLUTION_RED_BIAS_EXT = 0x8020
GL_TRANSFORM_FEEDBACK_VARYINGS_NV = 0x8C83
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT = 0x8E85
GL_UNSIGNED_BYTE_3_3_2 = 0x8032
GL_AUX3 = 0x040C
GL_REG_31_ATI = 0x8940
GL_MAX_SUBROUTINES = 0x8DE7
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221
GL_DETAIL_TEXTURE_MODE_SGIS = 0x809B
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB = 0x8B8A
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV = 0x9330
GL_DRAW_BUFFER1_EXT = 0x8826
GL_READ_BUFFER_NV = 0x0C02
GL_POINT_SIZE_ARRAY_POINTER_OES = 0x898C
GL_EVAL_VERTEX_ATTRIB11_NV = 0x86D1
GL_SAMPLE_COVERAGE_VALUE = 0x80AA
GL_ACCUM_RED_BITS = 0x0D58
GL_STENCIL_ATTACHMENT = 0x8D20
GL_VARIANT_ARRAY_EXT = 0x87E8
GL_DOT3_RGB = 0x86AE
GL_FIRST_VERTEX_CONVENTION = 0x8E4D
GL_TEXTURE0 = 0x84C0
GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1
GL_RG32F_EXT = 0x8230
GL_TEXTURE_SHARED_SIZE = 0x8C3F
GL_BLUE_BIT_ATI = 0x00000004

def init():
    gl = sys.modules['ed2d.opengl.gl']

    noParms = ()
    gl.glGetClipPlane = gl_func( 'glGetClipPlane', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glColor4us = gl_func( 'glColor4us', void, (GLushort, GLushort, GLushort, GLushort))
    gl.glCompressedMultiTexImage3DEXT = gl_func( 'glCompressedMultiTexImage3DEXT', void, (GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glBinormal3dEXT = gl_func( 'glBinormal3dEXT', void, (GLdouble, GLdouble, GLdouble))
    gl.glProgramUniform4iEXT = gl_func( 'glProgramUniform4iEXT', void, (GLuint, GLint, GLint, GLint, GLint, GLint))
    gl.glVertexAttribI2i = gl_func( 'glVertexAttribI2i', void, (GLuint, GLint, GLint))
    gl.glProgramUniform2iv = gl_func( 'glProgramUniform2iv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glNamedProgramLocalParametersI4uivEXT = gl_func( 'glNamedProgramLocalParametersI4uivEXT', void, (GLuint, GLenum, GLuint, GLsizei, ct.POINTER(GLuint)))
    gl.glWindowPos2dvARB = gl_func( 'glWindowPos2dvARB', void, (ct.POINTER(GLdouble),))
    gl.glClearDepthf = gl_func( 'glClearDepthf', void, (GLfloat,))
    gl.glPathCoverDepthFuncNV = gl_func( 'glPathCoverDepthFuncNV', void, (GLenum,))
    gl.glBlitNamedFramebuffer = gl_func( 'glBlitNamedFramebuffer', void, (GLuint, GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum))
#     gl.glConvolutionParameterxvOES = gl_func( 'glConvolutionParameterxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glGenPathsNV = gl_func( 'glGenPathsNV', GLuint, (GLsizei,))
    gl.glBeginConditionalRenderNV = gl_func( 'glBeginConditionalRenderNV', void, (GLuint, GLenum))
#     gl.glMultiTexCoord4xvOES = gl_func( 'glMultiTexCoord4xvOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glTextureImage2DMultisampleCoverageNV = gl_func( 'glTextureImage2DMultisampleCoverageNV', void, (GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean))
    gl.glBlendEquation = gl_func( 'glBlendEquation', void, (GLenum,))
    gl.glMapBufferRangeEXT = gl_func( 'glMapBufferRangeEXT', ct.POINTER(void), (GLenum, GLintptr, GLsizeiptr, GLbitfield))
    gl.glUniform2uiv = gl_func( 'glUniform2uiv', void, (GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glConvolutionParameterivEXT = gl_func( 'glConvolutionParameterivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glDrawCommandsStatesNV = gl_func( 'glDrawCommandsStatesNV', void, (GLuint, ct.POINTER(GLintptr), ct.POINTER(GLsizei), ct.POINTER(GLuint), ct.POINTER(GLuint), GLuint))
    gl.glCopyTexImage1D = gl_func( 'glCopyTexImage1D', void, (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint))
    gl.glColorTableEXT = gl_func( 'glColorTableEXT', void, (GLenum, GLenum, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glSamplerParameterIuiv = gl_func( 'glSamplerParameterIuiv', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glGetMultiTexEnvfvEXT = gl_func( 'glGetMultiTexEnvfvEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glTangent3bvEXT = gl_func( 'glTangent3bvEXT', void, (ct.POINTER(GLbyte),))
    gl.glLoadIdentityDeformationMapSGIX = gl_func( 'glLoadIdentityDeformationMapSGIX', void, (GLbitfield,))
    gl.glUniform1fvARB = gl_func( 'glUniform1fvARB', void, (GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glEvalMesh2 = gl_func( 'glEvalMesh2', void, (GLenum, GLint, GLint, GLint, GLint))
    gl.glClearDepthfOES = gl_func( 'glClearDepthfOES', void, (GLclampf,))
    gl.glVertexStream3ivATI = gl_func( 'glVertexStream3ivATI', void, (GLenum, ct.POINTER(GLint)))
    gl.glTexCoord1fv = gl_func( 'glTexCoord1fv', void, (ct.POINTER(GLfloat),))
    gl.glGetArrayObjectivATI = gl_func( 'glGetArrayObjectivATI', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glProgramUniform2fv = gl_func( 'glProgramUniform2fv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glVertexAttrib4NubARB = gl_func( 'glVertexAttrib4NubARB', void, (GLuint, GLubyte, GLubyte, GLubyte, GLubyte))
    gl.glVertexAttrib2dARB = gl_func( 'glVertexAttrib2dARB', void, (GLuint, GLdouble, GLdouble))
    gl.glMultiDrawElements = gl_func( 'glMultiDrawElements', void, (GLenum, ct.POINTER(GLsizei), GLenum, ct.POINTER(ct.POINTER(void)), GLsizei))
#     gl.glColor4xvOES = gl_func( 'glColor4xvOES', void, (ct.POINTER(GLfixed),))
    gl.glVertex3iv = gl_func( 'glVertex3iv', void, (ct.POINTER(GLint),))
    gl.glDrawBuffers = gl_func( 'glDrawBuffers', void, (GLsizei, ct.POINTER(GLenum)))
    gl.glGetVariantPointervEXT = gl_func( 'glGetVariantPointervEXT', void, (GLuint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glFlushPixelDataRangeNV = gl_func( 'glFlushPixelDataRangeNV', void, (GLenum,))
    gl.glStopInstrumentsSGIX = gl_func( 'glStopInstrumentsSGIX', void, (GLint,))
    gl.glColorTableParameterfv = gl_func( 'glColorTableParameterfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glTextureSubImage1D = gl_func( 'glTextureSubImage1D', void, (GLuint, GLint, GLint, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetVariantArrayObjectfvATI = gl_func( 'glGetVariantArrayObjectfvATI', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glReplacementCodeuiNormal3fVertex3fSUN = gl_func( 'glReplacementCodeuiNormal3fVertex3fSUN', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glBindMaterialParameterEXT = gl_func( 'glBindMaterialParameterEXT', GLuint, (GLenum, GLenum))
    gl.glDrawArraysInstanced = gl_func( 'glDrawArraysInstanced', void, (GLenum, GLint, GLsizei, GLsizei))
#     gl.glProgramUniform4i64vARB = gl_func( 'glProgramUniform4i64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64)))
#     gl.glMakeImageHandleNonResidentARB = gl_func( 'glMakeImageHandleNonResidentARB', void, (GLuint64,))
    gl.glGetProgramNamedParameterdvNV = gl_func( 'glGetProgramNamedParameterdvNV', void, (GLuint, GLsizei, ct.POINTER(GLubyte), ct.POINTER(GLdouble)))
    gl.glGetCompressedTexImage = gl_func( 'glGetCompressedTexImage', void, (GLenum, GLint, ct.POINTER(void)))
#     gl.glMakeTextureHandleResidentARB = gl_func( 'glMakeTextureHandleResidentARB', void, (GLuint64,))
    gl.glGetMapiv = gl_func( 'glGetMapiv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glTexCoord1iv = gl_func( 'glTexCoord1iv', void, (ct.POINTER(GLint),))
    gl.glEvaluateDepthValuesARB = gl_func( 'glEvaluateDepthValuesARB', void, ())
    gl.glProgramBinary = gl_func( 'glProgramBinary', void, (GLuint, GLenum, ct.POINTER(void), GLsizei))
    gl.glBeginQueryEXT = gl_func( 'glBeginQueryEXT', void, (GLenum, GLuint))
    gl.glFeedbackBuffer = gl_func( 'glFeedbackBuffer', void, (GLsizei, GLenum, ct.POINTER(GLfloat)))
    gl.glIsRenderbufferOES = gl_func( 'glIsRenderbufferOES', GLboolean, (GLuint,))
#     gl.glUniform4i64vARB = gl_func( 'glUniform4i64vARB', void, (GLint, GLsizei, ct.POINTER(GLint64)))
    gl.glVertexAttrib3sARB = gl_func( 'glVertexAttrib3sARB', void, (GLuint, GLshort, GLshort, GLshort))
    gl.glMultiTexCoord2dARB = gl_func( 'glMultiTexCoord2dARB', void, (GLenum, GLdouble, GLdouble))
    gl.glLoadMatrixd = gl_func( 'glLoadMatrixd', void, (ct.POINTER(GLdouble),))
    gl.glCopyTexImage2DEXT = gl_func( 'glCopyTexImage2DEXT', void, (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint))
    gl.glNormalFormatNV = gl_func( 'glNormalFormatNV', void, (GLenum, GLsizei))
    gl.glGetTransformFeedbackVarying = gl_func( 'glGetTransformFeedbackVarying', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLsizei), ct.POINTER(GLenum), ct.POINTER(GLchar)))
    gl.glCopyPixels = gl_func( 'glCopyPixels', void, (GLint, GLint, GLsizei, GLsizei, GLenum))
    gl.glGetColorTableParameterfvSGI = gl_func( 'glGetColorTableParameterfvSGI', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
#     gl.glVertexAttribL1ui64ARB = gl_func( 'glVertexAttribL1ui64ARB', void, (GLuint, GLuint64EXT))
    gl.glTexCoord2bOES = gl_func( 'glTexCoord2bOES', void, (GLbyte, GLbyte))
    gl.glCompressedTexImage3DOES = gl_func( 'glCompressedTexImage3DOES', void, (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glSetFenceNV = gl_func( 'glSetFenceNV', void, (GLuint, GLenum))
    gl.glVertexAttribI3ivEXT = gl_func( 'glVertexAttribI3ivEXT', void, (GLuint, ct.POINTER(GLint)))
    gl.glClipPlanefIMG = gl_func( 'glClipPlanefIMG', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glMapVertexAttrib2fAPPLE = gl_func( 'glMapVertexAttrib2fAPPLE', void, (GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, ct.POINTER(GLfloat)))
    gl.glBeginConditionalRender = gl_func( 'glBeginConditionalRender', void, (GLuint, GLenum))
    gl.glMultiDrawArraysEXT = gl_func( 'glMultiDrawArraysEXT', void, (GLenum, ct.POINTER(GLint), ct.POINTER(GLsizei), GLsizei))
    gl.glVertexAttrib4NsvARB = gl_func( 'glVertexAttrib4NsvARB', void, (GLuint, ct.POINTER(GLshort)))
    gl.glCompressedTexSubImage2D = gl_func( 'glCompressedTexSubImage2D', void, (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glTexParameterf = gl_func( 'glTexParameterf', void, (GLenum, GLenum, GLfloat))
    gl.glTexStorage2D = gl_func( 'glTexStorage2D', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glClientActiveTextureARB = gl_func( 'glClientActiveTextureARB', void, (GLenum,))
    gl.glVertexAttribI1uiv = gl_func( 'glVertexAttribI1uiv', void, (GLuint, ct.POINTER(GLuint)))
    gl.glGetPathParameterivNV = gl_func( 'glGetPathParameterivNV', void, (GLuint, GLenum, ct.POINTER(GLint)))
#     gl.glProgramUniform2i64ARB = gl_func( 'glProgramUniform2i64ARB', void, (GLuint, GLint, GLint64, GLint64))
    gl.glSecondaryColor3dEXT = gl_func( 'glSecondaryColor3dEXT', void, (GLdouble, GLdouble, GLdouble))
    gl.glVertexAttrib1dvARB = gl_func( 'glVertexAttrib1dvARB', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glGetFragmentMaterialivSGIX = gl_func( 'glGetFragmentMaterialivSGIX', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glBlitFramebufferNV = gl_func( 'glBlitFramebufferNV', void, (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum))
#     gl.glProgramUniform2i64vARB = gl_func( 'glProgramUniform2i64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64)))
    gl.glReplacementCodeusSUN = gl_func( 'glReplacementCodeusSUN', void, (GLushort,))
    gl.glClearNamedBufferSubDataEXT = gl_func( 'glClearNamedBufferSubDataEXT', void, (GLuint, GLenum, GLsizeiptr, GLsizeiptr, GLenum, GLenum, ct.POINTER(void)))
    gl.glBeginPerfQueryINTEL = gl_func( 'glBeginPerfQueryINTEL', void, (GLuint,))
    gl.glDrawArraysEXT = gl_func( 'glDrawArraysEXT', void, (GLenum, GLint, GLsizei))
    gl.glBinormal3dvEXT = gl_func( 'glBinormal3dvEXT', void, (ct.POINTER(GLdouble),))
    gl.glActiveStencilFaceEXT = gl_func( 'glActiveStencilFaceEXT', void, (GLenum,))
    gl.glCopyTexSubImage3DEXT = gl_func( 'glCopyTexSubImage3DEXT', void, (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glVertexAttribI3uiEXT = gl_func( 'glVertexAttribI3uiEXT', void, (GLuint, GLuint, GLuint, GLuint))
    gl.glActiveShaderProgram = gl_func( 'glActiveShaderProgram', void, (GLuint, GLuint))
    gl.glCurrentPaletteMatrixOES = gl_func( 'glCurrentPaletteMatrixOES', void, (GLuint,))
    gl.glPathGlyphIndexRangeNV = gl_func( 'glPathGlyphIndexRangeNV', GLenum, (GLenum, ct.POINTER(void), GLbitfield, GLuint, GLfloat, GLuint))
    gl.glTextureParameterf = gl_func( 'glTextureParameterf', void, (GLuint, GLenum, GLfloat))
    gl.glVertexAttribLFormat = gl_func( 'glVertexAttribLFormat', void, (GLuint, GLint, GLenum, GLuint))
    gl.glVertexAttribP3ui = gl_func( 'glVertexAttribP3ui', void, (GLuint, GLenum, GLboolean, GLuint))
    gl.glLoadPaletteFromModelViewMatrixOES = gl_func( 'glLoadPaletteFromModelViewMatrixOES', void, ())
    gl.glGetFragmentLightivSGIX = gl_func( 'glGetFragmentLightivSGIX', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glIndexFuncEXT = gl_func( 'glIndexFuncEXT', void, (GLenum, GLclampf))
#     gl.glGetVertexAttribLui64vARB = gl_func( 'glGetVertexAttribLui64vARB', void, (GLuint, GLenum, ct.POINTER(GLuint64EXT)))
    gl.glUniform3uiEXT = gl_func( 'glUniform3uiEXT', void, (GLint, GLuint, GLuint, GLuint))
#     gl.glVDPAURegisterOutputSurfaceNV = gl_func( 'glVDPAURegisterOutputSurfaceNV', GLvdpauSurfaceNV, (ct.POINTER(void), GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glVertexArrayVertexBuffer = gl_func( 'glVertexArrayVertexBuffer', void, (GLuint, GLuint, GLuint, GLintptr, GLsizei))
    gl.glMultiTexCoord3hvNV = gl_func( 'glMultiTexCoord3hvNV', void, (GLenum, ct.POINTER(GLhalfNV)))
    gl.glTexEnvfv = gl_func( 'glTexEnvfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glDeleteQueriesARB = gl_func( 'glDeleteQueriesARB', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glReadBufferIndexedEXT = gl_func( 'glReadBufferIndexedEXT', void, (GLenum, GLint))
    gl.glCreateRenderbuffers = gl_func( 'glCreateRenderbuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetCommandHeaderNV = gl_func( 'glGetCommandHeaderNV', GLuint, (GLenum, GLuint))
    gl.glGetTexParameteriv = gl_func( 'glGetTexParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glTexEnvf = gl_func( 'glTexEnvf', void, (GLenum, GLenum, GLfloat))
    gl.glDeleteOcclusionQueriesNV = gl_func( 'glDeleteOcclusionQueriesNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetVertexAttribiv = gl_func( 'glGetVertexAttribiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glProgramUniformMatrix4fvEXT = gl_func( 'glProgramUniformMatrix4fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glConvolutionParameteriv = gl_func( 'glConvolutionParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glVertexAttribI1ivEXT = gl_func( 'glVertexAttribI1ivEXT', void, (GLuint, ct.POINTER(GLint)))
    gl.glGetShaderInfoLog = gl_func( 'glGetShaderInfoLog', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glWindowPos4iMESA = gl_func( 'glWindowPos4iMESA', void, (GLint, GLint, GLint, GLint))
    gl.glUniform3i = gl_func( 'glUniform3i', void, (GLint, GLint, GLint, GLint))
    gl.glGetVertexAttribdvNV = gl_func( 'glGetVertexAttribdvNV', void, (GLuint, GLenum, ct.POINTER(GLdouble)))
    gl.glVertex3bOES = gl_func( 'glVertex3bOES', void, (GLbyte, GLbyte, GLbyte))
    gl.glBufferPageCommitmentARB = gl_func( 'glBufferPageCommitmentARB', void, (GLenum, GLintptr, GLsizeiptr, GLboolean))
    gl.glFlushMappedBufferRangeEXT = gl_func( 'glFlushMappedBufferRangeEXT', void, (GLenum, GLintptr, GLsizeiptr))
    gl.glPrioritizeTextures = gl_func( 'glPrioritizeTextures', void, (GLsizei, ct.POINTER(GLuint), ct.POINTER(GLfloat)))
#     gl.glFogxvOES = gl_func( 'glFogxvOES', void, (GLenum, ct.POINTER(GLfixed)))
#     gl.glProgramUniform2i64vNV = gl_func( 'glProgramUniform2i64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64EXT)))
#     gl.glProgramUniform4ui64vARB = gl_func( 'glProgramUniform4ui64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glRecti = gl_func( 'glRecti', void, (GLint, GLint, GLint, GLint))
    gl.glQueryObjectParameteruiAMD = gl_func( 'glQueryObjectParameteruiAMD', void, (GLenum, GLuint, GLenum, GLuint))
    gl.glProgramUniformMatrix4x3fv = gl_func( 'glProgramUniformMatrix4x3fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
#     gl.glPixelMapx = gl_func( 'glPixelMapx', void, (GLenum, GLint, ct.POINTER(GLfixed)))
    gl.glGetSamplerParameterIiv = gl_func( 'glGetSamplerParameterIiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glVertexAttribPointerNV = gl_func( 'glVertexAttribPointerNV', void, (GLuint, GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glBlendParameteriNV = gl_func( 'glBlendParameteriNV', void, (GLenum, GLint))
    gl.glGetUniformIndices = gl_func( 'glGetUniformIndices', void, (GLuint, GLsizei, ct.POINTER(ct.POINTER(GLchar)), ct.POINTER(GLuint)))
    gl.glObjectPurgeableAPPLE = gl_func( 'glObjectPurgeableAPPLE', GLenum, (GLenum, GLuint, GLenum))
    gl.glPathDashArrayNV = gl_func( 'glPathDashArrayNV', void, (GLuint, GLsizei, ct.POINTER(GLfloat)))
#     gl.glGetLightxvOES = gl_func( 'glGetLightxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glVertexAttrib4fvNV = gl_func( 'glVertexAttrib4fvNV', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glTexEnviv = gl_func( 'glTexEnviv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glUniformMatrix4dv = gl_func( 'glUniformMatrix4dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glNamedBufferDataEXT = gl_func( 'glNamedBufferDataEXT', void, (GLuint, GLsizeiptr, ct.POINTER(void), GLenum))
#     gl.glMap2xOES = gl_func( 'glMap2xOES', void, (GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed))
    gl.glCopyMultiTexSubImage2DEXT = gl_func( 'glCopyMultiTexSubImage2DEXT', void, (GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glGetMapfv = gl_func( 'glGetMapfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glBindFragDataLocationEXT = gl_func( 'glBindFragDataLocationEXT', void, (GLuint, GLuint, ct.POINTER(GLchar)))
    gl.glSyncTextureINTEL = gl_func( 'glSyncTextureINTEL', void, (GLuint,))
    gl.glVertexStream2iATI = gl_func( 'glVertexStream2iATI', void, (GLenum, GLint, GLint))
    gl.glUniformMatrix2dv = gl_func( 'glUniformMatrix2dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glUniform2fvARB = gl_func( 'glUniform2fvARB', void, (GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glFogCoordd = gl_func( 'glFogCoordd', void, (GLdouble,))
    gl.glVertexAttrib3fv = gl_func( 'glVertexAttrib3fv', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glBeginOcclusionQueryNV = gl_func( 'glBeginOcclusionQueryNV', void, (GLuint,))
    gl.glDrawArraysInstancedBaseInstance = gl_func( 'glDrawArraysInstancedBaseInstance', void, (GLenum, GLint, GLsizei, GLsizei, GLuint))
    gl.glDeleteRenderbuffersEXT = gl_func( 'glDeleteRenderbuffersEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetVertexAttribIivEXT = gl_func( 'glGetVertexAttribIivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGenTexturesEXT = gl_func( 'glGenTexturesEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glDrawElementsInstancedBaseInstanceEXT = gl_func( 'glDrawElementsInstancedBaseInstanceEXT', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei, GLuint))
#     gl.glGetInteger64i_v = gl_func( 'glGetInteger64i_v', void, (GLenum, GLuint, ct.POINTER(GLint64)))
    gl.glGetFirstPerfQueryIdINTEL = gl_func( 'glGetFirstPerfQueryIdINTEL', void, (ct.POINTER(GLuint),))
    gl.glTexBufferRangeEXT = gl_func( 'glTexBufferRangeEXT', void, (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr))
    gl.glProgramUniformMatrix3x4fvEXT = gl_func( 'glProgramUniformMatrix3x4fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glProgramUniform1dv = gl_func( 'glProgramUniform1dv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glProgramUniformMatrix4dv = gl_func( 'glProgramUniformMatrix4dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glMultiTexCoord1dv = gl_func( 'glMultiTexCoord1dv', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glProgramUniformMatrix4x2dvEXT = gl_func( 'glProgramUniformMatrix4x2dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glVertexAttribs2fvNV = gl_func( 'glVertexAttribs2fvNV', void, (GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glDrawElementsInstancedANGLE = gl_func( 'glDrawElementsInstancedANGLE', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei))
    gl.glBeginTransformFeedback = gl_func( 'glBeginTransformFeedback', void, (GLenum,))
    gl.glMultiTexCoord3fv = gl_func( 'glMultiTexCoord3fv', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glGetMapParameterivNV = gl_func( 'glGetMapParameterivNV', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGetVertexAttribIuivEXT = gl_func( 'glGetVertexAttribIuivEXT', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glColor4ubv = gl_func( 'glColor4ubv', void, (ct.POINTER(GLubyte),))
    gl.glEnableIndexedEXT = gl_func( 'glEnableIndexedEXT', void, (GLenum, GLuint))
    gl.glGetUniformLocation = gl_func( 'glGetUniformLocation', GLint, (GLuint, ct.POINTER(GLchar)))
    gl.glBinormal3sEXT = gl_func( 'glBinormal3sEXT', void, (GLshort, GLshort, GLshort))
    gl.glDeleteQueries = gl_func( 'glDeleteQueries', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGenLists = gl_func( 'glGenLists', GLuint, (GLsizei,))
    gl.glProgramEnvParameterI4iNV = gl_func( 'glProgramEnvParameterI4iNV', void, (GLenum, GLuint, GLint, GLint, GLint, GLint))
    gl.glDeleteProgramsARB = gl_func( 'glDeleteProgramsARB', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glUniform3iARB = gl_func( 'glUniform3iARB', void, (GLint, GLint, GLint, GLint))
#     gl.glProgramUniform3ui64NV = gl_func( 'glProgramUniform3ui64NV', void, (GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT))
    gl.glColorPointerListIBM = gl_func( 'glColorPointerListIBM', void, (GLint, GLenum, GLint, ct.POINTER(ct.POINTER(void)), GLint))
    gl.glProgramBufferParametersIuivNV = gl_func( 'glProgramBufferParametersIuivNV', void, (GLenum, GLuint, GLuint, GLsizei, ct.POINTER(GLuint)))
    gl.glMultiTexCoord4dv = gl_func( 'glMultiTexCoord4dv', void, (GLenum, ct.POINTER(GLdouble)))
#     gl.glLoadTransposeMatrixxOES = gl_func( 'glLoadTransposeMatrixxOES', void, (ct.POINTER(GLfixed),))
    gl.glPointAlongPathNV = gl_func( 'glPointAlongPathNV', GLboolean, (GLuint, GLsizei, GLsizei, GLfloat, ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glWeightPointerARB = gl_func( 'glWeightPointerARB', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glEnableClientStateIndexedEXT = gl_func( 'glEnableClientStateIndexedEXT', void, (GLenum, GLuint))
    gl.glIsEnablediNV = gl_func( 'glIsEnablediNV', GLboolean, (GLenum, GLuint))
    gl.glGetConvolutionParameteriv = gl_func( 'glGetConvolutionParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glUniformMatrix2x3dv = gl_func( 'glUniformMatrix2x3dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glDrawTexivOES = gl_func( 'glDrawTexivOES', void, (ct.POINTER(GLint),))
    gl.glDeleteLists = gl_func( 'glDeleteLists', void, (GLuint, GLsizei))
    gl.glSecondaryColor3bv = gl_func( 'glSecondaryColor3bv', void, (ct.POINTER(GLbyte),))
    gl.glGetLocalConstantIntegervEXT = gl_func( 'glGetLocalConstantIntegervEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
#     gl.glUniform4i64vNV = gl_func( 'glUniform4i64vNV', void, (GLint, GLsizei, ct.POINTER(GLint64EXT)))
    gl.glTextureBufferRange = gl_func( 'glTextureBufferRange', void, (GLuint, GLenum, GLuint, GLintptr, GLsizeiptr))
#     gl.glEvalCoord2xOES = gl_func( 'glEvalCoord2xOES', void, (GLfixed, GLfixed))
    gl.glTexCoord2fColor4ubVertex3fvSUN = gl_func( 'glTexCoord2fColor4ubVertex3fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLubyte), ct.POINTER(GLfloat)))
    gl.glVertexStream1ivATI = gl_func( 'glVertexStream1ivATI', void, (GLenum, ct.POINTER(GLint)))
    gl.glColor4ui = gl_func( 'glColor4ui', void, (GLuint, GLuint, GLuint, GLuint))
    gl.glConvolutionParameteri = gl_func( 'glConvolutionParameteri', void, (GLenum, GLenum, GLint))
    gl.glTexCoord1s = gl_func( 'glTexCoord1s', void, (GLshort,))
    gl.glEnableVariantClientStateEXT = gl_func( 'glEnableVariantClientStateEXT', void, (GLuint,))
    gl.glDrawRangeElementArrayAPPLE = gl_func( 'glDrawRangeElementArrayAPPLE', void, (GLenum, GLuint, GLuint, GLint, GLsizei))
    gl.glGetImageTransformParameterfvHP = gl_func( 'glGetImageTransformParameterfvHP', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glCopyBufferSubData = gl_func( 'glCopyBufferSubData', void, (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr))
#     gl.glPointParameterxvOES = gl_func( 'glPointParameterxvOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glPushClientAttrib = gl_func( 'glPushClientAttrib', void, (GLbitfield,))
    gl.glGetNamedProgramLocalParameterIuivEXT = gl_func( 'glGetNamedProgramLocalParameterIuivEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glDetachObjectARB = gl_func( 'glDetachObjectARB', void, (GLhandleARB, GLhandleARB))
    gl.glLoadIdentity = gl_func( 'glLoadIdentity', void, ())
    gl.glTexCoordP3uiv = gl_func( 'glTexCoordP3uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glColor3fVertex3fvSUN = gl_func( 'glColor3fVertex3fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glVertexAttrib2svARB = gl_func( 'glVertexAttrib2svARB', void, (GLuint, ct.POINTER(GLshort)))
    gl.glGetTransformFeedbackVaryingEXT = gl_func( 'glGetTransformFeedbackVaryingEXT', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLsizei), ct.POINTER(GLenum), ct.POINTER(GLchar)))
    gl.glCullParameterdvEXT = gl_func( 'glCullParameterdvEXT', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glExtGetFramebuffersQCOM = gl_func( 'glExtGetFramebuffersQCOM', void, (ct.POINTER(GLuint), GLint, ct.POINTER(GLint)))
#     gl.glTexEnvxOES = gl_func( 'glTexEnvxOES', void, (GLenum, GLenum, GLfixed))
    gl.glDepthRangeIndexed = gl_func( 'glDepthRangeIndexed', void, (GLuint, GLdouble, GLdouble))
    gl.glPathGlyphsNV = gl_func( 'glPathGlyphsNV', void, (GLuint, GLenum, ct.POINTER(void), GLbitfield, GLsizei, GLenum, ct.POINTER(void), GLenum, GLuint, GLfloat))
    gl.glTexCoord2fNormal3fVertex3fvSUN = gl_func( 'glTexCoord2fNormal3fVertex3fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glEvalCoord2f = gl_func( 'glEvalCoord2f', void, (GLfloat, GLfloat))
    gl.glCheckFramebufferStatusEXT = gl_func( 'glCheckFramebufferStatusEXT', GLenum, (GLenum,))
    gl.glSecondaryColor3ivEXT = gl_func( 'glSecondaryColor3ivEXT', void, (ct.POINTER(GLint),))
    gl.glTexParameteri = gl_func( 'glTexParameteri', void, (GLenum, GLenum, GLint))
    gl.glTexCoord2fVertex3fSUN = gl_func( 'glTexCoord2fVertex3fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glAttachObjectARB = gl_func( 'glAttachObjectARB', void, (GLhandleARB, GLhandleARB))
    gl.glConvolutionParameterfv = gl_func( 'glConvolutionParameterfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glGetSeparableFilter = gl_func( 'glGetSeparableFilter', void, (GLenum, GLenum, GLenum, ct.POINTER(void), ct.POINTER(void), ct.POINTER(void)))
#     gl.glRectxvOES = gl_func( 'glRectxvOES', void, (ct.POINTER(GLfixed), ct.POINTER(GLfixed)))
    gl.glInterleavedArrays = gl_func( 'glInterleavedArrays', void, (GLenum, GLsizei, ct.POINTER(void)))
#     gl.glUniform4ui64vNV = gl_func( 'glUniform4ui64vNV', void, (GLint, GLsizei, ct.POINTER(GLuint64EXT)))
    gl.glGetQueryObjectuiv = gl_func( 'glGetQueryObjectuiv', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glMultiTexCoord3ivARB = gl_func( 'glMultiTexCoord3ivARB', void, (GLenum, ct.POINTER(GLint)))
#     gl.glTexGenxOES = gl_func( 'glTexGenxOES', void, (GLenum, GLenum, GLfixed))
    gl.glMatrixLoadTransposefEXT = gl_func( 'glMatrixLoadTransposefEXT', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glBindProgramPipelineEXT = gl_func( 'glBindProgramPipelineEXT', void, (GLuint,))
    gl.glGetNamedStringARB = gl_func( 'glGetNamedStringARB', void, (GLint, ct.POINTER(GLchar), GLsizei, ct.POINTER(GLint), ct.POINTER(GLchar)))
    gl.glWindowPos2iMESA = gl_func( 'glWindowPos2iMESA', void, (GLint, GLint))
    gl.glPrioritizeTexturesEXT = gl_func( 'glPrioritizeTexturesEXT', void, (GLsizei, ct.POINTER(GLuint), ct.POINTER(GLclampf)))
    gl.glPollAsyncSGIX = gl_func( 'glPollAsyncSGIX', GLint, (ct.POINTER(GLuint),))
    gl.glFogCoordhNV = gl_func( 'glFogCoordhNV', void, (GLhalfNV,))
    gl.glGetFinalCombinerInputParameterivNV = gl_func( 'glGetFinalCombinerInputParameterivNV', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGenerateTextureMipmapEXT = gl_func( 'glGenerateTextureMipmapEXT', void, (GLuint, GLenum))
    gl.glMultiTexCoord2ivARB = gl_func( 'glMultiTexCoord2ivARB', void, (GLenum, ct.POINTER(GLint)))
    gl.glTransformFeedbackBufferBase = gl_func( 'glTransformFeedbackBufferBase', void, (GLuint, GLuint, GLuint))
    gl.glWindowPos3fv = gl_func( 'glWindowPos3fv', void, (ct.POINTER(GLfloat),))
    gl.glGetVertexAttribfvNV = gl_func( 'glGetVertexAttribfvNV', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glVertexAttrib4Nbv = gl_func( 'glVertexAttrib4Nbv', void, (GLuint, ct.POINTER(GLbyte)))
    gl.glProgramUniformMatrix4x3dvEXT = gl_func( 'glProgramUniformMatrix4x3dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glWindowPos4fvMESA = gl_func( 'glWindowPos4fvMESA', void, (ct.POINTER(GLfloat),))
    gl.glProgramUniformMatrix3x4dv = gl_func( 'glProgramUniformMatrix3x4dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glVertexStream2dATI = gl_func( 'glVertexStream2dATI', void, (GLenum, GLdouble, GLdouble))
    gl.glInvalidateTexImage = gl_func( 'glInvalidateTexImage', void, (GLuint, GLint))
    gl.glGetProgramLocalParameterIivNV = gl_func( 'glGetProgramLocalParameterIivNV', void, (GLenum, GLuint, ct.POINTER(GLint)))
    gl.glTexCoord3i = gl_func( 'glTexCoord3i', void, (GLint, GLint, GLint))
#     gl.glFrustumx = gl_func( 'glFrustumx', void, (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glDeleteTransformFeedbacksNV = gl_func( 'glDeleteTransformFeedbacksNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glPopGroupMarkerEXT = gl_func( 'glPopGroupMarkerEXT', void, ())
    gl.glWindowPos3sARB = gl_func( 'glWindowPos3sARB', void, (GLshort, GLshort, GLshort))
    gl.glVertexAttrib4uivARB = gl_func( 'glVertexAttrib4uivARB', void, (GLuint, ct.POINTER(GLuint)))
    gl.glDepthBoundsEXT = gl_func( 'glDepthBoundsEXT', void, (GLclampd, GLclampd))
    gl.glTexCoord3hvNV = gl_func( 'glTexCoord3hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glRasterPos3dv = gl_func( 'glRasterPos3dv', void, (ct.POINTER(GLdouble),))
    gl.glSecondaryColor3sv = gl_func( 'glSecondaryColor3sv', void, (ct.POINTER(GLshort),))
    gl.glEndQueryIndexed = gl_func( 'glEndQueryIndexed', void, (GLenum, GLuint))
    gl.glProgramEnvParameter4fARB = gl_func( 'glProgramEnvParameter4fARB', void, (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glColorPointervINTEL = gl_func( 'glColorPointervINTEL', void, (GLint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glBlendEquationEXT = gl_func( 'glBlendEquationEXT', void, (GLenum,))
    gl.glTexSubImage3D = gl_func( 'glTexSubImage3D', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glProgramUniform2i = gl_func( 'glProgramUniform2i', void, (GLuint, GLint, GLint, GLint))
    gl.glEdgeFlagPointerListIBM = gl_func( 'glEdgeFlagPointerListIBM', void, (GLint, ct.POINTER(ct.POINTER(GLboolean)), GLint))
    gl.glColorSubTable = gl_func( 'glColorSubTable', void, (GLenum, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glMultiTexSubImage3DEXT = gl_func( 'glMultiTexSubImage3DEXT', void, (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glVertexArrayRangeNV = gl_func( 'glVertexArrayRangeNV', void, (GLsizei, ct.POINTER(void)))
    gl.glDepthBoundsdNV = gl_func( 'glDepthBoundsdNV', void, (GLdouble, GLdouble))
    gl.glLoadName = gl_func( 'glLoadName', void, (GLuint,))
    gl.glCompressedTextureSubImage1D = gl_func( 'glCompressedTextureSubImage1D', void, (GLuint, GLint, GLint, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glGetCompressedTextureImageEXT = gl_func( 'glGetCompressedTextureImageEXT', void, (GLuint, GLenum, GLint, ct.POINTER(void)))
    gl.glVertex3sv = gl_func( 'glVertex3sv', void, (ct.POINTER(GLshort),))
    gl.glIsBufferARB = gl_func( 'glIsBufferARB', GLboolean, (GLuint,))
    gl.glFrameTerminatorGREMEDY = gl_func( 'glFrameTerminatorGREMEDY', void, ())
    gl.glClearBufferuiv = gl_func( 'glClearBufferuiv', void, (GLenum, GLint, ct.POINTER(GLuint)))
    gl.glTexCoord1dv = gl_func( 'glTexCoord1dv', void, (ct.POINTER(GLdouble),))
    gl.glDeleteNamesAMD = gl_func( 'glDeleteNamesAMD', void, (GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glConvolutionFilter1D = gl_func( 'glConvolutionFilter1D', void, (GLenum, GLenum, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetActiveUniformARB = gl_func( 'glGetActiveUniformARB', void, (GLhandleARB, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLint), ct.POINTER(GLenum), ct.POINTER(GLcharARB)))
    gl.glMultiDrawRangeElementArrayAPPLE = gl_func( 'glMultiDrawRangeElementArrayAPPLE', void, (GLenum, GLuint, GLuint, ct.POINTER(GLint), ct.POINTER(GLsizei), GLsizei))
    gl.glRasterPos3s = gl_func( 'glRasterPos3s', void, (GLshort, GLshort, GLshort))
    gl.glVertexAttrib2fvNV = gl_func( 'glVertexAttrib2fvNV', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glCompressedTextureImage1DEXT = gl_func( 'glCompressedTextureImage1DEXT', void, (GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glGetFramebufferParameterivEXT = gl_func( 'glGetFramebufferParameterivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glWindowPos2svARB = gl_func( 'glWindowPos2svARB', void, (ct.POINTER(GLshort),))
    gl.glRasterPos2d = gl_func( 'glRasterPos2d', void, (GLdouble, GLdouble))
    gl.glVertexBlendEnviATI = gl_func( 'glVertexBlendEnviATI', void, (GLenum, GLint))
    gl.glAreProgramsResidentNV = gl_func( 'glAreProgramsResidentNV', GLboolean, (GLsizei, ct.POINTER(GLuint), ct.POINTER(GLboolean)))
    gl.glTexCoord4bvOES = gl_func( 'glTexCoord4bvOES', void, (ct.POINTER(GLbyte),))
    gl.glVertexAttrib2dv = gl_func( 'glVertexAttrib2dv', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glGetDriverControlsQCOM = gl_func( 'glGetDriverControlsQCOM', void, (ct.POINTER(GLint), GLsizei, ct.POINTER(GLuint)))
    gl.glFramebufferReadBufferEXT = gl_func( 'glFramebufferReadBufferEXT', void, (GLuint, GLenum))
    gl.glVertexAttrib1sARB = gl_func( 'glVertexAttrib1sARB', void, (GLuint, GLshort))
    gl.glRectf = gl_func( 'glRectf', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glGetMinmaxParameterivEXT = gl_func( 'glGetMinmaxParameterivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glClearStencil = gl_func( 'glClearStencil', void, (GLint,))
    gl.glUniform4i = gl_func( 'glUniform4i', void, (GLint, GLint, GLint, GLint, GLint))
    gl.glVertexAttribL4d = gl_func( 'glVertexAttribL4d', void, (GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glVertexAttribI4sv = gl_func( 'glVertexAttribI4sv', void, (GLuint, ct.POINTER(GLshort)))
    gl.glGetnSeparableFilterARB = gl_func( 'glGetnSeparableFilterARB', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(void), GLsizei, ct.POINTER(void), ct.POINTER(void)))
    gl.glSetMultisamplefvAMD = gl_func( 'glSetMultisamplefvAMD', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glMakeBufferResidentNV = gl_func( 'glMakeBufferResidentNV', void, (GLenum, GLenum))
    gl.glGetActiveUniformBlockName = gl_func( 'glGetActiveUniformBlockName', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glVertex3d = gl_func( 'glVertex3d', void, (GLdouble, GLdouble, GLdouble))
    gl.glBindTexture = gl_func( 'glBindTexture', void, (GLenum, GLuint))
    gl.glGetBooleanv = gl_func( 'glGetBooleanv', void, (GLenum, ct.POINTER(GLboolean)))
    gl.glGetPathMetricsNV = gl_func( 'glGetPathMetricsNV', void, (GLbitfield, GLsizei, GLenum, ct.POINTER(void), GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetUniformfv = gl_func( 'glGetUniformfv', void, (GLuint, GLint, ct.POINTER(GLfloat)))
    gl.glVertexArrayBindVertexBufferEXT = gl_func( 'glVertexArrayBindVertexBufferEXT', void, (GLuint, GLuint, GLuint, GLintptr, GLsizei))
    gl.glMultiTexCoord4f = gl_func( 'glMultiTexCoord4f', void, (GLenum, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glWindowPos3dvMESA = gl_func( 'glWindowPos3dvMESA', void, (ct.POINTER(GLdouble),))
    gl.glGetObjectLabelEXT = gl_func( 'glGetObjectLabelEXT', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glTexStorage1DEXT = gl_func( 'glTexStorage1DEXT', void, (GLenum, GLsizei, GLenum, GLsizei))
#     gl.glMakeImageHandleResidentNV = gl_func( 'glMakeImageHandleResidentNV', void, (GLuint64, GLenum))
    gl.glClearIndex = gl_func( 'glClearIndex', void, (GLfloat,))
    gl.glMateriali = gl_func( 'glMateriali', void, (GLenum, GLenum, GLint))
    gl.glVertexAttrib4fvARB = gl_func( 'glVertexAttrib4fvARB', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glListParameteriSGIX = gl_func( 'glListParameteriSGIX', void, (GLuint, GLenum, GLint))
    gl.glUniformMatrix4x2fvNV = gl_func( 'glUniformMatrix4x2fvNV', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertexAttrib2dvARB = gl_func( 'glVertexAttrib2dvARB', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glDrawArraysInstancedANGLE = gl_func( 'glDrawArraysInstancedANGLE', void, (GLenum, GLint, GLsizei, GLsizei))
    gl.glPassThrough = gl_func( 'glPassThrough', void, (GLfloat,))
#     gl.glClearColorxOES = gl_func( 'glClearColorxOES', void, (GLfixed, GLfixed, GLfixed, GLfixed))
#     gl.glMakeTextureHandleResidentNV = gl_func( 'glMakeTextureHandleResidentNV', void, (GLuint64,))
#     gl.glUniform3ui64vNV = gl_func( 'glUniform3ui64vNV', void, (GLint, GLsizei, ct.POINTER(GLuint64EXT)))
    gl.glVertexStream2svATI = gl_func( 'glVertexStream2svATI', void, (GLenum, ct.POINTER(GLshort)))
    gl.glNormalStream3dvATI = gl_func( 'glNormalStream3dvATI', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glGetActiveUniformName = gl_func( 'glGetActiveUniformName', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glReferencePlaneSGIX = gl_func( 'glReferencePlaneSGIX', void, (ct.POINTER(GLdouble),))
    gl.glTexCoord1bvOES = gl_func( 'glTexCoord1bvOES', void, (ct.POINTER(GLbyte),))
#     gl.glGetFixedvOES = gl_func( 'glGetFixedvOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glGetCompressedMultiTexImageEXT = gl_func( 'glGetCompressedMultiTexImageEXT', void, (GLenum, GLenum, GLint, ct.POINTER(void)))
    gl.glGetNamedProgramStringEXT = gl_func( 'glGetNamedProgramStringEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(void)))
    gl.glVertexAttribI1ui = gl_func( 'glVertexAttribI1ui', void, (GLuint, GLuint))
#     gl.glGetImageHandleARB = gl_func( 'glGetImageHandleARB', GLuint64, (GLuint, GLint, GLboolean, GLint, GLenum))
    gl.glTextureStorage3DMultisampleEXT = gl_func( 'glTextureStorage3DMultisampleEXT', void, (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glVertexArrayMultiTexCoordOffsetEXT = gl_func( 'glVertexArrayMultiTexCoordOffsetEXT', void, (GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr))
#     gl.glMultiTexCoord2xvOES = gl_func( 'glMultiTexCoord2xvOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glClearBufferSubData = gl_func( 'glClearBufferSubData', void, (GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetGraphicsResetStatusEXT = gl_func( 'glGetGraphicsResetStatusEXT', GLenum, ())
#     gl.glRectxOES = gl_func( 'glRectxOES', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glTransformFeedbackBufferRange = gl_func( 'glTransformFeedbackBufferRange', void, (GLuint, GLuint, GLuint, GLintptr, GLsizeiptr))
    gl.glWindowPos2fvARB = gl_func( 'glWindowPos2fvARB', void, (ct.POINTER(GLfloat),))
    gl.glBindVertexArray = gl_func( 'glBindVertexArray', void, (GLuint,))
#     gl.glProgramUniform4ui64NV = gl_func( 'glProgramUniform4ui64NV', void, (GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT))
    gl.glReplacementCodeuiColor3fVertex3fvSUN = gl_func( 'glReplacementCodeuiColor3fVertex3fvSUN', void, (ct.POINTER(GLuint), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glDrawElementsInstancedBaseInstance = gl_func( 'glDrawElementsInstancedBaseInstance', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei, GLuint))
    gl.glActiveVaryingNV = gl_func( 'glActiveVaryingNV', void, (GLuint, ct.POINTER(GLchar)))
    gl.glGetPathDashArrayNV = gl_func( 'glGetPathDashArrayNV', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glPointParameterf = gl_func( 'glPointParameterf', void, (GLenum, GLfloat))
    gl.glGetVideoCaptureStreamivNV = gl_func( 'glGetVideoCaptureStreamivNV', void, (GLuint, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glFramebufferTexture2DMultisampleIMG = gl_func( 'glFramebufferTexture2DMultisampleIMG', void, (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei))
    gl.glSecondaryColor3ubvEXT = gl_func( 'glSecondaryColor3ubvEXT', void, (ct.POINTER(GLubyte),))
    gl.glVertexAttribL2dvEXT = gl_func( 'glVertexAttribL2dvEXT', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glGetVertexArrayIndexediv = gl_func( 'glGetVertexArrayIndexediv', void, (GLuint, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glCreateProgram = gl_func( 'glCreateProgram', GLuint, ())
    gl.glGetConvolutionFilter = gl_func( 'glGetConvolutionFilter', void, (GLenum, GLenum, GLenum, ct.POINTER(void)))
    gl.glIsEnabledIndexedEXT = gl_func( 'glIsEnabledIndexedEXT', GLboolean, (GLenum, GLuint))
    gl.glDeleteFramebuffersOES = gl_func( 'glDeleteFramebuffersOES', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glDisableClientState = gl_func( 'glDisableClientState', void, (GLenum,))
    gl.glFinishTextureSUNX = gl_func( 'glFinishTextureSUNX', void, ())
    gl.glConvolutionFilter2DEXT = gl_func( 'glConvolutionFilter2DEXT', void, (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glVertexArrayVertexAttribIFormatEXT = gl_func( 'glVertexArrayVertexAttribIFormatEXT', void, (GLuint, GLuint, GLint, GLenum, GLuint))
    gl.glListDrawCommandsStatesClientNV = gl_func( 'glListDrawCommandsStatesClientNV', void, (GLuint, GLuint, ct.POINTER(ct.POINTER(void)), ct.POINTER(GLsizei), ct.POINTER(GLuint), ct.POINTER(GLuint), GLuint))
    gl.glWindowPos3iMESA = gl_func( 'glWindowPos3iMESA', void, (GLint, GLint, GLint))
    gl.glTransformFeedbackVaryingsNV = gl_func( 'glTransformFeedbackVaryingsNV', void, (GLuint, GLsizei, ct.POINTER(GLint), GLenum))
    gl.glTextureParameteri = gl_func( 'glTextureParameteri', void, (GLuint, GLenum, GLint))
    gl.glVertexWeightfEXT = gl_func( 'glVertexWeightfEXT', void, (GLfloat,))
    gl.glGlobalAlphaFactorfSUN = gl_func( 'glGlobalAlphaFactorfSUN', void, (GLfloat,))
    gl.glGetDebugMessageLogARB = gl_func( 'glGetDebugMessageLogARB', GLuint, (GLuint, GLsizei, ct.POINTER(GLenum), ct.POINTER(GLenum), ct.POINTER(GLuint), ct.POINTER(GLenum), ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glIndexub = gl_func( 'glIndexub', void, (GLubyte,))
    gl.glSecondaryColor3hNV = gl_func( 'glSecondaryColor3hNV', void, (GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glCompressedTexImage3D = gl_func( 'glCompressedTexImage3D', void, (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glStencilFuncSeparate = gl_func( 'glStencilFuncSeparate', void, (GLenum, GLenum, GLint, GLuint))
    gl.glWindowPos2iARB = gl_func( 'glWindowPos2iARB', void, (GLint, GLint))
    gl.glDisableVertexArrayEXT = gl_func( 'glDisableVertexArrayEXT', void, (GLuint, GLenum))
    gl.glVertexArrayIndexOffsetEXT = gl_func( 'glVertexArrayIndexOffsetEXT', void, (GLuint, GLuint, GLenum, GLsizei, GLintptr))
    gl.glTranslatef = gl_func( 'glTranslatef', void, (GLfloat, GLfloat, GLfloat))
    gl.glLightModeli = gl_func( 'glLightModeli', void, (GLenum, GLint))
    gl.glProgramUniform4i = gl_func( 'glProgramUniform4i', void, (GLuint, GLint, GLint, GLint, GLint, GLint))
#     gl.glProgramUniform1ui64vARB = gl_func( 'glProgramUniform1ui64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glVertexArrayColorOffsetEXT = gl_func( 'glVertexArrayColorOffsetEXT', void, (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr))
#     gl.glProgramUniform1i64ARB = gl_func( 'glProgramUniform1i64ARB', void, (GLuint, GLint, GLint64))
    gl.glVertexP4uiv = gl_func( 'glVertexP4uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glFlushMappedBufferRangeAPPLE = gl_func( 'glFlushMappedBufferRangeAPPLE', void, (GLenum, GLintptr, GLsizeiptr))
    gl.glGetVertexAttribdv = gl_func( 'glGetVertexAttribdv', void, (GLuint, GLenum, ct.POINTER(GLdouble)))
    gl.glVertexAttribParameteriAMD = gl_func( 'glVertexAttribParameteriAMD', void, (GLuint, GLenum, GLint))
    gl.glTexCoord2hvNV = gl_func( 'glTexCoord2hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glGetTexEnviv = gl_func( 'glGetTexEnviv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glVDPAUInitNV = gl_func( 'glVDPAUInitNV', void, (ct.POINTER(void), ct.POINTER(void)))
    gl.glVertex2i = gl_func( 'glVertex2i', void, (GLint, GLint))
    gl.glMultiTexCoord1sv = gl_func( 'glMultiTexCoord1sv', void, (GLenum, ct.POINTER(GLshort)))
#     gl.glProgramUniform1i64vNV = gl_func( 'glProgramUniform1i64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64EXT)))
    gl.glVertexArrayVertexAttribLOffsetEXT = gl_func( 'glVertexArrayVertexAttribLOffsetEXT', void, (GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr))
    gl.glMultiModeDrawArraysIBM = gl_func( 'glMultiModeDrawArraysIBM', void, (ct.POINTER(GLenum), ct.POINTER(GLint), ct.POINTER(GLsizei), GLsizei, GLint))
    gl.glCopyMultiTexImage1DEXT = gl_func( 'glCopyMultiTexImage1DEXT', void, (GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint))
    gl.glGetTextureParameterIuivEXT = gl_func( 'glGetTextureParameterIuivEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glBindAttribLocationARB = gl_func( 'glBindAttribLocationARB', void, (GLhandleARB, GLuint, ct.POINTER(GLcharARB)))
    gl.glGetPixelMapuiv = gl_func( 'glGetPixelMapuiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glRasterPos4d = gl_func( 'glRasterPos4d', void, (GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glMultiTexCoordP2uiv = gl_func( 'glMultiTexCoordP2uiv', void, (GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glMultiTexCoord3hNV = gl_func( 'glMultiTexCoord3hNV', void, (GLenum, GLhalfNV, GLhalfNV, GLhalfNV))
#     gl.glMultiTexCoord4xOES = gl_func( 'glMultiTexCoord4xOES', void, (GLenum, GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glScissorIndexedNV = gl_func( 'glScissorIndexedNV', void, (GLuint, GLint, GLint, GLsizei, GLsizei))
    gl.glBindBufferRangeNV = gl_func( 'glBindBufferRangeNV', void, (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr))
    gl.glVertexAttrib3svNV = gl_func( 'glVertexAttrib3svNV', void, (GLuint, ct.POINTER(GLshort)))
    gl.glVertexAttrib3fvARB = gl_func( 'glVertexAttrib3fvARB', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glMultiModeDrawElementsIBM = gl_func( 'glMultiModeDrawElementsIBM', void, (ct.POINTER(GLenum), ct.POINTER(GLsizei), GLenum, ct.POINTER(ct.POINTER(void)), GLsizei, GLint))
    gl.glIndexiv = gl_func( 'glIndexiv', void, (ct.POINTER(GLint),))
    gl.glEvalCoord1d = gl_func( 'glEvalCoord1d', void, (GLdouble,))
#     gl.glBufferAddressRangeNV = gl_func( 'glBufferAddressRangeNV', void, (GLenum, GLuint, GLuint64EXT, GLsizeiptr))
    gl.glRasterPos4s = gl_func( 'glRasterPos4s', void, (GLshort, GLshort, GLshort, GLshort))
    gl.glDrawBuffersATI = gl_func( 'glDrawBuffersATI', void, (GLsizei, ct.POINTER(GLenum)))
    gl.glFragmentLightModelfvSGIX = gl_func( 'glFragmentLightModelfvSGIX', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glNamedProgramLocalParameter4fvEXT = gl_func( 'glNamedProgramLocalParameter4fvEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glCopyNamedBufferSubData = gl_func( 'glCopyNamedBufferSubData', void, (GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr))
    gl.glTextureStorage2DEXT = gl_func( 'glTextureStorage2DEXT', void, (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei))
#     gl.glGetBufferParameterui64vNV = gl_func( 'glGetBufferParameterui64vNV', void, (GLenum, GLenum, ct.POINTER(GLuint64EXT)))
    gl.glDisableVertexAttribArrayARB = gl_func( 'glDisableVertexAttribArrayARB', void, (GLuint,))
    gl.glPushAttrib = gl_func( 'glPushAttrib', void, (GLbitfield,))
    gl.glLoadTransposeMatrixd = gl_func( 'glLoadTransposeMatrixd', void, (ct.POINTER(GLdouble),))
    gl.glMultiTexCoord2dvARB = gl_func( 'glMultiTexCoord2dvARB', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glTexGeni = gl_func( 'glTexGeni', void, (GLenum, GLenum, GLint))
    gl.glVertexAttribs3fvNV = gl_func( 'glVertexAttribs3fvNV', void, (GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glMatrixLoadfEXT = gl_func( 'glMatrixLoadfEXT', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glTangent3sEXT = gl_func( 'glTangent3sEXT', void, (GLshort, GLshort, GLshort))
    gl.glGetTransformFeedbackVaryingNV = gl_func( 'glGetTransformFeedbackVaryingNV', void, (GLuint, GLuint, ct.POINTER(GLint)))
    gl.glCompressedMultiTexImage1DEXT = gl_func( 'glCompressedMultiTexImage1DEXT', void, (GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ct.POINTER(void)))
#     gl.glUniform4i64NV = gl_func( 'glUniform4i64NV', void, (GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT))
    gl.glStencilThenCoverStrokePathInstancedNV = gl_func( 'glStencilThenCoverStrokePathInstancedNV', void, (GLsizei, GLenum, ct.POINTER(void), GLuint, GLint, GLuint, GLenum, GLenum, ct.POINTER(GLfloat)))
#     gl.glBitmapxOES = gl_func( 'glBitmapxOES', void, (GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, ct.POINTER(GLubyte)))
    gl.glColor3uiv = gl_func( 'glColor3uiv', void, (ct.POINTER(GLuint),))
    gl.glWindowPos3dv = gl_func( 'glWindowPos3dv', void, (ct.POINTER(GLdouble),))
#     gl.glTexCoord3xOES = gl_func( 'glTexCoord3xOES', void, (GLfixed, GLfixed, GLfixed))
    gl.glCompressedTextureSubImage2DEXT = gl_func( 'glCompressedTextureSubImage2DEXT', void, (GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glSecondaryColor3b = gl_func( 'glSecondaryColor3b', void, (GLbyte, GLbyte, GLbyte))
    gl.glVertexPointerEXT = gl_func( 'glVertexPointerEXT', void, (GLint, GLenum, GLsizei, GLsizei, ct.POINTER(void)))
    gl.glEndVideoCaptureNV = gl_func( 'glEndVideoCaptureNV', void, (GLuint,))
    gl.glVertexAttrib3svARB = gl_func( 'glVertexAttrib3svARB', void, (GLuint, ct.POINTER(GLshort)))
    gl.glTexCoord2i = gl_func( 'glTexCoord2i', void, (GLint, GLint))
    gl.glCopyMultiTexSubImage3DEXT = gl_func( 'glCopyMultiTexSubImage3DEXT', void, (GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glRasterPos4i = gl_func( 'glRasterPos4i', void, (GLint, GLint, GLint, GLint))
    gl.glProgramUniform3d = gl_func( 'glProgramUniform3d', void, (GLuint, GLint, GLdouble, GLdouble, GLdouble))
    gl.glEnablei = gl_func( 'glEnablei', void, (GLenum, GLuint))
    gl.glTexSubImage3DEXT = gl_func( 'glTexSubImage3DEXT', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glBindAttribLocation = gl_func( 'glBindAttribLocation', void, (GLuint, GLuint, ct.POINTER(GLchar)))
    gl.glVertexAttrib4Nubv = gl_func( 'glVertexAttrib4Nubv', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glVertexAttrib4ivARB = gl_func( 'glVertexAttrib4ivARB', void, (GLuint, ct.POINTER(GLint)))
    gl.glProgramUniformMatrix3fv = gl_func( 'glProgramUniformMatrix3fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glDrawArraysInstancedEXT = gl_func( 'glDrawArraysInstancedEXT', void, (GLenum, GLint, GLsizei, GLsizei))
    gl.glBlendFuncSeparateOES = gl_func( 'glBlendFuncSeparateOES', void, (GLenum, GLenum, GLenum, GLenum))
    gl.glVertexAttribFormat = gl_func( 'glVertexAttribFormat', void, (GLuint, GLint, GLenum, GLboolean, GLuint))
    gl.glProgramUniformMatrix3dvEXT = gl_func( 'glProgramUniformMatrix3dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
#     gl.glMultiTexCoord1xOES = gl_func( 'glMultiTexCoord1xOES', void, (GLenum, GLfixed))
    gl.glMapVertexAttrib2dAPPLE = gl_func( 'glMapVertexAttrib2dAPPLE', void, (GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, ct.POINTER(GLdouble)))
    gl.glColorPointerEXT = gl_func( 'glColorPointerEXT', void, (GLint, GLenum, GLsizei, GLsizei, ct.POINTER(void)))
    gl.glProgramUniform3fv = gl_func( 'glProgramUniform3fv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glPopAttrib = gl_func( 'glPopAttrib', void, ())
    gl.glRenderbufferStorageOES = gl_func( 'glRenderbufferStorageOES', void, (GLenum, GLenum, GLsizei, GLsizei))
    gl.glGetHistogram = gl_func( 'glGetHistogram', void, (GLenum, GLboolean, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetSamplerParameterIuivOES = gl_func( 'glGetSamplerParameterIuivOES', void, (GLuint, GLenum, ct.POINTER(GLuint)))
#     gl.glGetUniformui64vARB = gl_func( 'glGetUniformui64vARB', void, (GLuint, GLint, ct.POINTER(GLuint64)))
    gl.glVertexWeightfvEXT = gl_func( 'glVertexWeightfvEXT', void, (ct.POINTER(GLfloat),))
    gl.glDeleteProgramsNV = gl_func( 'glDeleteProgramsNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glFramebufferDrawBuffersEXT = gl_func( 'glFramebufferDrawBuffersEXT', void, (GLuint, GLsizei, ct.POINTER(GLenum)))
    gl.glIsEnablediEXT = gl_func( 'glIsEnablediEXT', GLboolean, (GLenum, GLuint))
    gl.glIsNamedBufferResidentNV = gl_func( 'glIsNamedBufferResidentNV', GLboolean, (GLuint,))
    gl.glIsTexture = gl_func( 'glIsTexture', GLboolean, (GLuint,))
    gl.glMultiTexCoord2d = gl_func( 'glMultiTexCoord2d', void, (GLenum, GLdouble, GLdouble))
    gl.glNamedBufferStorageEXT = gl_func( 'glNamedBufferStorageEXT', void, (GLuint, GLsizeiptr, ct.POINTER(void), GLbitfield))
    gl.glBindBufferBaseEXT = gl_func( 'glBindBufferBaseEXT', void, (GLenum, GLuint, GLuint))
    gl.glMultiTexCoord2iv = gl_func( 'glMultiTexCoord2iv', void, (GLenum, ct.POINTER(GLint)))
    gl.glDrawElementsInstancedBaseVertexBaseInstance = gl_func( 'glDrawElementsInstancedBaseVertexBaseInstance', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei, GLint, GLuint))
    gl.glTexCoord3hNV = gl_func( 'glTexCoord3hNV', void, (GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glGetString = gl_func( 'glGetString', ct.POINTER(GLubyte), (GLenum,))
    gl.glMultiTexCoord3iARB = gl_func( 'glMultiTexCoord3iARB', void, (GLenum, GLint, GLint, GLint))
    gl.glClampColor = gl_func( 'glClampColor', void, (GLenum, GLenum))
    gl.glWindowPos2dARB = gl_func( 'glWindowPos2dARB', void, (GLdouble, GLdouble))
    gl.glTexStorage3DMultisampleOES = gl_func( 'glTexStorage3DMultisampleOES', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glRasterSamplesEXT = gl_func( 'glRasterSamplesEXT', void, (GLuint, GLboolean))
    gl.glProgramUniform1fv = gl_func( 'glProgramUniform1fv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetFloatIndexedvEXT = gl_func( 'glGetFloatIndexedvEXT', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glMatrixLoaddEXT = gl_func( 'glMatrixLoaddEXT', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glGetVertexArrayPointeri_vEXT = gl_func( 'glGetVertexArrayPointeri_vEXT', void, (GLuint, GLuint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glCoverFillPathInstancedNV = gl_func( 'glCoverFillPathInstancedNV', void, (GLsizei, GLenum, ct.POINTER(void), GLuint, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glColor3usv = gl_func( 'glColor3usv', void, (ct.POINTER(GLushort),))
    gl.glCompressedTexImage1DARB = gl_func( 'glCompressedTexImage1DARB', void, (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glTexGendv = gl_func( 'glTexGendv', void, (GLenum, GLenum, ct.POINTER(GLdouble)))
    gl.glSamplerParameterIivEXT = gl_func( 'glSamplerParameterIivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glNormal3fVertex3fvSUN = gl_func( 'glNormal3fVertex3fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glTextureBufferEXT = gl_func( 'glTextureBufferEXT', void, (GLuint, GLenum, GLenum, GLuint))
    gl.glUniform4fARB = gl_func( 'glUniform4fARB', void, (GLint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glActiveTexture = gl_func( 'glActiveTexture', void, (GLenum,))
    gl.glRasterPos4f = gl_func( 'glRasterPos4f', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glDiscardFramebufferEXT = gl_func( 'glDiscardFramebufferEXT', void, (GLenum, GLsizei, ct.POINTER(GLenum)))
    gl.glGetFramebufferAttachmentParameterivEXT = gl_func( 'glGetFramebufferAttachmentParameterivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glTexSubImage4DSGIS = gl_func( 'glTexSubImage4DSGIS', void, (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
#     gl.glGetTexParameterxv = gl_func( 'glGetTexParameterxv', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glDrawElementsInstancedARB = gl_func( 'glDrawElementsInstancedARB', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei))
    gl.glCopyMultiTexImage2DEXT = gl_func( 'glCopyMultiTexImage2DEXT', void, (GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint))
    gl.glIsNamedStringARB = gl_func( 'glIsNamedStringARB', GLboolean, (GLint, ct.POINTER(GLchar)))
    gl.glReadnPixels = gl_func( 'glReadnPixels', void, (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glVariantusvEXT = gl_func( 'glVariantusvEXT', void, (GLuint, ct.POINTER(GLushort)))
    gl.glPopDebugGroupKHR = gl_func( 'glPopDebugGroupKHR', void, ())
    gl.glBlitFramebufferANGLE = gl_func( 'glBlitFramebufferANGLE', void, (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum))
    gl.glProgramLocalParametersI4ivNV = gl_func( 'glProgramLocalParametersI4ivNV', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLint)))
    gl.glCopyTexSubImage1DEXT = gl_func( 'glCopyTexSubImage1DEXT', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei))
    gl.glGetnMapiv = gl_func( 'glGetnMapiv', void, (GLenum, GLenum, GLsizei, ct.POINTER(GLint)))
    gl.glDrawTexsOES = gl_func( 'glDrawTexsOES', void, (GLshort, GLshort, GLshort, GLshort, GLshort))
    gl.glFogCoorddEXT = gl_func( 'glFogCoorddEXT', void, (GLdouble,))
    gl.glColorMaskiOES = gl_func( 'glColorMaskiOES', void, (GLuint, GLboolean, GLboolean, GLboolean, GLboolean))
    gl.glVideoCaptureStreamParameterivNV = gl_func( 'glVideoCaptureStreamParameterivNV', void, (GLuint, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glDeleteVertexArraysOES = gl_func( 'glDeleteVertexArraysOES', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glReplacementCodeuiVertex3fvSUN = gl_func( 'glReplacementCodeuiVertex3fvSUN', void, (ct.POINTER(GLuint), ct.POINTER(GLfloat)))
    gl.glGetMultiTexParameterIivEXT = gl_func( 'glGetMultiTexParameterIivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glPolygonOffset = gl_func( 'glPolygonOffset', void, (GLfloat, GLfloat))
    gl.glBindProgramARB = gl_func( 'glBindProgramARB', void, (GLenum, GLuint))
    gl.glProgramUniform2d = gl_func( 'glProgramUniform2d', void, (GLuint, GLint, GLdouble, GLdouble))
    gl.glSpriteParameterfSGIX = gl_func( 'glSpriteParameterfSGIX', void, (GLenum, GLfloat))
    gl.glProgramStringARB = gl_func( 'glProgramStringARB', void, (GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glSubpixelPrecisionBiasNV = gl_func( 'glSubpixelPrecisionBiasNV', void, (GLuint, GLuint))
    gl.glMakeNamedBufferNonResidentNV = gl_func( 'glMakeNamedBufferNonResidentNV', void, (GLuint,))
    gl.glPushDebugGroup = gl_func( 'glPushDebugGroup', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLchar)))
    gl.glUnmapNamedBuffer = gl_func( 'glUnmapNamedBuffer', GLboolean, (GLuint,))
    gl.glMultiTexCoord4hNV = gl_func( 'glMultiTexCoord4hNV', void, (GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glVertexAttribI4ubvEXT = gl_func( 'glVertexAttribI4ubvEXT', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glVertexAttrib1fNV = gl_func( 'glVertexAttrib1fNV', void, (GLuint, GLfloat))
    gl.glMultiTexParameterIivEXT = gl_func( 'glMultiTexParameterIivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glColorSubTableEXT = gl_func( 'glColorSubTableEXT', void, (GLenum, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glVertexAttrib3sv = gl_func( 'glVertexAttrib3sv', void, (GLuint, ct.POINTER(GLshort)))
    gl.glDeleteCommandListsNV = gl_func( 'glDeleteCommandListsNV', void, (GLsizei, ct.POINTER(GLuint)))
#     gl.glProgramUniform4ui64vNV = gl_func( 'glProgramUniform4ui64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64EXT)))
    gl.glCheckNamedFramebufferStatusEXT = gl_func( 'glCheckNamedFramebufferStatusEXT', GLenum, (GLuint, GLenum))
    gl.glMultMatrixd = gl_func( 'glMultMatrixd', void, (ct.POINTER(GLdouble),))
    gl.glVertexAttrib4sNV = gl_func( 'glVertexAttrib4sNV', void, (GLuint, GLshort, GLshort, GLshort, GLshort))
    gl.glVertex2iv = gl_func( 'glVertex2iv', void, (ct.POINTER(GLint),))
    gl.glTestObjectAPPLE = gl_func( 'glTestObjectAPPLE', GLboolean, (GLenum, GLuint))
    gl.glNormal3s = gl_func( 'glNormal3s', void, (GLshort, GLshort, GLshort))
    gl.glProgramUniform3dvEXT = gl_func( 'glProgramUniform3dvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glColor3dv = gl_func( 'glColor3dv', void, (ct.POINTER(GLdouble),))
    gl.glGetProgramivARB = gl_func( 'glGetProgramivARB', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glProgramUniform1uiEXT = gl_func( 'glProgramUniform1uiEXT', void, (GLuint, GLint, GLuint))
    gl.glGetPerfMonitorCounterStringAMD = gl_func( 'glGetPerfMonitorCounterStringAMD', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glGetColorTableParameterfv = gl_func( 'glGetColorTableParameterfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glEndQueryEXT = gl_func( 'glEndQueryEXT', void, (GLenum,))
    gl.glGlobalAlphaFactorusSUN = gl_func( 'glGlobalAlphaFactorusSUN', void, (GLushort,))
    gl.glInvalidateFramebuffer = gl_func( 'glInvalidateFramebuffer', void, (GLenum, GLsizei, ct.POINTER(GLenum)))
    gl.glGetnMapivARB = gl_func( 'glGetnMapivARB', void, (GLenum, GLenum, GLsizei, ct.POINTER(GLint)))
    gl.glVertexAttrib4iv = gl_func( 'glVertexAttrib4iv', void, (GLuint, ct.POINTER(GLint)))
    gl.glGetUniformiv = gl_func( 'glGetUniformiv', void, (GLuint, GLint, ct.POINTER(GLint)))
    gl.glVertexAttrib4bv = gl_func( 'glVertexAttrib4bv', void, (GLuint, ct.POINTER(GLbyte)))
    gl.glGetVertexAttribIuiv = gl_func( 'glGetVertexAttribIuiv', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glPatchParameteri = gl_func( 'glPatchParameteri', void, (GLenum, GLint))
    gl.glGetNamedProgramLocalParameterfvEXT = gl_func( 'glGetNamedProgramLocalParameterfvEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glNamedFramebufferTexture3DEXT = gl_func( 'glNamedFramebufferTexture3DEXT', void, (GLuint, GLenum, GLenum, GLuint, GLint, GLint))
    gl.glGetSubroutineIndex = gl_func( 'glGetSubroutineIndex', GLuint, (GLuint, GLenum, ct.POINTER(GLchar)))
    gl.glVertex3bvOES = gl_func( 'glVertex3bvOES', void, (ct.POINTER(GLbyte),))
    gl.glEnableiOES = gl_func( 'glEnableiOES', void, (GLenum, GLuint))
#     gl.glPresentFrameDualFillNV = gl_func( 'glPresentFrameDualFillNV', void, (GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint))
    gl.glSecondaryColor3usEXT = gl_func( 'glSecondaryColor3usEXT', void, (GLushort, GLushort, GLushort))
    gl.glMultiTexCoord4i = gl_func( 'glMultiTexCoord4i', void, (GLenum, GLint, GLint, GLint, GLint))
#     gl.glProgramUniform2ui64vNV = gl_func( 'glProgramUniform2ui64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64EXT)))
    gl.glScissorArrayv = gl_func( 'glScissorArrayv', void, (GLuint, GLsizei, ct.POINTER(GLint)))
    gl.glGetMapAttribParameterivNV = gl_func( 'glGetMapAttribParameterivNV', void, (GLenum, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glNamedProgramLocalParameter4fEXT = gl_func( 'glNamedProgramLocalParameter4fEXT', void, (GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glVertexAttrib4svARB = gl_func( 'glVertexAttrib4svARB', void, (GLuint, ct.POINTER(GLshort)))
    gl.glVertex2d = gl_func( 'glVertex2d', void, (GLdouble, GLdouble))
    gl.glFogCoordfEXT = gl_func( 'glFogCoordfEXT', void, (GLfloat,))
#     gl.glColor3xOES = gl_func( 'glColor3xOES', void, (GLfixed, GLfixed, GLfixed))
    gl.glFlushMappedBufferRange = gl_func( 'glFlushMappedBufferRange', void, (GLenum, GLintptr, GLsizeiptr))
    gl.glDetachShader = gl_func( 'glDetachShader', void, (GLuint, GLuint))
    gl.glProgramUniform2dv = gl_func( 'glProgramUniform2dv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glSecondaryColorPointerEXT = gl_func( 'glSecondaryColorPointerEXT', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glFramebufferTexture2D = gl_func( 'glFramebufferTexture2D', void, (GLenum, GLenum, GLenum, GLuint, GLint))
    gl.glTexImage1D = gl_func( 'glTexImage1D', void, (GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
#     gl.glVDPAURegisterVideoSurfaceNV = gl_func( 'glVDPAURegisterVideoSurfaceNV', GLvdpauSurfaceNV, (ct.POINTER(void), GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glColor4ubVertex3fvSUN = gl_func( 'glColor4ubVertex3fvSUN', void, (ct.POINTER(GLubyte), ct.POINTER(GLfloat)))
    gl.glVertexArrayVertexAttribOffsetEXT = gl_func( 'glVertexArrayVertexAttribOffsetEXT', void, (GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr))
    gl.glDrawElementsBaseVertex = gl_func( 'glDrawElementsBaseVertex', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLint))
    gl.glColor3us = gl_func( 'glColor3us', void, (GLushort, GLushort, GLushort))
    gl.glNamedFramebufferReadBuffer = gl_func( 'glNamedFramebufferReadBuffer', void, (GLuint, GLenum))
    gl.glIsShader = gl_func( 'glIsShader', GLboolean, (GLuint,))
    gl.glProgramParameter4fvNV = gl_func( 'glProgramParameter4fvNV', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glSelectBuffer = gl_func( 'glSelectBuffer', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glPathMemoryGlyphIndexArrayNV = gl_func( 'glPathMemoryGlyphIndexArrayNV', GLenum, (GLuint, GLenum, GLsizeiptr, ct.POINTER(void), GLsizei, GLuint, GLsizei, GLuint, GLfloat))
    gl.glReplacementCodeuiTexCoord2fVertex3fvSUN = gl_func( 'glReplacementCodeuiTexCoord2fVertex3fvSUN', void, (ct.POINTER(GLuint), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glVideoCaptureStreamParameterdvNV = gl_func( 'glVideoCaptureStreamParameterdvNV', void, (GLuint, GLuint, GLenum, ct.POINTER(GLdouble)))
    gl.glVertexAttrib4NbvARB = gl_func( 'glVertexAttrib4NbvARB', void, (GLuint, ct.POINTER(GLbyte)))
    gl.glResetMinmaxEXT = gl_func( 'glResetMinmaxEXT', void, (GLenum,))
    gl.glUniform4uiv = gl_func( 'glUniform4uiv', void, (GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glVertexAttribIPointerEXT = gl_func( 'glVertexAttribIPointerEXT', void, (GLuint, GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertex2hNV = gl_func( 'glVertex2hNV', void, (GLhalfNV, GLhalfNV))
    gl.glGetnUniformdv = gl_func( 'glGetnUniformdv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glGetBufferPointervOES = gl_func( 'glGetBufferPointervOES', void, (GLenum, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glGetVertexAttribIiv = gl_func( 'glGetVertexAttribIiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetVideoCaptureStreamdvNV = gl_func( 'glGetVideoCaptureStreamdvNV', void, (GLuint, GLuint, GLenum, ct.POINTER(GLdouble)))
    gl.glCompressedTextureSubImage3DEXT = gl_func( 'glCompressedTextureSubImage3DEXT', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glWindowPos2dv = gl_func( 'glWindowPos2dv', void, (ct.POINTER(GLdouble),))
    gl.glTexGenivOES = gl_func( 'glTexGenivOES', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glVertexPointer = gl_func( 'glVertexPointer', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertexWeighthNV = gl_func( 'glVertexWeighthNV', void, (GLhalfNV,))
    gl.glGenerateMipmapEXT = gl_func( 'glGenerateMipmapEXT', void, (GLenum,))
#     gl.glNormal3xOES = gl_func( 'glNormal3xOES', void, (GLfixed, GLfixed, GLfixed))
    gl.glEnableiEXT = gl_func( 'glEnableiEXT', void, (GLenum, GLuint))
    gl.glGetQueryivEXT = gl_func( 'glGetQueryivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
#     gl.glMaterialxv = gl_func( 'glMaterialxv', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
#     gl.glLightxOES = gl_func( 'glLightxOES', void, (GLenum, GLenum, GLfixed))
    gl.glCopyImageSubDataNV = gl_func( 'glCopyImageSubDataNV', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei))
#     gl.glLightModelxv = gl_func( 'glLightModelxv', void, (GLenum, ct.POINTER(GLfixed)))
#     gl.glGetBufferSubDataARB = gl_func( 'glGetBufferSubDataARB', void, (GLenum, GLintptrARB, GLsizeiptrARB, ct.POINTER(void)))
    gl.glGetProgramParameterfvNV = gl_func( 'glGetProgramParameterfvNV', void, (GLenum, GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glSecondaryColorPointerListIBM = gl_func( 'glSecondaryColorPointerListIBM', void, (GLint, GLenum, GLint, ct.POINTER(ct.POINTER(void)), GLint))
    gl.glTexImage3DMultisample = gl_func( 'glTexImage3DMultisample', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glMatrixIndexubvARB = gl_func( 'glMatrixIndexubvARB', void, (GLint, ct.POINTER(GLubyte)))
    gl.glVertex2bOES = gl_func( 'glVertex2bOES', void, (GLbyte, GLbyte))
    gl.glGetPathMetricRangeNV = gl_func( 'glGetPathMetricRangeNV', void, (GLbitfield, GLuint, GLsizei, GLsizei, ct.POINTER(GLfloat)))
    gl.glPixelTexGenParameterfvSGIS = gl_func( 'glPixelTexGenParameterfvSGIS', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glMapParameterfvNV = gl_func( 'glMapParameterfvNV', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glWindowPos4svMESA = gl_func( 'glWindowPos4svMESA', void, (ct.POINTER(GLshort),))
    gl.glDeleteRenderbuffersOES = gl_func( 'glDeleteRenderbuffersOES', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glTextureStorage3DEXT = gl_func( 'glTextureStorage3DEXT', void, (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei))
    gl.glApplyFramebufferAttachmentCMAAINTEL = gl_func( 'glApplyFramebufferAttachmentCMAAINTEL', void, ())
    gl.glWindowPos3s = gl_func( 'glWindowPos3s', void, (GLshort, GLshort, GLshort))
    gl.glColor3fVertex3fSUN = gl_func( 'glColor3fVertex3fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glMultiTexEnviEXT = gl_func( 'glMultiTexEnviEXT', void, (GLenum, GLenum, GLenum, GLint))
    gl.glProgramUniform2uiEXT = gl_func( 'glProgramUniform2uiEXT', void, (GLuint, GLint, GLuint, GLuint))
    gl.glUnmapNamedBufferEXT = gl_func( 'glUnmapNamedBufferEXT', GLboolean, (GLuint,))
    gl.glNamedRenderbufferStorageMultisampleEXT = gl_func( 'glNamedRenderbufferStorageMultisampleEXT', void, (GLuint, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glGetHandleARB = gl_func( 'glGetHandleARB', GLhandleARB, (GLenum,))
    gl.glBlitFramebuffer = gl_func( 'glBlitFramebuffer', void, (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum))
    gl.glVertexAttrib3dvARB = gl_func( 'glVertexAttrib3dvARB', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glVertexAttribI2ui = gl_func( 'glVertexAttribI2ui', void, (GLuint, GLuint, GLuint))
    gl.glColorPointer = gl_func( 'glColorPointer', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
#     gl.glClearColorx = gl_func( 'glClearColorx', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glMultiTexCoord2f = gl_func( 'glMultiTexCoord2f', void, (GLenum, GLfloat, GLfloat))
    gl.glMapBufferARB = gl_func( 'glMapBufferARB', ct.POINTER(void), (GLenum, GLenum))
    gl.glProgramBinaryOES = gl_func( 'glProgramBinaryOES', void, (GLuint, GLenum, ct.POINTER(void), GLint))
    gl.glUniform2uivEXT = gl_func( 'glUniform2uivEXT', void, (GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glBindVertexBuffers = gl_func( 'glBindVertexBuffers', void, (GLuint, GLsizei, ct.POINTER(GLuint), ct.POINTER(GLintptr), ct.POINTER(GLsizei)))
    gl.glFogCoordFormatNV = gl_func( 'glFogCoordFormatNV', void, (GLenum, GLsizei))
    gl.glDrawMeshArraysSUN = gl_func( 'glDrawMeshArraysSUN', void, (GLenum, GLint, GLsizei, GLsizei))
    gl.glMultiTexCoord1dARB = gl_func( 'glMultiTexCoord1dARB', void, (GLenum, GLdouble))
#     gl.glIsImageHandleResidentARB = gl_func( 'glIsImageHandleResidentARB', GLboolean, (GLuint64,))
    gl.glGetMultiTexParameterivEXT = gl_func( 'glGetMultiTexParameterivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGetnPolygonStipple = gl_func( 'glGetnPolygonStipple', void, (GLsizei, ct.POINTER(GLubyte)))
#     gl.glLineWidthx = gl_func( 'glLineWidthx', void, (GLfixed,))
    gl.glTexImage3DOES = gl_func( 'glTexImage3DOES', void, (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
#     gl.glGetMaterialxOES = gl_func( 'glGetMaterialxOES', void, (GLenum, GLenum, GLfixed))
    gl.glDrawBuffersEXT = gl_func( 'glDrawBuffersEXT', void, (GLsizei, ct.POINTER(GLenum)))
    gl.glTexSubImage2D = gl_func( 'glTexSubImage2D', void, (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glFramebufferRenderbuffer = gl_func( 'glFramebufferRenderbuffer', void, (GLenum, GLenum, GLenum, GLuint))
    gl.glGetnMapfv = gl_func( 'glGetnMapfv', void, (GLenum, GLenum, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetVideoivNV = gl_func( 'glGetVideoivNV', void, (GLuint, GLenum, ct.POINTER(GLint)))
#     gl.glUniform1ui64NV = gl_func( 'glUniform1ui64NV', void, (GLint, GLuint64EXT))
#     gl.glGetLightxv = gl_func( 'glGetLightxv', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glVertexAttribPointerARB = gl_func( 'glVertexAttribPointerARB', void, (GLuint, GLint, GLenum, GLboolean, GLsizei, ct.POINTER(void)))
    gl.glVertexAttrib3d = gl_func( 'glVertexAttrib3d', void, (GLuint, GLdouble, GLdouble, GLdouble))
    gl.glClearTexImage = gl_func( 'glClearTexImage', void, (GLuint, GLint, GLenum, GLenum, ct.POINTER(void)))
#     gl.glMapGrid2xOES = gl_func( 'glMapGrid2xOES', void, (GLint, GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glVertexAttrib4dNV = gl_func( 'glVertexAttrib4dNV', void, (GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glGetTextureParameteriv = gl_func( 'glGetTextureParameteriv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetnUniformivARB = gl_func( 'glGetnUniformivARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glVertexArrayVertexAttribDivisorEXT = gl_func( 'glVertexArrayVertexAttribDivisorEXT', void, (GLuint, GLuint, GLuint))
    gl.glVertexAttribs3svNV = gl_func( 'glVertexAttribs3svNV', void, (GLuint, GLsizei, ct.POINTER(GLshort)))
#     gl.glUniform2i64vARB = gl_func( 'glUniform2i64vARB', void, (GLint, GLsizei, ct.POINTER(GLint64)))
    gl.glCreateShader = gl_func( 'glCreateShader', GLuint, (GLenum,))
    gl.glDisableIndexedEXT = gl_func( 'glDisableIndexedEXT', void, (GLenum, GLuint))
    gl.glProgramLocalParameter4fARB = gl_func( 'glProgramLocalParameter4fARB', void, (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glProgramEnvParameterI4uiNV = gl_func( 'glProgramEnvParameterI4uiNV', void, (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glGetBufferPointervARB = gl_func( 'glGetBufferPointervARB', void, (GLenum, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glSecondaryColor3uivEXT = gl_func( 'glSecondaryColor3uivEXT', void, (ct.POINTER(GLuint),))
#     gl.glGetMapxvOES = gl_func( 'glGetMapxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glVertex2s = gl_func( 'glVertex2s', void, (GLshort, GLshort))
    gl.glVertexAttribs4hvNV = gl_func( 'glVertexAttribs4hvNV', void, (GLuint, GLsizei, ct.POINTER(GLhalfNV)))
    gl.glGetFragDataIndexEXT = gl_func( 'glGetFragDataIndexEXT', GLint, (GLuint, ct.POINTER(GLchar)))
    gl.glFogCoordf = gl_func( 'glFogCoordf', void, (GLfloat,))
    gl.glFramebufferRenderbufferEXT = gl_func( 'glFramebufferRenderbufferEXT', void, (GLenum, GLenum, GLenum, GLuint))
    gl.glInvalidateBufferSubData = gl_func( 'glInvalidateBufferSubData', void, (GLuint, GLintptr, GLsizeiptr))
    gl.glUniform2uiEXT = gl_func( 'glUniform2uiEXT', void, (GLint, GLuint, GLuint))
    gl.glSamplerParameteriv = gl_func( 'glSamplerParameteriv', void, (GLuint, GLenum, ct.POINTER(GLint)))
#     gl.glGetTexParameterxvOES = gl_func( 'glGetTexParameterxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glGetFragDataLocationEXT = gl_func( 'glGetFragDataLocationEXT', GLint, (GLuint, ct.POINTER(GLchar)))
    gl.glMinSampleShadingOES = gl_func( 'glMinSampleShadingOES', void, (GLfloat,))
#     gl.glTexCoord4xOES = gl_func( 'glTexCoord4xOES', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glSecondaryColor3svEXT = gl_func( 'glSecondaryColor3svEXT', void, (ct.POINTER(GLshort),))
    gl.glMaxShaderCompilerThreadsARB = gl_func( 'glMaxShaderCompilerThreadsARB', void, (GLuint,))
    gl.glDrawElementsInstancedBaseVertexOES = gl_func( 'glDrawElementsInstancedBaseVertexOES', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei, GLint))
    gl.glUniformMatrix4x3dv = gl_func( 'glUniformMatrix4x3dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glVertexAttrib4fNV = gl_func( 'glVertexAttrib4fNV', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glGetTexGendv = gl_func( 'glGetTexGendv', void, (GLenum, GLenum, ct.POINTER(GLdouble)))
#     gl.glTexCoord4xvOES = gl_func( 'glTexCoord4xvOES', void, (ct.POINTER(GLfixed),))
    gl.glGetPixelTransformParameterfvEXT = gl_func( 'glGetPixelTransformParameterfvEXT', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glEvalCoord1f = gl_func( 'glEvalCoord1f', void, (GLfloat,))
    gl.glColorFragmentOp1ATI = gl_func( 'glColorFragmentOp1ATI', void, (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glBindSampler = gl_func( 'glBindSampler', void, (GLuint, GLuint))
    gl.glGetNamedFramebufferParameteriv = gl_func( 'glGetNamedFramebufferParameteriv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glMultiTexCoord1bOES = gl_func( 'glMultiTexCoord1bOES', void, (GLenum, GLbyte))
    gl.glTextureParameterivEXT = gl_func( 'glTextureParameterivEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glFramebufferTexture1D = gl_func( 'glFramebufferTexture1D', void, (GLenum, GLenum, GLenum, GLuint, GLint))
    gl.glTexCoordP3ui = gl_func( 'glTexCoordP3ui', void, (GLenum, GLuint))
    gl.glWindowPos2ivMESA = gl_func( 'glWindowPos2ivMESA', void, (ct.POINTER(GLint),))
    gl.glGetSamplerParameterIuiv = gl_func( 'glGetSamplerParameterIuiv', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glShaderStorageBlockBinding = gl_func( 'glShaderStorageBlockBinding', void, (GLuint, GLuint, GLuint))
#     gl.glDrawTexxOES = gl_func( 'glDrawTexxOES', void, (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glNamedFramebufferSampleLocationsfvARB = gl_func( 'glNamedFramebufferSampleLocationsfvARB', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glMultiTexCoord3sARB = gl_func( 'glMultiTexCoord3sARB', void, (GLenum, GLshort, GLshort, GLshort))
    gl.glBufferSubData = gl_func( 'glBufferSubData', void, (GLenum, GLintptr, GLsizeiptr, ct.POINTER(void)))
    gl.glPixelTexGenParameteriSGIS = gl_func( 'glPixelTexGenParameteriSGIS', void, (GLenum, GLint))
    gl.glFramebufferTexture2DOES = gl_func( 'glFramebufferTexture2DOES', void, (GLenum, GLenum, GLenum, GLuint, GLint))
    gl.glTextureRenderbufferEXT = gl_func( 'glTextureRenderbufferEXT', void, (GLuint, GLenum, GLuint))
    gl.glGetFragmentLightfvSGIX = gl_func( 'glGetFragmentLightfvSGIX', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glClearAccum = gl_func( 'glClearAccum', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glMatrixIndexuivARB = gl_func( 'glMatrixIndexuivARB', void, (GLint, ct.POINTER(GLuint)))
#     gl.glGetUniformi64vARB = gl_func( 'glGetUniformi64vARB', void, (GLuint, GLint, ct.POINTER(GLint64)))
    gl.glVertexAttrib2sARB = gl_func( 'glVertexAttrib2sARB', void, (GLuint, GLshort, GLshort))
    gl.glGetFloatv = gl_func( 'glGetFloatv', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glIsVariantEnabledEXT = gl_func( 'glIsVariantEnabledEXT', GLboolean, (GLuint, GLenum))
    gl.glGetGraphicsResetStatus = gl_func( 'glGetGraphicsResetStatus', GLenum, ())
    gl.glGetTexGeniv = gl_func( 'glGetTexGeniv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGetAttribLocationARB = gl_func( 'glGetAttribLocationARB', GLint, (GLhandleARB, ct.POINTER(GLcharARB)))
#     gl.glUniformHandleui64vNV = gl_func( 'glUniformHandleui64vNV', void, (GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glTextureParameterIuivEXT = gl_func( 'glTextureParameterIuivEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glMatrixMultTransposefEXT = gl_func( 'glMatrixMultTransposefEXT', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glDrawRangeElementsBaseVertexEXT = gl_func( 'glDrawRangeElementsBaseVertexEXT', void, (GLenum, GLuint, GLuint, GLsizei, GLenum, ct.POINTER(void), GLint))
    gl.glInvalidateNamedFramebufferSubData = gl_func( 'glInvalidateNamedFramebufferSubData', void, (GLuint, GLsizei, ct.POINTER(GLenum), GLint, GLint, GLsizei, GLsizei))
    gl.glSampleMapATI = gl_func( 'glSampleMapATI', void, (GLuint, GLuint, GLenum))
    gl.glDisable = gl_func( 'glDisable', void, (GLenum,))
    gl.glDepthRangedNV = gl_func( 'glDepthRangedNV', void, (GLdouble, GLdouble))
    gl.glUniformMatrix4fvARB = gl_func( 'glUniformMatrix4fvARB', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glConvolutionParameterf = gl_func( 'glConvolutionParameterf', void, (GLenum, GLenum, GLfloat))
    gl.glTexParameterIivOES = gl_func( 'glTexParameterIivOES', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glPushClientAttribDefaultEXT = gl_func( 'glPushClientAttribDefaultEXT', void, (GLbitfield,))
    gl.glVertexArrayVertexAttribBindingEXT = gl_func( 'glVertexArrayVertexAttribBindingEXT', void, (GLuint, GLuint, GLuint))
#     gl.glProgramUniform2i64NV = gl_func( 'glProgramUniform2i64NV', void, (GLuint, GLint, GLint64EXT, GLint64EXT))
#     gl.glVertexAttribL4i64vNV = gl_func( 'glVertexAttribL4i64vNV', void, (GLuint, ct.POINTER(GLint64EXT)))
    gl.glPixelTexGenParameterivSGIS = gl_func( 'glPixelTexGenParameterivSGIS', void, (GLenum, ct.POINTER(GLint)))
    gl.glVertexAttrib1s = gl_func( 'glVertexAttrib1s', void, (GLuint, GLshort))
    gl.glFlushRasterSGIX = gl_func( 'glFlushRasterSGIX', void, ())
    gl.glDisableiNV = gl_func( 'glDisableiNV', void, (GLenum, GLuint))
    gl.glWeightfvARB = gl_func( 'glWeightfvARB', void, (GLint, ct.POINTER(GLfloat)))
    gl.glPauseTransformFeedback = gl_func( 'glPauseTransformFeedback', void, ())
    gl.glVertexAttribI4bv = gl_func( 'glVertexAttribI4bv', void, (GLuint, ct.POINTER(GLbyte)))
    gl.glGetPerfQueryInfoINTEL = gl_func( 'glGetPerfQueryInfoINTEL', void, (GLuint, GLuint, ct.POINTER(GLchar), ct.POINTER(GLuint), ct.POINTER(GLuint), ct.POINTER(GLuint), ct.POINTER(GLuint)))
    gl.glFogCoorddv = gl_func( 'glFogCoorddv', void, (ct.POINTER(GLdouble),))
    gl.glTangent3bEXT = gl_func( 'glTangent3bEXT', void, (GLbyte, GLbyte, GLbyte))
    gl.glGetMaterialiv = gl_func( 'glGetMaterialiv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glLightModelf = gl_func( 'glLightModelf', void, (GLenum, GLfloat))
    gl.glIsVertexArrayOES = gl_func( 'glIsVertexArrayOES', GLboolean, (GLuint,))
    gl.glUniform3f = gl_func( 'glUniform3f', void, (GLint, GLfloat, GLfloat, GLfloat))
    gl.glTexCoord2d = gl_func( 'glTexCoord2d', void, (GLdouble, GLdouble))
    gl.glExtGetProgramsQCOM = gl_func( 'glExtGetProgramsQCOM', void, (ct.POINTER(GLuint), GLint, ct.POINTER(GLint)))
    gl.glVertexAttribI2uiEXT = gl_func( 'glVertexAttribI2uiEXT', void, (GLuint, GLuint, GLuint))
    gl.glPrimitiveRestartIndexNV = gl_func( 'glPrimitiveRestartIndexNV', void, (GLuint,))
    gl.glVertexAttribArrayObjectATI = gl_func( 'glVertexAttribArrayObjectATI', void, (GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint))
    gl.glColorFragmentOp3ATI = gl_func( 'glColorFragmentOp3ATI', void, (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glUniform4uiEXT = gl_func( 'glUniform4uiEXT', void, (GLint, GLuint, GLuint, GLuint, GLuint))
    gl.glEvalMapsNV = gl_func( 'glEvalMapsNV', void, (GLenum, GLenum))
    gl.glTexCoord2fColor4fNormal3fVertex3fvSUN = gl_func( 'glTexCoord2fColor4fNormal3fVertex3fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glShaderSource = gl_func( 'glShaderSource', void, (GLuint, GLsizei, ct.POINTER(ct.POINTER(GLchar)), ct.POINTER(GLint)))
    gl.glVertexFormatNV = gl_func( 'glVertexFormatNV', void, (GLint, GLenum, GLsizei))
    gl.glBindFragDataLocation = gl_func( 'glBindFragDataLocation', void, (GLuint, GLuint, ct.POINTER(GLchar)))
    gl.glRasterPos3i = gl_func( 'glRasterPos3i', void, (GLint, GLint, GLint))
    gl.glVertexAttrib4sARB = gl_func( 'glVertexAttrib4sARB', void, (GLuint, GLshort, GLshort, GLshort, GLshort))
    gl.glCopyTexSubImage3DOES = gl_func( 'glCopyTexSubImage3DOES', void, (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glMultiTexCoord2hNV = gl_func( 'glMultiTexCoord2hNV', void, (GLenum, GLhalfNV, GLhalfNV))
    gl.glWeightivARB = gl_func( 'glWeightivARB', void, (GLint, ct.POINTER(GLint)))
    gl.glMatrixMultTransposedEXT = gl_func( 'glMatrixMultTransposedEXT', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glDeleteRenderbuffers = gl_func( 'glDeleteRenderbuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetPointerv = gl_func( 'glGetPointerv', void, (GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glVertexP4ui = gl_func( 'glVertexP4ui', void, (GLenum, GLuint))
    gl.glNormalStream3dATI = gl_func( 'glNormalStream3dATI', void, (GLenum, GLdouble, GLdouble, GLdouble))
    gl.glMatrixOrthoEXT = gl_func( 'glMatrixOrthoEXT', void, (GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glWindowPos3iv = gl_func( 'glWindowPos3iv', void, (ct.POINTER(GLint),))
    gl.glGetTexGenivOES = gl_func( 'glGetTexGenivOES', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glPixelDataRangeNV = gl_func( 'glPixelDataRangeNV', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glUniform2iARB = gl_func( 'glUniform2iARB', void, (GLint, GLint, GLint))
#     gl.glMultMatrixx = gl_func( 'glMultMatrixx', void, (ct.POINTER(GLfixed),))
    gl.glSetFragmentShaderConstantATI = gl_func( 'glSetFragmentShaderConstantATI', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glReplacementCodeuiColor4fNormal3fVertex3fvSUN = gl_func( 'glReplacementCodeuiColor4fNormal3fVertex3fvSUN', void, (ct.POINTER(GLuint), ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glFrustum = gl_func( 'glFrustum', void, (GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble))
#     gl.glFogx = gl_func( 'glFogx', void, (GLenum, GLfixed))
    gl.glPixelStoref = gl_func( 'glPixelStoref', void, (GLenum, GLfloat))
    gl.glResumeTransformFeedbackNV = gl_func( 'glResumeTransformFeedbackNV', void, ())
    gl.glGetMultisamplefvNV = gl_func( 'glGetMultisamplefvNV', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
#     gl.glTexGenxvOES = gl_func( 'glTexGenxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glProgramUniform3uiv = gl_func( 'glProgramUniform3uiv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glTexSubImage1DEXT = gl_func( 'glTexSubImage1DEXT', void, (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glUnmapTexture2DINTEL = gl_func( 'glUnmapTexture2DINTEL', void, (GLuint, GLint))
    gl.glUniform4dv = gl_func( 'glUniform4dv', void, (GLint, GLsizei, ct.POINTER(GLdouble)))
#     gl.glMultiTexCoord1xvOES = gl_func( 'glMultiTexCoord1xvOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glVertexAttrib4ubNV = gl_func( 'glVertexAttrib4ubNV', void, (GLuint, GLubyte, GLubyte, GLubyte, GLubyte))
    gl.glTexStorage2DMultisample = gl_func( 'glTexStorage2DMultisample', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean))
    gl.glMapControlPointsNV = gl_func( 'glMapControlPointsNV', void, (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, ct.POINTER(void)))
    gl.glMultiTexCoord2bOES = gl_func( 'glMultiTexCoord2bOES', void, (GLenum, GLbyte, GLbyte))
    gl.glUniform2dv = gl_func( 'glUniform2dv', void, (GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glElementPointerAPPLE = gl_func( 'glElementPointerAPPLE', void, (GLenum, ct.POINTER(void)))
    gl.glGetnPixelMapuivARB = gl_func( 'glGetnPixelMapuivARB', void, (GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glGetListParameterfvSGIX = gl_func( 'glGetListParameterfvSGIX', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glTextureStorage3D = gl_func( 'glTextureStorage3D', void, (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei))
    gl.glNormalPointervINTEL = gl_func( 'glNormalPointervINTEL', void, (GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glGetnCompressedTexImageARB = gl_func( 'glGetnCompressedTexImageARB', void, (GLenum, GLint, GLsizei, ct.POINTER(void)))
    gl.glVertexArrayVertexBuffers = gl_func( 'glVertexArrayVertexBuffers', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLuint), ct.POINTER(GLintptr), ct.POINTER(GLsizei)))
#     gl.glPixelZoomxOES = gl_func( 'glPixelZoomxOES', void, (GLfixed, GLfixed))
    gl.glGetDetailTexFuncSGIS = gl_func( 'glGetDetailTexFuncSGIS', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glWindowPos3fARB = gl_func( 'glWindowPos3fARB', void, (GLfloat, GLfloat, GLfloat))
#     gl.glEvalCoord2xvOES = gl_func( 'glEvalCoord2xvOES', void, (ct.POINTER(GLfixed),))
    gl.glFramebufferTextureFaceARB = gl_func( 'glFramebufferTextureFaceARB', void, (GLenum, GLenum, GLuint, GLint, GLenum))
    gl.glGetVertexAttribPointerv = gl_func( 'glGetVertexAttribPointerv', void, (GLuint, GLenum, ct.POINTER(ct.POINTER(void))))
#     gl.glTexParameterx = gl_func( 'glTexParameterx', void, (GLenum, GLenum, GLfixed))
    gl.glApplyTextureEXT = gl_func( 'glApplyTextureEXT', void, (GLenum,))
    gl.glMultiTexCoord1hvNV = gl_func( 'glMultiTexCoord1hvNV', void, (GLenum, ct.POINTER(GLhalfNV)))
    gl.glMultiTexCoord2iARB = gl_func( 'glMultiTexCoord2iARB', void, (GLenum, GLint, GLint))
    gl.glMultiTexCoord3fARB = gl_func( 'glMultiTexCoord3fARB', void, (GLenum, GLfloat, GLfloat, GLfloat))
    gl.glGetnPixelMapfv = gl_func( 'glGetnPixelMapfv', void, (GLenum, GLsizei, ct.POINTER(GLfloat)))
    gl.glVertexAttrib2sv = gl_func( 'glVertexAttrib2sv', void, (GLuint, ct.POINTER(GLshort)))
#     gl.glVDPAUIsSurfaceNV = gl_func( 'glVDPAUIsSurfaceNV', GLboolean, (GLvdpauSurfaceNV,))
    gl.glClearBufferfi = gl_func( 'glClearBufferfi', void, (GLenum, GLint, GLfloat, GLint))
    gl.glPixelTransformParameterfvEXT = gl_func( 'glPixelTransformParameterfvEXT', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glProgramNamedParameter4dNV = gl_func( 'glProgramNamedParameter4dNV', void, (GLuint, GLsizei, ct.POINTER(GLubyte), GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glVertexAttribI4bvEXT = gl_func( 'glVertexAttribI4bvEXT', void, (GLuint, ct.POINTER(GLbyte)))
    gl.glMapGrid1f = gl_func( 'glMapGrid1f', void, (GLint, GLfloat, GLfloat))
    gl.glGetFloati_vEXT = gl_func( 'glGetFloati_vEXT', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glBinormal3bvEXT = gl_func( 'glBinormal3bvEXT', void, (ct.POINTER(GLbyte),))
#     gl.glMapGrid1xOES = gl_func( 'glMapGrid1xOES', void, (GLint, GLfixed, GLfixed))
    gl.glGetShaderiv = gl_func( 'glGetShaderiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glRectdv = gl_func( 'glRectdv', void, (ct.POINTER(GLdouble), ct.POINTER(GLdouble)))
    gl.glInterpolatePathsNV = gl_func( 'glInterpolatePathsNV', void, (GLuint, GLuint, GLuint, GLfloat))
    gl.glGetPixelTexGenParameterfvSGIS = gl_func( 'glGetPixelTexGenParameterfvSGIS', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glVariantPointerEXT = gl_func( 'glVariantPointerEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(void)))
#     gl.glMaterialxvOES = gl_func( 'glMaterialxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glUniform1iv = gl_func( 'glUniform1iv', void, (GLint, GLsizei, ct.POINTER(GLint)))
    gl.glReadBufferNV = gl_func( 'glReadBufferNV', void, (GLenum,))
    gl.glAlphaFragmentOp2ATI = gl_func( 'glAlphaFragmentOp2ATI', void, (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glColorFragmentOp2ATI = gl_func( 'glColorFragmentOp2ATI', void, (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glMultiTexCoord1fARB = gl_func( 'glMultiTexCoord1fARB', void, (GLenum, GLfloat))
    gl.glListParameterivSGIX = gl_func( 'glListParameterivSGIX', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glMultiDrawElementsIndirect = gl_func( 'glMultiDrawElementsIndirect', void, (GLenum, GLenum, ct.POINTER(void), GLsizei, GLsizei))
    gl.glProgramEnvParameters4fvEXT = gl_func( 'glProgramEnvParameters4fvEXT', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLfloat)))
#     gl.glGetMaterialxvOES = gl_func( 'glGetMaterialxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glWindowPos4ivMESA = gl_func( 'glWindowPos4ivMESA', void, (ct.POINTER(GLint),))
    gl.glTexImage2DMultisample = gl_func( 'glTexImage2DMultisample', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean))
    gl.glMapNamedBufferRangeEXT = gl_func( 'glMapNamedBufferRangeEXT', ct.POINTER(void), (GLuint, GLintptr, GLsizeiptr, GLbitfield))
    gl.glMultiTexCoord2fv = gl_func( 'glMultiTexCoord2fv', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glBindFramebufferOES = gl_func( 'glBindFramebufferOES', void, (GLenum, GLuint))
    gl.glGetInvariantBooleanvEXT = gl_func( 'glGetInvariantBooleanvEXT', void, (GLuint, GLenum, ct.POINTER(GLboolean)))
#     gl.glPassThroughxOES = gl_func( 'glPassThroughxOES', void, (GLfixed,))
    gl.glClipPlanefOES = gl_func( 'glClipPlanefOES', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glCopyConvolutionFilter2D = gl_func( 'glCopyConvolutionFilter2D', void, (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei))
    gl.glCopyTextureSubImage1D = gl_func( 'glCopyTextureSubImage1D', void, (GLuint, GLint, GLint, GLint, GLint, GLsizei))
#     gl.glColor4xOES = gl_func( 'glColor4xOES', void, (GLfixed, GLfixed, GLfixed, GLfixed))
#     gl.glGetMaterialxv = gl_func( 'glGetMaterialxv', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glTexCoord2hNV = gl_func( 'glTexCoord2hNV', void, (GLhalfNV, GLhalfNV))
    gl.glMultiTexCoord1fv = gl_func( 'glMultiTexCoord1fv', void, (GLenum, ct.POINTER(GLfloat)))
#     gl.glMakeTextureHandleNonResidentARB = gl_func( 'glMakeTextureHandleNonResidentARB', void, (GLuint64,))
    gl.glDeleteQueriesEXT = gl_func( 'glDeleteQueriesEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glTextureImage3DMultisampleCoverageNV = gl_func( 'glTextureImage3DMultisampleCoverageNV', void, (GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glGetLocalConstantFloatvEXT = gl_func( 'glGetLocalConstantFloatvEXT', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glVertexAttribs1dvNV = gl_func( 'glVertexAttribs1dvNV', void, (GLuint, GLsizei, ct.POINTER(GLdouble)))
    gl.glTexBufferRangeOES = gl_func( 'glTexBufferRangeOES', void, (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr))
    gl.glVertexWeightPointerEXT = gl_func( 'glVertexWeightPointerEXT', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertexAttrib2fvARB = gl_func( 'glVertexAttrib2fvARB', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glTranslated = gl_func( 'glTranslated', void, (GLdouble, GLdouble, GLdouble))
#     gl.glVertexAttribL4ui64vNV = gl_func( 'glVertexAttribL4ui64vNV', void, (GLuint, ct.POINTER(GLuint64EXT)))
    gl.glGetCompressedTextureSubImage = gl_func( 'glGetCompressedTextureSubImage', void, (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, ct.POINTER(void)))
    gl.glVertexAttrib3dvNV = gl_func( 'glVertexAttrib3dvNV', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glVertexAttribL3dvEXT = gl_func( 'glVertexAttribL3dvEXT', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glDispatchComputeGroupSizeARB = gl_func( 'glDispatchComputeGroupSizeARB', void, (GLuint, GLuint, GLuint, GLuint, GLuint, GLuint))
#     gl.glUniform1ui64vARB = gl_func( 'glUniform1ui64vARB', void, (GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glUniformBufferEXT = gl_func( 'glUniformBufferEXT', void, (GLuint, GLint, GLuint))
    gl.glBeginQueryIndexed = gl_func( 'glBeginQueryIndexed', void, (GLenum, GLuint, GLuint))
    gl.glBlendBarrier = gl_func( 'glBlendBarrier', void, ())
    gl.glUniform3dv = gl_func( 'glUniform3dv', void, (GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glVertexAttribIPointer = gl_func( 'glVertexAttribIPointer', void, (GLuint, GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glDeleteTextures = gl_func( 'glDeleteTextures', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetTexParameterIivOES = gl_func( 'glGetTexParameterIivOES', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glColorMaski = gl_func( 'glColorMaski', void, (GLuint, GLboolean, GLboolean, GLboolean, GLboolean))
    gl.glMatrixFrustumEXT = gl_func( 'glMatrixFrustumEXT', void, (GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glStartInstrumentsSGIX = gl_func( 'glStartInstrumentsSGIX', void, ())
    gl.glIsRenderbufferEXT = gl_func( 'glIsRenderbufferEXT', GLboolean, (GLuint,))
    gl.glGetPixelTransformParameterivEXT = gl_func( 'glGetPixelTransformParameterivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glNewList = gl_func( 'glNewList', void, (GLuint, GLenum))
    gl.glTexCoord4iv = gl_func( 'glTexCoord4iv', void, (ct.POINTER(GLint),))
    gl.glMultTransposeMatrixf = gl_func( 'glMultTransposeMatrixf', void, (ct.POINTER(GLfloat),))
    gl.glIsFenceAPPLE = gl_func( 'glIsFenceAPPLE', GLboolean, (GLuint,))
    gl.glTextureParameterfEXT = gl_func( 'glTextureParameterfEXT', void, (GLuint, GLenum, GLenum, GLfloat))
#     gl.glFenceSync = gl_func( 'glFenceSync', GLsync, (GLenum, GLbitfield))
#     gl.glIsTextureHandleResidentARB = gl_func( 'glIsTextureHandleResidentARB', GLboolean, (GLuint64,))
    gl.glVertexAttrib2sNV = gl_func( 'glVertexAttrib2sNV', void, (GLuint, GLshort, GLshort))
    gl.glUniformBlockBinding = gl_func( 'glUniformBlockBinding', void, (GLuint, GLuint, GLuint))
    gl.glPathTexGenNV = gl_func( 'glPathTexGenNV', void, (GLenum, GLenum, GLint, ct.POINTER(GLfloat)))
    gl.glColorMaskiEXT = gl_func( 'glColorMaskiEXT', void, (GLuint, GLboolean, GLboolean, GLboolean, GLboolean))
    gl.glVertexAttrib3dARB = gl_func( 'glVertexAttrib3dARB', void, (GLuint, GLdouble, GLdouble, GLdouble))
    gl.glBlendEquationSeparateEXT = gl_func( 'glBlendEquationSeparateEXT', void, (GLenum, GLenum))
#     gl.glGetSyncivAPPLE = gl_func( 'glGetSyncivAPPLE', void, (GLsync, GLenum, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLint)))
    gl.glRenderbufferStorageMultisampleIMG = gl_func( 'glRenderbufferStorageMultisampleIMG', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glUniformMatrix2x3fvNV = gl_func( 'glUniformMatrix2x3fvNV', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
#     gl.glGetTextureHandleNV = gl_func( 'glGetTextureHandleNV', GLuint64, (GLuint,))
    gl.glGetPixelMapfv = gl_func( 'glGetPixelMapfv', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glWindowPos2sARB = gl_func( 'glWindowPos2sARB', void, (GLshort, GLshort))
    gl.glQueryCounterEXT = gl_func( 'glQueryCounterEXT', void, (GLuint, GLenum))
    gl.glTrackMatrixNV = gl_func( 'glTrackMatrixNV', void, (GLenum, GLuint, GLenum, GLenum))
    gl.glGetVertexAttribPointervNV = gl_func( 'glGetVertexAttribPointervNV', void, (GLuint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glMultiTexEnvfEXT = gl_func( 'glMultiTexEnvfEXT', void, (GLenum, GLenum, GLenum, GLfloat))
    gl.glSamplerParameterIuivOES = gl_func( 'glSamplerParameterIuivOES', void, (GLuint, GLenum, ct.POINTER(GLuint)))
#     gl.glNormal3x = gl_func( 'glNormal3x', void, (GLfixed, GLfixed, GLfixed))
    gl.glProgramUniformMatrix4x3fvEXT = gl_func( 'glProgramUniformMatrix4x3fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertexAttribI1i = gl_func( 'glVertexAttribI1i', void, (GLuint, GLint))
#     gl.glDrawCommandsAddressNV = gl_func( 'glDrawCommandsAddressNV', void, (GLenum, ct.POINTER(GLuint64), ct.POINTER(GLsizei), GLuint))
    gl.glVertexAttrib2fNV = gl_func( 'glVertexAttrib2fNV', void, (GLuint, GLfloat, GLfloat))
    gl.glVertexAttrib4dvNV = gl_func( 'glVertexAttrib4dvNV', void, (GLuint, ct.POINTER(GLdouble)))
#     gl.glDepthRangexOES = gl_func( 'glDepthRangexOES', void, (GLfixed, GLfixed))
    gl.glTexCoord4d = gl_func( 'glTexCoord4d', void, (GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glUniform4uivEXT = gl_func( 'glUniform4uivEXT', void, (GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glUniform3fvARB = gl_func( 'glUniform3fvARB', void, (GLint, GLsizei, ct.POINTER(GLfloat)))
#     gl.glMakeImageHandleNonResidentNV = gl_func( 'glMakeImageHandleNonResidentNV', void, (GLuint64,))
    gl.glProgramUniform3dv = gl_func( 'glProgramUniform3dv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glGetNamedBufferPointervEXT = gl_func( 'glGetNamedBufferPointervEXT', void, (GLuint, GLenum, ct.POINTER(ct.POINTER(void))))
#     gl.glRotatex = gl_func( 'glRotatex', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glColor4b = gl_func( 'glColor4b', void, (GLbyte, GLbyte, GLbyte, GLbyte))
    gl.glGetVertexArrayPointervEXT = gl_func( 'glGetVertexArrayPointervEXT', void, (GLuint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glTextureStorage2DMultisample = gl_func( 'glTextureStorage2DMultisample', void, (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLboolean))
    gl.glProgramUniform4uiv = gl_func( 'glProgramUniform4uiv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glStencilOpSeparateATI = gl_func( 'glStencilOpSeparateATI', void, (GLenum, GLenum, GLenum, GLenum))
    gl.glVertexArrayRangeAPPLE = gl_func( 'glVertexArrayRangeAPPLE', void, (GLsizei, ct.POINTER(void)))
    gl.glTextureParameterIivEXT = gl_func( 'glTextureParameterIivEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGenBuffersARB = gl_func( 'glGenBuffersARB', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glProgramUniform3iEXT = gl_func( 'glProgramUniform3iEXT', void, (GLuint, GLint, GLint, GLint, GLint))
    gl.glVertexAttrib4ubv = gl_func( 'glVertexAttrib4ubv', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glBindBuffersRange = gl_func( 'glBindBuffersRange', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLuint), ct.POINTER(GLintptr), ct.POINTER(GLsizeiptr)))
    gl.glGetDebugMessageLog = gl_func( 'glGetDebugMessageLog', GLuint, (GLuint, GLsizei, ct.POINTER(GLenum), ct.POINTER(GLenum), ct.POINTER(GLuint), ct.POINTER(GLenum), ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glWindowPos2dvMESA = gl_func( 'glWindowPos2dvMESA', void, (ct.POINTER(GLdouble),))
    gl.glBindLightParameterEXT = gl_func( 'glBindLightParameterEXT', GLuint, (GLenum, GLenum))
    gl.glTexCoord1i = gl_func( 'glTexCoord1i', void, (GLint,))
    gl.glSelectPerfMonitorCountersAMD = gl_func( 'glSelectPerfMonitorCountersAMD', void, (GLuint, GLboolean, GLuint, GLint, ct.POINTER(GLuint)))
    gl.glRasterPos2iv = gl_func( 'glRasterPos2iv', void, (ct.POINTER(GLint),))
    gl.glVertexAttribL4dvEXT = gl_func( 'glVertexAttribL4dvEXT', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glTexFilterFuncSGIS = gl_func( 'glTexFilterFuncSGIS', void, (GLenum, GLenum, GLsizei, ct.POINTER(GLfloat)))
    gl.glMultiTexSubImage1DEXT = gl_func( 'glMultiTexSubImage1DEXT', void, (GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glPixelTransformParameterivEXT = gl_func( 'glPixelTransformParameterivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glBlendFuncSeparateEXT = gl_func( 'glBlendFuncSeparateEXT', void, (GLenum, GLenum, GLenum, GLenum))
#     gl.glBindVideoCaptureStreamBufferNV = gl_func( 'glBindVideoCaptureStreamBufferNV', void, (GLuint, GLuint, GLenum, GLintptrARB))
    gl.glProgramVertexLimitNV = gl_func( 'glProgramVertexLimitNV', void, (GLenum, GLint))
    gl.glGetnConvolutionFilter = gl_func( 'glGetnConvolutionFilter', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertex3s = gl_func( 'glVertex3s', void, (GLshort, GLshort, GLshort))
    gl.glMatrixTranslatedEXT = gl_func( 'glMatrixTranslatedEXT', void, (GLenum, GLdouble, GLdouble, GLdouble))
#     gl.glVideoCaptureNV = gl_func( 'glVideoCaptureNV', GLenum, (GLuint, ct.POINTER(GLuint), ct.POINTER(GLuint64EXT)))
    gl.glMatrixIndexusvARB = gl_func( 'glMatrixIndexusvARB', void, (GLint, ct.POINTER(GLushort)))
#     gl.glClientWaitSync = gl_func( 'glClientWaitSync', GLenum, (GLsync, GLbitfield, GLuint64))
#     gl.glProgramUniform1i64NV = gl_func( 'glProgramUniform1i64NV', void, (GLuint, GLint, GLint64EXT))
    gl.glConvolutionParameterfvEXT = gl_func( 'glConvolutionParameterfvEXT', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glBindVideoCaptureStreamTextureNV = gl_func( 'glBindVideoCaptureStreamTextureNV', void, (GLuint, GLuint, GLenum, GLenum, GLuint))
#     gl.glProgramUniform4i64ARB = gl_func( 'glProgramUniform4i64ARB', void, (GLuint, GLint, GLint64, GLint64, GLint64, GLint64))
    gl.glGetProgramSubroutineParameteruivNV = gl_func( 'glGetProgramSubroutineParameteruivNV', void, (GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glDrawArraysInstancedARB = gl_func( 'glDrawArraysInstancedARB', void, (GLenum, GLint, GLsizei, GLsizei))
#     gl.glPolygonOffsetx = gl_func( 'glPolygonOffsetx', void, (GLfixed, GLfixed))
    gl.glVertexAttribI2uiv = gl_func( 'glVertexAttribI2uiv', void, (GLuint, ct.POINTER(GLuint)))
    gl.glGetQueryObjectuivARB = gl_func( 'glGetQueryObjectuivARB', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glFragmentColorMaterialSGIX = gl_func( 'glFragmentColorMaterialSGIX', void, (GLenum, GLenum))
#     gl.glLoadMatrixx = gl_func( 'glLoadMatrixx', void, (ct.POINTER(GLfixed),))
    gl.glNamedFramebufferTextureEXT = gl_func( 'glNamedFramebufferTextureEXT', void, (GLuint, GLenum, GLuint, GLint))
#     gl.glUniformHandleui64NV = gl_func( 'glUniformHandleui64NV', void, (GLint, GLuint64))
    gl.glBegin = gl_func( 'glBegin', void, (GLenum,))
    gl.glMultiTexCoord3d = gl_func( 'glMultiTexCoord3d', void, (GLenum, GLdouble, GLdouble, GLdouble))
    gl.glMatrixMode = gl_func( 'glMatrixMode', void, (GLenum,))
#     gl.glOrthox = gl_func( 'glOrthox', void, (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glFragmentCoverageColorNV = gl_func( 'glFragmentCoverageColorNV', void, (GLuint,))
    gl.glVertexStream3svATI = gl_func( 'glVertexStream3svATI', void, (GLenum, ct.POINTER(GLshort)))
    gl.glDeleteVertexShaderEXT = gl_func( 'glDeleteVertexShaderEXT', void, (GLuint,))
    gl.glMultiDrawArraysIndirectCountARB = gl_func( 'glMultiDrawArraysIndirectCountARB', void, (GLenum, GLintptr, GLintptr, GLsizei, GLsizei))
    gl.glMapObjectBufferATI = gl_func( 'glMapObjectBufferATI', ct.POINTER(void), (GLuint,))
    gl.glMultiTexCoord3iv = gl_func( 'glMultiTexCoord3iv', void, (GLenum, ct.POINTER(GLint)))
    gl.glColor4fv = gl_func( 'glColor4fv', void, (ct.POINTER(GLfloat),))
    gl.glWeightusvARB = gl_func( 'glWeightusvARB', void, (GLint, ct.POINTER(GLushort)))
    gl.glGetNamedProgramLocalParameterIivEXT = gl_func( 'glGetNamedProgramLocalParameterIivEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(GLint)))
    gl.glSecondaryColorP3uiv = gl_func( 'glSecondaryColorP3uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glPixelStorei = gl_func( 'glPixelStorei', void, (GLenum, GLint))
    gl.glExtIsProgramBinaryQCOM = gl_func( 'glExtIsProgramBinaryQCOM', GLboolean, (GLuint,))
    gl.glExtGetRenderbuffersQCOM = gl_func( 'glExtGetRenderbuffersQCOM', void, (ct.POINTER(GLuint), GLint, ct.POINTER(GLint)))
    gl.glFramebufferDrawBufferEXT = gl_func( 'glFramebufferDrawBufferEXT', void, (GLuint, GLenum))
    gl.glPolygonModeNV = gl_func( 'glPolygonModeNV', void, (GLenum, GLenum))
    gl.glMapNamedBufferRange = gl_func( 'glMapNamedBufferRange', ct.POINTER(void), (GLuint, GLintptr, GLsizeiptr, GLbitfield))
    gl.glFogFuncSGIS = gl_func( 'glFogFuncSGIS', void, (GLsizei, ct.POINTER(GLfloat)))
    gl.glLoadTransposeMatrixdARB = gl_func( 'glLoadTransposeMatrixdARB', void, (ct.POINTER(GLdouble),))
    gl.glProgramUniform2fEXT = gl_func( 'glProgramUniform2fEXT', void, (GLuint, GLint, GLfloat, GLfloat))
    gl.glBufferParameteriAPPLE = gl_func( 'glBufferParameteriAPPLE', void, (GLenum, GLenum, GLint))
    gl.glSecondaryColorFormatNV = gl_func( 'glSecondaryColorFormatNV', void, (GLint, GLenum, GLsizei))
    gl.glFogCoordPointerListIBM = gl_func( 'glFogCoordPointerListIBM', void, (GLenum, GLint, ct.POINTER(ct.POINTER(void)), GLint))
    gl.glPrimitiveRestartIndex = gl_func( 'glPrimitiveRestartIndex', void, (GLuint,))
    gl.glVertexAttribLPointer = gl_func( 'glVertexAttribLPointer', void, (GLuint, GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glTexBufferEXT = gl_func( 'glTexBufferEXT', void, (GLenum, GLenum, GLuint))
    gl.glUniformMatrix4x3fv = gl_func( 'glUniformMatrix4x3fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertexAttrib3s = gl_func( 'glVertexAttrib3s', void, (GLuint, GLshort, GLshort, GLshort))
    gl.glGetTexParameterIuivOES = gl_func( 'glGetTexParameterIuivOES', void, (GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glGetProgramParameterdvNV = gl_func( 'glGetProgramParameterdvNV', void, (GLenum, GLuint, GLenum, ct.POINTER(GLdouble)))
    gl.glResumeTransformFeedback = gl_func( 'glResumeTransformFeedback', void, ())
#     gl.glPolygonOffsetxOES = gl_func( 'glPolygonOffsetxOES', void, (GLfixed, GLfixed))
    gl.glUniform3iv = gl_func( 'glUniform3iv', void, (GLint, GLsizei, ct.POINTER(GLint)))
    gl.glVertexAttrib3fARB = gl_func( 'glVertexAttrib3fARB', void, (GLuint, GLfloat, GLfloat, GLfloat))
    gl.glVertexStream1fvATI = gl_func( 'glVertexStream1fvATI', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glClipPlanef = gl_func( 'glClipPlanef', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glAlphaFragmentOp3ATI = gl_func( 'glAlphaFragmentOp3ATI', void, (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glProgramUniform2ui = gl_func( 'glProgramUniform2ui', void, (GLuint, GLint, GLuint, GLuint))
    gl.glWindowPos3ivARB = gl_func( 'glWindowPos3ivARB', void, (ct.POINTER(GLint),))
    gl.glTexStorage3D = gl_func( 'glTexStorage3D', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei))
    gl.glUniform1uiv = gl_func( 'glUniform1uiv', void, (GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glMapGrid2f = gl_func( 'glMapGrid2f', void, (GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat))
    gl.glDeleteTransformFeedbacks = gl_func( 'glDeleteTransformFeedbacks', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glMapVertexAttrib1dAPPLE = gl_func( 'glMapVertexAttrib1dAPPLE', void, (GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, ct.POINTER(GLdouble)))
    gl.glFragmentMaterialiSGIX = gl_func( 'glFragmentMaterialiSGIX', void, (GLenum, GLenum, GLint))
    gl.glMatrixTranslatefEXT = gl_func( 'glMatrixTranslatefEXT', void, (GLenum, GLfloat, GLfloat, GLfloat))
    gl.glVertexStream4sATI = gl_func( 'glVertexStream4sATI', void, (GLenum, GLshort, GLshort, GLshort, GLshort))
    gl.glBlendEquationSeparateiOES = gl_func( 'glBlendEquationSeparateiOES', void, (GLuint, GLenum, GLenum))
    gl.glTexCoordPointerEXT = gl_func( 'glTexCoordPointerEXT', void, (GLint, GLenum, GLsizei, GLsizei, ct.POINTER(void)))
#     gl.glGetLightxOES = gl_func( 'glGetLightxOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glWindowPos3i = gl_func( 'glWindowPos3i', void, (GLint, GLint, GLint))
    gl.glGetIntegerv = gl_func( 'glGetIntegerv', void, (GLenum, ct.POINTER(GLint)))
    gl.glFramebufferTextureLayer = gl_func( 'glFramebufferTextureLayer', void, (GLenum, GLenum, GLuint, GLint, GLint))
    gl.glIsSampler = gl_func( 'glIsSampler', GLboolean, (GLuint,))
    gl.glViewportIndexedfv = gl_func( 'glViewportIndexedfv', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glVertexAttribI2uivEXT = gl_func( 'glVertexAttribI2uivEXT', void, (GLuint, ct.POINTER(GLuint)))
    gl.glExtGetBuffersQCOM = gl_func( 'glExtGetBuffersQCOM', void, (ct.POINTER(GLuint), GLint, ct.POINTER(GLint)))
    gl.glProgramUniformMatrix2dv = gl_func( 'glProgramUniformMatrix2dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glVertex4i = gl_func( 'glVertex4i', void, (GLint, GLint, GLint, GLint))
    gl.glBeginPerfMonitorAMD = gl_func( 'glBeginPerfMonitorAMD', void, (GLuint,))
    gl.glVariantubvEXT = gl_func( 'glVariantubvEXT', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glBlendEquationIndexedAMD = gl_func( 'glBlendEquationIndexedAMD', void, (GLuint, GLenum))
    gl.glPixelTransformParameteriEXT = gl_func( 'glPixelTransformParameteriEXT', void, (GLenum, GLenum, GLint))
    gl.glIsNameAMD = gl_func( 'glIsNameAMD', GLboolean, (GLenum, GLuint))
    gl.glTexCoord2s = gl_func( 'glTexCoord2s', void, (GLshort, GLshort))
    gl.glWindowPos2fvMESA = gl_func( 'glWindowPos2fvMESA', void, (ct.POINTER(GLfloat),))
#     gl.glIndexxOES = gl_func( 'glIndexxOES', void, (GLfixed,))
    gl.glProgramUniform3uiEXT = gl_func( 'glProgramUniform3uiEXT', void, (GLuint, GLint, GLuint, GLuint, GLuint))
    gl.glGenTextures = gl_func( 'glGenTextures', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glVertex3hNV = gl_func( 'glVertex3hNV', void, (GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glTexGenfv = gl_func( 'glTexGenfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glSecondaryColor3iEXT = gl_func( 'glSecondaryColor3iEXT', void, (GLint, GLint, GLint))
    gl.glVertexAttribL3d = gl_func( 'glVertexAttribL3d', void, (GLuint, GLdouble, GLdouble, GLdouble))
    gl.glMatrixIndexPointerOES = gl_func( 'glMatrixIndexPointerOES', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glScissorArrayvNV = gl_func( 'glScissorArrayvNV', void, (GLuint, GLsizei, ct.POINTER(GLint)))
    gl.glGetQueryObjectivARB = gl_func( 'glGetQueryObjectivARB', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glIsVertexArrayAPPLE = gl_func( 'glIsVertexArrayAPPLE', GLboolean, (GLuint,))
    gl.glVertexArrayVertexOffsetEXT = gl_func( 'glVertexArrayVertexOffsetEXT', void, (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr))
    gl.glUniform1dv = gl_func( 'glUniform1dv', void, (GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glRects = gl_func( 'glRects', void, (GLshort, GLshort, GLshort, GLshort))
    gl.glBindBufferARB = gl_func( 'glBindBufferARB', void, (GLenum, GLuint))
    gl.glColorTableParameteriv = gl_func( 'glColorTableParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
#     gl.glUniform3ui64vARB = gl_func( 'glUniform3ui64vARB', void, (GLint, GLsizei, ct.POINTER(GLuint64)))
#     gl.glGetUniformui64vNV = gl_func( 'glGetUniformui64vNV', void, (GLuint, GLint, ct.POINTER(GLuint64EXT)))
#     gl.glLightModelx = gl_func( 'glLightModelx', void, (GLenum, GLfixed))
    gl.glGetProgramNamedParameterfvNV = gl_func( 'glGetProgramNamedParameterfvNV', void, (GLuint, GLsizei, ct.POINTER(GLubyte), ct.POINTER(GLfloat)))
#     gl.glLightModelxvOES = gl_func( 'glLightModelxvOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glVertexStream3sATI = gl_func( 'glVertexStream3sATI', void, (GLenum, GLshort, GLshort, GLshort))
    gl.glNamedRenderbufferStorage = gl_func( 'glNamedRenderbufferStorage', void, (GLuint, GLenum, GLsizei, GLsizei))
    gl.glBlendEquationSeparateIndexedAMD = gl_func( 'glBlendEquationSeparateIndexedAMD', void, (GLuint, GLenum, GLenum))
    gl.glShaderOp1EXT = gl_func( 'glShaderOp1EXT', void, (GLenum, GLuint, GLuint))
    gl.glVertexAttribP3uiv = gl_func( 'glVertexAttribP3uiv', void, (GLuint, GLenum, GLboolean, ct.POINTER(GLuint)))
#     gl.glDrawCommandsStatesAddressNV = gl_func( 'glDrawCommandsStatesAddressNV', void, (ct.POINTER(GLuint64), ct.POINTER(GLsizei), ct.POINTER(GLuint), ct.POINTER(GLuint), GLuint))
    gl.glGetProgramStringARB = gl_func( 'glGetProgramStringARB', void, (GLenum, GLenum, ct.POINTER(void)))
#     gl.glMultMatrixxOES = gl_func( 'glMultMatrixxOES', void, (ct.POINTER(GLfixed),))
    gl.glProgramLocalParameter4fvARB = gl_func( 'glProgramLocalParameter4fvARB', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glVertexAttribs1svNV = gl_func( 'glVertexAttribs1svNV', void, (GLuint, GLsizei, ct.POINTER(GLshort)))
    gl.glIsPointInStrokePathNV = gl_func( 'glIsPointInStrokePathNV', GLboolean, (GLuint, GLfloat, GLfloat))
    gl.glBlendFuncSeparateIndexedAMD = gl_func( 'glBlendFuncSeparateIndexedAMD', void, (GLuint, GLenum, GLenum, GLenum, GLenum))
    gl.glNormal3sv = gl_func( 'glNormal3sv', void, (ct.POINTER(GLshort),))
    gl.glGenFramebuffersEXT = gl_func( 'glGenFramebuffersEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetnTexImage = gl_func( 'glGetnTexImage', void, (GLenum, GLint, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glProgramUniform1fEXT = gl_func( 'glProgramUniform1fEXT', void, (GLuint, GLint, GLfloat))
    gl.glTexCoord4fVertex4fSUN = gl_func( 'glTexCoord4fVertex4fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glSpriteParameteriSGIX = gl_func( 'glSpriteParameteriSGIX', void, (GLenum, GLint))
    gl.glWindowPos3fMESA = gl_func( 'glWindowPos3fMESA', void, (GLfloat, GLfloat, GLfloat))
    gl.glVertexAttribI2iv = gl_func( 'glVertexAttribI2iv', void, (GLuint, ct.POINTER(GLint)))
    gl.glTexCoordP4ui = gl_func( 'glTexCoordP4ui', void, (GLenum, GLuint))
    gl.glBitmap = gl_func( 'glBitmap', void, (GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, ct.POINTER(GLubyte)))
#     gl.glUniform1ui64vNV = gl_func( 'glUniform1ui64vNV', void, (GLint, GLsizei, ct.POINTER(GLuint64EXT)))
    gl.glVertexP3uiv = gl_func( 'glVertexP3uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glGetProgramPipelineInfoLogEXT = gl_func( 'glGetProgramPipelineInfoLogEXT', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glTextureParameterIuiv = gl_func( 'glTextureParameterIuiv', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glWindowPos2d = gl_func( 'glWindowPos2d', void, (GLdouble, GLdouble))
    gl.glVertexAttrib4Niv = gl_func( 'glVertexAttrib4Niv', void, (GLuint, ct.POINTER(GLint)))
    gl.glReplacementCodeuiTexCoord2fVertex3fSUN = gl_func( 'glReplacementCodeuiTexCoord2fVertex3fSUN', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
#     gl.glAlphaFuncx = gl_func( 'glAlphaFuncx', void, (GLenum, GLfixed))
    gl.glGetActiveSubroutineName = gl_func( 'glGetActiveSubroutineName', void, (GLuint, GLenum, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glWeightsvARB = gl_func( 'glWeightsvARB', void, (GLint, ct.POINTER(GLshort)))
    gl.glMemoryBarrierEXT = gl_func( 'glMemoryBarrierEXT', void, (GLbitfield,))
    gl.glTexCoord3dv = gl_func( 'glTexCoord3dv', void, (ct.POINTER(GLdouble),))
    gl.glSecondaryColor3hvNV = gl_func( 'glSecondaryColor3hvNV', void, (ct.POINTER(GLhalfNV),))
#     gl.glProgramUniformHandleui64vNV = gl_func( 'glProgramUniformHandleui64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glGetProgramivNV = gl_func( 'glGetProgramivNV', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glPointParameterivNV = gl_func( 'glPointParameterivNV', void, (GLenum, ct.POINTER(GLint)))
    gl.glUniform1f = gl_func( 'glUniform1f', void, (GLint, GLfloat))
    gl.glVertexAttrib4dv = gl_func( 'glVertexAttrib4dv', void, (GLuint, ct.POINTER(GLdouble)))
#     gl.glVertexAttribL3ui64NV = gl_func( 'glVertexAttribL3ui64NV', void, (GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT))
    gl.glMatrixScalefEXT = gl_func( 'glMatrixScalefEXT', void, (GLenum, GLfloat, GLfloat, GLfloat))
    gl.glUniformMatrix4fv = gl_func( 'glUniformMatrix4fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertexStream3fvATI = gl_func( 'glVertexStream3fvATI', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glDeleteFramebuffers = gl_func( 'glDeleteFramebuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glVariantbvEXT = gl_func( 'glVariantbvEXT', void, (GLuint, ct.POINTER(GLbyte)))
    gl.glTexPageCommitmentEXT = gl_func( 'glTexPageCommitmentEXT', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glCompileShader = gl_func( 'glCompileShader', void, (GLuint,))
    gl.glGetProgramResourceLocation = gl_func( 'glGetProgramResourceLocation', GLint, (GLuint, GLenum, ct.POINTER(GLchar)))
    gl.glGetColorTable = gl_func( 'glGetColorTable', void, (GLenum, GLenum, GLenum, ct.POINTER(void)))
    gl.glStencilFunc = gl_func( 'glStencilFunc', void, (GLenum, GLint, GLuint))
    gl.glColor3f = gl_func( 'glColor3f', void, (GLfloat, GLfloat, GLfloat))
    gl.glCreateShaderProgramv = gl_func( 'glCreateShaderProgramv', GLuint, (GLenum, GLsizei, ct.POINTER(ct.POINTER(GLchar))))
    gl.glRenderbufferStorageMultisampleAPPLE = gl_func( 'glRenderbufferStorageMultisampleAPPLE', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glSecondaryColor3dv = gl_func( 'glSecondaryColor3dv', void, (ct.POINTER(GLdouble),))
    gl.glVertexAttrib2fv = gl_func( 'glVertexAttrib2fv', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glBindFragDataLocationIndexed = gl_func( 'glBindFragDataLocationIndexed', void, (GLuint, GLuint, GLuint, ct.POINTER(GLchar)))
    gl.glPolygonStipple = gl_func( 'glPolygonStipple', void, (ct.POINTER(GLubyte),))
    gl.glVertexAttrib2f = gl_func( 'glVertexAttrib2f', void, (GLuint, GLfloat, GLfloat))
    gl.glBindBufferRange = gl_func( 'glBindBufferRange', void, (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr))
#     gl.glDrawTexxvOES = gl_func( 'glDrawTexxvOES', void, (ct.POINTER(GLfixed),))
    gl.glTexCoordFormatNV = gl_func( 'glTexCoordFormatNV', void, (GLint, GLenum, GLsizei))
    gl.glBlendEquationi = gl_func( 'glBlendEquationi', void, (GLuint, GLenum))
    gl.glFragmentLightfvSGIX = gl_func( 'glFragmentLightfvSGIX', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glPatchParameterfv = gl_func( 'glPatchParameterfv', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glVertex4s = gl_func( 'glVertex4s', void, (GLshort, GLshort, GLshort, GLshort))
    gl.glNamedFramebufferTextureFaceEXT = gl_func( 'glNamedFramebufferTextureFaceEXT', void, (GLuint, GLenum, GLuint, GLint, GLenum))
    gl.glUseProgramStages = gl_func( 'glUseProgramStages', void, (GLuint, GLbitfield, GLuint))
    gl.glMatrixMult3x3fNV = gl_func( 'glMatrixMult3x3fNV', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glMatrixIndexPointerARB = gl_func( 'glMatrixIndexPointerARB', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glGetTexImage = gl_func( 'glGetTexImage', void, (GLenum, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glFramebufferTextureFaceEXT = gl_func( 'glFramebufferTextureFaceEXT', void, (GLenum, GLenum, GLuint, GLint, GLenum))
    gl.glVertexAttrib1dARB = gl_func( 'glVertexAttrib1dARB', void, (GLuint, GLdouble))
    gl.glTexCoord2sv = gl_func( 'glTexCoord2sv', void, (ct.POINTER(GLshort),))
    gl.glClearNamedBufferData = gl_func( 'glClearNamedBufferData', void, (GLuint, GLenum, GLenum, GLenum, ct.POINTER(void)))
    gl.glBlendFunci = gl_func( 'glBlendFunci', void, (GLuint, GLenum, GLenum))
#     gl.glConvolutionParameterxOES = gl_func( 'glConvolutionParameterxOES', void, (GLenum, GLenum, GLfixed))
    gl.glDebugMessageEnableAMD = gl_func( 'glDebugMessageEnableAMD', void, (GLenum, GLenum, GLsizei, ct.POINTER(GLuint), GLboolean))
    gl.glBlendColorEXT = gl_func( 'glBlendColorEXT', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glCopyConvolutionFilter1D = gl_func( 'glCopyConvolutionFilter1D', void, (GLenum, GLenum, GLint, GLint, GLsizei))
    gl.glMultiTexCoord4fv = gl_func( 'glMultiTexCoord4fv', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glRenderbufferStorageMultisample = gl_func( 'glRenderbufferStorageMultisample', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glMatrixLoadTranspose3x3fNV = gl_func( 'glMatrixLoadTranspose3x3fNV', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glValidateProgramPipeline = gl_func( 'glValidateProgramPipeline', void, (GLuint,))
    gl.glFragmentLightiSGIX = gl_func( 'glFragmentLightiSGIX', void, (GLenum, GLenum, GLint))
    gl.glGetQueryObjectivEXT = gl_func( 'glGetQueryObjectivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
#     gl.glFenceSyncAPPLE = gl_func( 'glFenceSyncAPPLE', GLsync, (GLenum, GLbitfield))
    gl.glSecondaryColor3sEXT = gl_func( 'glSecondaryColor3sEXT', void, (GLshort, GLshort, GLshort))
#     gl.glEvalCoord1xOES = gl_func( 'glEvalCoord1xOES', void, (GLfixed,))
    gl.glGetConvolutionFilterEXT = gl_func( 'glGetConvolutionFilterEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetProgramEnvParameterIuivNV = gl_func( 'glGetProgramEnvParameterIuivNV', void, (GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glTbufferMask3DFX = gl_func( 'glTbufferMask3DFX', void, (GLuint,))
#     gl.glVertexAttribL2ui64vNV = gl_func( 'glVertexAttribL2ui64vNV', void, (GLuint, ct.POINTER(GLuint64EXT)))
    gl.glRasterPos4dv = gl_func( 'glRasterPos4dv', void, (ct.POINTER(GLdouble),))
    gl.glMapNamedBufferEXT = gl_func( 'glMapNamedBufferEXT', ct.POINTER(void), (GLuint, GLenum))
    gl.glMakeNamedBufferResidentNV = gl_func( 'glMakeNamedBufferResidentNV', void, (GLuint, GLenum))
    gl.glVertexAttribI3uiv = gl_func( 'glVertexAttribI3uiv', void, (GLuint, ct.POINTER(GLuint)))
    gl.glCompressedTexSubImage3DARB = gl_func( 'glCompressedTexSubImage3DARB', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glProgramSubroutineParametersuivNV = gl_func( 'glProgramSubroutineParametersuivNV', void, (GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glBlendFuncSeparateINGR = gl_func( 'glBlendFuncSeparateINGR', void, (GLenum, GLenum, GLenum, GLenum))
    gl.glGenQueriesARB = gl_func( 'glGenQueriesARB', void, (GLsizei, ct.POINTER(GLuint)))
#     gl.glClientWaitSyncAPPLE = gl_func( 'glClientWaitSyncAPPLE', GLenum, (GLsync, GLbitfield, GLuint64))
    gl.glVertexStream1dvATI = gl_func( 'glVertexStream1dvATI', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glBlendFuncSeparate = gl_func( 'glBlendFuncSeparate', void, (GLenum, GLenum, GLenum, GLenum))
    gl.glPolygonMode = gl_func( 'glPolygonMode', void, (GLenum, GLenum))
    gl.glTexCoord3sv = gl_func( 'glTexCoord3sv', void, (ct.POINTER(GLshort),))
    gl.glGetnMapfvARB = gl_func( 'glGetnMapfvARB', void, (GLenum, GLenum, GLsizei, ct.POINTER(GLfloat)))
    gl.glSecondaryColor3bEXT = gl_func( 'glSecondaryColor3bEXT', void, (GLbyte, GLbyte, GLbyte))
    gl.glVertexArrayVertexAttribIOffsetEXT = gl_func( 'glVertexArrayVertexAttribIOffsetEXT', void, (GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr))
    gl.glUniform1iARB = gl_func( 'glUniform1iARB', void, (GLint, GLint))
#     gl.glTexCoord2xOES = gl_func( 'glTexCoord2xOES', void, (GLfixed, GLfixed))
    gl.glGetQueryiv = gl_func( 'glGetQueryiv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGetUniformfvARB = gl_func( 'glGetUniformfvARB', void, (GLhandleARB, GLint, ct.POINTER(GLfloat)))
    gl.glVideoCaptureStreamParameterfvNV = gl_func( 'glVideoCaptureStreamParameterfvNV', void, (GLuint, GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glStateCaptureNV = gl_func( 'glStateCaptureNV', void, (GLuint, GLenum))
    gl.glMapBufferRange = gl_func( 'glMapBufferRange', ct.POINTER(void), (GLenum, GLintptr, GLsizeiptr, GLbitfield))
    gl.glTexRenderbufferNV = gl_func( 'glTexRenderbufferNV', void, (GLenum, GLuint))
    gl.glVertexAttribL1dvEXT = gl_func( 'glVertexAttribL1dvEXT', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glProgramUniform1dvEXT = gl_func( 'glProgramUniform1dvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glProgramUniform1uiv = gl_func( 'glProgramUniform1uiv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glGetObjectParameterivARB = gl_func( 'glGetObjectParameterivARB', void, (GLhandleARB, GLenum, ct.POINTER(GLint)))
    gl.glUseProgram = gl_func( 'glUseProgram', void, (GLuint,))
    gl.glGetHistogramParameterfv = gl_func( 'glGetHistogramParameterfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glConvolutionFilter1DEXT = gl_func( 'glConvolutionFilter1DEXT', void, (GLenum, GLenum, GLsizei, GLenum, GLenum, ct.POINTER(void)))
#     gl.glLightxvOES = gl_func( 'glLightxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glUniform2ivARB = gl_func( 'glUniform2ivARB', void, (GLint, GLsizei, ct.POINTER(GLint)))
#     gl.glScalexOES = gl_func( 'glScalexOES', void, (GLfixed, GLfixed, GLfixed))
    gl.glProgramLocalParameter4dARB = gl_func( 'glProgramLocalParameter4dARB', void, (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glMinmaxEXT = gl_func( 'glMinmaxEXT', void, (GLenum, GLenum, GLboolean))
    gl.glVertexAttribL2d = gl_func( 'glVertexAttribL2d', void, (GLuint, GLdouble, GLdouble))
    gl.glMapVertexAttrib1fAPPLE = gl_func( 'glMapVertexAttrib1fAPPLE', void, (GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, ct.POINTER(GLfloat)))
    gl.glTextureLightEXT = gl_func( 'glTextureLightEXT', void, (GLenum,))
    gl.glTextureColorMaskSGIS = gl_func( 'glTextureColorMaskSGIS', void, (GLboolean, GLboolean, GLboolean, GLboolean))
    gl.glDeleteNamedStringARB = gl_func( 'glDeleteNamedStringARB', void, (GLint, ct.POINTER(GLchar)))
    gl.glVertex3fv = gl_func( 'glVertex3fv', void, (ct.POINTER(GLfloat),))
    gl.glClearBufferfv = gl_func( 'glClearBufferfv', void, (GLenum, GLint, ct.POINTER(GLfloat)))
    gl.glReadBuffer = gl_func( 'glReadBuffer', void, (GLenum,))
    gl.glIsObjectBufferATI = gl_func( 'glIsObjectBufferATI', GLboolean, (GLuint,))
    gl.glGetOcclusionQueryuivNV = gl_func( 'glGetOcclusionQueryuivNV', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glRenderbufferStorageEXT = gl_func( 'glRenderbufferStorageEXT', void, (GLenum, GLenum, GLsizei, GLsizei))
    gl.glVertexAttribP2ui = gl_func( 'glVertexAttribP2ui', void, (GLuint, GLenum, GLboolean, GLuint))
    gl.glGetPerfQueryIdByNameINTEL = gl_func( 'glGetPerfQueryIdByNameINTEL', void, (ct.POINTER(GLchar), ct.POINTER(GLuint)))
    gl.glGetPathSpacingNV = gl_func( 'glGetPathSpacingNV', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLuint, GLfloat, GLfloat, GLenum, ct.POINTER(GLfloat)))
    gl.glWindowPos2fMESA = gl_func( 'glWindowPos2fMESA', void, (GLfloat, GLfloat))
    gl.glWriteMaskEXT = gl_func( 'glWriteMaskEXT', void, (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum))
    gl.glBindTextures = gl_func( 'glBindTextures', void, (GLuint, GLsizei, ct.POINTER(GLuint)))
    gl.glVertexArrayVertexAttribFormatEXT = gl_func( 'glVertexArrayVertexAttribFormatEXT', void, (GLuint, GLuint, GLint, GLenum, GLboolean, GLuint))
    gl.glVertex3i = gl_func( 'glVertex3i', void, (GLint, GLint, GLint))
    gl.glClearNamedBufferSubData = gl_func( 'glClearNamedBufferSubData', void, (GLuint, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetNamedRenderbufferParameterivEXT = gl_func( 'glGetNamedRenderbufferParameterivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glMultiTexGendEXT = gl_func( 'glMultiTexGendEXT', void, (GLenum, GLenum, GLenum, GLdouble))
    gl.glGetVertexArrayiv = gl_func( 'glGetVertexArrayiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetUniformSubroutineuiv = gl_func( 'glGetUniformSubroutineuiv', void, (GLenum, GLint, ct.POINTER(GLuint)))
    gl.glGetHistogramParameteriv = gl_func( 'glGetHistogramParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glDebugMessageControlARB = gl_func( 'glDebugMessageControlARB', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(GLuint), GLboolean))
#     gl.glMaterialx = gl_func( 'glMaterialx', void, (GLenum, GLenum, GLfixed))
    gl.glColor3iv = gl_func( 'glColor3iv', void, (ct.POINTER(GLint),))
    gl.glPNTrianglesiATI = gl_func( 'glPNTrianglesiATI', void, (GLenum, GLint))
    gl.glDeleteFencesAPPLE = gl_func( 'glDeleteFencesAPPLE', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glBlendBarrierNV = gl_func( 'glBlendBarrierNV', void, ())
    gl.glWindowPos3svARB = gl_func( 'glWindowPos3svARB', void, (ct.POINTER(GLshort),))
    gl.glDrawTransformFeedbackNV = gl_func( 'glDrawTransformFeedbackNV', void, (GLenum, GLuint))
    gl.glVertexWeighthvNV = gl_func( 'glVertexWeighthvNV', void, (ct.POINTER(GLhalfNV),))
#     gl.glMakeTextureHandleNonResidentNV = gl_func( 'glMakeTextureHandleNonResidentNV', void, (GLuint64,))
    gl.glMultTransposeMatrixfARB = gl_func( 'glMultTransposeMatrixfARB', void, (ct.POINTER(GLfloat),))
    gl.glVertexAttrib4svNV = gl_func( 'glVertexAttrib4svNV', void, (GLuint, ct.POINTER(GLshort)))
    gl.glMultiTexCoord4bvOES = gl_func( 'glMultiTexCoord4bvOES', void, (GLenum, ct.POINTER(GLbyte)))
    gl.glGetQueryObjectuivEXT = gl_func( 'glGetQueryObjectuivEXT', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glMultTransposeMatrixdARB = gl_func( 'glMultTransposeMatrixdARB', void, (ct.POINTER(GLdouble),))
    gl.glVertexAttrib4d = gl_func( 'glVertexAttrib4d', void, (GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glProvokingVertexEXT = gl_func( 'glProvokingVertexEXT', void, (GLenum,))
    gl.glVertexStream4iATI = gl_func( 'glVertexStream4iATI', void, (GLenum, GLint, GLint, GLint, GLint))
    gl.glPathParameterivNV = gl_func( 'glPathParameterivNV', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glProgramUniform4uiEXT = gl_func( 'glProgramUniform4uiEXT', void, (GLuint, GLint, GLuint, GLuint, GLuint, GLuint))
    gl.glGetMultisamplefv = gl_func( 'glGetMultisamplefv', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glBinormal3svEXT = gl_func( 'glBinormal3svEXT', void, (ct.POINTER(GLshort),))
#     gl.glUniform3i64vARB = gl_func( 'glUniform3i64vARB', void, (GLint, GLsizei, ct.POINTER(GLint64)))
    gl.glPixelTransformParameterfEXT = gl_func( 'glPixelTransformParameterfEXT', void, (GLenum, GLenum, GLfloat))
    gl.glGetIntegerIndexedvEXT = gl_func( 'glGetIntegerIndexedvEXT', void, (GLenum, GLuint, ct.POINTER(GLint)))
    gl.glUniform3d = gl_func( 'glUniform3d', void, (GLint, GLdouble, GLdouble, GLdouble))
    gl.glVertexAttribI4uivEXT = gl_func( 'glVertexAttribI4uivEXT', void, (GLuint, ct.POINTER(GLuint)))
    gl.glStencilMaskSeparate = gl_func( 'glStencilMaskSeparate', void, (GLenum, GLuint))
    gl.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = gl_func( 'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glEvalCoord2d = gl_func( 'glEvalCoord2d', void, (GLdouble, GLdouble))
    gl.glGetMultiTexImageEXT = gl_func( 'glGetMultiTexImageEXT', void, (GLenum, GLenum, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glTextureImage3DEXT = gl_func( 'glTextureImage3DEXT', void, (GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glVertexP2uiv = gl_func( 'glVertexP2uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glGetTexParameterIuivEXT = gl_func( 'glGetTexParameterIuivEXT', void, (GLenum, GLenum, ct.POINTER(GLuint)))
#     gl.glUniform2i64vNV = gl_func( 'glUniform2i64vNV', void, (GLint, GLsizei, ct.POINTER(GLint64EXT)))
    gl.glEndPerfQueryINTEL = gl_func( 'glEndPerfQueryINTEL', void, (GLuint,))
    gl.glGetVertexAttribLdv = gl_func( 'glGetVertexAttribLdv', void, (GLuint, GLenum, ct.POINTER(GLdouble)))
    gl.glVertexAttrib4NusvARB = gl_func( 'glVertexAttrib4NusvARB', void, (GLuint, ct.POINTER(GLushort)))
    gl.glMultiTexCoord1ivARB = gl_func( 'glMultiTexCoord1ivARB', void, (GLenum, ct.POINTER(GLint)))
    gl.glGetnMapdv = gl_func( 'glGetnMapdv', void, (GLenum, GLenum, GLsizei, ct.POINTER(GLdouble)))
    gl.glFramebufferRenderbufferOES = gl_func( 'glFramebufferRenderbufferOES', void, (GLenum, GLenum, GLenum, GLuint))
    gl.glCompressedTexSubImage3D = gl_func( 'glCompressedTexSubImage3D', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glCopyPathNV = gl_func( 'glCopyPathNV', void, (GLuint, GLuint))
    gl.glGetPixelMapusv = gl_func( 'glGetPixelMapusv', void, (GLenum, ct.POINTER(GLushort)))
    gl.glProgramUniform4dv = gl_func( 'glProgramUniform4dv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glSecondaryColorPointer = gl_func( 'glSecondaryColorPointer', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glFrontFace = gl_func( 'glFrontFace', void, (GLenum,))
    gl.glUniformMatrix3fv = gl_func( 'glUniformMatrix3fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glGetObjectBufferfvATI = gl_func( 'glGetObjectBufferfvATI', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glMultiTexCoord4hvNV = gl_func( 'glMultiTexCoord4hvNV', void, (GLenum, ct.POINTER(GLhalfNV)))
#     gl.glVertex4xvOES = gl_func( 'glVertex4xvOES', void, (ct.POINTER(GLfixed),))
    gl.glProgramUniform2dvEXT = gl_func( 'glProgramUniform2dvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glMultiTexCoord3s = gl_func( 'glMultiTexCoord3s', void, (GLenum, GLshort, GLshort, GLshort))
    gl.glCheckFramebufferStatus = gl_func( 'glCheckFramebufferStatus', GLenum, (GLenum,))
    gl.glVariantArrayObjectATI = gl_func( 'glVariantArrayObjectATI', void, (GLuint, GLenum, GLsizei, GLuint, GLuint))
    gl.glCombinerInputNV = gl_func( 'glCombinerInputNV', void, (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum))
    gl.glGetVariantIntegervEXT = gl_func( 'glGetVariantIntegervEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glValidateProgramPipelineEXT = gl_func( 'glValidateProgramPipelineEXT', void, (GLuint,))
    gl.glDrawElementArrayAPPLE = gl_func( 'glDrawElementArrayAPPLE', void, (GLenum, GLint, GLsizei))
    gl.glCompressedTextureSubImage3D = gl_func( 'glCompressedTextureSubImage3D', void, (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glUniform4iARB = gl_func( 'glUniform4iARB', void, (GLint, GLint, GLint, GLint, GLint))
    gl.glDrawElementsIndirect = gl_func( 'glDrawElementsIndirect', void, (GLenum, GLenum, ct.POINTER(void)))
    gl.glVertex4fv = gl_func( 'glVertex4fv', void, (ct.POINTER(GLfloat),))
    gl.glDrawRangeElementsBaseVertex = gl_func( 'glDrawRangeElementsBaseVertex', void, (GLenum, GLuint, GLuint, GLsizei, GLenum, ct.POINTER(void), GLint))
    gl.glProgramUniformMatrix4x2fvEXT = gl_func( 'glProgramUniformMatrix4x2fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glGenSamplers = gl_func( 'glGenSamplers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glDrawElementArrayATI = gl_func( 'glDrawElementArrayATI', void, (GLenum, GLsizei))
    gl.glOrthofOES = gl_func( 'glOrthofOES', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glNamedProgramLocalParameterI4iEXT = gl_func( 'glNamedProgramLocalParameterI4iEXT', void, (GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint))
    gl.glRasterPos4fv = gl_func( 'glRasterPos4fv', void, (ct.POINTER(GLfloat),))
    gl.glGenFragmentShadersATI = gl_func( 'glGenFragmentShadersATI', GLuint, (GLuint,))
    gl.glUniformMatrix2x3fv = gl_func( 'glUniformMatrix2x3fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
#     gl.glProgramUniform2ui64vARB = gl_func( 'glProgramUniform2ui64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glBindBufferBaseNV = gl_func( 'glBindBufferBaseNV', void, (GLenum, GLuint, GLuint))
    gl.glTangent3iEXT = gl_func( 'glTangent3iEXT', void, (GLint, GLint, GLint))
#     gl.glDebugMessageCallbackAMD = gl_func( 'glDebugMessageCallbackAMD', void, (GLDEBUGPROCAMD, ct.POINTER(void)))
    gl.glGenQueriesEXT = gl_func( 'glGenQueriesEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glTexCoord2fColor3fVertex3fvSUN = gl_func( 'glTexCoord2fColor3fVertex3fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glNamedFramebufferTexture1DEXT = gl_func( 'glNamedFramebufferTexture1DEXT', void, (GLuint, GLenum, GLenum, GLuint, GLint))
    gl.glCopyTextureImage2DEXT = gl_func( 'glCopyTextureImage2DEXT', void, (GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint))
    gl.glArrayObjectATI = gl_func( 'glArrayObjectATI', void, (GLenum, GLint, GLenum, GLsizei, GLuint, GLuint))
    gl.glIndexd = gl_func( 'glIndexd', void, (GLdouble,))
#     gl.glWaitSyncAPPLE = gl_func( 'glWaitSyncAPPLE', void, (GLsync, GLbitfield, GLuint64))
#     gl.glColor3xvOES = gl_func( 'glColor3xvOES', void, (ct.POINTER(GLfixed),))
    gl.glMultiTexCoordPointerEXT = gl_func( 'glMultiTexCoordPointerEXT', void, (GLenum, GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glMatrixMultdEXT = gl_func( 'glMatrixMultdEXT', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glBindSamplers = gl_func( 'glBindSamplers', void, (GLuint, GLsizei, ct.POINTER(GLuint)))
    gl.glGetRenderbufferParameteriv = gl_func( 'glGetRenderbufferParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glListParameterfSGIX = gl_func( 'glListParameterfSGIX', void, (GLuint, GLenum, GLfloat))
    gl.glGetGraphicsResetStatusARB = gl_func( 'glGetGraphicsResetStatusARB', GLenum, ())
#     gl.glProgramUniform3i64ARB = gl_func( 'glProgramUniform3i64ARB', void, (GLuint, GLint, GLint64, GLint64, GLint64))
    gl.glIndexPointerEXT = gl_func( 'glIndexPointerEXT', void, (GLenum, GLsizei, GLsizei, ct.POINTER(void)))
    gl.glCopyTexImage2D = gl_func( 'glCopyTexImage2D', void, (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint))
    gl.glSetLocalConstantEXT = gl_func( 'glSetLocalConstantEXT', void, (GLuint, GLenum, ct.POINTER(void)))
    gl.glNormalP3ui = gl_func( 'glNormalP3ui', void, (GLenum, GLuint))
    gl.glVertexAttribL1d = gl_func( 'glVertexAttribL1d', void, (GLuint, GLdouble))
#     gl.glRasterPos3xOES = gl_func( 'glRasterPos3xOES', void, (GLfixed, GLfixed, GLfixed))
    gl.glDeleteFramebuffersEXT = gl_func( 'glDeleteFramebuffersEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glPointParameteriv = gl_func( 'glPointParameteriv', void, (GLenum, ct.POINTER(GLint)))
    gl.glDisableVertexArrayAttribEXT = gl_func( 'glDisableVertexArrayAttribEXT', void, (GLuint, GLuint))
    gl.glGetnMinmaxARB = gl_func( 'glGetnMinmaxARB', void, (GLenum, GLboolean, GLenum, GLenum, GLsizei, ct.POINTER(void)))
#     gl.glProgramUniform1i64vARB = gl_func( 'glProgramUniform1i64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64)))
    gl.glMultiTexCoord2dv = gl_func( 'glMultiTexCoord2dv', void, (GLenum, ct.POINTER(GLdouble)))
#     gl.glVertexAttribL1ui64vNV = gl_func( 'glVertexAttribL1ui64vNV', void, (GLuint, ct.POINTER(GLuint64EXT)))
    gl.glVertexArrayVertexAttribLFormatEXT = gl_func( 'glVertexArrayVertexAttribLFormatEXT', void, (GLuint, GLuint, GLint, GLenum, GLuint))
    gl.glTexCoord4hNV = gl_func( 'glTexCoord4hNV', void, (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV))
#     gl.glTexEnvxvOES = gl_func( 'glTexEnvxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glBindImageTexture = gl_func( 'glBindImageTexture', void, (GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum))
    gl.glGetVertexAttribArrayObjectivATI = gl_func( 'glGetVertexAttribArrayObjectivATI', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glReplacementCodePointerSUN = gl_func( 'glReplacementCodePointerSUN', void, (GLenum, GLsizei, ct.POINTER(ct.POINTER(void))))
    gl.glDrawElementsBaseVertexEXT = gl_func( 'glDrawElementsBaseVertexEXT', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLint))
#     gl.glOrthoxOES = gl_func( 'glOrthoxOES', void, (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glGetColorTableParameteriv = gl_func( 'glGetColorTableParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glMultiTexCoord4fARB = gl_func( 'glMultiTexCoord4fARB', void, (GLenum, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glLineWidth = gl_func( 'glLineWidth', void, (GLfloat,))
    gl.glVertexAttrib2svNV = gl_func( 'glVertexAttrib2svNV', void, (GLuint, ct.POINTER(GLshort)))
    gl.glViewportIndexedfNV = gl_func( 'glViewportIndexedfNV', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glGetQueryivARB = gl_func( 'glGetQueryivARB', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glResizeBuffersMESA = gl_func( 'glResizeBuffersMESA', void, ())
    gl.glDisableDriverControlQCOM = gl_func( 'glDisableDriverControlQCOM', void, (GLuint,))
    gl.glMultiTexCoord3fvARB = gl_func( 'glMultiTexCoord3fvARB', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glTangent3fEXT = gl_func( 'glTangent3fEXT', void, (GLfloat, GLfloat, GLfloat))
    gl.glGetPathCommandsNV = gl_func( 'glGetPathCommandsNV', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glMultiTexCoord4sv = gl_func( 'glMultiTexCoord4sv', void, (GLenum, ct.POINTER(GLshort)))
    gl.glGetFloati_v = gl_func( 'glGetFloati_v', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glColor4ub = gl_func( 'glColor4ub', void, (GLubyte, GLubyte, GLubyte, GLubyte))
    gl.glFogCoorddvEXT = gl_func( 'glFogCoorddvEXT', void, (ct.POINTER(GLdouble),))
    gl.glDisableVariantClientStateEXT = gl_func( 'glDisableVariantClientStateEXT', void, (GLuint,))
    gl.glGetTexParameterfv = gl_func( 'glGetTexParameterfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glColor3d = gl_func( 'glColor3d', void, (GLdouble, GLdouble, GLdouble))
    gl.glNamedBufferSubDataEXT = gl_func( 'glNamedBufferSubDataEXT', void, (GLuint, GLintptr, GLsizeiptr, ct.POINTER(void)))
    gl.glBlendFunc = gl_func( 'glBlendFunc', void, (GLenum, GLenum))
#     gl.glEGLImageTargetRenderbufferStorageOES = gl_func( 'glEGLImageTargetRenderbufferStorageOES', void, (GLenum, GLeglImageOES))
    gl.glVertexAttrib3hNV = gl_func( 'glVertexAttrib3hNV', void, (GLuint, GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glMultiTexCoord2sARB = gl_func( 'glMultiTexCoord2sARB', void, (GLenum, GLshort, GLshort))
    gl.glEndConditionalRender = gl_func( 'glEndConditionalRender', void, ())
    gl.glVertexAttribIFormat = gl_func( 'glVertexAttribIFormat', void, (GLuint, GLint, GLenum, GLuint))
    gl.glGetPointerIndexedvEXT = gl_func( 'glGetPointerIndexedvEXT', void, (GLenum, GLuint, ct.POINTER(ct.POINTER(void))))
    gl.glGetMapdv = gl_func( 'glGetMapdv', void, (GLenum, GLenum, ct.POINTER(GLdouble)))
    gl.glProgramUniformMatrix2x3fvEXT = gl_func( 'glProgramUniformMatrix2x3fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glGetProgramResourceLocationIndex = gl_func( 'glGetProgramResourceLocationIndex', GLint, (GLuint, GLenum, ct.POINTER(GLchar)))
    gl.glUniform1i = gl_func( 'glUniform1i', void, (GLint, GLint))
#     gl.glGetVertexAttribLui64vNV = gl_func( 'glGetVertexAttribLui64vNV', void, (GLuint, GLenum, ct.POINTER(GLuint64EXT)))
#     gl.glVertexAttribL2ui64NV = gl_func( 'glVertexAttribL2ui64NV', void, (GLuint, GLuint64EXT, GLuint64EXT))
    gl.glProgramUniform1ivEXT = gl_func( 'glProgramUniform1ivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glSecondaryColor3bvEXT = gl_func( 'glSecondaryColor3bvEXT', void, (ct.POINTER(GLbyte),))
#     gl.glRasterPos2xvOES = gl_func( 'glRasterPos2xvOES', void, (ct.POINTER(GLfixed),))
    gl.glMultiTexCoord2svARB = gl_func( 'glMultiTexCoord2svARB', void, (GLenum, ct.POINTER(GLshort)))
    gl.glVertexAttribI4iv = gl_func( 'glVertexAttribI4iv', void, (GLuint, ct.POINTER(GLint)))
    gl.glMapBufferOES = gl_func( 'glMapBufferOES', ct.POINTER(void), (GLenum, GLenum))
    gl.glUniform1uivEXT = gl_func( 'glUniform1uivEXT', void, (GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glVertexAttrib1dNV = gl_func( 'glVertexAttrib1dNV', void, (GLuint, GLdouble))
    gl.glNamedProgramLocalParameter4dvEXT = gl_func( 'glNamedProgramLocalParameter4dvEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glMultiTexCoord1fvARB = gl_func( 'glMultiTexCoord1fvARB', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glGetMultiTexParameterfvEXT = gl_func( 'glGetMultiTexParameterfvEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glVertexAttrib2dvNV = gl_func( 'glVertexAttrib2dvNV', void, (GLuint, ct.POINTER(GLdouble)))
#     gl.glGetSynciv = gl_func( 'glGetSynciv', void, (GLsync, GLenum, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLint)))
    gl.glWindowPos3dARB = gl_func( 'glWindowPos3dARB', void, (GLdouble, GLdouble, GLdouble))
    gl.glDrawPixels = gl_func( 'glDrawPixels', void, (GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glNormalStream3sATI = gl_func( 'glNormalStream3sATI', void, (GLenum, GLshort, GLshort, GLshort))
    gl.glVertexStream2ivATI = gl_func( 'glVertexStream2ivATI', void, (GLenum, ct.POINTER(GLint)))
    gl.glNormalStream3bATI = gl_func( 'glNormalStream3bATI', void, (GLenum, GLbyte, GLbyte, GLbyte))
    gl.glVertexBlendARB = gl_func( 'glVertexBlendARB', void, (GLint,))
    gl.glReplacementCodeuiVertex3fSUN = gl_func( 'glReplacementCodeuiVertex3fSUN', void, (GLuint, GLfloat, GLfloat, GLfloat))
    gl.glImageTransformParameterfvHP = gl_func( 'glImageTransformParameterfvHP', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glRasterPos2fv = gl_func( 'glRasterPos2fv', void, (ct.POINTER(GLfloat),))
    gl.glGetObjectPtrLabel = gl_func( 'glGetObjectPtrLabel', void, (ct.POINTER(void), GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glTextureSubImage2DEXT = gl_func( 'glTextureSubImage2DEXT', void, (GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glVertexAttribI4uiEXT = gl_func( 'glVertexAttribI4uiEXT', void, (GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glTexCoord4fVertex4fvSUN = gl_func( 'glTexCoord4fVertex4fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glNamedFramebufferTextureLayerEXT = gl_func( 'glNamedFramebufferTextureLayerEXT', void, (GLuint, GLenum, GLuint, GLint, GLint))
    gl.glDeletePerfQueryINTEL = gl_func( 'glDeletePerfQueryINTEL', void, (GLuint,))
    gl.glGetVertexAttribdvARB = gl_func( 'glGetVertexAttribdvARB', void, (GLuint, GLenum, ct.POINTER(GLdouble)))
    gl.glCreateShaderProgramEXT = gl_func( 'glCreateShaderProgramEXT', GLuint, (GLenum, ct.POINTER(GLchar)))
    gl.glDeleteObjectARB = gl_func( 'glDeleteObjectARB', void, (GLhandleARB,))
    gl.glMultiDrawElementsIndirectBindlessCountNV = gl_func( 'glMultiDrawElementsIndirectBindlessCountNV', void, (GLenum, GLenum, ct.POINTER(void), GLsizei, GLsizei, GLsizei, GLint))
    gl.glGetBufferParameterivARB = gl_func( 'glGetBufferParameterivARB', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glStencilOp = gl_func( 'glStencilOp', void, (GLenum, GLenum, GLenum))
    gl.glDrawElementsInstancedNV = gl_func( 'glDrawElementsInstancedNV', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei))
    gl.glPollInstrumentsSGIX = gl_func( 'glPollInstrumentsSGIX', GLint, (ct.POINTER(GLint),))
    gl.glEnableiNV = gl_func( 'glEnableiNV', void, (GLenum, GLuint))
    gl.glVertexStream2fvATI = gl_func( 'glVertexStream2fvATI', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glEnd = gl_func( 'glEnd', void, ())
    gl.glIndexdv = gl_func( 'glIndexdv', void, (ct.POINTER(GLdouble),))
    gl.glCompileShaderARB = gl_func( 'glCompileShaderARB', void, (GLhandleARB,))
#     gl.glGetVertexAttribLi64vNV = gl_func( 'glGetVertexAttribLi64vNV', void, (GLuint, GLenum, ct.POINTER(GLint64EXT)))
    gl.glSecondaryColor3fv = gl_func( 'glSecondaryColor3fv', void, (ct.POINTER(GLfloat),))
    gl.glVertexStream2sATI = gl_func( 'glVertexStream2sATI', void, (GLenum, GLshort, GLshort))
    gl.glColor4sv = gl_func( 'glColor4sv', void, (ct.POINTER(GLshort),))
    gl.glTexCoord3bOES = gl_func( 'glTexCoord3bOES', void, (GLbyte, GLbyte, GLbyte))
    gl.glGetnPolygonStippleARB = gl_func( 'glGetnPolygonStippleARB', void, (GLsizei, ct.POINTER(GLubyte)))
    gl.glVertexAttribs1fvNV = gl_func( 'glVertexAttribs1fvNV', void, (GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glTexStorage1D = gl_func( 'glTexStorage1D', void, (GLenum, GLsizei, GLenum, GLsizei))
#     gl.glFrustumxOES = gl_func( 'glFrustumxOES', void, (GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glVertexAttrib2hNV = gl_func( 'glVertexAttrib2hNV', void, (GLuint, GLhalfNV, GLhalfNV))
    gl.glGetTextureParameterIuiv = gl_func( 'glGetTextureParameterIuiv', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glClearNamedFramebufferiv = gl_func( 'glClearNamedFramebufferiv', void, (GLuint, GLenum, GLint, ct.POINTER(GLint)))
    gl.glDispatchComputeIndirect = gl_func( 'glDispatchComputeIndirect', void, (GLintptr,))
    gl.glBinormal3ivEXT = gl_func( 'glBinormal3ivEXT', void, (ct.POINTER(GLint),))
    gl.glProgramUniformMatrix2x4dv = gl_func( 'glProgramUniformMatrix2x4dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glFinishAsyncSGIX = gl_func( 'glFinishAsyncSGIX', GLint, (ct.POINTER(GLuint),))
    gl.glMatrixMultTranspose3x3fNV = gl_func( 'glMatrixMultTranspose3x3fNV', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glMultiDrawElementsBaseVertex = gl_func( 'glMultiDrawElementsBaseVertex', void, (GLenum, ct.POINTER(GLsizei), GLenum, ct.POINTER(ct.POINTER(void)), GLsizei, ct.POINTER(GLint)))
    gl.glVertexArrayNormalOffsetEXT = gl_func( 'glVertexArrayNormalOffsetEXT', void, (GLuint, GLuint, GLenum, GLsizei, GLintptr))
    gl.glDisablei = gl_func( 'glDisablei', void, (GLenum, GLuint))
    gl.glMultiTexCoord4d = gl_func( 'glMultiTexCoord4d', void, (GLenum, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glSpriteParameterfvSGIX = gl_func( 'glSpriteParameterfvSGIX', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glMap1d = gl_func( 'glMap1d', void, (GLenum, GLdouble, GLdouble, GLint, GLint, ct.POINTER(GLdouble)))
#     gl.glMap1xOES = gl_func( 'glMap1xOES', void, (GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed))
    gl.glSampleMaskSGIS = gl_func( 'glSampleMaskSGIS', void, (GLclampf, GLboolean))
    gl.glColorMaskIndexedEXT = gl_func( 'glColorMaskIndexedEXT', void, (GLuint, GLboolean, GLboolean, GLboolean, GLboolean))
#     gl.glGetTexEnvxvOES = gl_func( 'glGetTexEnvxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glIsAsyncMarkerSGIX = gl_func( 'glIsAsyncMarkerSGIX', GLboolean, (GLuint,))
    gl.glProgramBufferParametersfvNV = gl_func( 'glProgramBufferParametersfvNV', void, (GLenum, GLuint, GLuint, GLsizei, ct.POINTER(GLfloat)))
#     gl.glUniform4i64ARB = gl_func( 'glUniform4i64ARB', void, (GLint, GLint64, GLint64, GLint64, GLint64))
    gl.glCompressedTexSubImage1DARB = gl_func( 'glCompressedTexSubImage1DARB', void, (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glBufferStorage = gl_func( 'glBufferStorage', void, (GLenum, GLsizeiptr, ct.POINTER(void), GLbitfield))
    gl.glTexGenfOES = gl_func( 'glTexGenfOES', void, (GLenum, GLenum, GLfloat))
    gl.glProgramUniform2f = gl_func( 'glProgramUniform2f', void, (GLuint, GLint, GLfloat, GLfloat))
    gl.glVertexArrayParameteriAPPLE = gl_func( 'glVertexArrayParameteriAPPLE', void, (GLenum, GLint))
    gl.glTextureStorage3DMultisample = gl_func( 'glTextureStorage3DMultisample', void, (GLuint, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glDrawTextureNV = gl_func( 'glDrawTextureNV', void, (GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glTexCoord2iv = gl_func( 'glTexCoord2iv', void, (ct.POINTER(GLint),))
    gl.glGetQueryBufferObjectiv = gl_func( 'glGetQueryBufferObjectiv', void, (GLuint, GLuint, GLenum, GLintptr))
    gl.glEvalCoord2fv = gl_func( 'glEvalCoord2fv', void, (ct.POINTER(GLfloat),))
#     gl.glVertex3xvOES = gl_func( 'glVertex3xvOES', void, (ct.POINTER(GLfixed),))
    gl.glDebugMessageInsertKHR = gl_func( 'glDebugMessageInsertKHR', void, (GLenum, GLenum, GLuint, GLenum, GLsizei, ct.POINTER(GLchar)))
    gl.glTexCoord4dv = gl_func( 'glTexCoord4dv', void, (ct.POINTER(GLdouble),))
    gl.glGetOcclusionQueryivNV = gl_func( 'glGetOcclusionQueryivNV', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glFogfv = gl_func( 'glFogfv', void, (GLenum, ct.POINTER(GLfloat)))
#     gl.glTexCoord3xvOES = gl_func( 'glTexCoord3xvOES', void, (ct.POINTER(GLfixed),))
    gl.glFlushVertexArrayRangeNV = gl_func( 'glFlushVertexArrayRangeNV', void, ())
    gl.glPopName = gl_func( 'glPopName', void, ())
    gl.glTexImage3DEXT = gl_func( 'glTexImage3DEXT', void, (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glPatchParameteriEXT = gl_func( 'glPatchParameteriEXT', void, (GLenum, GLint))
    gl.glFragmentLightModelivSGIX = gl_func( 'glFragmentLightModelivSGIX', void, (GLenum, ct.POINTER(GLint)))
    gl.glIsEnablediOES = gl_func( 'glIsEnablediOES', GLboolean, (GLenum, GLuint))
    gl.glSecondaryColor3ubv = gl_func( 'glSecondaryColor3ubv', void, (ct.POINTER(GLubyte),))
    gl.glUniformMatrix3dv = gl_func( 'glUniformMatrix3dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glMultiTexGeniEXT = gl_func( 'glMultiTexGeniEXT', void, (GLenum, GLenum, GLenum, GLint))
    gl.glNamedFramebufferDrawBuffer = gl_func( 'glNamedFramebufferDrawBuffer', void, (GLuint, GLenum))
    gl.glTexParameterfv = gl_func( 'glTexParameterfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glPolygonOffsetEXT = gl_func( 'glPolygonOffsetEXT', void, (GLfloat, GLfloat))
    gl.glGetDoublei_vEXT = gl_func( 'glGetDoublei_vEXT', void, (GLenum, GLuint, ct.POINTER(GLdouble)))
#     gl.glUniform1i64ARB = gl_func( 'glUniform1i64ARB', void, (GLint, GLint64))
    gl.glGetCombinerInputParameterfvNV = gl_func( 'glGetCombinerInputParameterfvNV', void, (GLenum, GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glCopyTexSubImage2DEXT = gl_func( 'glCopyTexSubImage2DEXT', void, (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glProgramEnvParameter4fvARB = gl_func( 'glProgramEnvParameter4fvARB', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glDeletePathsNV = gl_func( 'glDeletePathsNV', void, (GLuint, GLsizei))
    gl.glColorFormatNV = gl_func( 'glColorFormatNV', void, (GLint, GLenum, GLsizei))
    gl.glGetProgramStageiv = gl_func( 'glGetProgramStageiv', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glDeformSGIX = gl_func( 'glDeformSGIX', void, (GLbitfield,))
    gl.glProgramUniform4dvEXT = gl_func( 'glProgramUniform4dvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glSwizzleEXT = gl_func( 'glSwizzleEXT', void, (GLuint, GLuint, GLenum, GLenum, GLenum, GLenum))
    gl.glProgramUniformMatrix3x4fv = gl_func( 'glProgramUniformMatrix3x4fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glGetProgramEnvParameterfvARB = gl_func( 'glGetProgramEnvParameterfvARB', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
#     gl.glProgramUniform2ui64NV = gl_func( 'glProgramUniform2ui64NV', void, (GLuint, GLint, GLuint64EXT, GLuint64EXT))
    gl.glTexCoord3s = gl_func( 'glTexCoord3s', void, (GLshort, GLshort, GLshort))
    gl.glTexParameteriv = gl_func( 'glTexParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glTestFenceAPPLE = gl_func( 'glTestFenceAPPLE', GLboolean, (GLuint,))
#     gl.glGetnUniformi64vARB = gl_func( 'glGetnUniformi64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64)))
    gl.glBinormal3fEXT = gl_func( 'glBinormal3fEXT', void, (GLfloat, GLfloat, GLfloat))
    gl.glUpdateObjectBufferATI = gl_func( 'glUpdateObjectBufferATI', void, (GLuint, GLuint, GLsizei, ct.POINTER(void), GLenum))
    gl.glWindowPos3f = gl_func( 'glWindowPos3f', void, (GLfloat, GLfloat, GLfloat))
    gl.glPushName = gl_func( 'glPushName', void, (GLuint,))
    gl.glNormalPointerListIBM = gl_func( 'glNormalPointerListIBM', void, (GLenum, GLint, ct.POINTER(ct.POINTER(void)), GLint))
    gl.glCompressedTexSubImage3DOES = gl_func( 'glCompressedTexSubImage3DOES', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glTransformFeedbackVaryingsEXT = gl_func( 'glTransformFeedbackVaryingsEXT', void, (GLuint, GLsizei, ct.POINTER(ct.POINTER(GLchar)), GLenum))
    gl.glWindowPos3fvARB = gl_func( 'glWindowPos3fvARB', void, (ct.POINTER(GLfloat),))
#     gl.glIsImageHandleResidentNV = gl_func( 'glIsImageHandleResidentNV', GLboolean, (GLuint64,))
    gl.glBlendBarrierKHR = gl_func( 'glBlendBarrierKHR', void, ())
    gl.glRequestResidentProgramsNV = gl_func( 'glRequestResidentProgramsNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetListParameterivSGIX = gl_func( 'glGetListParameterivSGIX', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glResolveMultisampleFramebufferAPPLE = gl_func( 'glResolveMultisampleFramebufferAPPLE', void, ())
    gl.glInsertEventMarkerEXT = gl_func( 'glInsertEventMarkerEXT', void, (GLsizei, ct.POINTER(GLchar)))
    gl.glMultiTexCoordP4uiv = gl_func( 'glMultiTexCoordP4uiv', void, (GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glPointSize = gl_func( 'glPointSize', void, (GLfloat,))
    gl.glTextureViewOES = gl_func( 'glTextureViewOES', void, (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint))
    gl.glStencilFillPathInstancedNV = gl_func( 'glStencilFillPathInstancedNV', void, (GLsizei, GLenum, ct.POINTER(void), GLuint, GLenum, GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glGetVariantFloatvEXT = gl_func( 'glGetVariantFloatvEXT', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glVertexAttrib4dARB = gl_func( 'glVertexAttrib4dARB', void, (GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glGetPerfMonitorGroupsAMD = gl_func( 'glGetPerfMonitorGroupsAMD', void, (ct.POINTER(GLint), GLsizei, ct.POINTER(GLuint)))
    gl.glVertexStream4dATI = gl_func( 'glVertexStream4dATI', void, (GLenum, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glMatrixMult3x2fNV = gl_func( 'glMatrixMult3x2fNV', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glStringMarkerGREMEDY = gl_func( 'glStringMarkerGREMEDY', void, (GLsizei, ct.POINTER(void)))
    gl.glVertexArrayTexCoordOffsetEXT = gl_func( 'glVertexArrayTexCoordOffsetEXT', void, (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr))
    gl.glMultiDrawArrays = gl_func( 'glMultiDrawArrays', void, (GLenum, ct.POINTER(GLint), ct.POINTER(GLsizei), GLsizei))
#     gl.glGetQueryObjecti64vEXT = gl_func( 'glGetQueryObjecti64vEXT', void, (GLuint, GLenum, ct.POINTER(GLint64)))
    gl.glPixelTexGenParameterfSGIS = gl_func( 'glPixelTexGenParameterfSGIS', void, (GLenum, GLfloat))
    gl.glTexCoord4fColor4fNormal3fVertex4fvSUN = gl_func( 'glTexCoord4fColor4fNormal3fVertex4fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glTexCoord4f = gl_func( 'glTexCoord4f', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glIsProgramARB = gl_func( 'glIsProgramARB', GLboolean, (GLuint,))
    gl.glProgramUniform4fEXT = gl_func( 'glProgramUniform4fEXT', void, (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glGetTextureParameterfvEXT = gl_func( 'glGetTextureParameterfvEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glProgramUniform1iEXT = gl_func( 'glProgramUniform1iEXT', void, (GLuint, GLint, GLint))
    gl.glConvolutionParameteriEXT = gl_func( 'glConvolutionParameteriEXT', void, (GLenum, GLenum, GLint))
    gl.glGetVertexAttribPointervARB = gl_func( 'glGetVertexAttribPointervARB', void, (GLuint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glProgramLocalParameterI4iNV = gl_func( 'glProgramLocalParameterI4iNV', void, (GLenum, GLuint, GLint, GLint, GLint, GLint))
    gl.glVertexAttribI4uiv = gl_func( 'glVertexAttribI4uiv', void, (GLuint, ct.POINTER(GLuint)))
    gl.glColor4ubVertex2fvSUN = gl_func( 'glColor4ubVertex2fvSUN', void, (ct.POINTER(GLubyte), ct.POINTER(GLfloat)))
    gl.glCompressedTexImage2D = gl_func( 'glCompressedTexImage2D', void, (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glTextureBufferRangeEXT = gl_func( 'glTextureBufferRangeEXT', void, (GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr))
    gl.glGetTextureSubImage = gl_func( 'glGetTextureSubImage', void, (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertexAttribs4svNV = gl_func( 'glVertexAttribs4svNV', void, (GLuint, GLsizei, ct.POINTER(GLshort)))
    gl.glDrawBuffersNV = gl_func( 'glDrawBuffersNV', void, (GLsizei, ct.POINTER(GLenum)))
    gl.glProgramLocalParametersI4uivNV = gl_func( 'glProgramLocalParametersI4uivNV', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLuint)))
    gl.glTexturePageCommitmentEXT = gl_func( 'glTexturePageCommitmentEXT', void, (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean))
#     gl.glGetTexLevelParameterxvOES = gl_func( 'glGetTexLevelParameterxvOES', void, (GLenum, GLint, GLenum, ct.POINTER(GLfixed)))
    gl.glProgramUniform3uivEXT = gl_func( 'glProgramUniform3uivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glDrawElementsInstancedBaseVertexEXT = gl_func( 'glDrawElementsInstancedBaseVertexEXT', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei, GLint))
    gl.glVertexAttribPointer = gl_func( 'glVertexAttribPointer', void, (GLuint, GLint, GLenum, GLboolean, GLsizei, ct.POINTER(void)))
    gl.glColor4fNormal3fVertex3fvSUN = gl_func( 'glColor4fNormal3fVertex3fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glMultiTexCoord1hNV = gl_func( 'glMultiTexCoord1hNV', void, (GLenum, GLhalfNV))
    gl.glNormalStream3fATI = gl_func( 'glNormalStream3fATI', void, (GLenum, GLfloat, GLfloat, GLfloat))
    gl.glVertexAttrib1sNV = gl_func( 'glVertexAttrib1sNV', void, (GLuint, GLshort))
    gl.glColor3s = gl_func( 'glColor3s', void, (GLshort, GLshort, GLshort))
    gl.glTexParameterIivEXT = gl_func( 'glTexParameterIivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glSamplerParameterf = gl_func( 'glSamplerParameterf', void, (GLuint, GLenum, GLfloat))
    gl.glCompressedMultiTexSubImage2DEXT = gl_func( 'glCompressedMultiTexSubImage2DEXT', void, (GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glColor3hvNV = gl_func( 'glColor3hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glIsTransformFeedbackNV = gl_func( 'glIsTransformFeedbackNV', GLboolean, (GLuint,))
    gl.glGenRenderbuffersOES = gl_func( 'glGenRenderbuffersOES', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glVertexAttribP1uiv = gl_func( 'glVertexAttribP1uiv', void, (GLuint, GLenum, GLboolean, ct.POINTER(GLuint)))
#     gl.glGetClipPlanex = gl_func( 'glGetClipPlanex', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glTexImage3DMultisampleCoverageNV = gl_func( 'glTexImage3DMultisampleCoverageNV', void, (GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glMatrixPushEXT = gl_func( 'glMatrixPushEXT', void, (GLenum,))
    gl.glVariantivEXT = gl_func( 'glVariantivEXT', void, (GLuint, ct.POINTER(GLint)))
    gl.glGetTexBumpParameterivATI = gl_func( 'glGetTexBumpParameterivATI', void, (GLenum, ct.POINTER(GLint)))
    gl.glFlushVertexArrayRangeAPPLE = gl_func( 'glFlushVertexArrayRangeAPPLE', void, (GLsizei, ct.POINTER(void)))
    gl.glVertexAttrib1fv = gl_func( 'glVertexAttrib1fv', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glReadnPixelsARB = gl_func( 'glReadnPixelsARB', void, (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ct.POINTER(void)))
#     gl.glUniform4ui64NV = gl_func( 'glUniform4ui64NV', void, (GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT))
    gl.glGetnUniformfvARB = gl_func( 'glGetnUniformfvARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
#     gl.glDeleteSync = gl_func( 'glDeleteSync', void, (GLsync,))
    gl.glProgramUniformMatrix4dvEXT = gl_func( 'glProgramUniformMatrix4dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glUniform4d = gl_func( 'glUniform4d', void, (GLint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glRasterPos3sv = gl_func( 'glRasterPos3sv', void, (ct.POINTER(GLshort),))
    gl.glQueryCounter = gl_func( 'glQueryCounter', void, (GLuint, GLenum))
#     gl.glTexParameterxOES = gl_func( 'glTexParameterxOES', void, (GLenum, GLenum, GLfixed))
    gl.glVertexAttribs3dvNV = gl_func( 'glVertexAttribs3dvNV', void, (GLuint, GLsizei, ct.POINTER(GLdouble)))
    gl.glGetnMinmax = gl_func( 'glGetnMinmax', void, (GLenum, GLboolean, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glCopyImageSubDataOES = gl_func( 'glCopyImageSubDataOES', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei))
    gl.glCompressedMultiTexSubImage1DEXT = gl_func( 'glCompressedMultiTexSubImage1DEXT', void, (GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glProgramParameteriEXT = gl_func( 'glProgramParameteriEXT', void, (GLuint, GLenum, GLint))
    gl.glCoverStrokePathInstancedNV = gl_func( 'glCoverStrokePathInstancedNV', void, (GLsizei, GLenum, ct.POINTER(void), GLuint, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glEnableVertexArrayEXT = gl_func( 'glEnableVertexArrayEXT', void, (GLuint, GLenum))
    gl.glRenderbufferStorage = gl_func( 'glRenderbufferStorage', void, (GLenum, GLenum, GLsizei, GLsizei))
    gl.glGetTexBumpParameterfvATI = gl_func( 'glGetTexBumpParameterfvATI', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glProgramLocalParameterI4uivNV = gl_func( 'glProgramLocalParameterI4uivNV', void, (GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glBlendEquationSeparateiEXT = gl_func( 'glBlendEquationSeparateiEXT', void, (GLuint, GLenum, GLenum))
    gl.glTexCoord2dv = gl_func( 'glTexCoord2dv', void, (ct.POINTER(GLdouble),))
#     gl.glVertex2xOES = gl_func( 'glVertex2xOES', void, (GLfixed,))
#     gl.glVDPAUUnregisterSurfaceNV = gl_func( 'glVDPAUUnregisterSurfaceNV', void, (GLvdpauSurfaceNV,))
    gl.glTexCoordP2ui = gl_func( 'glTexCoordP2ui', void, (GLenum, GLuint))
    gl.glGlobalAlphaFactoruiSUN = gl_func( 'glGlobalAlphaFactoruiSUN', void, (GLuint,))
    gl.glFramebufferTexture3D = gl_func( 'glFramebufferTexture3D', void, (GLenum, GLenum, GLenum, GLuint, GLint, GLint))
    gl.glIndexsv = gl_func( 'glIndexsv', void, (ct.POINTER(GLshort),))
    gl.glGetShaderSource = gl_func( 'glGetShaderSource', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glFlush = gl_func( 'glFlush', void, ())
    gl.glProgramEnvParametersI4ivNV = gl_func( 'glProgramEnvParametersI4ivNV', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLint)))
    gl.glGetMapAttribParameterfvNV = gl_func( 'glGetMapAttribParameterfvNV', void, (GLenum, GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glBlendColor = gl_func( 'glBlendColor', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glEvalPoint1 = gl_func( 'glEvalPoint1', void, (GLint,))
    gl.glWindowPos3dMESA = gl_func( 'glWindowPos3dMESA', void, (GLdouble, GLdouble, GLdouble))
    gl.glPathParameterfNV = gl_func( 'glPathParameterfNV', void, (GLuint, GLenum, GLfloat))
    gl.glVertex4iv = gl_func( 'glVertex4iv', void, (ct.POINTER(GLint),))
    gl.glVertexAttribI1uiEXT = gl_func( 'glVertexAttribI1uiEXT', void, (GLuint, GLuint))
    gl.glBindTransformFeedbackNV = gl_func( 'glBindTransformFeedbackNV', void, (GLenum, GLuint))
    gl.glPointParameterfvEXT = gl_func( 'glPointParameterfvEXT', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glTextureSubImage2D = gl_func( 'glTextureSubImage2D', void, (GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glMultiTexImage1DEXT = gl_func( 'glMultiTexImage1DEXT', void, (GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetActiveSubroutineUniformiv = gl_func( 'glGetActiveSubroutineUniformiv', void, (GLuint, GLenum, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGenPerfMonitorsAMD = gl_func( 'glGenPerfMonitorsAMD', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glRenderbufferStorageMultisampleANGLE = gl_func( 'glRenderbufferStorageMultisampleANGLE', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glTransformPathNV = gl_func( 'glTransformPathNV', void, (GLuint, GLuint, GLenum, ct.POINTER(GLfloat)))
#     gl.glUniformui64NV = gl_func( 'glUniformui64NV', void, (GLint, GLuint64EXT))
    gl.glCurrentPaletteMatrixARB = gl_func( 'glCurrentPaletteMatrixARB', void, (GLint,))
    gl.glBlendEquationOES = gl_func( 'glBlendEquationOES', void, (GLenum,))
#     gl.glGetHistogramParameterxvOES = gl_func( 'glGetHistogramParameterxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glEndTransformFeedbackEXT = gl_func( 'glEndTransformFeedbackEXT', void, ())
    gl.glExtGetShadersQCOM = gl_func( 'glExtGetShadersQCOM', void, (ct.POINTER(GLuint), GLint, ct.POINTER(GLint)))
    gl.glVertexAttribI1iEXT = gl_func( 'glVertexAttribI1iEXT', void, (GLuint, GLint))
    gl.glGetSharpenTexFuncSGIS = gl_func( 'glGetSharpenTexFuncSGIS', void, (GLenum, ct.POINTER(GLfloat)))
#     gl.glUniform2ui64vARB = gl_func( 'glUniform2ui64vARB', void, (GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glFinishFenceAPPLE = gl_func( 'glFinishFenceAPPLE', void, (GLuint,))
#     gl.glDebugMessageCallbackARB = gl_func( 'glDebugMessageCallbackARB', void, (GLDEBUGPROCARB, ct.POINTER(void)))
    gl.glGenProgramsARB = gl_func( 'glGenProgramsARB', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetVertexAttribfvARB = gl_func( 'glGetVertexAttribfvARB', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glTexCoord1hNV = gl_func( 'glTexCoord1hNV', void, (GLhalfNV,))
    gl.glExtGetTexturesQCOM = gl_func( 'glExtGetTexturesQCOM', void, (ct.POINTER(GLuint), GLint, ct.POINTER(GLint)))
    gl.glGetColorTableParameterivEXT = gl_func( 'glGetColorTableParameterivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glCallCommandListNV = gl_func( 'glCallCommandListNV', void, (GLuint,))
    gl.glCallList = gl_func( 'glCallList', void, (GLuint,))
    gl.glMultiDrawElementsBaseVertexOES = gl_func( 'glMultiDrawElementsBaseVertexOES', void, (GLenum, ct.POINTER(GLsizei), GLenum, ct.POINTER(ct.POINTER(void)), GLsizei, ct.POINTER(GLint)))
    gl.glBindImageTextures = gl_func( 'glBindImageTextures', void, (GLuint, GLsizei, ct.POINTER(GLuint)))
    gl.glEnableVertexAttribArray = gl_func( 'glEnableVertexAttribArray', void, (GLuint,))
    gl.glExtTexObjectStateOverrideiQCOM = gl_func( 'glExtTexObjectStateOverrideiQCOM', void, (GLenum, GLenum, GLint))
    gl.glProgramUniformMatrix3x2fvEXT = gl_func( 'glProgramUniformMatrix3x2fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glProgramUniform3fvEXT = gl_func( 'glProgramUniform3fvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetNamedBufferPointerv = gl_func( 'glGetNamedBufferPointerv', void, (GLuint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glProgramUniformMatrix2dvEXT = gl_func( 'glProgramUniformMatrix2dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glGetProgramPipelineivEXT = gl_func( 'glGetProgramPipelineivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glSamplerParameterfv = gl_func( 'glSamplerParameterfv', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glVertexAttribs4ubvNV = gl_func( 'glVertexAttribs4ubvNV', void, (GLuint, GLsizei, ct.POINTER(GLubyte)))
    gl.glGetInternalformatSampleivNV = gl_func( 'glGetInternalformatSampleivNV', void, (GLenum, GLenum, GLsizei, GLenum, GLsizei, ct.POINTER(GLint)))
    gl.glVertexAttrib4Nub = gl_func( 'glVertexAttrib4Nub', void, (GLuint, GLubyte, GLubyte, GLubyte, GLubyte))
    gl.glIsFramebuffer = gl_func( 'glIsFramebuffer', GLboolean, (GLuint,))
    gl.glWindowPos4dMESA = gl_func( 'glWindowPos4dMESA', void, (GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glVertexStream2fATI = gl_func( 'glVertexStream2fATI', void, (GLenum, GLfloat, GLfloat))
    gl.glMultiTexCoord1s = gl_func( 'glMultiTexCoord1s', void, (GLenum, GLshort))
    gl.glNamedBufferPageCommitmentARB = gl_func( 'glNamedBufferPageCommitmentARB', void, (GLuint, GLintptr, GLsizeiptr, GLboolean))
    gl.glSampleCoverage = gl_func( 'glSampleCoverage', void, (GLfloat, GLboolean))
    gl.glTextureImage3DMultisampleNV = gl_func( 'glTextureImage3DMultisampleNV', void, (GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glVertexStream4fvATI = gl_func( 'glVertexStream4fvATI', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glStencilFillPathNV = gl_func( 'glStencilFillPathNV', void, (GLuint, GLenum, GLuint))
    gl.glDeleteBuffersARB = gl_func( 'glDeleteBuffersARB', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glBlendFunciEXT = gl_func( 'glBlendFunciEXT', void, (GLuint, GLenum, GLenum))
    gl.glMatrixLoadTransposedEXT = gl_func( 'glMatrixLoadTransposedEXT', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glGetPointervEXT = gl_func( 'glGetPointervEXT', void, (GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glGetHistogramParameterivEXT = gl_func( 'glGetHistogramParameterivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glVertexAttribI3iv = gl_func( 'glVertexAttribI3iv', void, (GLuint, ct.POINTER(GLint)))
    gl.glCreateProgramObjectARB = gl_func( 'glCreateProgramObjectARB', GLhandleARB, ())
#     gl.glProgramUniform3ui64vNV = gl_func( 'glProgramUniform3ui64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64EXT)))
    gl.glClearNamedFramebufferuiv = gl_func( 'glClearNamedFramebufferuiv', void, (GLuint, GLenum, GLint, ct.POINTER(GLuint)))
    gl.glDisableClientStateiEXT = gl_func( 'glDisableClientStateiEXT', void, (GLenum, GLuint))
    gl.glMultiTexCoord4fvARB = gl_func( 'glMultiTexCoord4fvARB', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glVertexAttrib1sv = gl_func( 'glVertexAttrib1sv', void, (GLuint, ct.POINTER(GLshort)))
    gl.glGetCombinerOutputParameterfvNV = gl_func( 'glGetCombinerOutputParameterfvNV', void, (GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glClampColorARB = gl_func( 'glClampColorARB', void, (GLenum, GLenum))
    gl.glStencilMask = gl_func( 'glStencilMask', void, (GLuint,))
#     gl.glPointParameterx = gl_func( 'glPointParameterx', void, (GLenum, GLfixed))
    gl.glTextureParameterIiv = gl_func( 'glTextureParameterIiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glSamplePatternEXT = gl_func( 'glSamplePatternEXT', void, (GLenum,))
    gl.glCreateProgramPipelines = gl_func( 'glCreateProgramPipelines', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glPrimitiveBoundingBox = gl_func( 'glPrimitiveBoundingBox', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glVertexArrayAttribIFormat = gl_func( 'glVertexArrayAttribIFormat', void, (GLuint, GLuint, GLint, GLenum, GLuint))
    gl.glVertexAttrib4NubvARB = gl_func( 'glVertexAttrib4NubvARB', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glProgramParameters4dvNV = gl_func( 'glProgramParameters4dvNV', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLdouble)))
    gl.glPushMatrix = gl_func( 'glPushMatrix', void, ())
    gl.glGenProgramsNV = gl_func( 'glGenProgramsNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glRectfv = gl_func( 'glRectfv', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
#     gl.glClearDepthx = gl_func( 'glClearDepthx', void, (GLfixed,))
    gl.glVariantsvEXT = gl_func( 'glVariantsvEXT', void, (GLuint, ct.POINTER(GLshort)))
    gl.glGetnHistogram = gl_func( 'glGetnHistogram', void, (GLenum, GLboolean, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glUseProgramStagesEXT = gl_func( 'glUseProgramStagesEXT', void, (GLuint, GLbitfield, GLuint))
    gl.glColor3hNV = gl_func( 'glColor3hNV', void, (GLhalfNV, GLhalfNV, GLhalfNV))
#     gl.glMultiTexCoord3xvOES = gl_func( 'glMultiTexCoord3xvOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glVertexAttribI4i = gl_func( 'glVertexAttribI4i', void, (GLuint, GLint, GLint, GLint, GLint))
    gl.glMultiTexGenfvEXT = gl_func( 'glMultiTexGenfvEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glCoverageModulationTableNV = gl_func( 'glCoverageModulationTableNV', void, (GLsizei, ct.POINTER(GLfloat)))
    gl.glVertexAttribL4dv = gl_func( 'glVertexAttribL4dv', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glVertexArrayEdgeFlagOffsetEXT = gl_func( 'glVertexArrayEdgeFlagOffsetEXT', void, (GLuint, GLuint, GLsizei, GLintptr))
#     gl.glUniform2ui64NV = gl_func( 'glUniform2ui64NV', void, (GLint, GLuint64EXT, GLuint64EXT))
    gl.glCopyTextureLevelsAPPLE = gl_func( 'glCopyTextureLevelsAPPLE', void, (GLuint, GLuint, GLint, GLsizei))
    gl.glFinalCombinerInputNV = gl_func( 'glFinalCombinerInputNV', void, (GLenum, GLenum, GLenum, GLenum))
    gl.glUniform3fARB = gl_func( 'glUniform3fARB', void, (GLint, GLfloat, GLfloat, GLfloat))
    gl.glBindProgramNV = gl_func( 'glBindProgramNV', void, (GLenum, GLuint))
#     gl.glSampleCoveragexOES = gl_func( 'glSampleCoveragexOES', void, (GLclampx, GLboolean))
    gl.glVertexAttrib4NuivARB = gl_func( 'glVertexAttrib4NuivARB', void, (GLuint, ct.POINTER(GLuint)))
    gl.glVertexAttrib3dv = gl_func( 'glVertexAttrib3dv', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glClearNamedFramebufferfv = gl_func( 'glClearNamedFramebufferfv', void, (GLuint, GLenum, GLint, ct.POINTER(GLfloat)))
    gl.glPathStringNV = gl_func( 'glPathStringNV', void, (GLuint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glGenerateTextureMipmap = gl_func( 'glGenerateTextureMipmap', void, (GLuint,))
    gl.glNamedProgramLocalParameters4fvEXT = gl_func( 'glNamedProgramLocalParameters4fvEXT', void, (GLuint, GLenum, GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glVertexAttribI4ui = gl_func( 'glVertexAttribI4ui', void, (GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glGetVideoCaptureStreamfvNV = gl_func( 'glGetVideoCaptureStreamfvNV', void, (GLuint, GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glGenFramebuffersOES = gl_func( 'glGenFramebuffersOES', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glBindVertexBuffer = gl_func( 'glBindVertexBuffer', void, (GLuint, GLuint, GLintptr, GLsizei))
    gl.glFragmentMaterialivSGIX = gl_func( 'glFragmentMaterialivSGIX', void, (GLenum, GLenum, ct.POINTER(GLint)))
#     gl.glPointSizex = gl_func( 'glPointSizex', void, (GLfixed,))
    gl.glGetBufferSubData = gl_func( 'glGetBufferSubData', void, (GLenum, GLintptr, GLsizeiptr, ct.POINTER(void)))
    gl.glMakeBufferNonResidentNV = gl_func( 'glMakeBufferNonResidentNV', void, (GLenum,))
    gl.glActiveProgramEXT = gl_func( 'glActiveProgramEXT', void, (GLuint,))
    gl.glGenAsyncMarkersSGIX = gl_func( 'glGenAsyncMarkersSGIX', GLuint, (GLsizei,))
    gl.glGetQueryBufferObjectuiv = gl_func( 'glGetQueryBufferObjectuiv', void, (GLuint, GLuint, GLenum, GLintptr))
    gl.glGetDoubleIndexedvEXT = gl_func( 'glGetDoubleIndexedvEXT', void, (GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glCreateVertexArrays = gl_func( 'glCreateVertexArrays', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glVDPAUFiniNV = gl_func( 'glVDPAUFiniNV', void, ())
    gl.glNormalStream3fvATI = gl_func( 'glNormalStream3fvATI', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glCompressedTexSubImage2DARB = gl_func( 'glCompressedTexSubImage2DARB', void, (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glGenerateMipmap = gl_func( 'glGenerateMipmap', void, (GLenum,))
    gl.glClearNamedFramebufferfi = gl_func( 'glClearNamedFramebufferfi', void, (GLuint, GLenum, GLfloat, GLint))
    gl.glEdgeFlagPointer = gl_func( 'glEdgeFlagPointer', void, (GLsizei, ct.POINTER(void)))
    gl.glBlendFuncSeparateiARB = gl_func( 'glBlendFuncSeparateiARB', void, (GLuint, GLenum, GLenum, GLenum, GLenum))
    gl.glReplacementCodeuiNormal3fVertex3fvSUN = gl_func( 'glReplacementCodeuiNormal3fVertex3fvSUN', void, (ct.POINTER(GLuint), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glGetFragmentMaterialfvSGIX = gl_func( 'glGetFragmentMaterialfvSGIX', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glIndexf = gl_func( 'glIndexf', void, (GLfloat,))
    gl.glGetActiveSubroutineUniformName = gl_func( 'glGetActiveSubroutineUniformName', void, (GLuint, GLenum, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glMultiTexCoord1iv = gl_func( 'glMultiTexCoord1iv', void, (GLenum, ct.POINTER(GLint)))
    gl.glPathGlyphIndexArrayNV = gl_func( 'glPathGlyphIndexArrayNV', GLenum, (GLuint, GLenum, ct.POINTER(void), GLbitfield, GLuint, GLsizei, GLuint, GLfloat))
    gl.glRasterPos2s = gl_func( 'glRasterPos2s', void, (GLshort, GLshort))
    gl.glBlendEquationSeparateOES = gl_func( 'glBlendEquationSeparateOES', void, (GLenum, GLenum))
    gl.glColor4i = gl_func( 'glColor4i', void, (GLint, GLint, GLint, GLint))
    gl.glUniformMatrix2x4fvNV = gl_func( 'glUniformMatrix2x4fvNV', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glGetVariantArrayObjectivATI = gl_func( 'glGetVariantArrayObjectivATI', void, (GLuint, GLenum, ct.POINTER(GLint)))
#     gl.glAccumxOES = gl_func( 'glAccumxOES', void, (GLenum, GLfixed))
#     gl.glUniform2ui64ARB = gl_func( 'glUniform2ui64ARB', void, (GLint, GLuint64, GLuint64))
    gl.glBlendEquationSeparatei = gl_func( 'glBlendEquationSeparatei', void, (GLuint, GLenum, GLenum))
    gl.glMinmax = gl_func( 'glMinmax', void, (GLenum, GLenum, GLboolean))
    gl.glGetTrackMatrixivNV = gl_func( 'glGetTrackMatrixivNV', void, (GLenum, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glRasterPos2f = gl_func( 'glRasterPos2f', void, (GLfloat, GLfloat))
    gl.glCopyColorSubTableEXT = gl_func( 'glCopyColorSubTableEXT', void, (GLenum, GLsizei, GLint, GLint, GLsizei))
#     gl.glMultiTexCoord3xOES = gl_func( 'glMultiTexCoord3xOES', void, (GLenum, GLfixed, GLfixed, GLfixed))
    gl.glBlendFuncSeparateiOES = gl_func( 'glBlendFuncSeparateiOES', void, (GLuint, GLenum, GLenum, GLenum, GLenum))
    gl.glVertexAttribFormatNV = gl_func( 'glVertexAttribFormatNV', void, (GLuint, GLint, GLenum, GLboolean, GLsizei))
#     gl.glQueryMatrixxOES = gl_func( 'glQueryMatrixxOES', GLbitfield, (ct.POINTER(GLfixed), ct.POINTER(GLint)))
    gl.glBindBuffersBase = gl_func( 'glBindBuffersBase', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLuint)))
    gl.glProgramBufferParametersIivNV = gl_func( 'glProgramBufferParametersIivNV', void, (GLenum, GLuint, GLuint, GLsizei, ct.POINTER(GLint)))
    gl.glCombinerOutputNV = gl_func( 'glCombinerOutputNV', void, (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean))
    gl.glBeginQuery = gl_func( 'glBeginQuery', void, (GLenum, GLuint))
    gl.glVertexAttribP2uiv = gl_func( 'glVertexAttribP2uiv', void, (GLuint, GLenum, GLboolean, ct.POINTER(GLuint)))
    gl.glDeleteFragmentShaderATI = gl_func( 'glDeleteFragmentShaderATI', void, (GLuint,))
    gl.glEnable = gl_func( 'glEnable', void, (GLenum,))
    gl.glUniform4ivARB = gl_func( 'glUniform4ivARB', void, (GLint, GLsizei, ct.POINTER(GLint)))
#     gl.glAlphaFuncxOES = gl_func( 'glAlphaFuncxOES', void, (GLenum, GLfixed))
    gl.glIsPathNV = gl_func( 'glIsPathNV', GLboolean, (GLuint,))
    gl.glGetConvolutionParameterivEXT = gl_func( 'glGetConvolutionParameterivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glBindBuffer = gl_func( 'glBindBuffer', void, (GLenum, GLuint))
    gl.glPrimitiveBoundingBoxOES = gl_func( 'glPrimitiveBoundingBoxOES', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
#     gl.glRasterPos3xvOES = gl_func( 'glRasterPos3xvOES', void, (ct.POINTER(GLfixed),))
    gl.glRasterPos3fv = gl_func( 'glRasterPos3fv', void, (ct.POINTER(GLfloat),))
    gl.glProgramNamedParameter4fNV = gl_func( 'glProgramNamedParameter4fNV', void, (GLuint, GLsizei, ct.POINTER(GLubyte), GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glDeleteStatesNV = gl_func( 'glDeleteStatesNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glPolygonOffsetClampEXT = gl_func( 'glPolygonOffsetClampEXT', void, (GLfloat, GLfloat, GLfloat))
    gl.glStencilOpSeparate = gl_func( 'glStencilOpSeparate', void, (GLenum, GLenum, GLenum, GLenum))
#     gl.glBlendColorxOES = gl_func( 'glBlendColorxOES', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glMultiDrawArraysIndirect = gl_func( 'glMultiDrawArraysIndirect', void, (GLenum, ct.POINTER(void), GLsizei, GLsizei))
    gl.glTextureStorage2DMultisampleEXT = gl_func( 'glTextureStorage2DMultisampleEXT', void, (GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean))
    gl.glGetDriverControlStringQCOM = gl_func( 'glGetDriverControlStringQCOM', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glGetnCompressedTexImage = gl_func( 'glGetnCompressedTexImage', void, (GLenum, GLint, GLsizei, ct.POINTER(void)))
    gl.glTextureBuffer = gl_func( 'glTextureBuffer', void, (GLuint, GLenum, GLuint))
    gl.glVertexAttribL3dEXT = gl_func( 'glVertexAttribL3dEXT', void, (GLuint, GLdouble, GLdouble, GLdouble))
    gl.glBindBufferRangeEXT = gl_func( 'glBindBufferRangeEXT', void, (GLenum, GLuint, GLuint, GLintptr, GLsizeiptr))
    gl.glGetStringi = gl_func( 'glGetStringi', ct.POINTER(GLubyte), (GLenum, GLuint))
    gl.glGetActiveVaryingNV = gl_func( 'glGetActiveVaryingNV', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLsizei), ct.POINTER(GLenum), ct.POINTER(GLchar)))
    gl.glGetMinmaxParameterfvEXT = gl_func( 'glGetMinmaxParameterfvEXT', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glMultiTexCoordP2ui = gl_func( 'glMultiTexCoordP2ui', void, (GLenum, GLenum, GLuint))
    gl.glUniform1fARB = gl_func( 'glUniform1fARB', void, (GLint, GLfloat))
    gl.glVertexP2ui = gl_func( 'glVertexP2ui', void, (GLenum, GLuint))
    gl.glProgramUniform1dEXT = gl_func( 'glProgramUniform1dEXT', void, (GLuint, GLint, GLdouble))
    gl.glVertexAttrib3hvNV = gl_func( 'glVertexAttrib3hvNV', void, (GLuint, ct.POINTER(GLhalfNV)))
    gl.glProgramParameter4fNV = gl_func( 'glProgramParameter4fNV', void, (GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glProgramParameters4fvNV = gl_func( 'glProgramParameters4fvNV', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glVertexAttrib4uiv = gl_func( 'glVertexAttrib4uiv', void, (GLuint, ct.POINTER(GLuint)))
    gl.glGetFragDataIndex = gl_func( 'glGetFragDataIndex', GLint, (GLuint, ct.POINTER(GLchar)))
    gl.glWindowPos3sv = gl_func( 'glWindowPos3sv', void, (ct.POINTER(GLshort),))
    gl.glRasterPos4sv = gl_func( 'glRasterPos4sv', void, (ct.POINTER(GLshort),))
    gl.glVertexAttrib2s = gl_func( 'glVertexAttrib2s', void, (GLuint, GLshort, GLshort))
    gl.glGetBooleanIndexedvEXT = gl_func( 'glGetBooleanIndexedvEXT', void, (GLenum, GLuint, ct.POINTER(GLboolean)))
#     gl.glPrioritizeTexturesxOES = gl_func( 'glPrioritizeTexturesxOES', void, (GLsizei, ct.POINTER(GLuint), ct.POINTER(GLfixed)))
    gl.glGetObjectPtrLabelKHR = gl_func( 'glGetObjectPtrLabelKHR', void, (ct.POINTER(void), GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
#     gl.glVertexAttribL4ui64NV = gl_func( 'glVertexAttribL4ui64NV', void, (GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT))
    gl.glTessellationModeAMD = gl_func( 'glTessellationModeAMD', void, (GLenum,))
    gl.glGetNamedBufferSubData = gl_func( 'glGetNamedBufferSubData', void, (GLuint, GLintptr, GLsizeiptr, ct.POINTER(void)))
    gl.glAlphaFragmentOp1ATI = gl_func( 'glAlphaFragmentOp1ATI', void, (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glGetPathColorGenfvNV = gl_func( 'glGetPathColorGenfvNV', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glTexCoord1f = gl_func( 'glTexCoord1f', void, (GLfloat,))
    gl.glProgramUniformMatrix4fv = gl_func( 'glProgramUniformMatrix4fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glGetProgramLocalParameterdvARB = gl_func( 'glGetProgramLocalParameterdvARB', void, (GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glEnableVertexArrayAttrib = gl_func( 'glEnableVertexArrayAttrib', void, (GLuint, GLuint))
    gl.glVertexAttribLPointerEXT = gl_func( 'glVertexAttribLPointerEXT', void, (GLuint, GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glIsCommandListNV = gl_func( 'glIsCommandListNV', GLboolean, (GLuint,))
    gl.glFlushMappedNamedBufferRangeEXT = gl_func( 'glFlushMappedNamedBufferRangeEXT', void, (GLuint, GLintptr, GLsizeiptr))
    gl.glCoverageOperationNV = gl_func( 'glCoverageOperationNV', void, (GLenum,))
    gl.glColor3sv = gl_func( 'glColor3sv', void, (ct.POINTER(GLshort),))
    gl.glWindowPos3d = gl_func( 'glWindowPos3d', void, (GLdouble, GLdouble, GLdouble))
    gl.glBindTextureUnit = gl_func( 'glBindTextureUnit', void, (GLuint, GLuint))
    gl.glDrawTexsvOES = gl_func( 'glDrawTexsvOES', void, (ct.POINTER(GLshort),))
    gl.glCopyBufferSubDataNV = gl_func( 'glCopyBufferSubDataNV', void, (GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr))
    gl.glGetProgramResourceIndex = gl_func( 'glGetProgramResourceIndex', GLuint, (GLuint, GLenum, ct.POINTER(GLchar)))
    gl.glTexImage4DSGIS = gl_func( 'glTexImage4DSGIS', void, (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetLocalConstantBooleanvEXT = gl_func( 'glGetLocalConstantBooleanvEXT', void, (GLuint, GLenum, ct.POINTER(GLboolean)))
    gl.glGetnPixelMapusvARB = gl_func( 'glGetnPixelMapusvARB', void, (GLenum, GLsizei, ct.POINTER(GLushort)))
    gl.glBindImageTextureEXT = gl_func( 'glBindImageTextureEXT', void, (GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint))
#     gl.glTexEnvx = gl_func( 'glTexEnvx', void, (GLenum, GLenum, GLfixed))
    gl.glWindowPos3svMESA = gl_func( 'glWindowPos3svMESA', void, (ct.POINTER(GLshort),))
    gl.glAreTexturesResidentEXT = gl_func( 'glAreTexturesResidentEXT', GLboolean, (GLsizei, ct.POINTER(GLuint), ct.POINTER(GLboolean)))
    gl.glNormalStream3iATI = gl_func( 'glNormalStream3iATI', void, (GLenum, GLint, GLint, GLint))
    gl.glGetIntegeri_v = gl_func( 'glGetIntegeri_v', void, (GLenum, GLuint, ct.POINTER(GLint)))
    gl.glIndexi = gl_func( 'glIndexi', void, (GLint,))
    gl.glGetAttribLocation = gl_func( 'glGetAttribLocation', GLint, (GLuint, ct.POINTER(GLchar)))
    gl.glAttachShader = gl_func( 'glAttachShader', void, (GLuint, GLuint))
    gl.glLightiv = gl_func( 'glLightiv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glTextureSubImage3D = gl_func( 'glTextureSubImage3D', void, (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetFragDataLocation = gl_func( 'glGetFragDataLocation', GLint, (GLuint, ct.POINTER(GLchar)))
    gl.glGetQueryObjectiv = gl_func( 'glGetQueryObjectiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glProgramEnvParametersI4uivNV = gl_func( 'glProgramEnvParametersI4uivNV', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLuint)))
    gl.glGetCompressedTexImageARB = gl_func( 'glGetCompressedTexImageARB', void, (GLenum, GLint, ct.POINTER(void)))
#     gl.glClipPlanex = gl_func( 'glClipPlanex', void, (GLenum, ct.POINTER(GLfixed)))
#     gl.glProgramUniform2ui64ARB = gl_func( 'glProgramUniform2ui64ARB', void, (GLuint, GLint, GLuint64, GLuint64))
    gl.glVertexStream1fATI = gl_func( 'glVertexStream1fATI', void, (GLenum, GLfloat))
    gl.glGetUniformOffsetEXT = gl_func( 'glGetUniformOffsetEXT', GLintptr, (GLuint, GLint))
    gl.glRectiv = gl_func( 'glRectiv', void, (ct.POINTER(GLint), ct.POINTER(GLint)))
    gl.glTexBuffer = gl_func( 'glTexBuffer', void, (GLenum, GLenum, GLuint))
    gl.glDeletePerfMonitorsAMD = gl_func( 'glDeletePerfMonitorsAMD', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glEndQuery = gl_func( 'glEndQuery', void, (GLenum,))
#     gl.glPointParameterxOES = gl_func( 'glPointParameterxOES', void, (GLenum, GLfixed))
    gl.glGetClipPlanef = gl_func( 'glGetClipPlanef', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glTexCoord3bvOES = gl_func( 'glTexCoord3bvOES', void, (ct.POINTER(GLbyte),))
    gl.glVertexAttrib3fNV = gl_func( 'glVertexAttrib3fNV', void, (GLuint, GLfloat, GLfloat, GLfloat))
#     gl.glProgramUniformui64vNV = gl_func( 'glProgramUniformui64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64EXT)))
    gl.glCopyColorTable = gl_func( 'glCopyColorTable', void, (GLenum, GLenum, GLint, GLint, GLsizei))
    gl.glGetNamedFramebufferAttachmentParameterivEXT = gl_func( 'glGetNamedFramebufferAttachmentParameterivEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glWeightPointerOES = gl_func( 'glWeightPointerOES', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glReleaseShaderCompiler = gl_func( 'glReleaseShaderCompiler', void, ())
    gl.glMaterialf = gl_func( 'glMaterialf', void, (GLenum, GLenum, GLfloat))
    gl.glCreatePerfQueryINTEL = gl_func( 'glCreatePerfQueryINTEL', void, (GLuint, ct.POINTER(GLuint)))
#     gl.glUniform1ui64ARB = gl_func( 'glUniform1ui64ARB', void, (GLint, GLuint64))
    gl.glExtractComponentEXT = gl_func( 'glExtractComponentEXT', void, (GLuint, GLuint, GLuint))
    gl.glSampleMaski = gl_func( 'glSampleMaski', void, (GLuint, GLbitfield))
#     gl.glTexCoord2xvOES = gl_func( 'glTexCoord2xvOES', void, (ct.POINTER(GLfixed),))
#     gl.glLoadMatrixxOES = gl_func( 'glLoadMatrixxOES', void, (ct.POINTER(GLfixed),))
    gl.glColor3fv = gl_func( 'glColor3fv', void, (ct.POINTER(GLfloat),))
    gl.glOrtho = gl_func( 'glOrtho', void, (GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glTexGend = gl_func( 'glTexGend', void, (GLenum, GLenum, GLdouble))
    gl.glSecondaryColor3usvEXT = gl_func( 'glSecondaryColor3usvEXT', void, (ct.POINTER(GLushort),))
    gl.glDrawArraysInstancedBaseInstanceEXT = gl_func( 'glDrawArraysInstancedBaseInstanceEXT', void, (GLenum, GLint, GLsizei, GLsizei, GLuint))
#     gl.glVertexAttribL3i64NV = gl_func( 'glVertexAttribL3i64NV', void, (GLuint, GLint64EXT, GLint64EXT, GLint64EXT))
    gl.glVariantuivEXT = gl_func( 'glVariantuivEXT', void, (GLuint, ct.POINTER(GLuint)))
    gl.glLighti = gl_func( 'glLighti', void, (GLenum, GLenum, GLint))
    gl.glUniformSubroutinesuiv = gl_func( 'glUniformSubroutinesuiv', void, (GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glTexCoord4s = gl_func( 'glTexCoord4s', void, (GLshort, GLshort, GLshort, GLshort))
    gl.glVertexAttribBinding = gl_func( 'glVertexAttribBinding', void, (GLuint, GLuint))
    gl.glVertex4hNV = gl_func( 'glVertex4hNV', void, (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glProgramPathFragmentInputGenNV = gl_func( 'glProgramPathFragmentInputGenNV', void, (GLuint, GLint, GLenum, GLint, ct.POINTER(GLfloat)))
    gl.glGetMinmax = gl_func( 'glGetMinmax', void, (GLenum, GLboolean, GLenum, GLenum, ct.POINTER(void)))
    gl.glWindowPos4fMESA = gl_func( 'glWindowPos4fMESA', void, (GLfloat, GLfloat, GLfloat, GLfloat))
#     gl.glUniform3i64NV = gl_func( 'glUniform3i64NV', void, (GLint, GLint64EXT, GLint64EXT, GLint64EXT))
#     gl.glUniformHandleui64ARB = gl_func( 'glUniformHandleui64ARB', void, (GLint, GLuint64))
    gl.glMultiTexCoord2i = gl_func( 'glMultiTexCoord2i', void, (GLenum, GLint, GLint))
#     gl.glMultTransposeMatrixxOES = gl_func( 'glMultTransposeMatrixxOES', void, (ct.POINTER(GLfixed),))
    gl.glVertexArrayAttribFormat = gl_func( 'glVertexArrayAttribFormat', void, (GLuint, GLuint, GLint, GLenum, GLboolean, GLuint))
    gl.glMultiTexCoord3f = gl_func( 'glMultiTexCoord3f', void, (GLenum, GLfloat, GLfloat, GLfloat))
    gl.glMapGrid2d = gl_func( 'glMapGrid2d', void, (GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble))
    gl.glPathParameteriNV = gl_func( 'glPathParameteriNV', void, (GLuint, GLenum, GLint))
    gl.glProgramUniform1uivEXT = gl_func( 'glProgramUniform1uivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glViewportIndexedf = gl_func( 'glViewportIndexedf', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glPixelMapuiv = gl_func( 'glPixelMapuiv', void, (GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glVertexAttrib3sNV = gl_func( 'glVertexAttrib3sNV', void, (GLuint, GLshort, GLshort, GLshort))
    gl.glGenVertexShadersEXT = gl_func( 'glGenVertexShadersEXT', GLuint, (GLuint,))
    gl.glNormal3hNV = gl_func( 'glNormal3hNV', void, (GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glBindBufferOffsetEXT = gl_func( 'glBindBufferOffsetEXT', void, (GLenum, GLuint, GLuint, GLintptr))
    gl.glVertexAttrib4ubvARB = gl_func( 'glVertexAttrib4ubvARB', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glWindowPos3fvMESA = gl_func( 'glWindowPos3fvMESA', void, (ct.POINTER(GLfloat),))
    gl.glPathColorGenNV = gl_func( 'glPathColorGenNV', void, (GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glGetMaterialfv = gl_func( 'glGetMaterialfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glColorTableParameterfvSGI = gl_func( 'glColorTableParameterfvSGI', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glBindFragmentShaderATI = gl_func( 'glBindFragmentShaderATI', void, (GLuint,))
    gl.glGetMultiTexGenfvEXT = gl_func( 'glGetMultiTexGenfvEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glNamedBufferPageCommitmentEXT = gl_func( 'glNamedBufferPageCommitmentEXT', void, (GLuint, GLintptr, GLsizeiptr, GLboolean))
    gl.glGetTransformFeedbackiv = gl_func( 'glGetTransformFeedbackiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetPolygonStipple = gl_func( 'glGetPolygonStipple', void, (ct.POINTER(GLubyte),))
    gl.glGetProgramStringNV = gl_func( 'glGetProgramStringNV', void, (GLuint, GLenum, ct.POINTER(GLubyte)))
#     gl.glGetQueryObjectui64vEXT = gl_func( 'glGetQueryObjectui64vEXT', void, (GLuint, GLenum, ct.POINTER(GLuint64)))
    gl.glFramebufferTextureLayerARB = gl_func( 'glFramebufferTextureLayerARB', void, (GLenum, GLenum, GLuint, GLint, GLint))
#     gl.glScalex = gl_func( 'glScalex', void, (GLfixed, GLfixed, GLfixed))
    gl.glBufferStorageEXT = gl_func( 'glBufferStorageEXT', void, (GLenum, GLsizeiptr, ct.POINTER(void), GLbitfield))
    gl.glProgramEnvParameterI4ivNV = gl_func( 'glProgramEnvParameterI4ivNV', void, (GLenum, GLuint, ct.POINTER(GLint)))
    gl.glGetMultiTexGendvEXT = gl_func( 'glGetMultiTexGendvEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLdouble)))
    gl.glGetMultiTexLevelParameterivEXT = gl_func( 'glGetMultiTexLevelParameterivEXT', void, (GLenum, GLenum, GLint, GLenum, ct.POINTER(GLint)))
    gl.glSecondaryColor3d = gl_func( 'glSecondaryColor3d', void, (GLdouble, GLdouble, GLdouble))
    gl.glPatchParameteriOES = gl_func( 'glPatchParameteriOES', void, (GLenum, GLint))
#     gl.glWaitSync = gl_func( 'glWaitSync', void, (GLsync, GLbitfield, GLuint64))
    gl.glRasterPos3d = gl_func( 'glRasterPos3d', void, (GLdouble, GLdouble, GLdouble))
    gl.glClientActiveVertexStreamATI = gl_func( 'glClientActiveVertexStreamATI', void, (GLenum,))
    gl.glTextureBarrier = gl_func( 'glTextureBarrier', void, ())
    gl.glUniform2iv = gl_func( 'glUniform2iv', void, (GLint, GLsizei, ct.POINTER(GLint)))
    gl.glMatrixRotatedEXT = gl_func( 'glMatrixRotatedEXT', void, (GLenum, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glVertexStream3dvATI = gl_func( 'glVertexStream3dvATI', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glGetLightfv = gl_func( 'glGetLightfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
#     gl.glMultiTexCoord2xOES = gl_func( 'glMultiTexCoord2xOES', void, (GLenum, GLfixed, GLfixed))
    gl.glReplacementCodeuiColor4ubVertex3fvSUN = gl_func( 'glReplacementCodeuiColor4ubVertex3fvSUN', void, (ct.POINTER(GLuint), ct.POINTER(GLubyte), ct.POINTER(GLfloat)))
#     gl.glGetConvolutionParameterxvOES = gl_func( 'glGetConvolutionParameterxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glUniformMatrix2x4fv = gl_func( 'glUniformMatrix2x4fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glInstrumentsBufferSGIX = gl_func( 'glInstrumentsBufferSGIX', void, (GLsizei, ct.POINTER(GLint)))
    gl.glVertexBlendEnvfATI = gl_func( 'glVertexBlendEnvfATI', void, (GLenum, GLfloat))
    gl.glVertexAttrib1f = gl_func( 'glVertexAttrib1f', void, (GLuint, GLfloat))
    gl.glGetTexLevelParameteriv = gl_func( 'glGetTexLevelParameteriv', void, (GLenum, GLint, GLenum, ct.POINTER(GLint)))
    gl.glClientAttribDefaultEXT = gl_func( 'glClientAttribDefaultEXT', void, (GLbitfield,))
    gl.glNamedProgramLocalParametersI4ivEXT = gl_func( 'glNamedProgramLocalParametersI4ivEXT', void, (GLuint, GLenum, GLuint, GLsizei, ct.POINTER(GLint)))
    gl.glReadnPixelsKHR = gl_func( 'glReadnPixelsKHR', void, (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glProgramUniform3i = gl_func( 'glProgramUniform3i', void, (GLuint, GLint, GLint, GLint, GLint))
    gl.glIsQuery = gl_func( 'glIsQuery', GLboolean, (GLuint,))
    gl.glGetInternalformativ = gl_func( 'glGetInternalformativ', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(GLint)))
    gl.glGetTexParameterIuiv = gl_func( 'glGetTexParameterIuiv', void, (GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glGetVertexAttribLdvEXT = gl_func( 'glGetVertexAttribLdvEXT', void, (GLuint, GLenum, ct.POINTER(GLdouble)))
    gl.glGetCombinerOutputParameterivNV = gl_func( 'glGetCombinerOutputParameterivNV', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGenFencesNV = gl_func( 'glGenFencesNV', void, (GLsizei, ct.POINTER(GLuint)))
#     gl.glGetVideoui64vNV = gl_func( 'glGetVideoui64vNV', void, (GLuint, GLenum, ct.POINTER(GLuint64EXT)))
    gl.glProgramUniform3dEXT = gl_func( 'glProgramUniform3dEXT', void, (GLuint, GLint, GLdouble, GLdouble, GLdouble))
    gl.glGetArrayObjectfvATI = gl_func( 'glGetArrayObjectfvATI', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glTexStorage3DEXT = gl_func( 'glTexStorage3DEXT', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei))
    gl.glSampleMaskEXT = gl_func( 'glSampleMaskEXT', void, (GLclampf, GLboolean))
    gl.glUniformMatrix3x2dv = gl_func( 'glUniformMatrix3x2dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glTexBumpParameterivATI = gl_func( 'glTexBumpParameterivATI', void, (GLenum, ct.POINTER(GLint)))
    gl.glGetNamedRenderbufferParameteriv = gl_func( 'glGetNamedRenderbufferParameteriv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetShaderSourceARB = gl_func( 'glGetShaderSourceARB', void, (GLhandleARB, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLcharARB)))
    gl.glCheckFramebufferStatusOES = gl_func( 'glCheckFramebufferStatusOES', GLenum, (GLenum,))
    gl.glGetAttachedShaders = gl_func( 'glGetAttachedShaders', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLuint)))
    gl.glTangentPointerEXT = gl_func( 'glTangentPointerEXT', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glTexCoordPointer = gl_func( 'glTexCoordPointer', void, (GLint, GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertexAttribP4uiv = gl_func( 'glVertexAttribP4uiv', void, (GLuint, GLenum, GLboolean, ct.POINTER(GLuint)))
    gl.glVertex2hvNV = gl_func( 'glVertex2hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glProgramUniformMatrix4x2dv = gl_func( 'glProgramUniformMatrix4x2dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glEndConditionalRenderNV = gl_func( 'glEndConditionalRenderNV', void, ())
    gl.glDrawElementsInstancedBaseVertexBaseInstanceEXT = gl_func( 'glDrawElementsInstancedBaseVertexBaseInstanceEXT', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei, GLint, GLuint))
#     gl.glLineWidthxOES = gl_func( 'glLineWidthxOES', void, (GLfixed,))
    gl.glColor3i = gl_func( 'glColor3i', void, (GLint, GLint, GLint))
    gl.glProgramParameter4dNV = gl_func( 'glProgramParameter4dNV', void, (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glIsProgram = gl_func( 'glIsProgram', GLboolean, (GLuint,))
    gl.glMultiTexCoord4s = gl_func( 'glMultiTexCoord4s', void, (GLenum, GLshort, GLshort, GLshort, GLshort))
    gl.glCompressedTextureImage3DEXT = gl_func( 'glCompressedTextureImage3DEXT', void, (GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glVertex2f = gl_func( 'glVertex2f', void, (GLfloat, GLfloat))
    gl.glColorTableParameterivSGI = gl_func( 'glColorTableParameterivSGI', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glMultiTexCoord4sARB = gl_func( 'glMultiTexCoord4sARB', void, (GLenum, GLshort, GLshort, GLshort, GLshort))
    gl.glFrustumf = gl_func( 'glFrustumf', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glIndexubv = gl_func( 'glIndexubv', void, (ct.POINTER(GLubyte),))
    gl.glDrawRangeElementsEXT = gl_func( 'glDrawRangeElementsEXT', void, (GLenum, GLuint, GLuint, GLsizei, GLenum, ct.POINTER(void)))
    gl.glVertexAttribs2svNV = gl_func( 'glVertexAttribs2svNV', void, (GLuint, GLsizei, ct.POINTER(GLshort)))
    gl.glVertexAttribL1dv = gl_func( 'glVertexAttribL1dv', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glGetPathLengthNV = gl_func( 'glGetPathLengthNV', GLfloat, (GLuint, GLsizei, GLsizei))
    gl.glProgramUniform1iv = gl_func( 'glProgramUniform1iv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glGetStageIndexNV = gl_func( 'glGetStageIndexNV', GLushort, (GLenum,))
    gl.glVertexAttribI3i = gl_func( 'glVertexAttribI3i', void, (GLuint, GLint, GLint, GLint))
    gl.glExtGetTexSubImageQCOM = gl_func( 'glExtGetTexSubImageQCOM', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetFinalCombinerInputParameterfvNV = gl_func( 'glGetFinalCombinerInputParameterfvNV', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glRasterPos3f = gl_func( 'glRasterPos3f', void, (GLfloat, GLfloat, GLfloat))
    gl.glMultiDrawElementsBaseVertexEXT = gl_func( 'glMultiDrawElementsBaseVertexEXT', void, (GLenum, ct.POINTER(GLsizei), GLenum, ct.POINTER(ct.POINTER(void)), GLsizei, ct.POINTER(GLint)))
    gl.glGetVertexAttribivNV = gl_func( 'glGetVertexAttribivNV', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glIsList = gl_func( 'glIsList', GLboolean, (GLuint,))
    gl.glGetnSeparableFilter = gl_func( 'glGetnSeparableFilter', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(void), GLsizei, ct.POINTER(void), ct.POINTER(void)))
    gl.glMap1f = gl_func( 'glMap1f', void, (GLenum, GLfloat, GLfloat, GLint, GLint, ct.POINTER(GLfloat)))
    gl.glReadInstrumentsSGIX = gl_func( 'glReadInstrumentsSGIX', void, (GLint,))
    gl.glGetProgramLocalParameterfvARB = gl_func( 'glGetProgramLocalParameterfvARB', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glDrawElementsBaseVertexOES = gl_func( 'glDrawElementsBaseVertexOES', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLint))
    gl.glWindowPos2s = gl_func( 'glWindowPos2s', void, (GLshort, GLshort))
    gl.glGetPerfQueryDataINTEL = gl_func( 'glGetPerfQueryDataINTEL', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLvoid), ct.POINTER(GLuint)))
    gl.glMultiTexCoord2s = gl_func( 'glMultiTexCoord2s', void, (GLenum, GLshort, GLshort))
    gl.glDrawRangeElementsBaseVertexOES = gl_func( 'glDrawRangeElementsBaseVertexOES', void, (GLenum, GLuint, GLuint, GLsizei, GLenum, ct.POINTER(void), GLint))
    gl.glClearColor = gl_func( 'glClearColor', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glVertexPointervINTEL = gl_func( 'glVertexPointervINTEL', void, (GLint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glFinishFenceNV = gl_func( 'glFinishFenceNV', void, (GLuint,))
    gl.glGetPathParameterfvNV = gl_func( 'glGetPathParameterfvNV', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glSamplerParameterIivOES = gl_func( 'glSamplerParameterIivOES', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetInvariantFloatvEXT = gl_func( 'glGetInvariantFloatvEXT', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glBlendEquationSeparateiARB = gl_func( 'glBlendEquationSeparateiARB', void, (GLuint, GLenum, GLenum))
    gl.glPathSubCoordsNV = gl_func( 'glPathSubCoordsNV', void, (GLuint, GLsizei, GLsizei, GLenum, ct.POINTER(void)))
    gl.glViewportIndexedfvNV = gl_func( 'glViewportIndexedfvNV', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glGenerateMipmapOES = gl_func( 'glGenerateMipmapOES', void, (GLenum,))
    gl.glEndVertexShaderEXT = gl_func( 'glEndVertexShaderEXT', void, ())
    gl.glCreateCommandListsNV = gl_func( 'glCreateCommandListsNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glDisableiEXT = gl_func( 'glDisableiEXT', void, (GLenum, GLuint))
    gl.glGenSymbolsEXT = gl_func( 'glGenSymbolsEXT', GLuint, (GLenum, GLenum, GLenum, GLuint))
    gl.glVertexAttribL3dv = gl_func( 'glVertexAttribL3dv', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glGenFencesAPPLE = gl_func( 'glGenFencesAPPLE', void, (GLsizei, ct.POINTER(GLuint)))
#     gl.glUniformui64vNV = gl_func( 'glUniformui64vNV', void, (GLint, GLsizei, ct.POINTER(GLuint64EXT)))
#     gl.glClearAccumxOES = gl_func( 'glClearAccumxOES', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glWeightdvARB = gl_func( 'glWeightdvARB', void, (GLint, ct.POINTER(GLdouble)))
    gl.glWindowPos2sMESA = gl_func( 'glWindowPos2sMESA', void, (GLshort, GLshort))
    gl.glGetnPixelMapuiv = gl_func( 'glGetnPixelMapuiv', void, (GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glBlendFuncSeparatei = gl_func( 'glBlendFuncSeparatei', void, (GLuint, GLenum, GLenum, GLenum, GLenum))
    gl.glVertexStream3fATI = gl_func( 'glVertexStream3fATI', void, (GLenum, GLfloat, GLfloat, GLfloat))
    gl.glMultiTexCoord1i = gl_func( 'glMultiTexCoord1i', void, (GLenum, GLint))
#     gl.glTexParameterxv = gl_func( 'glTexParameterxv', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glVertexAttrib2dNV = gl_func( 'glVertexAttrib2dNV', void, (GLuint, GLdouble, GLdouble))
    gl.glVertexAttrib1hNV = gl_func( 'glVertexAttrib1hNV', void, (GLuint, GLhalfNV))
    gl.glWindowPos2ivARB = gl_func( 'glWindowPos2ivARB', void, (ct.POINTER(GLint),))
    gl.glIsProgramPipelineEXT = gl_func( 'glIsProgramPipelineEXT', GLboolean, (GLuint,))
    gl.glCombinerParameterivNV = gl_func( 'glCombinerParameterivNV', void, (GLenum, ct.POINTER(GLint)))
    gl.glMemoryBarrier = gl_func( 'glMemoryBarrier', void, (GLbitfield,))
    gl.glTexCoord4hvNV = gl_func( 'glTexCoord4hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glVertexArrayVertexBindingDivisorEXT = gl_func( 'glVertexArrayVertexBindingDivisorEXT', void, (GLuint, GLuint, GLuint))
    gl.glGetTextureLevelParameterfvEXT = gl_func( 'glGetTextureLevelParameterfvEXT', void, (GLuint, GLenum, GLint, GLenum, ct.POINTER(GLfloat)))
#     gl.glGetQueryObjecti64v = gl_func( 'glGetQueryObjecti64v', void, (GLuint, GLenum, ct.POINTER(GLint64)))
    gl.glIsBufferResidentNV = gl_func( 'glIsBufferResidentNV', GLboolean, (GLenum,))
    gl.glDeleteTexturesEXT = gl_func( 'glDeleteTexturesEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetTextureImage = gl_func( 'glGetTextureImage', void, (GLuint, GLint, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glMultiTexCoord4iv = gl_func( 'glMultiTexCoord4iv', void, (GLenum, ct.POINTER(GLint)))
    gl.glGetColorTableSGI = gl_func( 'glGetColorTableSGI', void, (GLenum, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetnUniformdvARB = gl_func( 'glGetnUniformdvARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLdouble)))
    gl.glNamedFramebufferDrawBuffers = gl_func( 'glNamedFramebufferDrawBuffers', void, (GLuint, GLsizei, ct.POINTER(GLenum)))
    gl.glCommandListSegmentsNV = gl_func( 'glCommandListSegmentsNV', void, (GLuint, GLuint))
    gl.glGetDebugMessageLogKHR = gl_func( 'glGetDebugMessageLogKHR', GLuint, (GLuint, GLsizei, ct.POINTER(GLenum), ct.POINTER(GLenum), ct.POINTER(GLuint), ct.POINTER(GLenum), ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glScissor = gl_func( 'glScissor', void, (GLint, GLint, GLsizei, GLsizei))
    gl.glIsEnabledi = gl_func( 'glIsEnabledi', GLboolean, (GLenum, GLuint))
    gl.glDeleteSamplers = gl_func( 'glDeleteSamplers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glMultiTexParameterIuivEXT = gl_func( 'glMultiTexParameterIuivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glFragmentLightModeliSGIX = gl_func( 'glFragmentLightModeliSGIX', void, (GLenum, GLint))
    gl.glGetFenceivNV = gl_func( 'glGetFenceivNV', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glSpriteParameterivSGIX = gl_func( 'glSpriteParameterivSGIX', void, (GLenum, ct.POINTER(GLint)))
    gl.glValidateProgram = gl_func( 'glValidateProgram', void, (GLuint,))
    gl.glUniform2i = gl_func( 'glUniform2i', void, (GLint, GLint, GLint))
    gl.glCopyTextureSubImage2D = gl_func( 'glCopyTextureSubImage2D', void, (GLuint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glProgramUniformMatrix2x4fvEXT = gl_func( 'glProgramUniformMatrix2x4fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glProgramLocalParameters4fvEXT = gl_func( 'glProgramLocalParameters4fvEXT', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glNormal3i = gl_func( 'glNormal3i', void, (GLint, GLint, GLint))
    gl.glGetnTexImageARB = gl_func( 'glGetnTexImageARB', void, (GLenum, GLint, GLenum, GLenum, GLsizei, ct.POINTER(void)))
#     gl.glRasterPos2xOES = gl_func( 'glRasterPos2xOES', void, (GLfixed, GLfixed))
    gl.glInitNames = gl_func( 'glInitNames', void, ())
    gl.glGetDoublei_v = gl_func( 'glGetDoublei_v', void, (GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glGetFramebufferAttachmentParameterivOES = gl_func( 'glGetFramebufferAttachmentParameterivOES', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glDisableVertexArrayAttrib = gl_func( 'glDisableVertexArrayAttrib', void, (GLuint, GLuint))
    gl.glGetActiveAtomicCounterBufferiv = gl_func( 'glGetActiveAtomicCounterBufferiv', void, (GLuint, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glTexParameterIiv = gl_func( 'glTexParameterIiv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glArrayElementEXT = gl_func( 'glArrayElementEXT', void, (GLint,))
    gl.glFramebufferTexture2DMultisampleEXT = gl_func( 'glFramebufferTexture2DMultisampleEXT', void, (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei))
    gl.glPixelTransferf = gl_func( 'glPixelTransferf', void, (GLenum, GLfloat))
    gl.glVertexAttribIFormatNV = gl_func( 'glVertexAttribIFormatNV', void, (GLuint, GLint, GLenum, GLsizei))
    gl.glBinormal3iEXT = gl_func( 'glBinormal3iEXT', void, (GLint, GLint, GLint))
    gl.glVertexStream1svATI = gl_func( 'glVertexStream1svATI', void, (GLenum, ct.POINTER(GLshort)))
    gl.glBeginVertexShaderEXT = gl_func( 'glBeginVertexShaderEXT', void, ())
#     gl.glUniform3ui64NV = gl_func( 'glUniform3ui64NV', void, (GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT))
    gl.glGetPixelTexGenParameterivSGIS = gl_func( 'glGetPixelTexGenParameterivSGIS', void, (GLenum, ct.POINTER(GLint)))
    gl.glWindowPos2svMESA = gl_func( 'glWindowPos2svMESA', void, (ct.POINTER(GLshort),))
    gl.glEnableClientState = gl_func( 'glEnableClientState', void, (GLenum,))
    gl.glVertexAttribI4usvEXT = gl_func( 'glVertexAttribI4usvEXT', void, (GLuint, ct.POINTER(GLushort)))
    gl.glBeginTransformFeedbackNV = gl_func( 'glBeginTransformFeedbackNV', void, (GLenum,))
    gl.glCombinerParameteriNV = gl_func( 'glCombinerParameteriNV', void, (GLenum, GLint))
#     gl.glVertexAttribL2i64vNV = gl_func( 'glVertexAttribL2i64vNV', void, (GLuint, ct.POINTER(GLint64EXT)))
    gl.glGetConvolutionParameterfv = gl_func( 'glGetConvolutionParameterfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glCreateTextures = gl_func( 'glCreateTextures', void, (GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glPointParameteri = gl_func( 'glPointParameteri', void, (GLenum, GLint))
    gl.glAlphaFunc = gl_func( 'glAlphaFunc', void, (GLenum, GLfloat))
    gl.glVertexAttribI2ivEXT = gl_func( 'glVertexAttribI2ivEXT', void, (GLuint, ct.POINTER(GLint)))
    gl.glNormal3f = gl_func( 'glNormal3f', void, (GLfloat, GLfloat, GLfloat))
    gl.glBindFragDataLocationIndexedEXT = gl_func( 'glBindFragDataLocationIndexedEXT', void, (GLuint, GLuint, GLuint, ct.POINTER(GLchar)))
    gl.glGetNamedStringivARB = gl_func( 'glGetNamedStringivARB', void, (GLint, ct.POINTER(GLchar), GLenum, ct.POINTER(GLint)))
    gl.glDepthRangeArrayfvNV = gl_func( 'glDepthRangeArrayfvNV', void, (GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetTextureParameterfv = gl_func( 'glGetTextureParameterfv', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glFinishObjectAPPLE = gl_func( 'glFinishObjectAPPLE', void, (GLenum, GLint))
    gl.glDrawArrays = gl_func( 'glDrawArrays', void, (GLenum, GLint, GLsizei))
    gl.glReadnPixelsEXT = gl_func( 'glReadnPixelsEXT', void, (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glProgramUniformMatrix4x2fv = gl_func( 'glProgramUniformMatrix4x2fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertexAttribP4ui = gl_func( 'glVertexAttribP4ui', void, (GLuint, GLenum, GLboolean, GLuint))
    gl.glGetClipPlanefOES = gl_func( 'glGetClipPlanefOES', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glGetVaryingLocationNV = gl_func( 'glGetVaryingLocationNV', GLint, (GLuint, ct.POINTER(GLchar)))
    gl.glGenTransformFeedbacks = gl_func( 'glGenTransformFeedbacks', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glVertexPointerListIBM = gl_func( 'glVertexPointerListIBM', void, (GLint, GLenum, GLint, ct.POINTER(ct.POINTER(void)), GLint))
    gl.glNamedFramebufferSampleLocationsfvNV = gl_func( 'glNamedFramebufferSampleLocationsfvNV', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glBlitFramebufferEXT = gl_func( 'glBlitFramebufferEXT', void, (GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLbitfield, GLenum))
    gl.glMultiTexImage2DEXT = gl_func( 'glMultiTexImage2DEXT', void, (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetTexGenfvOES = gl_func( 'glGetTexGenfvOES', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glWindowPos2sv = gl_func( 'glWindowPos2sv', void, (ct.POINTER(GLshort),))
    gl.glDrawTransformFeedbackStream = gl_func( 'glDrawTransformFeedbackStream', void, (GLenum, GLuint, GLuint))
    gl.glDeleteProgramPipelines = gl_func( 'glDeleteProgramPipelines', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glSecondaryColor3f = gl_func( 'glSecondaryColor3f', void, (GLfloat, GLfloat, GLfloat))
    gl.glUniformMatrix2x4dv = gl_func( 'glUniformMatrix2x4dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glLightModeliv = gl_func( 'glLightModeliv', void, (GLenum, ct.POINTER(GLint)))
    gl.glProgramUniformMatrix2x3dvEXT = gl_func( 'glProgramUniformMatrix2x3dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glVertexAttrib4usvARB = gl_func( 'glVertexAttrib4usvARB', void, (GLuint, ct.POINTER(GLushort)))
    gl.glGetColorTableParameterfvEXT = gl_func( 'glGetColorTableParameterfvEXT', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glVertexAttribLFormatNV = gl_func( 'glVertexAttribLFormatNV', void, (GLuint, GLint, GLenum, GLsizei))
    gl.glEndPerfMonitorAMD = gl_func( 'glEndPerfMonitorAMD', void, (GLuint,))
    gl.glMultiTexCoord4ivARB = gl_func( 'glMultiTexCoord4ivARB', void, (GLenum, ct.POINTER(GLint)))
    gl.glIsVertexArray = gl_func( 'glIsVertexArray', GLboolean, (GLuint,))
#     gl.glDeleteSyncAPPLE = gl_func( 'glDeleteSyncAPPLE', void, (GLsync,))
    gl.glProgramUniformMatrix3x2fv = gl_func( 'glProgramUniformMatrix3x2fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glRectsv = gl_func( 'glRectsv', void, (ct.POINTER(GLshort), ct.POINTER(GLshort)))
    gl.glTexCoord4fv = gl_func( 'glTexCoord4fv', void, (ct.POINTER(GLfloat),))
    gl.glCompressedTextureImage2DEXT = gl_func( 'glCompressedTextureImage2DEXT', void, (GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
#     gl.glUniform4ui64vARB = gl_func( 'glUniform4ui64vARB', void, (GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glCreateTransformFeedbacks = gl_func( 'glCreateTransformFeedbacks', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glIsProgramPipeline = gl_func( 'glIsProgramPipeline', GLboolean, (GLuint,))
    gl.glNormal3fv = gl_func( 'glNormal3fv', void, (ct.POINTER(GLfloat),))
    gl.glReplacementCodeuiColor4ubVertex3fSUN = gl_func( 'glReplacementCodeuiColor4ubVertex3fSUN', void, (GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat))
    gl.glGetNamedBufferParameterivEXT = gl_func( 'glGetNamedBufferParameterivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glProgramUniform4ivEXT = gl_func( 'glProgramUniform4ivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glDrawArraysIndirect = gl_func( 'glDrawArraysIndirect', void, (GLenum, ct.POINTER(void)))
    gl.glMultiTexGenivEXT = gl_func( 'glMultiTexGenivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glMultiTexCoord3sv = gl_func( 'glMultiTexCoord3sv', void, (GLenum, ct.POINTER(GLshort)))
    gl.glFlushStaticDataIBM = gl_func( 'glFlushStaticDataIBM', void, (GLenum,))
    gl.glColor3b = gl_func( 'glColor3b', void, (GLbyte, GLbyte, GLbyte))
    gl.glGetTexParameterPointervAPPLE = gl_func( 'glGetTexParameterPointervAPPLE', void, (GLenum, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glVertex4d = gl_func( 'glVertex4d', void, (GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glGetnConvolutionFilterARB = gl_func( 'glGetnConvolutionFilterARB', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glCompressedTexImage1D = gl_func( 'glCompressedTexImage1D', void, (GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glObjectLabel = gl_func( 'glObjectLabel', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLchar)))
    gl.glFragmentLightfSGIX = gl_func( 'glFragmentLightfSGIX', void, (GLenum, GLenum, GLfloat))
    gl.glHistogram = gl_func( 'glHistogram', void, (GLenum, GLsizei, GLenum, GLboolean))
    gl.glMultiTexEnvivEXT = gl_func( 'glMultiTexEnvivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glMultiTexCoord3i = gl_func( 'glMultiTexCoord3i', void, (GLenum, GLint, GLint, GLint))
    gl.glBindTexGenParameterEXT = gl_func( 'glBindTexGenParameterEXT', GLuint, (GLenum, GLenum, GLenum))
    gl.glColor4iv = gl_func( 'glColor4iv', void, (ct.POINTER(GLint),))
    gl.glDetailTexFuncSGIS = gl_func( 'glDetailTexFuncSGIS', void, (GLenum, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetVideouivNV = gl_func( 'glGetVideouivNV', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glColor4bv = gl_func( 'glColor4bv', void, (ct.POINTER(GLbyte),))
#     gl.glProgramUniformui64NV = gl_func( 'glProgramUniformui64NV', void, (GLuint, GLint, GLuint64EXT))
    gl.glGetMinmaxParameteriv = gl_func( 'glGetMinmaxParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGlobalAlphaFactordSUN = gl_func( 'glGlobalAlphaFactordSUN', void, (GLdouble,))
    gl.glTexCoord4fColor4fNormal3fVertex4fSUN = gl_func( 'glTexCoord4fColor4fNormal3fVertex4fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glVertexArrayElementBuffer = gl_func( 'glVertexArrayElementBuffer', void, (GLuint, GLuint))
#     gl.glVDPAUGetSurfaceivNV = gl_func( 'glVDPAUGetSurfaceivNV', void, (GLvdpauSurfaceNV, GLenum, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLint)))
    gl.glTexCoordPointervINTEL = gl_func( 'glTexCoordPointervINTEL', void, (GLint, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glDeleteShader = gl_func( 'glDeleteShader', void, (GLuint,))
    gl.glIsProgramNV = gl_func( 'glIsProgramNV', GLboolean, (GLuint,))
    gl.glVertexAttribDivisorARB = gl_func( 'glVertexAttribDivisorARB', void, (GLuint, GLuint))
    gl.glFramebufferTexture2DEXT = gl_func( 'glFramebufferTexture2DEXT', void, (GLenum, GLenum, GLenum, GLuint, GLint))
#     gl.glVertexAttribL1i64vNV = gl_func( 'glVertexAttribL1i64vNV', void, (GLuint, ct.POINTER(GLint64EXT)))
    gl.glNewObjectBufferATI = gl_func( 'glNewObjectBufferATI', GLuint, (GLsizei, ct.POINTER(void), GLenum))
    gl.glFrustumfOES = gl_func( 'glFrustumfOES', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glDrawCommandsNV = gl_func( 'glDrawCommandsNV', void, (GLenum, GLuint, ct.POINTER(GLintptr), ct.POINTER(GLsizei), GLuint))
    gl.glNormal3dv = gl_func( 'glNormal3dv', void, (ct.POINTER(GLdouble),))
#     gl.glGetVertexArrayIndexed64iv = gl_func( 'glGetVertexArrayIndexed64iv', void, (GLuint, GLuint, GLenum, ct.POINTER(GLint64)))
    gl.glProgramUniformMatrix2fv = gl_func( 'glProgramUniformMatrix2fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glBeginTransformFeedbackEXT = gl_func( 'glBeginTransformFeedbackEXT', void, (GLenum,))
    gl.glWindowPos2fARB = gl_func( 'glWindowPos2fARB', void, (GLfloat, GLfloat))
    gl.glProgramLocalParameterI4uiNV = gl_func( 'glProgramLocalParameterI4uiNV', void, (GLenum, GLuint, GLuint, GLuint, GLuint, GLuint))
#     gl.glGetUniformi64vNV = gl_func( 'glGetUniformi64vNV', void, (GLuint, GLint, ct.POINTER(GLint64EXT)))
    gl.glProgramUniformMatrix2x4dvEXT = gl_func( 'glProgramUniformMatrix2x4dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
#     gl.glCreateSyncFromCLeventARB = gl_func( 'glCreateSyncFromCLeventARB', GLsync, (ct.POINTER(struct _cl_context), ct.POINTER(struct _cl_event), GLbitfield))
    gl.glVertex2fv = gl_func( 'glVertex2fv', void, (ct.POINTER(GLfloat),))
    gl.glVertexAttribI4svEXT = gl_func( 'glVertexAttribI4svEXT', void, (GLuint, ct.POINTER(GLshort)))
    gl.glMultiDrawElementsEXT = gl_func( 'glMultiDrawElementsEXT', void, (GLenum, ct.POINTER(GLsizei), GLenum, ct.POINTER(ct.POINTER(void)), GLsizei))
    gl.glMultiTexCoord4dvARB = gl_func( 'glMultiTexCoord4dvARB', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glColor4hvNV = gl_func( 'glColor4hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glVertex3hvNV = gl_func( 'glVertex3hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glVertexAttrib4ubvNV = gl_func( 'glVertexAttrib4ubvNV', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glTexParameterIuiv = gl_func( 'glTexParameterIuiv', void, (GLenum, GLenum, ct.POINTER(GLuint)))
#     gl.glVDPAUUnmapSurfacesNV = gl_func( 'glVDPAUUnmapSurfacesNV', void, (GLsizei, ct.POINTER(GLvdpauSurfaceNV)))
    gl.glDrawTexfvOES = gl_func( 'glDrawTexfvOES', void, (ct.POINTER(GLfloat),))
    gl.glStencilStrokePathInstancedNV = gl_func( 'glStencilStrokePathInstancedNV', void, (GLsizei, GLenum, ct.POINTER(void), GLuint, GLint, GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glCopyImageSubData = gl_func( 'glCopyImageSubData', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei))
#     gl.glGetTexGenxvOES = gl_func( 'glGetTexGenxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glVertexAttrib1fvNV = gl_func( 'glVertexAttrib1fvNV', void, (GLuint, ct.POINTER(GLfloat)))
#     gl.glIsSync = gl_func( 'glIsSync', GLboolean, (GLsync,))
    gl.glVertexAttrib4fv = gl_func( 'glVertexAttrib4fv', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glGenVertexArraysOES = gl_func( 'glGenVertexArraysOES', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glIndexMask = gl_func( 'glIndexMask', void, (GLuint,))
    gl.glGetConvolutionParameterfvEXT = gl_func( 'glGetConvolutionParameterfvEXT', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glIsStateNV = gl_func( 'glIsStateNV', GLboolean, (GLuint,))
    gl.glMapBuffer = gl_func( 'glMapBuffer', ct.POINTER(void), (GLenum, GLenum))
#     gl.glSampleCoveragex = gl_func( 'glSampleCoveragex', void, (GLclampx, GLboolean))
    gl.glLightEnviSGIX = gl_func( 'glLightEnviSGIX', void, (GLenum, GLint))
    gl.glSetInvariantEXT = gl_func( 'glSetInvariantEXT', void, (GLuint, GLenum, ct.POINTER(void)))
#     gl.glProgramUniform1ui64NV = gl_func( 'glProgramUniform1ui64NV', void, (GLuint, GLint, GLuint64EXT))
#     gl.glVertexAttribL1ui64NV = gl_func( 'glVertexAttribL1ui64NV', void, (GLuint, GLuint64EXT))
#     gl.glGetVideoi64vNV = gl_func( 'glGetVideoi64vNV', void, (GLuint, GLenum, ct.POINTER(GLint64EXT)))
    gl.glTexCoord2fVertex3fvSUN = gl_func( 'glTexCoord2fVertex3fvSUN', void, (ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glGetNamedBufferSubDataEXT = gl_func( 'glGetNamedBufferSubDataEXT', void, (GLuint, GLintptr, GLsizeiptr, ct.POINTER(void)))
    gl.glSeparableFilter2D = gl_func( 'glSeparableFilter2D', void, (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void), ct.POINTER(void)))
    gl.glWindowPos3dvARB = gl_func( 'glWindowPos3dvARB', void, (ct.POINTER(GLdouble),))
    gl.glCoverFillPathNV = gl_func( 'glCoverFillPathNV', void, (GLuint, GLenum))
    gl.glPointParameterfvARB = gl_func( 'glPointParameterfvARB', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glGetVideoCaptureivNV = gl_func( 'glGetVideoCaptureivNV', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glWeightbvARB = gl_func( 'glWeightbvARB', void, (GLint, ct.POINTER(GLbyte)))
    gl.glViewport = gl_func( 'glViewport', void, (GLint, GLint, GLsizei, GLsizei))
    gl.glGetnPixelMapusv = gl_func( 'glGetnPixelMapusv', void, (GLenum, GLsizei, ct.POINTER(GLushort)))
    gl.glBindVertexArrayAPPLE = gl_func( 'glBindVertexArrayAPPLE', void, (GLuint,))
    gl.glSamplerParameterIuivEXT = gl_func( 'glSamplerParameterIuivEXT', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glWindowPos3iARB = gl_func( 'glWindowPos3iARB', void, (GLint, GLint, GLint))
    gl.glColor4fNormal3fVertex3fSUN = gl_func( 'glColor4fNormal3fVertex3fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glInsertComponentEXT = gl_func( 'glInsertComponentEXT', void, (GLuint, GLuint, GLuint))
    gl.glGetUniformivARB = gl_func( 'glGetUniformivARB', void, (GLhandleARB, GLint, ct.POINTER(GLint)))
    gl.glNamedProgramStringEXT = gl_func( 'glNamedProgramStringEXT', void, (GLuint, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertexStream4svATI = gl_func( 'glVertexStream4svATI', void, (GLenum, ct.POINTER(GLshort)))
    gl.glFogCoordhvNV = gl_func( 'glFogCoordhvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glProgramUniform1d = gl_func( 'glProgramUniform1d', void, (GLuint, GLint, GLdouble))
    gl.glSecondaryColor3iv = gl_func( 'glSecondaryColor3iv', void, (ct.POINTER(GLint),))
    gl.glColorP4uiv = gl_func( 'glColorP4uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glEndQueryARB = gl_func( 'glEndQueryARB', void, (GLenum,))
    gl.glRenderbufferStorageMultisampleCoverageNV = gl_func( 'glRenderbufferStorageMultisampleCoverageNV', void, (GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glIndexMaterialEXT = gl_func( 'glIndexMaterialEXT', void, (GLenum, GLenum))
    gl.glNormal3fVertex3fSUN = gl_func( 'glNormal3fVertex3fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glTexSubImage3DOES = gl_func( 'glTexSubImage3DOES', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glBindProgramPipeline = gl_func( 'glBindProgramPipeline', void, (GLuint,))
    gl.glGlobalAlphaFactorbSUN = gl_func( 'glGlobalAlphaFactorbSUN', void, (GLbyte,))
    gl.glGetVertexArrayIntegeri_vEXT = gl_func( 'glGetVertexArrayIntegeri_vEXT', void, (GLuint, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glRotatef = gl_func( 'glRotatef', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glLogicOp = gl_func( 'glLogicOp', void, (GLenum,))
    gl.glColor4ubVertex3fSUN = gl_func( 'glColor4ubVertex3fSUN', void, (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat))
    gl.glProgramUniform4dEXT = gl_func( 'glProgramUniform4dEXT', void, (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glGetUniformdv = gl_func( 'glGetUniformdv', void, (GLuint, GLint, ct.POINTER(GLdouble)))
    gl.glReplacementCodeuivSUN = gl_func( 'glReplacementCodeuivSUN', void, (ct.POINTER(GLuint),))
    gl.glStartTilingQCOM = gl_func( 'glStartTilingQCOM', void, (GLuint, GLuint, GLuint, GLuint, GLbitfield))
    gl.glColorTable = gl_func( 'glColorTable', void, (GLenum, GLenum, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glActiveShaderProgramEXT = gl_func( 'glActiveShaderProgramEXT', void, (GLuint, GLuint))
    gl.glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = gl_func( 'glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN', void, (ct.POINTER(GLuint), ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glSampleCoverageARB = gl_func( 'glSampleCoverageARB', void, (GLfloat, GLboolean))
    gl.glGetHistogramParameterfvEXT = gl_func( 'glGetHistogramParameterfvEXT', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glTextureParameterfv = gl_func( 'glTextureParameterfv', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glLockArraysEXT = gl_func( 'glLockArraysEXT', void, (GLint, GLsizei))
    gl.glGetSamplerParameterIivEXT = gl_func( 'glGetSamplerParameterIivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glPixelZoom = gl_func( 'glPixelZoom', void, (GLfloat, GLfloat))
    gl.glGetFramebufferParameteriv = gl_func( 'glGetFramebufferParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glDeleteVertexArrays = gl_func( 'glDeleteVertexArrays', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glInvalidateSubFramebuffer = gl_func( 'glInvalidateSubFramebuffer', void, (GLenum, GLsizei, ct.POINTER(GLenum), GLint, GLint, GLsizei, GLsizei))
    gl.glVertex2dv = gl_func( 'glVertex2dv', void, (ct.POINTER(GLdouble),))
    gl.glBlendEquationiARB = gl_func( 'glBlendEquationiARB', void, (GLuint, GLenum))
    gl.glColor4hNV = gl_func( 'glColor4hNV', void, (GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glDisableiOES = gl_func( 'glDisableiOES', void, (GLenum, GLuint))
    gl.glPassTexCoordATI = gl_func( 'glPassTexCoordATI', void, (GLuint, GLuint, GLenum))
    gl.glPathFogGenNV = gl_func( 'glPathFogGenNV', void, (GLenum,))
    gl.glDisableVertexAttribArray = gl_func( 'glDisableVertexAttribArray', void, (GLuint,))
#     gl.glGetTextureSamplerHandleARB = gl_func( 'glGetTextureSamplerHandleARB', GLuint64, (GLuint, GLuint))
    gl.glSecondaryColor3ub = gl_func( 'glSecondaryColor3ub', void, (GLubyte, GLubyte, GLubyte))
#     gl.glBufferDataARB = gl_func( 'glBufferDataARB', void, (GLenum, GLsizeiptrARB, ct.POINTER(void), GLenum))
    gl.glProgramUniformMatrix2fvEXT = gl_func( 'glProgramUniformMatrix2fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glGenProgramPipelinesEXT = gl_func( 'glGenProgramPipelinesEXT', void, (GLsizei, ct.POINTER(GLuint)))
#     gl.glFogxOES = gl_func( 'glFogxOES', void, (GLenum, GLfixed))
    gl.glNormalP3uiv = gl_func( 'glNormalP3uiv', void, (GLenum, ct.POINTER(GLuint)))
#     gl.glVDPAUMapSurfacesNV = gl_func( 'glVDPAUMapSurfacesNV', void, (GLsizei, ct.POINTER(GLvdpauSurfaceNV)))
    gl.glProgramUniformMatrix2x3dv = gl_func( 'glProgramUniformMatrix2x3dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glVertexAttrib3dNV = gl_func( 'glVertexAttrib3dNV', void, (GLuint, GLdouble, GLdouble, GLdouble))
    gl.glGetnMapdvARB = gl_func( 'glGetnMapdvARB', void, (GLenum, GLenum, GLsizei, ct.POINTER(GLdouble)))
    gl.glGenRenderbuffers = gl_func( 'glGenRenderbuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glTexCoordP2uiv = gl_func( 'glTexCoordP2uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glGetVertexArrayIntegervEXT = gl_func( 'glGetVertexArrayIntegervEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetObjectLabel = gl_func( 'glGetObjectLabel', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glBindVertexArrayOES = gl_func( 'glBindVertexArrayOES', void, (GLuint,))
    gl.glNamedBufferData = gl_func( 'glNamedBufferData', void, (GLuint, GLsizeiptr, ct.POINTER(void), GLenum))
    gl.glDrawTransformFeedbackInstanced = gl_func( 'glDrawTransformFeedbackInstanced', void, (GLenum, GLuint, GLsizei))
    gl.glPopMatrix = gl_func( 'glPopMatrix', void, ())
    gl.glGetSamplerParameterfv = gl_func( 'glGetSamplerParameterfv', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glStencilFuncSeparateATI = gl_func( 'glStencilFuncSeparateATI', void, (GLenum, GLenum, GLint, GLuint))
    gl.glFragmentMaterialfSGIX = gl_func( 'glFragmentMaterialfSGIX', void, (GLenum, GLenum, GLfloat))
    gl.glUniformMatrix3x4fv = gl_func( 'glUniformMatrix3x4fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertexAttribs4dvNV = gl_func( 'glVertexAttribs4dvNV', void, (GLuint, GLsizei, ct.POINTER(GLdouble)))
    gl.glResolveDepthValuesNV = gl_func( 'glResolveDepthValuesNV', void, ())
    gl.glGenFramebuffers = gl_func( 'glGenFramebuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glProvokingVertex = gl_func( 'glProvokingVertex', void, (GLenum,))
    gl.glVertexAttrib2d = gl_func( 'glVertexAttrib2d', void, (GLuint, GLdouble, GLdouble))
    gl.glVertexAttrib1dvNV = gl_func( 'glVertexAttrib1dvNV', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glLoadTransposeMatrixfARB = gl_func( 'glLoadTransposeMatrixfARB', void, (ct.POINTER(GLfloat),))
    gl.glTexCoord1d = gl_func( 'glTexCoord1d', void, (GLdouble,))
#     gl.glTexCoord1xOES = gl_func( 'glTexCoord1xOES', void, (GLfixed,))
    gl.glElementPointerATI = gl_func( 'glElementPointerATI', void, (GLenum, ct.POINTER(void)))
    gl.glColorP3ui = gl_func( 'glColorP3ui', void, (GLenum, GLuint))
    gl.glFramebufferTexture1DEXT = gl_func( 'glFramebufferTexture1DEXT', void, (GLenum, GLenum, GLenum, GLuint, GLint))
    gl.glAreTexturesResident = gl_func( 'glAreTexturesResident', GLboolean, (GLsizei, ct.POINTER(GLuint), ct.POINTER(GLboolean)))
    gl.glFragmentLightModelfSGIX = gl_func( 'glFragmentLightModelfSGIX', void, (GLenum, GLfloat))
    gl.glGetnUniformuiv = gl_func( 'glGetnUniformuiv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glTexCoordP4uiv = gl_func( 'glTexCoordP4uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glDeleteProgramPipelinesEXT = gl_func( 'glDeleteProgramPipelinesEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glPushGroupMarkerEXT = gl_func( 'glPushGroupMarkerEXT', void, (GLsizei, ct.POINTER(GLchar)))
    gl.glCopyTexSubImage3D = gl_func( 'glCopyTexSubImage3D', void, (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glGetMultiTexParameterIuivEXT = gl_func( 'glGetMultiTexParameterIuivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glBeginVideoCaptureNV = gl_func( 'glBeginVideoCaptureNV', void, (GLuint,))
    gl.glWindowPos2f = gl_func( 'glWindowPos2f', void, (GLfloat, GLfloat))
#     gl.glFogxv = gl_func( 'glFogxv', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glCopyTextureSubImage3DEXT = gl_func( 'glCopyTextureSubImage3DEXT', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glGetMultiTexEnvivEXT = gl_func( 'glGetMultiTexEnvivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGetHistogramEXT = gl_func( 'glGetHistogramEXT', void, (GLenum, GLboolean, GLenum, GLenum, ct.POINTER(void)))
    gl.glSecondaryColor3uiv = gl_func( 'glSecondaryColor3uiv', void, (ct.POINTER(GLuint),))
    gl.glColor3ubv = gl_func( 'glColor3ubv', void, (ct.POINTER(GLubyte),))
    gl.glGetSamplerParameterIivOES = gl_func( 'glGetSamplerParameterIivOES', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetProgramBinaryOES = gl_func( 'glGetProgramBinaryOES', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLenum), ct.POINTER(void)))
    gl.glExtGetTexLevelParameterivQCOM = gl_func( 'glExtGetTexLevelParameterivQCOM', void, (GLuint, GLenum, GLint, GLenum, ct.POINTER(GLint)))
    gl.glDeleteBuffers = gl_func( 'glDeleteBuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glVertexAttribI4ivEXT = gl_func( 'glVertexAttribI4ivEXT', void, (GLuint, ct.POINTER(GLint)))
#     gl.glProgramUniform3i64vARB = gl_func( 'glProgramUniform3i64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64)))
    gl.glNamedFramebufferTexture2DEXT = gl_func( 'glNamedFramebufferTexture2DEXT', void, (GLuint, GLenum, GLenum, GLuint, GLint))
    gl.glProgramUniform3fEXT = gl_func( 'glProgramUniform3fEXT', void, (GLuint, GLint, GLfloat, GLfloat, GLfloat))
    gl.glRasterPos4iv = gl_func( 'glRasterPos4iv', void, (ct.POINTER(GLint),))
    gl.glVertexAttribL4dEXT = gl_func( 'glVertexAttribL4dEXT', void, (GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glVertexAttribs4fvNV = gl_func( 'glVertexAttribs4fvNV', void, (GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetFramebufferAttachmentParameteriv = gl_func( 'glGetFramebufferAttachmentParameteriv', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glTexStorage2DEXT = gl_func( 'glTexStorage2DEXT', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glMultiTexCoord1d = gl_func( 'glMultiTexCoord1d', void, (GLenum, GLdouble))
    gl.glProgramLocalParameter4dvARB = gl_func( 'glProgramLocalParameter4dvARB', void, (GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glMultiTexCoord3dvARB = gl_func( 'glMultiTexCoord3dvARB', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glPathCoordsNV = gl_func( 'glPathCoordsNV', void, (GLuint, GLsizei, GLenum, ct.POINTER(void)))
    gl.glGetObjectBufferivATI = gl_func( 'glGetObjectBufferivATI', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glIsEnabled = gl_func( 'glIsEnabled', GLboolean, (GLenum,))
    gl.glTexCoord2bvOES = gl_func( 'glTexCoord2bvOES', void, (ct.POINTER(GLbyte),))
#     gl.glUniform3i64ARB = gl_func( 'glUniform3i64ARB', void, (GLint, GLint64, GLint64, GLint64))
    gl.glImageTransformParameteriHP = gl_func( 'glImageTransformParameteriHP', void, (GLenum, GLenum, GLint))
#     gl.glPixelTransferxOES = gl_func( 'glPixelTransferxOES', void, (GLenum, GLfixed))
    gl.glNamedBufferStorage = gl_func( 'glNamedBufferStorage', void, (GLuint, GLsizeiptr, ct.POINTER(void), GLbitfield))
    gl.glVertexAttrib4usv = gl_func( 'glVertexAttrib4usv', void, (GLuint, ct.POINTER(GLushort)))
    gl.glMultiTexParameterfvEXT = gl_func( 'glMultiTexParameterfvEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glGetTextureParameterIiv = gl_func( 'glGetTextureParameterIiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glAsyncMarkerSGIX = gl_func( 'glAsyncMarkerSGIX', void, (GLuint,))
    gl.glMatrixRotatefEXT = gl_func( 'glMatrixRotatefEXT', void, (GLenum, GLfloat, GLfloat, GLfloat, GLfloat))
#     gl.glTexParameterxvOES = gl_func( 'glTexParameterxvOES', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glClearNamedBufferDataEXT = gl_func( 'glClearNamedBufferDataEXT', void, (GLuint, GLenum, GLenum, GLenum, ct.POINTER(void)))
    gl.glTextureStorageSparseAMD = gl_func( 'glTextureStorageSparseAMD', void, (GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield))
    gl.glMultiDrawElementsIndirectBindlessNV = gl_func( 'glMultiDrawElementsIndirectBindlessNV', void, (GLenum, GLenum, ct.POINTER(void), GLsizei, GLsizei, GLint))
    gl.glDepthRangefOES = gl_func( 'glDepthRangefOES', void, (GLclampf, GLclampf))
    gl.glNormal3d = gl_func( 'glNormal3d', void, (GLdouble, GLdouble, GLdouble))
    gl.glMultiTexCoord4dARB = gl_func( 'glMultiTexCoord4dARB', void, (GLenum, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glStencilClearTagEXT = gl_func( 'glStencilClearTagEXT', void, (GLsizei, GLuint))
#     gl.glProgramUniform3ui64vARB = gl_func( 'glProgramUniform3ui64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glDepthRangef = gl_func( 'glDepthRangef', void, (GLfloat, GLfloat))
    gl.glColor3bv = gl_func( 'glColor3bv', void, (ct.POINTER(GLbyte),))
    gl.glBindFramebufferEXT = gl_func( 'glBindFramebufferEXT', void, (GLenum, GLuint))
    gl.glUniform3ivARB = gl_func( 'glUniform3ivARB', void, (GLint, GLsizei, ct.POINTER(GLint)))
    gl.glProgramUniformMatrix3x2dvEXT = gl_func( 'glProgramUniformMatrix3x2dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
#     gl.glFeedbackBufferxOES = gl_func( 'glFeedbackBufferxOES', void, (GLsizei, GLenum, ct.POINTER(GLfixed)))
    gl.glWeightuivARB = gl_func( 'glWeightuivARB', void, (GLint, ct.POINTER(GLuint)))
    gl.glVertexAttribI2iEXT = gl_func( 'glVertexAttribI2iEXT', void, (GLuint, GLint, GLint))
    gl.glExtGetBufferPointervQCOM = gl_func( 'glExtGetBufferPointervQCOM', void, (GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glVertexAttribI1uivEXT = gl_func( 'glVertexAttribI1uivEXT', void, (GLuint, ct.POINTER(GLuint)))
    gl.glColor4uiv = gl_func( 'glColor4uiv', void, (ct.POINTER(GLuint),))
    gl.glStencilThenCoverFillPathNV = gl_func( 'glStencilThenCoverFillPathNV', void, (GLuint, GLenum, GLuint, GLenum))
    gl.glValidateProgramARB = gl_func( 'glValidateProgramARB', void, (GLhandleARB,))
    gl.glTestFenceNV = gl_func( 'glTestFenceNV', GLboolean, (GLuint,))
    gl.glGetPerfMonitorGroupStringAMD = gl_func( 'glGetPerfMonitorGroupStringAMD', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glMultiTexCoord3svARB = gl_func( 'glMultiTexCoord3svARB', void, (GLenum, ct.POINTER(GLshort)))
    gl.glVertexAttribL1dEXT = gl_func( 'glVertexAttribL1dEXT', void, (GLuint, GLdouble))
    gl.glVertexAttribP1ui = gl_func( 'glVertexAttribP1ui', void, (GLuint, GLenum, GLboolean, GLuint))
    gl.glFogCoordPointerEXT = gl_func( 'glFogCoordPointerEXT', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertexAttribs1hvNV = gl_func( 'glVertexAttribs1hvNV', void, (GLuint, GLsizei, ct.POINTER(GLhalfNV)))
    gl.glProgramNamedParameter4fvNV = gl_func( 'glProgramNamedParameter4fvNV', void, (GLuint, GLsizei, ct.POINTER(GLubyte), ct.POINTER(GLfloat)))
    gl.glPrimitiveBoundingBoxEXT = gl_func( 'glPrimitiveBoundingBoxEXT', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glPushDebugGroupKHR = gl_func( 'glPushDebugGroupKHR', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLchar)))
    gl.glProgramUniform3iv = gl_func( 'glProgramUniform3iv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glEndConditionalRenderNVX = gl_func( 'glEndConditionalRenderNVX', void, ())
    gl.glLabelObjectEXT = gl_func( 'glLabelObjectEXT', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLchar)))
#     gl.glUniform2i64NV = gl_func( 'glUniform2i64NV', void, (GLint, GLint64EXT, GLint64EXT))
    gl.glGetPathCoordsNV = gl_func( 'glGetPathCoordsNV', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glVertexStream4dvATI = gl_func( 'glVertexStream4dvATI', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glObjectPtrLabel = gl_func( 'glObjectPtrLabel', void, (ct.POINTER(void), GLsizei, ct.POINTER(GLchar)))
    gl.glTangent3svEXT = gl_func( 'glTangent3svEXT', void, (ct.POINTER(GLshort),))
    gl.glMultiTexRenderbufferEXT = gl_func( 'glMultiTexRenderbufferEXT', void, (GLenum, GLenum, GLuint))
    gl.glVertexAttrib1d = gl_func( 'glVertexAttrib1d', void, (GLuint, GLdouble))
    gl.glTexCoord2fNormal3fVertex3fSUN = gl_func( 'glTexCoord2fNormal3fVertex3fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glGetMinmaxEXT = gl_func( 'glGetMinmaxEXT', void, (GLenum, GLboolean, GLenum, GLenum, ct.POINTER(void)))
    gl.glProgramUniformMatrix3x4dvEXT = gl_func( 'glProgramUniformMatrix3x4dvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glDebugMessageControlKHR = gl_func( 'glDebugMessageControlKHR', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(GLuint), GLboolean))
    gl.glGetPerfMonitorCounterDataAMD = gl_func( 'glGetPerfMonitorCounterDataAMD', void, (GLuint, GLenum, GLsizei, ct.POINTER(GLuint), ct.POINTER(GLint)))
    gl.glHistogramEXT = gl_func( 'glHistogramEXT', void, (GLenum, GLsizei, GLenum, GLboolean))
    gl.glUseShaderProgramEXT = gl_func( 'glUseShaderProgramEXT', void, (GLenum, GLuint))
    gl.glBindRenderbufferEXT = gl_func( 'glBindRenderbufferEXT', void, (GLenum, GLuint))
    gl.glVertexAttribs2dvNV = gl_func( 'glVertexAttribs2dvNV', void, (GLuint, GLsizei, ct.POINTER(GLdouble)))
#     gl.glLightx = gl_func( 'glLightx', void, (GLenum, GLenum, GLfixed))
#     gl.glGetNamedBufferParameterui64vNV = gl_func( 'glGetNamedBufferParameterui64vNV', void, (GLuint, GLenum, ct.POINTER(GLuint64EXT)))
    gl.glGetTextureImageEXT = gl_func( 'glGetTextureImageEXT', void, (GLuint, GLenum, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetProgramResourceiv = gl_func( 'glGetProgramResourceiv', void, (GLuint, GLenum, GLuint, GLsizei, ct.POINTER(GLenum), GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLint)))
    gl.glEnableVertexAttribArrayARB = gl_func( 'glEnableVertexAttribArrayARB', void, (GLuint,))
    gl.glSecondaryColor3s = gl_func( 'glSecondaryColor3s', void, (GLshort, GLshort, GLshort))
    gl.glNamedBufferSubData = gl_func( 'glNamedBufferSubData', void, (GLuint, GLintptr, GLsizeiptr, ct.POINTER(void)))
    gl.glProgramUniformMatrix4x3dv = gl_func( 'glProgramUniformMatrix4x3dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glGetLightiv = gl_func( 'glGetLightiv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glColorTableSGI = gl_func( 'glColorTableSGI', void, (GLenum, GLenum, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glBinormal3bEXT = gl_func( 'glBinormal3bEXT', void, (GLbyte, GLbyte, GLbyte))
    gl.glVertex2bvOES = gl_func( 'glVertex2bvOES', void, (ct.POINTER(GLbyte),))
    gl.glResetHistogramEXT = gl_func( 'glResetHistogramEXT', void, (GLenum,))
    gl.glGenRenderbuffersEXT = gl_func( 'glGenRenderbuffersEXT', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glUniform1uiEXT = gl_func( 'glUniform1uiEXT', void, (GLint, GLuint))
    gl.glMultiTexCoord2fvARB = gl_func( 'glMultiTexCoord2fvARB', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glMultTransposeMatrixd = gl_func( 'glMultTransposeMatrixd', void, (ct.POINTER(GLdouble),))
    gl.glMultiTexGendvEXT = gl_func( 'glMultiTexGendvEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLdouble)))
    gl.glGetTransformFeedbacki_v = gl_func( 'glGetTransformFeedbacki_v', void, (GLuint, GLenum, GLuint, ct.POINTER(GLint)))
#     gl.glRotatexOES = gl_func( 'glRotatexOES', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glGetSamplerParameterIuivEXT = gl_func( 'glGetSamplerParameterIuivEXT', void, (GLuint, GLenum, ct.POINTER(GLuint)))
    gl.glGetPathTexGenfvNV = gl_func( 'glGetPathTexGenfvNV', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glGetUniformuiv = gl_func( 'glGetUniformuiv', void, (GLuint, GLint, ct.POINTER(GLuint)))
    gl.glProgramUniform2uiv = gl_func( 'glProgramUniform2uiv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glVertexAttribI4usv = gl_func( 'glVertexAttribI4usv', void, (GLuint, ct.POINTER(GLushort)))
    gl.glWindowPos2i = gl_func( 'glWindowPos2i', void, (GLint, GLint))
    gl.glBlendFunciOES = gl_func( 'glBlendFunciOES', void, (GLuint, GLenum, GLenum))
    gl.glTexSubImage2DEXT = gl_func( 'glTexSubImage2DEXT', void, (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
#     gl.glGetQueryObjectui64v = gl_func( 'glGetQueryObjectui64v', void, (GLuint, GLenum, ct.POINTER(GLuint64)))
    gl.glWindowPos4sMESA = gl_func( 'glWindowPos4sMESA', void, (GLshort, GLshort, GLshort, GLshort))
    gl.glColorMaterial = gl_func( 'glColorMaterial', void, (GLenum, GLenum))
    gl.glDeformationMap3dSGIX = gl_func( 'glDeformationMap3dSGIX', void, (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, ct.POINTER(GLdouble)))
    gl.glNamedCopyBufferSubDataEXT = gl_func( 'glNamedCopyBufferSubDataEXT', void, (GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr))
#     gl.glUniform2i64ARB = gl_func( 'glUniform2i64ARB', void, (GLint, GLint64, GLint64))
    gl.glEvalCoord1fv = gl_func( 'glEvalCoord1fv', void, (ct.POINTER(GLfloat),))
    gl.glGetTextureLevelParameterivEXT = gl_func( 'glGetTextureLevelParameterivEXT', void, (GLuint, GLenum, GLint, GLenum, ct.POINTER(GLint)))
    gl.glMultiTexCoord3dARB = gl_func( 'glMultiTexCoord3dARB', void, (GLenum, GLdouble, GLdouble, GLdouble))
    gl.glCompressedTexSubImage1D = gl_func( 'glCompressedTexSubImage1D', void, (GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glObjectLabelKHR = gl_func( 'glObjectLabelKHR', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLchar)))
    gl.glFramebufferSampleLocationsfvNV = gl_func( 'glFramebufferSampleLocationsfvNV', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glVertexAttribDivisorEXT = gl_func( 'glVertexAttribDivisorEXT', void, (GLuint, GLuint))
    gl.glSecondaryColor3fvEXT = gl_func( 'glSecondaryColor3fvEXT', void, (ct.POINTER(GLfloat),))
    gl.glPointParameterfv = gl_func( 'glPointParameterfv', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glMultiTexParameteriEXT = gl_func( 'glMultiTexParameteriEXT', void, (GLenum, GLenum, GLenum, GLint))
    gl.glVertex4sv = gl_func( 'glVertex4sv', void, (ct.POINTER(GLshort),))
    gl.glUnlockArraysEXT = gl_func( 'glUnlockArraysEXT', void, ())
    gl.glGetTextureLevelParameteriv = gl_func( 'glGetTextureLevelParameteriv', void, (GLuint, GLint, GLenum, ct.POINTER(GLint)))
    gl.glUniform1ivARB = gl_func( 'glUniform1ivARB', void, (GLint, GLsizei, ct.POINTER(GLint)))
    gl.glUniform3ui = gl_func( 'glUniform3ui', void, (GLint, GLuint, GLuint, GLuint))
    gl.glPathCommandsNV = gl_func( 'glPathCommandsNV', void, (GLuint, GLsizei, ct.POINTER(GLubyte), GLsizei, GLenum, ct.POINTER(void)))
#     gl.glClipPlanexOES = gl_func( 'glClipPlanexOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glCompressedMultiTexImage2DEXT = gl_func( 'glCompressedMultiTexImage2DEXT', void, (GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
#     gl.glPresentFrameKeyedNV = gl_func( 'glPresentFrameKeyedNV', void, (GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint))
    gl.glProgramUniformMatrix2x3fv = gl_func( 'glProgramUniformMatrix2x3fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glPointParameterfSGIS = gl_func( 'glPointParameterfSGIS', void, (GLenum, GLfloat))
    gl.glPathStencilFuncNV = gl_func( 'glPathStencilFuncNV', void, (GLenum, GLint, GLuint))
    gl.glBindParameterEXT = gl_func( 'glBindParameterEXT', GLuint, (GLenum,))
    gl.glUniformMatrix4x2fv = gl_func( 'glUniformMatrix4x2fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glProgramUniform4d = gl_func( 'glProgramUniform4d', void, (GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glViewportArrayvNV = gl_func( 'glViewportArrayvNV', void, (GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetActiveUniformsiv = gl_func( 'glGetActiveUniformsiv', void, (GLuint, GLsizei, ct.POINTER(GLuint), GLenum, ct.POINTER(GLint)))
    gl.glGetImageTransformParameterivHP = gl_func( 'glGetImageTransformParameterivHP', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glTexCoord2f = gl_func( 'glTexCoord2f', void, (GLfloat, GLfloat))
    gl.glExecuteProgramNV = gl_func( 'glExecuteProgramNV', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glEdgeFlagPointerEXT = gl_func( 'glEdgeFlagPointerEXT', void, (GLsizei, GLsizei, ct.POINTER(GLboolean)))
    gl.glTextureNormalEXT = gl_func( 'glTextureNormalEXT', void, (GLenum,))
    gl.glTexCoord2fv = gl_func( 'glTexCoord2fv', void, (ct.POINTER(GLfloat),))
    gl.glCullFace = gl_func( 'glCullFace', void, (GLenum,))
    gl.glClearBufferiv = gl_func( 'glClearBufferiv', void, (GLenum, GLint, ct.POINTER(GLint)))
    gl.glLoadProgramNV = gl_func( 'glLoadProgramNV', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLubyte)))
    gl.glDebugMessageControl = gl_func( 'glDebugMessageControl', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(GLuint), GLboolean))
    gl.glGetShaderPrecisionFormat = gl_func( 'glGetShaderPrecisionFormat', void, (GLenum, GLenum, ct.POINTER(GLint), ct.POINTER(GLint)))
    gl.glDrawElementsInstanced = gl_func( 'glDrawElementsInstanced', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei))
    gl.glGetProgramResourcefvNV = gl_func( 'glGetProgramResourcefvNV', void, (GLuint, GLenum, GLuint, GLsizei, ct.POINTER(GLenum), GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLfloat)))
    gl.glVertexStream1iATI = gl_func( 'glVertexStream1iATI', void, (GLenum, GLint))
#     gl.glGetnUniformui64vARB = gl_func( 'glGetnUniformui64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glTexSubImage1D = gl_func( 'glTexSubImage1D', void, (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glGetCombinerStageParameterfvNV = gl_func( 'glGetCombinerStageParameterfvNV', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glProgramUniform3f = gl_func( 'glProgramUniform3f', void, (GLuint, GLint, GLfloat, GLfloat, GLfloat))
    gl.glSecondaryColor3us = gl_func( 'glSecondaryColor3us', void, (GLushort, GLushort, GLushort))
    gl.glUniform2f = gl_func( 'glUniform2f', void, (GLint, GLfloat, GLfloat))
#     gl.glGetTransformFeedbacki64_v = gl_func( 'glGetTransformFeedbacki64_v', void, (GLuint, GLenum, GLuint, ct.POINTER(GLint64)))
    gl.glTexBufferRange = gl_func( 'glTexBufferRange', void, (GLenum, GLenum, GLuint, GLintptr, GLsizeiptr))
    gl.glVertexAttribDivisor = gl_func( 'glVertexAttribDivisor', void, (GLuint, GLuint))
    gl.glSecondaryColor3usv = gl_func( 'glSecondaryColor3usv', void, (ct.POINTER(GLushort),))
    gl.glMultiTexCoordP4ui = gl_func( 'glMultiTexCoordP4ui', void, (GLenum, GLenum, GLuint))
    gl.glVertex4f = gl_func( 'glVertex4f', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glVertexBindingDivisor = gl_func( 'glVertexBindingDivisor', void, (GLuint, GLuint))
    gl.glUniform4iv = gl_func( 'glUniform4iv', void, (GLint, GLsizei, ct.POINTER(GLint)))
    gl.glCompressedTexImage2DARB = gl_func( 'glCompressedTexImage2DARB', void, (GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
#     gl.glGetInternalformati64v = gl_func( 'glGetInternalformati64v', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(GLint64)))
    gl.glMultiTexCoord4iARB = gl_func( 'glMultiTexCoord4iARB', void, (GLenum, GLint, GLint, GLint, GLint))
#     gl.glGetBufferParameteri64v = gl_func( 'glGetBufferParameteri64v', void, (GLenum, GLenum, ct.POINTER(GLint64)))
    gl.glWindowPos3sMESA = gl_func( 'glWindowPos3sMESA', void, (GLshort, GLshort, GLshort))
    gl.glWindowPos2dMESA = gl_func( 'glWindowPos2dMESA', void, (GLdouble, GLdouble))
    gl.glTexCoord3fv = gl_func( 'glTexCoord3fv', void, (ct.POINTER(GLfloat),))
    gl.glVertexAttribI3iEXT = gl_func( 'glVertexAttribI3iEXT', void, (GLuint, GLint, GLint, GLint))
    gl.glGetCompressedTextureImage = gl_func( 'glGetCompressedTextureImage', void, (GLuint, GLint, GLsizei, ct.POINTER(void)))
    gl.glFogCoordPointer = gl_func( 'glFogCoordPointer', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glDrawArraysInstancedNV = gl_func( 'glDrawArraysInstancedNV', void, (GLenum, GLint, GLsizei, GLsizei))
    gl.glVertexAttrib4bvARB = gl_func( 'glVertexAttrib4bvARB', void, (GLuint, ct.POINTER(GLbyte)))
    gl.glHint = gl_func( 'glHint', void, (GLenum, GLenum))
    gl.glGetNamedFramebufferAttachmentParameteriv = gl_func( 'glGetNamedFramebufferAttachmentParameteriv', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glColor4d = gl_func( 'glColor4d', void, (GLdouble, GLdouble, GLdouble, GLdouble))
#     gl.glUniformHandleui64vARB = gl_func( 'glUniformHandleui64vARB', void, (GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glMultiDrawArraysIndirectBindlessNV = gl_func( 'glMultiDrawArraysIndirectBindlessNV', void, (GLenum, ct.POINTER(void), GLsizei, GLsizei, GLint))
    gl.glTexImage3D = gl_func( 'glTexImage3D', void, (GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glBeginFragmentShaderATI = gl_func( 'glBeginFragmentShaderATI', void, ())
    gl.glLightf = gl_func( 'glLightf', void, (GLenum, GLenum, GLfloat))
    gl.glUniform2ui = gl_func( 'glUniform2ui', void, (GLint, GLuint, GLuint))
#     gl.glProgramUniformHandleui64ARB = gl_func( 'glProgramUniformHandleui64ARB', void, (GLuint, GLint, GLuint64))
    gl.glNormal3hvNV = gl_func( 'glNormal3hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glVertexAttrib3f = gl_func( 'glVertexAttrib3f', void, (GLuint, GLfloat, GLfloat, GLfloat))
    gl.glWeightPathsNV = gl_func( 'glWeightPathsNV', void, (GLuint, GLsizei, ct.POINTER(GLuint), ct.POINTER(GLfloat)))
    gl.glDeleteProgram = gl_func( 'glDeleteProgram', void, (GLuint,))
    gl.glVertexAttrib4Nusv = gl_func( 'glVertexAttrib4Nusv', void, (GLuint, ct.POINTER(GLushort)))
    gl.glGetFloati_vNV = gl_func( 'glGetFloati_vNV', void, (GLenum, GLuint, ct.POINTER(GLfloat)))
    gl.glDeleteVertexArraysAPPLE = gl_func( 'glDeleteVertexArraysAPPLE', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glGetProgramPipelineiv = gl_func( 'glGetProgramPipelineiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glBlendFuncSeparateiEXT = gl_func( 'glBlendFuncSeparateiEXT', void, (GLuint, GLenum, GLenum, GLenum, GLenum))
    gl.glGetQueryIndexediv = gl_func( 'glGetQueryIndexediv', void, (GLenum, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glVertexAttrib1fvARB = gl_func( 'glVertexAttrib1fvARB', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glMultiTexCoord2fARB = gl_func( 'glMultiTexCoord2fARB', void, (GLenum, GLfloat, GLfloat))
    gl.glSecondaryColor3uiEXT = gl_func( 'glSecondaryColor3uiEXT', void, (GLuint, GLuint, GLuint))
    gl.glUniform4fv = gl_func( 'glUniform4fv', void, (GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glFramebufferTextureMultiviewOVR = gl_func( 'glFramebufferTextureMultiviewOVR', void, (GLenum, GLenum, GLuint, GLint, GLint, GLsizei))
    gl.glRasterPos2dv = gl_func( 'glRasterPos2dv', void, (ct.POINTER(GLdouble),))
    gl.glTextureImage2DEXT = gl_func( 'glTextureImage2DEXT', void, (GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glDepthRange = gl_func( 'glDepthRange', void, (GLdouble, GLdouble))
    gl.glProgramUniform2ivEXT = gl_func( 'glProgramUniform2ivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glUniform3uivEXT = gl_func( 'glUniform3uivEXT', void, (GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glGetTexFilterFuncSGIS = gl_func( 'glGetTexFilterFuncSGIS', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glNamedStringARB = gl_func( 'glNamedStringARB', void, (GLenum, GLint, ct.POINTER(GLchar), GLint, ct.POINTER(GLchar)))
    gl.glWindowPos3ivMESA = gl_func( 'glWindowPos3ivMESA', void, (ct.POINTER(GLint),))
#     gl.glGetTexEnvxv = gl_func( 'glGetTexEnvxv', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glReplacementCodeuiColor3fVertex3fSUN = gl_func( 'glReplacementCodeuiColor3fVertex3fSUN', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glGetNamedProgramivEXT = gl_func( 'glGetNamedProgramivEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGetSeparableFilterEXT = gl_func( 'glGetSeparableFilterEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(void), ct.POINTER(void), ct.POINTER(void)))
    gl.glMatrixLoadIdentityEXT = gl_func( 'glMatrixLoadIdentityEXT', void, (GLenum,))
    gl.glNamedFramebufferTextureLayer = gl_func( 'glNamedFramebufferTextureLayer', void, (GLuint, GLenum, GLuint, GLint, GLint))
    gl.glDispatchCompute = gl_func( 'glDispatchCompute', void, (GLuint, GLuint, GLuint))
    gl.glEndList = gl_func( 'glEndList', void, ())
    gl.glProgramUniformMatrix3x2dv = gl_func( 'glProgramUniformMatrix3x2dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glVertexAttribI1iv = gl_func( 'glVertexAttribI1iv', void, (GLuint, ct.POINTER(GLint)))
    gl.glMultiTexEnvfvEXT = gl_func( 'glMultiTexEnvfvEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glBlendEquationiOES = gl_func( 'glBlendEquationiOES', void, (GLuint, GLenum))
#     gl.glClearDepthxOES = gl_func( 'glClearDepthxOES', void, (GLfixed,))
#     gl.glMakeImageHandleResidentARB = gl_func( 'glMakeImageHandleResidentARB', void, (GLuint64, GLenum))
    gl.glGetBufferParameteriv = gl_func( 'glGetBufferParameteriv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glPathSubCommandsNV = gl_func( 'glPathSubCommandsNV', void, (GLuint, GLsizei, GLsizei, GLsizei, ct.POINTER(GLubyte), GLsizei, GLenum, ct.POINTER(void)))
    gl.glPointSizePointerOES = gl_func( 'glPointSizePointerOES', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glTextureImage2DMultisampleNV = gl_func( 'glTextureImage2DMultisampleNV', void, (GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean))
    gl.glCopyTexSubImage2D = gl_func( 'glCopyTexSubImage2D', void, (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glGetProgramEnvParameterdvARB = gl_func( 'glGetProgramEnvParameterdvARB', void, (GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glGetNextPerfQueryIdINTEL = gl_func( 'glGetNextPerfQueryIdINTEL', void, (GLuint, ct.POINTER(GLuint)))
    gl.glProgramUniformMatrix3fvEXT = gl_func( 'glProgramUniformMatrix3fvEXT', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertex3dv = gl_func( 'glVertex3dv', void, (ct.POINTER(GLdouble),))
    gl.glTexCoordP1ui = gl_func( 'glTexCoordP1ui', void, (GLenum, GLuint))
    gl.glEdgeFlagFormatNV = gl_func( 'glEdgeFlagFormatNV', void, (GLsizei,))
    gl.glUnmapBufferOES = gl_func( 'glUnmapBufferOES', GLboolean, (GLenum,))
    gl.glVertexAttrib1hvNV = gl_func( 'glVertexAttrib1hvNV', void, (GLuint, ct.POINTER(GLhalfNV)))
    gl.glReplacementCodeuiColor4fNormal3fVertex3fSUN = gl_func( 'glReplacementCodeuiColor4fNormal3fVertex3fSUN', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glPointParameterfEXT = gl_func( 'glPointParameterfEXT', void, (GLenum, GLfloat))
    gl.glVertexAttrib1svARB = gl_func( 'glVertexAttrib1svARB', void, (GLuint, ct.POINTER(GLshort)))
    gl.glGetTexParameterIivEXT = gl_func( 'glGetTexParameterIivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glMultiTexCoordP1ui = gl_func( 'glMultiTexCoordP1ui', void, (GLenum, GLenum, GLuint))
    gl.glTextureRangeAPPLE = gl_func( 'glTextureRangeAPPLE', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glFlushMappedNamedBufferRange = gl_func( 'glFlushMappedNamedBufferRange', void, (GLuint, GLintptr, GLsizeiptr))
    gl.glClearDepth = gl_func( 'glClearDepth', void, (GLdouble,))
#     gl.glBufferSubDataARB = gl_func( 'glBufferSubDataARB', void, (GLenum, GLintptrARB, GLsizeiptrARB, ct.POINTER(void)))
    gl.glGetActiveAttrib = gl_func( 'glGetActiveAttrib', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLint), ct.POINTER(GLenum), ct.POINTER(GLchar)))
    gl.glDrawBuffersARB = gl_func( 'glDrawBuffersARB', void, (GLsizei, ct.POINTER(GLenum)))
    gl.glIsOcclusionQueryNV = gl_func( 'glIsOcclusionQueryNV', GLboolean, (GLuint,))
    gl.glTextureViewEXT = gl_func( 'glTextureViewEXT', void, (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint))
    gl.glTexBufferARB = gl_func( 'glTexBufferARB', void, (GLenum, GLenum, GLuint))
    gl.glGetVariantBooleanvEXT = gl_func( 'glGetVariantBooleanvEXT', void, (GLuint, GLenum, ct.POINTER(GLboolean)))
    gl.glMultiTexImage3DEXT = gl_func( 'glMultiTexImage3DEXT', void, (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glEnableVertexArrayAttribEXT = gl_func( 'glEnableVertexArrayAttribEXT', void, (GLuint, GLuint))
    gl.glNormalPointer = gl_func( 'glNormalPointer', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glAccum = gl_func( 'glAccum', void, (GLenum, GLfloat))
#     gl.glProgramUniform3i64vNV = gl_func( 'glProgramUniform3i64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64EXT)))
    gl.glProgramNamedParameter4dvNV = gl_func( 'glProgramNamedParameter4dvNV', void, (GLuint, GLsizei, ct.POINTER(GLubyte), ct.POINTER(GLdouble)))
    gl.glDebugMessageInsertAMD = gl_func( 'glDebugMessageInsertAMD', void, (GLenum, GLenum, GLuint, GLsizei, ct.POINTER(GLchar)))
    gl.glVertexStream1dATI = gl_func( 'glVertexStream1dATI', void, (GLenum, GLdouble))
#     gl.glGetNamedBufferParameteri64v = gl_func( 'glGetNamedBufferParameteri64v', void, (GLuint, GLenum, ct.POINTER(GLint64)))
    gl.glNormal3bv = gl_func( 'glNormal3bv', void, (ct.POINTER(GLbyte),))
    gl.glUniform1fv = gl_func( 'glUniform1fv', void, (GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glMaterialfv = gl_func( 'glMaterialfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glBindRenderbuffer = gl_func( 'glBindRenderbuffer', void, (GLenum, GLuint))
    gl.glIsFenceNV = gl_func( 'glIsFenceNV', GLboolean, (GLuint,))
    gl.glBindTextureEXT = gl_func( 'glBindTextureEXT', void, (GLenum, GLuint))
    gl.glStencilOpValueAMD = gl_func( 'glStencilOpValueAMD', void, (GLenum, GLuint))
    gl.glGetQueryBufferObjectui64v = gl_func( 'glGetQueryBufferObjectui64v', void, (GLuint, GLuint, GLenum, GLintptr))
    gl.glLightModelfv = gl_func( 'glLightModelfv', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glGetIntegeri_vEXT = gl_func( 'glGetIntegeri_vEXT', void, (GLenum, GLuint, ct.POINTER(GLint)))
    gl.glTexEnvi = gl_func( 'glTexEnvi', void, (GLenum, GLenum, GLint))
    gl.glMultiTexCoord1dvARB = gl_func( 'glMultiTexCoord1dvARB', void, (GLenum, ct.POINTER(GLdouble)))
#     gl.glPixelStorex = gl_func( 'glPixelStorex', void, (GLenum, GLfixed))
    gl.glProgramUniform2dEXT = gl_func( 'glProgramUniform2dEXT', void, (GLuint, GLint, GLdouble, GLdouble))
    gl.glDrawTexiOES = gl_func( 'glDrawTexiOES', void, (GLint, GLint, GLint, GLint, GLint))
    gl.glColor3ub = gl_func( 'glColor3ub', void, (GLubyte, GLubyte, GLubyte))
    gl.glColor4s = gl_func( 'glColor4s', void, (GLshort, GLshort, GLshort, GLshort))
    gl.glFogCoordfv = gl_func( 'glFogCoordfv', void, (ct.POINTER(GLfloat),))
    gl.glGenBuffers = gl_func( 'glGenBuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glFogf = gl_func( 'glFogf', void, (GLenum, GLfloat))
    gl.glSharpenTexFuncSGIS = gl_func( 'glSharpenTexFuncSGIS', void, (GLenum, GLsizei, ct.POINTER(GLfloat)))
    gl.glProgramUniform3ivEXT = gl_func( 'glProgramUniform3ivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glGetTextureLevelParameterfv = gl_func( 'glGetTextureLevelParameterfv', void, (GLuint, GLint, GLenum, ct.POINTER(GLfloat)))
    gl.glGetSamplerParameteriv = gl_func( 'glGetSamplerParameteriv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glUniform3fv = gl_func( 'glUniform3fv', void, (GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glGetAttachedObjectsARB = gl_func( 'glGetAttachedObjectsARB', void, (GLhandleARB, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLhandleARB)))
    gl.glUnmapObjectBufferATI = gl_func( 'glUnmapObjectBufferATI', void, (GLuint,))
    gl.glCopyMultiTexSubImage1DEXT = gl_func( 'glCopyMultiTexSubImage1DEXT', void, (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei))
#     gl.glEGLImageTargetTexture2DOES = gl_func( 'glEGLImageTargetTexture2DOES', void, (GLenum, GLeglImageOES))
    gl.glTexBufferOES = gl_func( 'glTexBufferOES', void, (GLenum, GLenum, GLuint))
    gl.glTangent3dvEXT = gl_func( 'glTangent3dvEXT', void, (ct.POINTER(GLdouble),))
    gl.glGetCoverageModulationTableNV = gl_func( 'glGetCoverageModulationTableNV', void, (GLsizei, ct.POINTER(GLfloat)))
    gl.glSamplePatternSGIS = gl_func( 'glSamplePatternSGIS', void, (GLenum,))
    gl.glNormalStream3svATI = gl_func( 'glNormalStream3svATI', void, (GLenum, ct.POINTER(GLshort)))
    gl.glVertexAttrib1fARB = gl_func( 'glVertexAttrib1fARB', void, (GLuint, GLfloat))
    gl.glEndTransformFeedbackNV = gl_func( 'glEndTransformFeedbackNV', void, ())
#     gl.glTexEnvxv = gl_func( 'glTexEnvxv', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glGetObjectLabelKHR = gl_func( 'glGetObjectLabelKHR', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glProgramUniformMatrix3dv = gl_func( 'glProgramUniformMatrix3dv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glFragmentLightivSGIX = gl_func( 'glFragmentLightivSGIX', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glCreateShaderObjectARB = gl_func( 'glCreateShaderObjectARB', GLhandleARB, (GLenum,))
    gl.glEvalCoord1dv = gl_func( 'glEvalCoord1dv', void, (ct.POINTER(GLdouble),))
    gl.glVertexAttribI4ubv = gl_func( 'glVertexAttribI4ubv', void, (GLuint, ct.POINTER(GLubyte)))
    gl.glClearBufferData = gl_func( 'glClearBufferData', void, (GLenum, GLenum, GLenum, GLenum, ct.POINTER(void)))
    gl.glVertexAttrib4hNV = gl_func( 'glVertexAttrib4hNV', void, (GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV))
    gl.glVertexAttribs3hvNV = gl_func( 'glVertexAttribs3hvNV', void, (GLuint, GLsizei, ct.POINTER(GLhalfNV)))
#     gl.glGetTextureSamplerHandleNV = gl_func( 'glGetTextureSamplerHandleNV', GLuint64, (GLuint, GLuint))
    gl.glClientActiveTexture = gl_func( 'glClientActiveTexture', void, (GLenum,))
    gl.glBindMultiTextureEXT = gl_func( 'glBindMultiTextureEXT', void, (GLenum, GLenum, GLuint))
    gl.glBlendEquationSeparate = gl_func( 'glBlendEquationSeparate', void, (GLenum, GLenum))
    gl.glMemoryBarrierByRegion = gl_func( 'glMemoryBarrierByRegion', void, (GLbitfield,))
    gl.glCopyConvolutionFilter1DEXT = gl_func( 'glCopyConvolutionFilter1DEXT', void, (GLenum, GLenum, GLint, GLint, GLsizei))
    gl.glSecondaryColor3fEXT = gl_func( 'glSecondaryColor3fEXT', void, (GLfloat, GLfloat, GLfloat))
    gl.glSetFenceAPPLE = gl_func( 'glSetFenceAPPLE', void, (GLuint,))
    gl.glTexGeniOES = gl_func( 'glTexGeniOES', void, (GLenum, GLenum, GLint))
#     gl.glTranslatex = gl_func( 'glTranslatex', void, (GLfixed, GLfixed, GLfixed))
    gl.glGetPathTexGenivNV = gl_func( 'glGetPathTexGenivNV', void, (GLenum, GLenum, ct.POINTER(GLint)))
#     gl.glLightModelxOES = gl_func( 'glLightModelxOES', void, (GLenum, GLfixed))
#     gl.glGetIntegerui64vNV = gl_func( 'glGetIntegerui64vNV', void, (GLenum, ct.POINTER(GLuint64EXT)))
    gl.glMultiTexCoord1iARB = gl_func( 'glMultiTexCoord1iARB', void, (GLenum, GLint))
    gl.glGetInfoLogARB = gl_func( 'glGetInfoLogARB', void, (GLhandleARB, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLcharARB)))
    gl.glArrayElement = gl_func( 'glArrayElement', void, (GLint,))
    gl.glStencilThenCoverStrokePathNV = gl_func( 'glStencilThenCoverStrokePathNV', void, (GLuint, GLint, GLuint, GLenum))
    gl.glMatrixLoad3x2fNV = gl_func( 'glMatrixLoad3x2fNV', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glScalef = gl_func( 'glScalef', void, (GLfloat, GLfloat, GLfloat))
    gl.glReplacementCodeusvSUN = gl_func( 'glReplacementCodeusvSUN', void, (ct.POINTER(GLushort),))
    gl.glGetProgramEnvParameterIivNV = gl_func( 'glGetProgramEnvParameterIivNV', void, (GLenum, GLuint, ct.POINTER(GLint)))
    gl.glEdgeFlagv = gl_func( 'glEdgeFlagv', void, (ct.POINTER(GLboolean),))
    gl.glGetVertexAttribfv = gl_func( 'glGetVertexAttribfv', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glGetProgramResourceLocationIndexEXT = gl_func( 'glGetProgramResourceLocationIndexEXT', GLint, (GLuint, GLenum, ct.POINTER(GLchar)))
    gl.glCopyColorTableSGI = gl_func( 'glCopyColorTableSGI', void, (GLenum, GLenum, GLint, GLint, GLsizei))
    gl.glTexCoord3iv = gl_func( 'glTexCoord3iv', void, (ct.POINTER(GLint),))
#     gl.glVertexAttribL3ui64vNV = gl_func( 'glVertexAttribL3ui64vNV', void, (GLuint, ct.POINTER(GLuint64EXT)))
#     gl.glTranslatexOES = gl_func( 'glTranslatexOES', void, (GLfixed, GLfixed, GLfixed))
    gl.glBeginQueryARB = gl_func( 'glBeginQueryARB', void, (GLenum, GLuint))
    gl.glNamedFramebufferTexture = gl_func( 'glNamedFramebufferTexture', void, (GLuint, GLenum, GLuint, GLint))
    gl.glGetSubroutineUniformLocation = gl_func( 'glGetSubroutineUniformLocation', GLint, (GLuint, GLenum, ct.POINTER(GLchar)))
    gl.glObjectPtrLabelKHR = gl_func( 'glObjectPtrLabelKHR', void, (ct.POINTER(void), GLsizei, ct.POINTER(GLchar)))
    gl.glLightfv = gl_func( 'glLightfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glGetnColorTable = gl_func( 'glGetnColorTable', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glFramebufferTexture = gl_func( 'glFramebufferTexture', void, (GLenum, GLenum, GLuint, GLint))
    gl.glMultiTexCoord4bOES = gl_func( 'glMultiTexCoord4bOES', void, (GLenum, GLbyte, GLbyte, GLbyte, GLbyte))
    gl.glUniformMatrix3fvARB = gl_func( 'glUniformMatrix3fvARB', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glFogiv = gl_func( 'glFogiv', void, (GLenum, ct.POINTER(GLint)))
    gl.glDrawBuffer = gl_func( 'glDrawBuffer', void, (GLenum,))
#     gl.glLightxv = gl_func( 'glLightxv', void, (GLenum, GLenum, ct.POINTER(GLfixed)))
    gl.glHintPGI = gl_func( 'glHintPGI', void, (GLenum, GLint))
    gl.glGetTexLevelParameterfv = gl_func( 'glGetTexLevelParameterfv', void, (GLenum, GLint, GLenum, ct.POINTER(GLfloat)))
#     gl.glImportSyncEXT = gl_func( 'glImportSyncEXT', GLsync, (GLenum, GLintptr, GLbitfield))
    gl.glNamedProgramLocalParameterI4uiEXT = gl_func( 'glNamedProgramLocalParameterI4uiEXT', void, (GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint))
    gl.glGetProgramPipelineInfoLog = gl_func( 'glGetProgramPipelineInfoLog', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glBlendFuncIndexedAMD = gl_func( 'glBlendFuncIndexedAMD', void, (GLuint, GLenum, GLenum))
    gl.glResetHistogram = gl_func( 'glResetHistogram', void, (GLenum,))
#     gl.glGetClipPlanexOES = gl_func( 'glGetClipPlanexOES', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glTextureView = gl_func( 'glTextureView', void, (GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint))
    gl.glRasterPos2sv = gl_func( 'glRasterPos2sv', void, (ct.POINTER(GLshort),))
    gl.glInvalidateNamedFramebufferData = gl_func( 'glInvalidateNamedFramebufferData', void, (GLuint, GLsizei, ct.POINTER(GLenum)))
#     gl.glUniform4ui64ARB = gl_func( 'glUniform4ui64ARB', void, (GLint, GLuint64, GLuint64, GLuint64, GLuint64))
    gl.glGenProgramPipelines = gl_func( 'glGenProgramPipelines', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glIsPointInFillPathNV = gl_func( 'glIsPointInFillPathNV', GLboolean, (GLuint, GLuint, GLfloat, GLfloat))
    gl.glTexParameterIuivOES = gl_func( 'glTexParameterIuivOES', void, (GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glCallLists = gl_func( 'glCallLists', void, (GLsizei, GLenum, ct.POINTER(void)))
    gl.glTexImage2D = gl_func( 'glTexImage2D', void, (GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glTangent3fvEXT = gl_func( 'glTangent3fvEXT', void, (ct.POINTER(GLfloat),))
    gl.glUseProgramObjectARB = gl_func( 'glUseProgramObjectARB', void, (GLhandleARB,))
    gl.glGetProgramResourceName = gl_func( 'glGetProgramResourceName', void, (GLuint, GLenum, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glIglooInterfaceSGIX = gl_func( 'glIglooInterfaceSGIX', void, (GLenum, ct.POINTER(void)))
    gl.glShaderSourceARB = gl_func( 'glShaderSourceARB', void, (GLhandleARB, GLsizei, ct.POINTER(ct.POINTER(GLcharARB)), ct.POINTER(GLint)))
    gl.glTexStorageSparseAMD = gl_func( 'glTexStorageSparseAMD', void, (GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLbitfield))
#     gl.glEvalCoord1xvOES = gl_func( 'glEvalCoord1xvOES', void, (ct.POINTER(GLfixed),))
    gl.glVertexStream2dvATI = gl_func( 'glVertexStream2dvATI', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glScissorIndexedvNV = gl_func( 'glScissorIndexedvNV', void, (GLuint, ct.POINTER(GLint)))
    gl.glMultiTexSubImage2DEXT = gl_func( 'glMultiTexSubImage2DEXT', void, (GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glTextureSubImage3DEXT = gl_func( 'glTextureSubImage3DEXT', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glProgramUniform1i = gl_func( 'glProgramUniform1i', void, (GLuint, GLint, GLint))
    gl.glMultiTexCoord1svARB = gl_func( 'glMultiTexCoord1svARB', void, (GLenum, ct.POINTER(GLshort)))
    gl.glLoadTransposeMatrixf = gl_func( 'glLoadTransposeMatrixf', void, (ct.POINTER(GLfloat),))
    gl.glSamplerParameterIiv = gl_func( 'glSamplerParameterIiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glUnmapBuffer = gl_func( 'glUnmapBuffer', GLboolean, (GLenum,))
#     gl.glVertexAttribL4i64NV = gl_func( 'glVertexAttribL4i64NV', void, (GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT))
    gl.glCreateBuffers = gl_func( 'glCreateBuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glTextureStorage1D = gl_func( 'glTextureStorage1D', void, (GLuint, GLsizei, GLenum, GLsizei))
    gl.glCoverageMaskNV = gl_func( 'glCoverageMaskNV', void, (GLboolean,))
    gl.glBlendEquationiEXT = gl_func( 'glBlendEquationiEXT', void, (GLuint, GLenum))
    gl.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = gl_func( 'glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN', void, (ct.POINTER(GLuint), ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat), ct.POINTER(GLfloat)))
    gl.glUniformMatrix3x2fvNV = gl_func( 'glUniformMatrix3x2fvNV', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glMultiTexCoord1bvOES = gl_func( 'glMultiTexCoord1bvOES', void, (GLenum, ct.POINTER(GLbyte)))
    gl.glClear = gl_func( 'glClear', void, (GLbitfield,))
    gl.glUniform3uiv = gl_func( 'glUniform3uiv', void, (GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glCreateQueries = gl_func( 'glCreateQueries', void, (GLenum, GLsizei, ct.POINTER(GLuint)))
    gl.glMultiTexCoord1f = gl_func( 'glMultiTexCoord1f', void, (GLenum, GLfloat))
    gl.glTexCoord1bOES = gl_func( 'glTexCoord1bOES', void, (GLbyte,))
    gl.glWeightubvARB = gl_func( 'glWeightubvARB', void, (GLint, ct.POINTER(GLubyte)))
    gl.glColorP3uiv = gl_func( 'glColorP3uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glGenQueries = gl_func( 'glGenQueries', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glTexStorage3DMultisample = gl_func( 'glTexStorage3DMultisample', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glActiveTextureARB = gl_func( 'glActiveTextureARB', void, (GLenum,))
    gl.glTessellationFactorAMD = gl_func( 'glTessellationFactorAMD', void, (GLfloat,))
    gl.glNamedRenderbufferStorageMultisample = gl_func( 'glNamedRenderbufferStorageMultisample', void, (GLuint, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glGetObjectParameterivAPPLE = gl_func( 'glGetObjectParameterivAPPLE', void, (GLenum, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glCullParameterfvEXT = gl_func( 'glCullParameterfvEXT', void, (GLenum, ct.POINTER(GLfloat)))
#     gl.glRasterPos4xvOES = gl_func( 'glRasterPos4xvOES', void, (ct.POINTER(GLfixed),))
    gl.glIsQueryEXT = gl_func( 'glIsQueryEXT', GLboolean, (GLuint,))
    gl.glFramebufferTextureEXT = gl_func( 'glFramebufferTextureEXT', void, (GLenum, GLenum, GLuint, GLint))
    gl.glPopClientAttrib = gl_func( 'glPopClientAttrib', void, ())
    gl.glCheckNamedFramebufferStatus = gl_func( 'glCheckNamedFramebufferStatus', GLenum, (GLuint, GLenum))
    gl.glRotated = gl_func( 'glRotated', void, (GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glGetColorTableEXT = gl_func( 'glGetColorTableEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(void)))
    gl.glMinSampleShading = gl_func( 'glMinSampleShading', void, (GLfloat,))
    gl.glGetBooleani_v = gl_func( 'glGetBooleani_v', void, (GLenum, GLuint, ct.POINTER(GLboolean)))
    gl.glGetCombinerInputParameterivNV = gl_func( 'glGetCombinerInputParameterivNV', void, (GLenum, GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glTexCoord2fColor4fNormal3fVertex3fSUN = gl_func( 'glTexCoord2fColor4fNormal3fVertex3fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glTextureParameteriEXT = gl_func( 'glTextureParameteriEXT', void, (GLuint, GLenum, GLenum, GLint))
    gl.glBindVertexShaderEXT = gl_func( 'glBindVertexShaderEXT', void, (GLuint,))
#     gl.glVDPAUSurfaceAccessNV = gl_func( 'glVDPAUSurfaceAccessNV', void, (GLvdpauSurfaceNV, GLenum))
    gl.glTextureMaterialEXT = gl_func( 'glTextureMaterialEXT', void, (GLenum, GLenum))
    gl.glGetRenderbufferParameterivOES = gl_func( 'glGetRenderbufferParameterivOES', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glEndOcclusionQueryNV = gl_func( 'glEndOcclusionQueryNV', void, ())
    gl.glPixelMapusv = gl_func( 'glPixelMapusv', void, (GLenum, GLsizei, ct.POINTER(GLushort)))
    gl.glCompressedMultiTexSubImage3DEXT = gl_func( 'glCompressedMultiTexSubImage3DEXT', void, (GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glGenVertexArrays = gl_func( 'glGenVertexArrays', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glVertexStream3iATI = gl_func( 'glVertexStream3iATI', void, (GLenum, GLint, GLint, GLint))
    gl.glEnableClientStateiEXT = gl_func( 'glEnableClientStateiEXT', void, (GLenum, GLuint))
    gl.glInvalidateBufferData = gl_func( 'glInvalidateBufferData', void, (GLuint,))
    gl.glDrawElementsInstancedBaseVertex = gl_func( 'glDrawElementsInstancedBaseVertex', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei, GLint))
#     gl.glColor4x = gl_func( 'glColor4x', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glTexCoord4bOES = gl_func( 'glTexCoord4bOES', void, (GLbyte, GLbyte, GLbyte, GLbyte))
#     gl.glNormal3xvOES = gl_func( 'glNormal3xvOES', void, (ct.POINTER(GLfixed),))
    gl.glVariantdvEXT = gl_func( 'glVariantdvEXT', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glUniformMatrix3x2fv = gl_func( 'glUniformMatrix3x2fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glDepthRangeArrayv = gl_func( 'glDepthRangeArrayv', void, (GLuint, GLsizei, ct.POINTER(GLdouble)))
    gl.glVertexAttribs2hvNV = gl_func( 'glVertexAttribs2hvNV', void, (GLuint, GLsizei, ct.POINTER(GLhalfNV)))
    gl.glGetnPixelMapfvARB = gl_func( 'glGetnPixelMapfvARB', void, (GLenum, GLsizei, ct.POINTER(GLfloat)))
    gl.glProgramUniform2iEXT = gl_func( 'glProgramUniform2iEXT', void, (GLuint, GLint, GLint, GLint))
#     gl.glIndexxvOES = gl_func( 'glIndexxvOES', void, (ct.POINTER(GLfixed),))
    gl.glMapTexture2DINTEL = gl_func( 'glMapTexture2DINTEL', ct.POINTER(void), (GLuint, GLint, GLbitfield, ct.POINTER(GLint), ct.POINTER(GLenum)))
    gl.glShadeModel = gl_func( 'glShadeModel', void, (GLenum,))
    gl.glPauseTransformFeedbackNV = gl_func( 'glPauseTransformFeedbackNV', void, ())
    gl.glGetProgramiv = gl_func( 'glGetProgramiv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glProgramUniformMatrix2x4fv = gl_func( 'glProgramUniformMatrix2x4fv', void, (GLuint, GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertexArrayFogCoordOffsetEXT = gl_func( 'glVertexArrayFogCoordOffsetEXT', void, (GLuint, GLuint, GLenum, GLsizei, GLintptr))
    gl.glRectd = gl_func( 'glRectd', void, (GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glGenNamesAMD = gl_func( 'glGenNamesAMD', void, (GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glProgramEnvParameter4dARB = gl_func( 'glProgramEnvParameter4dARB', void, (GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glVertex2sv = gl_func( 'glVertex2sv', void, (ct.POINTER(GLshort),))
    gl.glGetNamedFramebufferParameterivEXT = gl_func( 'glGetNamedFramebufferParameterivEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glPathStencilDepthOffsetNV = gl_func( 'glPathStencilDepthOffsetNV', void, (GLfloat, GLfloat))
#     gl.glProgramUniformHandleui64NV = gl_func( 'glProgramUniformHandleui64NV', void, (GLuint, GLint, GLuint64))
    gl.glTextureStorage1DEXT = gl_func( 'glTextureStorage1DEXT', void, (GLuint, GLenum, GLsizei, GLenum, GLsizei))
    gl.glVertexAttrib4fARB = gl_func( 'glVertexAttrib4fARB', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glScaled = gl_func( 'glScaled', void, (GLdouble, GLdouble, GLdouble))
    gl.glTextureParameterfvEXT = gl_func( 'glTextureParameterfvEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glProgramUniform4iv = gl_func( 'glProgramUniform4iv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glColor4ubVertex2fSUN = gl_func( 'glColor4ubVertex2fSUN', void, (GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat))
    gl.glFogCoordfvEXT = gl_func( 'glFogCoordfvEXT', void, (ct.POINTER(GLfloat),))
    gl.glTransformFeedbackStreamAttribsNV = gl_func( 'glTransformFeedbackStreamAttribsNV', void, (GLsizei, ct.POINTER(GLint), GLsizei, ct.POINTER(GLint), GLenum))
    gl.glGetMultiTexLevelParameterfvEXT = gl_func( 'glGetMultiTexLevelParameterfvEXT', void, (GLenum, GLenum, GLint, GLenum, ct.POINTER(GLfloat)))
    gl.glUniform1ui = gl_func( 'glUniform1ui', void, (GLint, GLuint))
#     gl.glProgramUniform3ui64ARB = gl_func( 'glProgramUniform3ui64ARB', void, (GLuint, GLint, GLuint64, GLuint64, GLuint64))
    gl.glTexCoord2fColor4ubVertex3fSUN = gl_func( 'glTexCoord2fColor4ubVertex3fSUN', void, (GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat))
    gl.glVertexAttribL2dv = gl_func( 'glVertexAttribL2dv', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glOrthof = gl_func( 'glOrthof', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glListBase = gl_func( 'glListBase', void, (GLuint,))
    gl.glGetnUniformiv = gl_func( 'glGetnUniformiv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glGetnUniformfvEXT = gl_func( 'glGetnUniformfvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glTexCoord3d = gl_func( 'glTexCoord3d', void, (GLdouble, GLdouble, GLdouble))
    gl.glInvalidateTexSubImage = gl_func( 'glInvalidateTexSubImage', void, (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei))
    gl.glCopyTextureImage1DEXT = gl_func( 'glCopyTextureImage1DEXT', void, (GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint))
    gl.glTexCoordP1uiv = gl_func( 'glTexCoordP1uiv', void, (GLenum, ct.POINTER(GLuint)))
    gl.glStencilThenCoverFillPathInstancedNV = gl_func( 'glStencilThenCoverFillPathInstancedNV', void, (GLsizei, GLenum, ct.POINTER(void), GLuint, GLenum, GLuint, GLenum, GLenum, ct.POINTER(GLfloat)))
#     gl.glIsSyncAPPLE = gl_func( 'glIsSyncAPPLE', GLboolean, (GLsync,))
    gl.glTexCoord4i = gl_func( 'glTexCoord4i', void, (GLint, GLint, GLint, GLint))
    gl.glIndexs = gl_func( 'glIndexs', void, (GLshort,))
    gl.glMap2d = gl_func( 'glMap2d', void, (GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, ct.POINTER(GLdouble)))
    gl.glPointParameterfARB = gl_func( 'glPointParameterfARB', void, (GLenum, GLfloat))
    gl.glTexGeniv = gl_func( 'glTexGeniv', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glVertexAttribI3uivEXT = gl_func( 'glVertexAttribI3uivEXT', void, (GLuint, ct.POINTER(GLuint)))
    gl.glPixelTransferi = gl_func( 'glPixelTransferi', void, (GLenum, GLint))
    gl.glGetInstrumentsSGIX = gl_func( 'glGetInstrumentsSGIX', GLint, ())
    gl.glReplacementCodeubSUN = gl_func( 'glReplacementCodeubSUN', void, (GLubyte,))
    gl.glGetUniformBufferSizeEXT = gl_func( 'glGetUniformBufferSizeEXT', GLint, (GLuint, GLint))
#     gl.glTexCoord1xvOES = gl_func( 'glTexCoord1xvOES', void, (ct.POINTER(GLfixed),))
    gl.glIndexPointerListIBM = gl_func( 'glIndexPointerListIBM', void, (GLenum, GLint, ct.POINTER(ct.POINTER(void)), GLint))
    gl.glUniformMatrix2fv = gl_func( 'glUniformMatrix2fv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glVertex4bvOES = gl_func( 'glVertex4bvOES', void, (ct.POINTER(GLbyte),))
    gl.glVertex4hvNV = gl_func( 'glVertex4hvNV', void, (ct.POINTER(GLhalfNV),))
#     gl.glGetInteger64vAPPLE = gl_func( 'glGetInteger64vAPPLE', void, (GLenum, ct.POINTER(GLint64)))
    gl.glGetVertexAttribArrayObjectfvATI = gl_func( 'glGetVertexAttribArrayObjectfvATI', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glGetnUniformuivKHR = gl_func( 'glGetnUniformuivKHR', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glUniformMatrix4x2dv = gl_func( 'glUniformMatrix4x2dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glBufferData = gl_func( 'glBufferData', void, (GLenum, GLsizeiptr, ct.POINTER(void), GLenum))
    gl.glCompressedTextureSubImage1DEXT = gl_func( 'glCompressedTextureSubImage1DEXT', void, (GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
    gl.glCopyTextureSubImage3D = gl_func( 'glCopyTextureSubImage3D', void, (GLuint, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glSeparableFilter2DEXT = gl_func( 'glSeparableFilter2DEXT', void, (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void), ct.POINTER(void)))
    gl.glMatrixMultfEXT = gl_func( 'glMatrixMultfEXT', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glClearColorIuiEXT = gl_func( 'glClearColorIuiEXT', void, (GLuint, GLuint, GLuint, GLuint))
    gl.glGetInvariantIntegervEXT = gl_func( 'glGetInvariantIntegervEXT', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glVertexAttrib4dvARB = gl_func( 'glVertexAttrib4dvARB', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glCombinerParameterfNV = gl_func( 'glCombinerParameterfNV', void, (GLenum, GLfloat))
    gl.glGetMapControlPointsNV = gl_func( 'glGetMapControlPointsNV', void, (GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, ct.POINTER(void)))
    gl.glGetActiveUniformBlockiv = gl_func( 'glGetActiveUniformBlockiv', void, (GLuint, GLuint, GLenum, ct.POINTER(GLint)))
    gl.glGetnColorTableARB = gl_func( 'glGetnColorTableARB', void, (GLenum, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glGetnUniformivKHR = gl_func( 'glGetnUniformivKHR', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glVertexAttribL2dEXT = gl_func( 'glVertexAttribL2dEXT', void, (GLuint, GLdouble, GLdouble))
    gl.glGetError = gl_func( 'glGetError', GLenum, ())
    gl.glGetMultiTexGenivEXT = gl_func( 'glGetMultiTexGenivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glDeleteAsyncMarkersSGIX = gl_func( 'glDeleteAsyncMarkersSGIX', void, (GLuint, GLsizei))
    gl.glMultiDrawElementArrayAPPLE = gl_func( 'glMultiDrawElementArrayAPPLE', void, (GLenum, ct.POINTER(GLint), ct.POINTER(GLsizei), GLsizei))
    gl.glRenderMode = gl_func( 'glRenderMode', GLint, (GLenum,))
    gl.glPathParameterfvNV = gl_func( 'glPathParameterfvNV', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glMultiDrawElementsIndirectEXT = gl_func( 'glMultiDrawElementsIndirectEXT', void, (GLenum, GLenum, ct.POINTER(void), GLsizei, GLsizei))
    gl.glDisableClientStateIndexedEXT = gl_func( 'glDisableClientStateIndexedEXT', void, (GLenum, GLuint))
#     gl.glProgramUniform3i64NV = gl_func( 'glProgramUniform3i64NV', void, (GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT))
    gl.glSecondaryColor3i = gl_func( 'glSecondaryColor3i', void, (GLint, GLint, GLint))
    gl.glNamedFramebufferParameteriEXT = gl_func( 'glNamedFramebufferParameteriEXT', void, (GLuint, GLenum, GLint))
    gl.glMultiDrawElementsIndirectAMD = gl_func( 'glMultiDrawElementsIndirectAMD', void, (GLenum, GLenum, ct.POINTER(void), GLsizei, GLsizei))
    gl.glCreateFramebuffers = gl_func( 'glCreateFramebuffers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glTextureImage1DEXT = gl_func( 'glTextureImage1DEXT', void, (GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, ct.POINTER(void)))
    gl.glPixelMapfv = gl_func( 'glPixelMapfv', void, (GLenum, GLsizei, ct.POINTER(GLfloat)))
    gl.glEvalCoord2dv = gl_func( 'glEvalCoord2dv', void, (ct.POINTER(GLdouble),))
    gl.glDisableVertexAttribAPPLE = gl_func( 'glDisableVertexAttribAPPLE', void, (GLuint, GLenum))
    gl.glGetnUniformivEXT = gl_func( 'glGetnUniformivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint)))
    gl.glFramebufferParameteri = gl_func( 'glFramebufferParameteri', void, (GLenum, GLenum, GLint))
    gl.glVertexAttrib4sv = gl_func( 'glVertexAttrib4sv', void, (GLuint, ct.POINTER(GLshort)))
    gl.glShaderOp2EXT = gl_func( 'glShaderOp2EXT', void, (GLenum, GLuint, GLuint, GLuint))
    gl.glCombinerParameterfvNV = gl_func( 'glCombinerParameterfvNV', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glGetUniformLocationARB = gl_func( 'glGetUniformLocationARB', GLint, (GLhandleARB, ct.POINTER(GLcharARB)))
    gl.glPrimitiveBoundingBoxARB = gl_func( 'glPrimitiveBoundingBoxARB', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glTagSampleBufferSGIX = gl_func( 'glTagSampleBufferSGIX', void, ())
    gl.glVertexAttrib2hvNV = gl_func( 'glVertexAttrib2hvNV', void, (GLuint, ct.POINTER(GLhalfNV)))
#     gl.glUniform1i64NV = gl_func( 'glUniform1i64NV', void, (GLint, GLint64EXT))
    gl.glDebugMessageInsertARB = gl_func( 'glDebugMessageInsertARB', void, (GLenum, GLenum, GLuint, GLenum, GLsizei, ct.POINTER(GLchar)))
    gl.glGetRenderbufferParameterivEXT = gl_func( 'glGetRenderbufferParameterivEXT', void, (GLenum, GLenum, ct.POINTER(GLint)))
#     gl.glProgramUniform1ui64ARB = gl_func( 'glProgramUniform1ui64ARB', void, (GLuint, GLint, GLuint64))
#     gl.glGetFixedv = gl_func( 'glGetFixedv', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glGetnUniformfvKHR = gl_func( 'glGetnUniformfvKHR', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glTexImage2DMultisampleCoverageNV = gl_func( 'glTexImage2DMultisampleCoverageNV', void, (GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean))
    gl.glGetProgramInfoLog = gl_func( 'glGetProgramInfoLog', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glColor4dv = gl_func( 'glColor4dv', void, (ct.POINTER(GLdouble),))
    gl.glNormalStream3ivATI = gl_func( 'glNormalStream3ivATI', void, (GLenum, ct.POINTER(GLint)))
#     gl.glRasterPos4xOES = gl_func( 'glRasterPos4xOES', void, (GLfixed, GLfixed, GLfixed, GLfixed))
    gl.glMaterialiv = gl_func( 'glMaterialiv', void, (GLenum, GLenum, ct.POINTER(GLint)))
#     gl.glProgramUniform4ui64ARB = gl_func( 'glProgramUniform4ui64ARB', void, (GLuint, GLint, GLuint64, GLuint64, GLuint64, GLuint64))
    gl.glVertexAttrib2fARB = gl_func( 'glVertexAttrib2fARB', void, (GLuint, GLfloat, GLfloat))
    gl.glIndexFormatNV = gl_func( 'glIndexFormatNV', void, (GLenum, GLsizei))
    gl.glPathGlyphRangeNV = gl_func( 'glPathGlyphRangeNV', void, (GLuint, GLenum, ct.POINTER(void), GLbitfield, GLuint, GLsizei, GLenum, GLuint, GLfloat))
    gl.glVertexArrayAttribLFormat = gl_func( 'glVertexArrayAttribLFormat', void, (GLuint, GLuint, GLint, GLenum, GLuint))
#     gl.glVertex3xOES = gl_func( 'glVertex3xOES', void, (GLfixed, GLfixed))
    gl.glColorP4ui = gl_func( 'glColorP4ui', void, (GLenum, GLuint))
    gl.glProgramUniform4fvEXT = gl_func( 'glProgramUniform4fvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glCopyTexSubImage1D = gl_func( 'glCopyTexSubImage1D', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei))
    gl.glGetProgramInterfaceiv = gl_func( 'glGetProgramInterfaceiv', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
#     gl.glVertexAttribL3i64vNV = gl_func( 'glVertexAttribL3i64vNV', void, (GLuint, ct.POINTER(GLint64EXT)))
    gl.glVertexStream4ivATI = gl_func( 'glVertexStream4ivATI', void, (GLenum, ct.POINTER(GLint)))
    gl.glFramebufferSampleLocationsfvARB = gl_func( 'glFramebufferSampleLocationsfvARB', void, (GLenum, GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glDebugMessageInsert = gl_func( 'glDebugMessageInsert', void, (GLenum, GLenum, GLuint, GLenum, GLsizei, ct.POINTER(GLchar)))
#     gl.glPointParameterxv = gl_func( 'glPointParameterxv', void, (GLenum, ct.POINTER(GLfixed)))
    gl.glCopyImageSubDataEXT = gl_func( 'glCopyImageSubDataEXT', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei))
    gl.glMultiTexCoord2hvNV = gl_func( 'glMultiTexCoord2hvNV', void, (GLenum, ct.POINTER(GLhalfNV)))
    gl.glIndexPointer = gl_func( 'glIndexPointer', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glDepthRangeIndexedfNV = gl_func( 'glDepthRangeIndexedfNV', void, (GLuint, GLfloat, GLfloat))
    gl.glListParameterfvSGIX = gl_func( 'glListParameterfvSGIX', void, (GLuint, GLenum, ct.POINTER(GLfloat)))
    gl.glMatrixScaledEXT = gl_func( 'glMatrixScaledEXT', void, (GLenum, GLdouble, GLdouble, GLdouble))
    gl.glProgramUniform4uivEXT = gl_func( 'glProgramUniform4uivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glGetDoublev = gl_func( 'glGetDoublev', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glVertexAttrib4s = gl_func( 'glVertexAttrib4s', void, (GLuint, GLshort, GLshort, GLshort, GLshort))
#     gl.glUniform3i64vNV = gl_func( 'glUniform3i64vNV', void, (GLint, GLsizei, ct.POINTER(GLint64EXT)))
    gl.glTexCoord1sv = gl_func( 'glTexCoord1sv', void, (ct.POINTER(GLshort),))
    gl.glEvalMesh1 = gl_func( 'glEvalMesh1', void, (GLenum, GLint, GLint))
    gl.glGetPointeri_vEXT = gl_func( 'glGetPointeri_vEXT', void, (GLenum, GLuint, ct.POINTER(ct.POINTER(void))))
#     gl.glUniform3ui64ARB = gl_func( 'glUniform3ui64ARB', void, (GLint, GLuint64, GLuint64, GLuint64))
    gl.glGetMapParameterfvNV = gl_func( 'glGetMapParameterfvNV', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glSamplerParameteri = gl_func( 'glSamplerParameteri', void, (GLuint, GLenum, GLint))
    gl.glStencilStrokePathNV = gl_func( 'glStencilStrokePathNV', void, (GLuint, GLint, GLuint))
    gl.glFreeObjectBufferATI = gl_func( 'glFreeObjectBufferATI', void, (GLuint,))
    gl.glImageTransformParameterfHP = gl_func( 'glImageTransformParameterfHP', void, (GLenum, GLenum, GLfloat))
    gl.glNamedFramebufferRenderbufferEXT = gl_func( 'glNamedFramebufferRenderbufferEXT', void, (GLuint, GLenum, GLenum, GLuint))
    gl.glVertexArrayBindingDivisor = gl_func( 'glVertexArrayBindingDivisor', void, (GLuint, GLuint, GLuint))
    gl.glMap2f = gl_func( 'glMap2f', void, (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, ct.POINTER(GLfloat)))
    gl.glGetTexEnvfv = gl_func( 'glGetTexEnvfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glCompileCommandListNV = gl_func( 'glCompileCommandListNV', void, (GLuint,))
    gl.glGlobalAlphaFactorubSUN = gl_func( 'glGlobalAlphaFactorubSUN', void, (GLubyte,))
    gl.glIsFramebufferOES = gl_func( 'glIsFramebufferOES', GLboolean, (GLuint,))
    gl.glClearDepthdNV = gl_func( 'glClearDepthdNV', void, (GLdouble,))
    gl.glTexCoord4sv = gl_func( 'glTexCoord4sv', void, (ct.POINTER(GLshort),))
    gl.glProgramUniform2uivEXT = gl_func( 'glProgramUniform2uivEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
    gl.glUnmapBufferARB = gl_func( 'glUnmapBufferARB', GLboolean, (GLenum,))
    gl.glMapNamedBuffer = gl_func( 'glMapNamedBuffer', ct.POINTER(void), (GLuint, GLenum))
    gl.glMultMatrixf = gl_func( 'glMultMatrixf', void, (ct.POINTER(GLfloat),))
    gl.glIsTextureEXT = gl_func( 'glIsTextureEXT', GLboolean, (GLuint,))
    gl.glTexGenfvOES = gl_func( 'glTexGenfvOES', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glTextureStorage2D = gl_func( 'glTextureStorage2D', void, (GLuint, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glVertexStream1sATI = gl_func( 'glVertexStream1sATI', void, (GLenum, GLshort))
    gl.glEndFragmentShaderATI = gl_func( 'glEndFragmentShaderATI', void, ())
    gl.glGetTextureParameterIivEXT = gl_func( 'glGetTextureParameterIivEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glProgramUniform4fv = gl_func( 'glProgramUniform4fv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glMultiTexParameterivEXT = gl_func( 'glMultiTexParameterivEXT', void, (GLenum, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glGetTranslatedShaderSourceANGLE = gl_func( 'glGetTranslatedShaderSourceANGLE', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glCreateStatesNV = gl_func( 'glCreateStatesNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glRenderbufferStorageMultisampleNV = gl_func( 'glRenderbufferStorageMultisampleNV', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glIsFramebufferEXT = gl_func( 'glIsFramebufferEXT', GLboolean, (GLuint,))
    gl.glFramebufferTexture3DOES = gl_func( 'glFramebufferTexture3DOES', void, (GLenum, GLenum, GLenum, GLuint, GLint, GLint))
    gl.glResetMinmax = gl_func( 'glResetMinmax', void, (GLenum,))
    gl.glMatrixLoad3x3fNV = gl_func( 'glMatrixLoad3x3fNV', void, (GLenum, ct.POINTER(GLfloat)))
#     gl.glVertexAttribL2i64NV = gl_func( 'glVertexAttribL2i64NV', void, (GLuint, GLint64EXT, GLint64EXT))
    gl.glAlphaFuncQCOM = gl_func( 'glAlphaFuncQCOM', void, (GLenum, GLclampf))
    gl.glVertexAttrib1svNV = gl_func( 'glVertexAttrib1svNV', void, (GLuint, ct.POINTER(GLshort)))
    gl.glGetObjectParameterfvARB = gl_func( 'glGetObjectParameterfvARB', void, (GLhandleARB, GLenum, ct.POINTER(GLfloat)))
    gl.glIndexfv = gl_func( 'glIndexfv', void, (ct.POINTER(GLfloat),))
    gl.glRasterPos3iv = gl_func( 'glRasterPos3iv', void, (ct.POINTER(GLint),))
    gl.glMultiDrawArraysIndirectBindlessCountNV = gl_func( 'glMultiDrawArraysIndirectBindlessCountNV', void, (GLenum, ct.POINTER(void), GLsizei, GLsizei, GLsizei, GLint))
    gl.glTangent3ivEXT = gl_func( 'glTangent3ivEXT', void, (ct.POINTER(GLint),))
    gl.glGlobalAlphaFactorsSUN = gl_func( 'glGlobalAlphaFactorsSUN', void, (GLshort,))
    gl.glConvolutionFilter2D = gl_func( 'glConvolutionFilter2D', void, (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glProgramUniform4ui = gl_func( 'glProgramUniform4ui', void, (GLuint, GLint, GLuint, GLuint, GLuint, GLuint))
    gl.glVertexArrayAttribBinding = gl_func( 'glVertexArrayAttribBinding', void, (GLuint, GLuint, GLuint))
    gl.glUniformMatrix3x4fvNV = gl_func( 'glUniformMatrix3x4fvNV', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
#     gl.glDebugMessageCallback = gl_func( 'glDebugMessageCallback', void, (GLDEBUGPROC, ct.POINTER(void)))
    gl.glBeginConditionalRenderNVX = gl_func( 'glBeginConditionalRenderNVX', void, (GLuint,))
    gl.glTexPageCommitmentARB = gl_func( 'glTexPageCommitmentARB', void, (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean))
    gl.glRasterPos2i = gl_func( 'glRasterPos2i', void, (GLint, GLint))
    gl.glProgramUniform1fvEXT = gl_func( 'glProgramUniform1fvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glFramebufferTextureARB = gl_func( 'glFramebufferTextureARB', void, (GLenum, GLenum, GLuint, GLint))
    gl.glGetVertexAttribivARB = gl_func( 'glGetVertexAttribivARB', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glEnableDriverControlQCOM = gl_func( 'glEnableDriverControlQCOM', void, (GLuint,))
    gl.glCopyTextureSubImage1DEXT = gl_func( 'glCopyTextureSubImage1DEXT', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei))
    gl.glDrawTransformFeedback = gl_func( 'glDrawTransformFeedback', void, (GLenum, GLuint))
#     gl.glVertexAttribL1i64NV = gl_func( 'glVertexAttribL1i64NV', void, (GLuint, GLint64EXT))
    gl.glVertexAttrib4hvNV = gl_func( 'glVertexAttrib4hvNV', void, (GLuint, ct.POINTER(GLhalfNV)))
    gl.glNormalStream3bvATI = gl_func( 'glNormalStream3bvATI', void, (GLenum, ct.POINTER(GLbyte)))
    gl.glTexBumpParameterfvATI = gl_func( 'glTexBumpParameterfvATI', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glTexCoordPointerListIBM = gl_func( 'glTexCoordPointerListIBM', void, (GLint, GLenum, GLint, ct.POINTER(ct.POINTER(void)), GLint))
    gl.glClipPlane = gl_func( 'glClipPlane', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glUniform4ui = gl_func( 'glUniform4ui', void, (GLint, GLuint, GLuint, GLuint, GLuint))
    gl.glBindRenderbufferOES = gl_func( 'glBindRenderbufferOES', void, (GLenum, GLuint))
    gl.glGetPathColorGenivNV = gl_func( 'glGetPathColorGenivNV', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glFinish = gl_func( 'glFinish', void, ())
    gl.glGetProgramLocalParameterIuivNV = gl_func( 'glGetProgramLocalParameterIuivNV', void, (GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glSecondaryColor3ui = gl_func( 'glSecondaryColor3ui', void, (GLuint, GLuint, GLuint))
    gl.glCombinerStageParameterfvNV = gl_func( 'glCombinerStageParameterfvNV', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glLoadMatrixf = gl_func( 'glLoadMatrixf', void, (ct.POINTER(GLfloat),))
    gl.glGetUniformuivEXT = gl_func( 'glGetUniformuivEXT', void, (GLuint, GLint, ct.POINTER(GLuint)))
    gl.glBinormal3fvEXT = gl_func( 'glBinormal3fvEXT', void, (ct.POINTER(GLfloat),))
    gl.glUniformMatrix4x3fvNV = gl_func( 'glUniformMatrix4x3fvNV', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glGetNamedBufferParameteriv = gl_func( 'glGetNamedBufferParameteriv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glClipControl = gl_func( 'glClipControl', void, (GLenum, GLenum))
    gl.glVertexAttrib4Nsv = gl_func( 'glVertexAttrib4Nsv', void, (GLuint, ct.POINTER(GLshort)))
    gl.glGetFogFuncSGIS = gl_func( 'glGetFogFuncSGIS', void, (ct.POINTER(GLfloat),))
#     gl.glVertex2xvOES = gl_func( 'glVertex2xvOES', void, (ct.POINTER(GLfixed),))
    gl.glMultiDrawElementsIndirectCountARB = gl_func( 'glMultiDrawElementsIndirectCountARB', void, (GLenum, GLenum, GLintptr, GLintptr, GLsizei, GLsizei))
    gl.glNamedProgramLocalParameterI4uivEXT = gl_func( 'glNamedProgramLocalParameterI4uivEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glTransformFeedbackVaryings = gl_func( 'glTransformFeedbackVaryings', void, (GLuint, GLsizei, ct.POINTER(ct.POINTER(GLchar)), GLenum))
    gl.glTexGenf = gl_func( 'glTexGenf', void, (GLenum, GLenum, GLfloat))
    gl.glVertexAttribI3ui = gl_func( 'glVertexAttribI3ui', void, (GLuint, GLuint, GLuint, GLuint))
    gl.glBindBufferOffsetNV = gl_func( 'glBindBufferOffsetNV', void, (GLenum, GLuint, GLuint, GLintptr))
    gl.glTexCoord1hvNV = gl_func( 'glTexCoord1hvNV', void, (ct.POINTER(GLhalfNV),))
    gl.glMultiTexParameterfEXT = gl_func( 'glMultiTexParameterfEXT', void, (GLenum, GLenum, GLenum, GLfloat))
    gl.glDeformationMap3fSGIX = gl_func( 'glDeformationMap3fSGIX', void, (GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, ct.POINTER(GLfloat)))
    gl.glImageTransformParameterivHP = gl_func( 'glImageTransformParameterivHP', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glVertexAttribDivisorNV = gl_func( 'glVertexAttribDivisorNV', void, (GLuint, GLuint))
    gl.glVertex3f = gl_func( 'glVertex3f', void, (GLfloat, GLfloat, GLfloat))
    gl.glLinkProgram = gl_func( 'glLinkProgram', void, (GLuint,))
#     gl.glUniform2ui64vNV = gl_func( 'glUniform2ui64vNV', void, (GLint, GLsizei, ct.POINTER(GLuint64EXT)))
    gl.glSampleMaskIndexedNV = gl_func( 'glSampleMaskIndexedNV', void, (GLuint, GLbitfield))
    gl.glReadPixels = gl_func( 'glReadPixels', void, (GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glMultiTexCoord2sv = gl_func( 'glMultiTexCoord2sv', void, (GLenum, ct.POINTER(GLshort)))
    gl.glFrameZoomSGIX = gl_func( 'glFrameZoomSGIX', void, (GLint,))
    gl.glMultiTexCoord3bvOES = gl_func( 'glMultiTexCoord3bvOES', void, (GLenum, ct.POINTER(GLbyte)))
    gl.glMinSampleShadingARB = gl_func( 'glMinSampleShadingARB', void, (GLfloat,))
    gl.glDrawTexfOES = gl_func( 'glDrawTexfOES', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glMultiTexCoordP3uiv = gl_func( 'glMultiTexCoordP3uiv', void, (GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glColor3ui = gl_func( 'glColor3ui', void, (GLuint, GLuint, GLuint))
    gl.glUniform4fvARB = gl_func( 'glUniform4fvARB', void, (GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glBindTransformFeedback = gl_func( 'glBindTransformFeedback', void, (GLenum, GLuint))
    gl.glGetnUniformuivARB = gl_func( 'glGetnUniformuivARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint)))
#     gl.glGetIntegerui64i_vNV = gl_func( 'glGetIntegerui64i_vNV', void, (GLenum, GLuint, ct.POINTER(GLuint64EXT)))
    gl.glMultiTexBufferEXT = gl_func( 'glMultiTexBufferEXT', void, (GLenum, GLenum, GLenum, GLuint))
    gl.glClearTexSubImage = gl_func( 'glClearTexSubImage', void, (GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glExtGetProgramBinarySourceQCOM = gl_func( 'glExtGetProgramBinarySourceQCOM', void, (GLuint, GLenum, ct.POINTER(GLchar), ct.POINTER(GLint)))
    gl.glTexCoord2fColor3fVertex3fSUN = gl_func( 'glTexCoord2fColor3fVertex3fSUN', void, (GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glLineStipple = gl_func( 'glLineStipple', void, (GLint, GLushort))
    gl.glFramebufferTextureOES = gl_func( 'glFramebufferTextureOES', void, (GLenum, GLenum, GLuint, GLint))
    gl.glUniform2d = gl_func( 'glUniform2d', void, (GLint, GLdouble, GLdouble))
    gl.glDrawRangeElements = gl_func( 'glDrawRangeElements', void, (GLenum, GLuint, GLuint, GLsizei, GLenum, ct.POINTER(void)))
    gl.glNamedFramebufferRenderbuffer = gl_func( 'glNamedFramebufferRenderbuffer', void, (GLuint, GLenum, GLenum, GLuint))
    gl.glBindFramebuffer = gl_func( 'glBindFramebuffer', void, (GLenum, GLuint))
#     gl.glClipPlanexIMG = gl_func( 'glClipPlanexIMG', void, (GLenum, ct.POINTER(GLfixed)))
#     gl.glProgramUniformHandleui64vARB = gl_func( 'glProgramUniformHandleui64vARB', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64)))
    gl.glUniform2fv = gl_func( 'glUniform2fv', void, (GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glTextureParameteriv = gl_func( 'glTextureParameteriv', void, (GLuint, GLenum, ct.POINTER(GLint)))
    gl.glNormalPointerEXT = gl_func( 'glNormalPointerEXT', void, (GLenum, GLsizei, GLsizei, ct.POINTER(void)))
    gl.glGetnHistogramARB = gl_func( 'glGetnHistogramARB', void, (GLenum, GLboolean, GLenum, GLenum, GLsizei, ct.POINTER(void)))
    gl.glPointParameteriNV = gl_func( 'glPointParameteriNV', void, (GLenum, GLint))
    gl.glMatrixPopEXT = gl_func( 'glMatrixPopEXT', void, (GLenum,))
    gl.glGlobalAlphaFactoriSUN = gl_func( 'glGlobalAlphaFactoriSUN', void, (GLint,))
    gl.glVertexAttrib1dv = gl_func( 'glVertexAttrib1dv', void, (GLuint, ct.POINTER(GLdouble)))
    gl.glCoverageModulationNV = gl_func( 'glCoverageModulationNV', void, (GLenum,))
    gl.glVertex4dv = gl_func( 'glVertex4dv', void, (ct.POINTER(GLdouble),))
    gl.glProgramUniform4f = gl_func( 'glProgramUniform4f', void, (GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glNormal3iv = gl_func( 'glNormal3iv', void, (ct.POINTER(GLint),))
    gl.glMultiTexCoord3dv = gl_func( 'glMultiTexCoord3dv', void, (GLenum, ct.POINTER(GLdouble)))
    gl.glUniformMatrix3x4dv = gl_func( 'glUniformMatrix3x4dv', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLdouble)))
    gl.glMultiDrawArraysIndirectAMD = gl_func( 'glMultiDrawArraysIndirectAMD', void, (GLenum, ct.POINTER(void), GLsizei, GLsizei))
    gl.glIsQueryARB = gl_func( 'glIsQueryARB', GLboolean, (GLuint,))
#     gl.glPointSizexOES = gl_func( 'glPointSizexOES', void, (GLfixed,))
    gl.glFogi = gl_func( 'glFogi', void, (GLenum, GLint))
    gl.glDrawElementsInstancedEXT = gl_func( 'glDrawElementsInstancedEXT', void, (GLenum, GLsizei, GLenum, ct.POINTER(void), GLsizei))
    gl.glCopyColorSubTable = gl_func( 'glCopyColorSubTable', void, (GLenum, GLsizei, GLint, GLint, GLsizei))
    gl.glDrawRangeElementArrayATI = gl_func( 'glDrawRangeElementArrayATI', void, (GLenum, GLuint, GLuint, GLsizei))
    gl.glGetMinmaxParameterfv = gl_func( 'glGetMinmaxParameterfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glNormal3b = gl_func( 'glNormal3b', void, (GLbyte, GLbyte, GLbyte))
    gl.glObjectUnpurgeableAPPLE = gl_func( 'glObjectUnpurgeableAPPLE', GLenum, (GLenum, GLuint, GLenum))
    gl.glEndTilingQCOM = gl_func( 'glEndTilingQCOM', void, (GLbitfield,))
    gl.glGetUniformBlockIndex = gl_func( 'glGetUniformBlockIndex', GLuint, (GLuint, ct.POINTER(GLchar)))
#     gl.glGetInteger64v = gl_func( 'glGetInteger64v', void, (GLenum, ct.POINTER(GLint64)))
    gl.glGetProgramBinary = gl_func( 'glGetProgramBinary', void, (GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLenum), ct.POINTER(void)))
    gl.glNamedRenderbufferStorageMultisampleCoverageEXT = gl_func( 'glNamedRenderbufferStorageMultisampleCoverageEXT', void, (GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei))
    gl.glShaderOp3EXT = gl_func( 'glShaderOp3EXT', void, (GLenum, GLuint, GLuint, GLuint, GLuint))
    gl.glMultiTexGenfEXT = gl_func( 'glMultiTexGenfEXT', void, (GLenum, GLenum, GLenum, GLfloat))
    gl.glGetPointervKHR = gl_func( 'glGetPointervKHR', void, (GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glEvalPoint2 = gl_func( 'glEvalPoint2', void, (GLint, GLint))
    gl.glTextureBarrierNV = gl_func( 'glTextureBarrierNV', void, ())
    gl.glDrawTransformFeedbackStreamInstanced = gl_func( 'glDrawTransformFeedbackStreamInstanced', void, (GLenum, GLuint, GLuint, GLsizei))
    gl.glSecondaryColor3dvEXT = gl_func( 'glSecondaryColor3dvEXT', void, (ct.POINTER(GLdouble),))
    gl.glMultiTexCoord1sARB = gl_func( 'glMultiTexCoord1sARB', void, (GLenum, GLshort))
    gl.glColor4usv = gl_func( 'glColor4usv', void, (ct.POINTER(GLushort),))
    gl.glProgramEnvParameter4dvARB = gl_func( 'glProgramEnvParameter4dvARB', void, (GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glGetQueryBufferObjecti64v = gl_func( 'glGetQueryBufferObjecti64v', void, (GLuint, GLuint, GLenum, GLintptr))
#     gl.glGetPixelMapxv = gl_func( 'glGetPixelMapxv', void, (GLenum, GLint, ct.POINTER(GLfixed)))
    gl.glVertexAttrib3fvNV = gl_func( 'glVertexAttrib3fvNV', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glMultiTexCoord4svARB = gl_func( 'glMultiTexCoord4svARB', void, (GLenum, ct.POINTER(GLshort)))
    gl.glColorMask = gl_func( 'glColorMask', void, (GLboolean, GLboolean, GLboolean, GLboolean))
#     gl.glProgramUniform4i64NV = gl_func( 'glProgramUniform4i64NV', void, (GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT))
    gl.glCompileShaderIncludeARB = gl_func( 'glCompileShaderIncludeARB', void, (GLuint, GLsizei, ct.POINTER(ct.POINTER(GLchar)), ct.POINTER(GLint)))
#     gl.glMaterialxOES = gl_func( 'glMaterialxOES', void, (GLenum, GLenum, GLfixed))
    gl.glTextureSubImage1DEXT = gl_func( 'glTextureSubImage1DEXT', void, (GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, ct.POINTER(void)))
    gl.glMultiTexCoord3bOES = gl_func( 'glMultiTexCoord3bOES', void, (GLenum, GLbyte, GLbyte, GLbyte))
    gl.glGetBufferPointerv = gl_func( 'glGetBufferPointerv', void, (GLenum, GLenum, ct.POINTER(ct.POINTER(void))))
    gl.glMultiTexCoordP3ui = gl_func( 'glMultiTexCoordP3ui', void, (GLenum, GLenum, GLuint))
    gl.glCopyConvolutionFilter2DEXT = gl_func( 'glCopyConvolutionFilter2DEXT', void, (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei))
    gl.glDepthFunc = gl_func( 'glDepthFunc', void, (GLenum,))
    gl.glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = gl_func( 'glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glNamedFramebufferParameteri = gl_func( 'glNamedFramebufferParameteri', void, (GLuint, GLenum, GLint))
    gl.glRenderbufferStorageMultisampleEXT = gl_func( 'glRenderbufferStorageMultisampleEXT', void, (GLenum, GLsizei, GLenum, GLsizei, GLsizei))
#     gl.glMultiTexCoord4x = gl_func( 'glMultiTexCoord4x', void, (GLenum, GLfixed, GLfixed, GLfixed, GLfixed))
#     gl.glVertex4xOES = gl_func( 'glVertex4xOES', void, (GLfixed, GLfixed, GLfixed))
    gl.glBindBufferBase = gl_func( 'glBindBufferBase', void, (GLenum, GLuint, GLuint))
    gl.glDrawElements = gl_func( 'glDrawElements', void, (GLenum, GLsizei, GLenum, ct.POINTER(void)))
    gl.glGetActiveAttribARB = gl_func( 'glGetActiveAttribARB', void, (GLhandleARB, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLint), ct.POINTER(GLenum), ct.POINTER(GLcharARB)))
    gl.glGenOcclusionQueriesNV = gl_func( 'glGenOcclusionQueriesNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glIsRenderbuffer = gl_func( 'glIsRenderbuffer', GLboolean, (GLuint,))
    gl.glGetTextureParameterivEXT = gl_func( 'glGetTextureParameterivEXT', void, (GLuint, GLenum, GLenum, ct.POINTER(GLint)))
    gl.glLinkProgramARB = gl_func( 'glLinkProgramARB', void, (GLhandleARB,))
    gl.glFragmentMaterialfvSGIX = gl_func( 'glFragmentMaterialfvSGIX', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glNamedRenderbufferStorageEXT = gl_func( 'glNamedRenderbufferStorageEXT', void, (GLuint, GLenum, GLsizei, GLsizei))
#     gl.glVertexAttribL1ui64vARB = gl_func( 'glVertexAttribL1ui64vARB', void, (GLuint, ct.POINTER(GLuint64EXT)))
    gl.glFramebufferTexture3DEXT = gl_func( 'glFramebufferTexture3DEXT', void, (GLenum, GLenum, GLenum, GLuint, GLint, GLint))
    gl.glIsTransformFeedback = gl_func( 'glIsTransformFeedback', GLboolean, (GLuint,))
    gl.glMapParameterivNV = gl_func( 'glMapParameterivNV', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glVertexArraySecondaryColorOffsetEXT = gl_func( 'glVertexArraySecondaryColorOffsetEXT', void, (GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr))
    gl.glGetTexParameterIiv = gl_func( 'glGetTexParameterIiv', void, (GLenum, GLenum, ct.POINTER(GLint)))
#     gl.glIsTextureHandleResidentNV = gl_func( 'glIsTextureHandleResidentNV', GLboolean, (GLuint64,))
    gl.glConvolutionParameterfEXT = gl_func( 'glConvolutionParameterfEXT', void, (GLenum, GLenum, GLfloat))
#     gl.glDebugMessageCallbackKHR = gl_func( 'glDebugMessageCallbackKHR', void, (GLDEBUGPROCKHR, ct.POINTER(void)))
    gl.glCopyTexImage1DEXT = gl_func( 'glCopyTexImage1DEXT', void, (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint))
#     gl.glGetTextureHandleARB = gl_func( 'glGetTextureHandleARB', GLuint64, (GLuint,))
    gl.glIsBuffer = gl_func( 'glIsBuffer', GLboolean, (GLuint,))
    gl.glGenTransformFeedbacksNV = gl_func( 'glGenTransformFeedbacksNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glVertexAttrib4f = gl_func( 'glVertexAttrib4f', void, (GLuint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glGetPerfMonitorCountersAMD = gl_func( 'glGetPerfMonitorCountersAMD', void, (GLuint, ct.POINTER(GLint), ct.POINTER(GLint), GLsizei, ct.POINTER(GLuint)))
    gl.glProgramUniform1ui = gl_func( 'glProgramUniform1ui', void, (GLuint, GLint, GLuint))
    gl.glTransformFeedbackAttribsNV = gl_func( 'glTransformFeedbackAttribsNV', void, (GLsizei, ct.POINTER(GLint), GLenum))
    gl.glShaderBinary = gl_func( 'glShaderBinary', void, (GLsizei, ct.POINTER(GLuint), GLenum, ct.POINTER(void), GLsizei))
    gl.glBinormalPointerEXT = gl_func( 'glBinormalPointerEXT', void, (GLenum, GLsizei, ct.POINTER(void)))
    gl.glVertexAttrib4Nuiv = gl_func( 'glVertexAttrib4Nuiv', void, (GLuint, ct.POINTER(GLuint)))
    gl.glMapGrid1d = gl_func( 'glMapGrid1d', void, (GLint, GLdouble, GLdouble))
    gl.glVertexP3ui = gl_func( 'glVertexP3ui', void, (GLenum, GLuint))
    gl.glVertexAttribI4iEXT = gl_func( 'glVertexAttribI4iEXT', void, (GLuint, GLint, GLint, GLint, GLint))
    gl.glPopDebugGroup = gl_func( 'glPopDebugGroup', void, ())
    gl.glClearColorIiEXT = gl_func( 'glClearColorIiEXT', void, (GLint, GLint, GLint, GLint))
    gl.glIsVertexAttribEnabledAPPLE = gl_func( 'glIsVertexAttribEnabledAPPLE', GLboolean, (GLuint, GLenum))
    gl.glTexCoord3f = gl_func( 'glTexCoord3f', void, (GLfloat, GLfloat, GLfloat))
    gl.glScissorIndexedv = gl_func( 'glScissorIndexedv', void, (GLuint, ct.POINTER(GLint)))
    gl.glEndTransformFeedback = gl_func( 'glEndTransformFeedback', void, ())
    gl.glVertexAttribDivisorANGLE = gl_func( 'glVertexAttribDivisorANGLE', void, (GLuint, GLuint))
    gl.glGenVertexArraysAPPLE = gl_func( 'glGenVertexArraysAPPLE', void, (GLsizei, ct.POINTER(GLuint)))
#     gl.glUniform1i64vARB = gl_func( 'glUniform1i64vARB', void, (GLint, GLsizei, ct.POINTER(GLint64)))
    gl.glBindTextureUnitParameterEXT = gl_func( 'glBindTextureUnitParameterEXT', GLuint, (GLenum, GLenum))
    gl.glProgramEnvParameterI4uivNV = gl_func( 'glProgramEnvParameterI4uivNV', void, (GLenum, GLuint, ct.POINTER(GLuint)))
    gl.glGetNamedProgramLocalParameterdvEXT = gl_func( 'glGetNamedProgramLocalParameterdvEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glTexParameterIuivEXT = gl_func( 'glTexParameterIuivEXT', void, (GLenum, GLenum, ct.POINTER(GLuint)))
#     gl.glGetPerfCounterInfoINTEL = gl_func( 'glGetPerfCounterInfoINTEL', void, (GLuint, GLuint, GLuint, ct.POINTER(GLchar), GLuint, ct.POINTER(GLchar), ct.POINTER(GLuint), ct.POINTER(GLuint), ct.POINTER(GLuint), ct.POINTER(GLuint), ct.POINTER(GLuint64)))
    gl.glConservativeRasterParameterfNV = gl_func( 'glConservativeRasterParameterfNV', void, (GLenum, GLfloat))
    gl.glGetColorTableParameterivSGI = gl_func( 'glGetColorTableParameterivSGI', void, (GLenum, GLenum, ct.POINTER(GLint)))
    gl.glUniform1d = gl_func( 'glUniform1d', void, (GLint, GLdouble))
#     gl.glUniform1i64vNV = gl_func( 'glUniform1i64vNV', void, (GLint, GLsizei, ct.POINTER(GLint64EXT)))
    gl.glMultiDrawArraysIndirectEXT = gl_func( 'glMultiDrawArraysIndirectEXT', void, (GLenum, ct.POINTER(void), GLsizei, GLsizei))
    gl.glReplacementCodeuiSUN = gl_func( 'glReplacementCodeuiSUN', void, (GLuint,))
    gl.glPointParameterfvSGIS = gl_func( 'glPointParameterfvSGIS', void, (GLenum, ct.POINTER(GLfloat)))
    gl.glReplacementCodeubvSUN = gl_func( 'glReplacementCodeubvSUN', void, (ct.POINTER(GLubyte),))
    gl.glGetGraphicsResetStatusKHR = gl_func( 'glGetGraphicsResetStatusKHR', GLenum, ())
    gl.glCoverStrokePathNV = gl_func( 'glCoverStrokePathNV', void, (GLuint, GLenum))
#     gl.glProgramUniform1ui64vNV = gl_func( 'glProgramUniform1ui64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLuint64EXT)))
#     gl.glGetImageHandleNV = gl_func( 'glGetImageHandleNV', GLuint64, (GLuint, GLint, GLboolean, GLint, GLenum))
    gl.glGetnUniformfv = gl_func( 'glGetnUniformfv', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glProgramParameter4dvNV = gl_func( 'glProgramParameter4dvNV', void, (GLenum, GLuint, ct.POINTER(GLdouble)))
    gl.glScissorIndexed = gl_func( 'glScissorIndexed', void, (GLuint, GLint, GLint, GLsizei, GLsizei))
    gl.glProgramUniform2fvEXT = gl_func( 'glProgramUniform2fvEXT', void, (GLuint, GLint, GLsizei, ct.POINTER(GLfloat)))
    gl.glPrimitiveRestartNV = gl_func( 'glPrimitiveRestartNV', void, ())
    gl.glProgramUniform3ui = gl_func( 'glProgramUniform3ui', void, (GLuint, GLint, GLuint, GLuint, GLuint))
    gl.glVertexStream4fATI = gl_func( 'glVertexStream4fATI', void, (GLenum, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glEdgeFlag = gl_func( 'glEdgeFlag', void, (GLboolean,))
    gl.glViewportArrayv = gl_func( 'glViewportArrayv', void, (GLuint, GLsizei, ct.POINTER(GLfloat)))
    gl.glUniformMatrix2fvARB = gl_func( 'glUniformMatrix2fvARB', void, (GLint, GLsizei, GLboolean, ct.POINTER(GLfloat)))
    gl.glDeleteFencesNV = gl_func( 'glDeleteFencesNV', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glProgramLocalParameterI4ivNV = gl_func( 'glProgramLocalParameterI4ivNV', void, (GLenum, GLuint, ct.POINTER(GLint)))
    gl.glGetTexGenfv = gl_func( 'glGetTexGenfv', void, (GLenum, GLenum, ct.POINTER(GLfloat)))
    gl.glColor4f = gl_func( 'glColor4f', void, (GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glPixelTexGenSGIX = gl_func( 'glPixelTexGenSGIX', void, (GLenum,))
    gl.glCompressedTexImage3DARB = gl_func( 'glCompressedTexImage3DARB', void, (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, ct.POINTER(void)))
    gl.glWindowPos4dvMESA = gl_func( 'glWindowPos4dvMESA', void, (ct.POINTER(GLdouble),))
    gl.glNamedProgramLocalParameter4dEXT = gl_func( 'glNamedProgramLocalParameter4dEXT', void, (GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble))
    gl.glVertexAttrib4NivARB = gl_func( 'glVertexAttrib4NivARB', void, (GLuint, ct.POINTER(GLint)))
    gl.glDrawBuffersIndexedEXT = gl_func( 'glDrawBuffersIndexedEXT', void, (GLint, ct.POINTER(GLenum), ct.POINTER(GLint)))
    gl.glUniform2fARB = gl_func( 'glUniform2fARB', void, (GLint, GLfloat, GLfloat))
    gl.glProgramParameteri = gl_func( 'glProgramParameteri', void, (GLuint, GLenum, GLint))
    gl.glProgramParameteriARB = gl_func( 'glProgramParameteriARB', void, (GLuint, GLenum, GLint))
    gl.glCreateShaderProgramvEXT = gl_func( 'glCreateShaderProgramvEXT', GLuint, (GLenum, GLsizei, ct.POINTER(ct.POINTER(GLchar))))
#     gl.glDepthRangex = gl_func( 'glDepthRangex', void, (GLfixed, GLfixed))
    gl.glVertexStream3dATI = gl_func( 'glVertexStream3dATI', void, (GLenum, GLdouble, GLdouble, GLdouble))
    gl.glWindowPos2iv = gl_func( 'glWindowPos2iv', void, (ct.POINTER(GLint),))
    gl.glBlendFunciARB = gl_func( 'glBlendFunciARB', void, (GLuint, GLenum, GLenum))
    gl.glVertex4bOES = gl_func( 'glVertex4bOES', void, (GLbyte, GLbyte, GLbyte, GLbyte))
    gl.glGenerateMultiTexMipmapEXT = gl_func( 'glGenerateMultiTexMipmapEXT', void, (GLenum, GLenum))
    gl.glMultiTexCoord2bvOES = gl_func( 'glMultiTexCoord2bvOES', void, (GLenum, ct.POINTER(GLbyte)))
    gl.glSecondaryColorP3ui = gl_func( 'glSecondaryColorP3ui', void, (GLenum, GLuint))
    gl.glVariantfvEXT = gl_func( 'glVariantfvEXT', void, (GLuint, ct.POINTER(GLfloat)))
    gl.glPNTrianglesfATI = gl_func( 'glPNTrianglesfATI', void, (GLenum, GLfloat))
    gl.glMultiTexCoordP1uiv = gl_func( 'glMultiTexCoordP1uiv', void, (GLenum, GLenum, ct.POINTER(GLuint)))
    gl.glCopyTextureSubImage2DEXT = gl_func( 'glCopyTextureSubImage2DEXT', void, (GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei))
    gl.glWindowPos2fv = gl_func( 'glWindowPos2fv', void, (ct.POINTER(GLfloat),))
    gl.glUniform4f = gl_func( 'glUniform4f', void, (GLint, GLfloat, GLfloat, GLfloat, GLfloat))
    gl.glTangent3dEXT = gl_func( 'glTangent3dEXT', void, (GLdouble, GLdouble, GLdouble))
    gl.glCreateSamplers = gl_func( 'glCreateSamplers', void, (GLsizei, ct.POINTER(GLuint)))
    gl.glFramebufferTextureLayerEXT = gl_func( 'glFramebufferTextureLayerEXT', void, (GLenum, GLenum, GLuint, GLint, GLint))
    gl.glGetActiveUniform = gl_func( 'glGetActiveUniform', void, (GLuint, GLuint, GLsizei, ct.POINTER(GLsizei), ct.POINTER(GLint), ct.POINTER(GLenum), ct.POINTER(GLchar)))
    gl.glEnableVertexAttribAPPLE = gl_func( 'glEnableVertexAttribAPPLE', void, (GLuint, GLenum))
    gl.glSecondaryColor3ubEXT = gl_func( 'glSecondaryColor3ubEXT', void, (GLubyte, GLubyte, GLubyte))
    gl.glDepthMask = gl_func( 'glDepthMask', void, (GLboolean,))
    gl.glNamedProgramLocalParameterI4ivEXT = gl_func( 'glNamedProgramLocalParameterI4ivEXT', void, (GLuint, GLenum, GLuint, ct.POINTER(GLint)))
    gl.glGetPerfMonitorCounterInfoAMD = gl_func( 'glGetPerfMonitorCounterInfoAMD', void, (GLuint, GLuint, GLenum, ct.POINTER(void)))
    gl.glGetDebugMessageLogAMD = gl_func( 'glGetDebugMessageLogAMD', GLuint, (GLuint, GLsizei, ct.POINTER(GLenum), ct.POINTER(GLuint), ct.POINTER(GLuint), ct.POINTER(GLsizei), ct.POINTER(GLchar)))
    gl.glCompressedTextureSubImage2D = gl_func( 'glCompressedTextureSubImage2D', void, (GLuint, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, ct.POINTER(void)))
#     gl.glProgramUniform4i64vNV = gl_func( 'glProgramUniform4i64vNV', void, (GLuint, GLint, GLsizei, ct.POINTER(GLint64EXT)))
    gl.glProgramUniform1f = gl_func( 'glProgramUniform1f', void, (GLuint, GLint, GLfloat))
