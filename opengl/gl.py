'''
OpenGL binding For python
WARNING - This is generated code, do not modify directly.
'''
import sys
import ctypes as ct

from opengl.bindutils import gl_func
from opengl import gltypes as t

def set_func(name, returnType, paramTypes):
    '''gl_func wrapper that inserts function in globals.'''
    globals()[name] = gl_func(name, returnType, paramTypes)

def set_enum(name, value):
    globals()[name] = value

noParms = ()

#### GL VERSION 1.0 ####
def init_gl_version_1_0():
    set_func('glCullFace', t.void, (t.GLenum,))
    set_func('glFrontFace', t.void, (t.GLenum,))
    set_func('glHint', t.void, (t.GLenum, t.GLenum))
    set_func('glLineWidth', t.void, (t.GLfloat,))
    set_func('glPointSize', t.void, (t.GLfloat,))
    set_func('glPolygonMode', t.void, (t.GLenum, t.GLenum))
    set_func('glScissor', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glTexParameterf', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glTexParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTexParameteri', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glTexParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexImage1D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glDrawBuffer', t.void, (t.GLenum,))
    set_func('glClear', t.void, (t.GLbitfield,))
    set_func('glClearColor', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glClearStencil', t.void, (t.GLint,))
    set_func('glClearDepth', t.void, (t.GLdouble,))
    set_func('glStencilMask', t.void, (t.GLuint,))
    set_func('glColorMask', t.void, (t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glDepthMask', t.void, (t.GLboolean,))
    set_func('glDisable', t.void, (t.GLenum,))
    set_func('glEnable', t.void, (t.GLenum,))
    set_func('glFinish', t.void, ())
    set_func('glFlush', t.void, ())
    set_func('glBlendFunc', t.void, (t.GLenum, t.GLenum))
    set_func('glLogicOp', t.void, (t.GLenum,))
    set_func('glStencilFunc', t.void, (t.GLenum, t.GLint, t.GLuint))
    set_func('glStencilOp', t.void, (t.GLenum, t.GLenum, t.GLenum))
    set_func('glDepthFunc', t.void, (t.GLenum,))
    set_func('glPixelStoref', t.void, (t.GLenum, t.GLfloat))
    set_func('glPixelStorei', t.void, (t.GLenum, t.GLint))
    set_func('glReadBuffer', t.void, (t.GLenum,))
    set_func('glReadPixels', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetBooleanv', t.void, (t.GLenum, ct.POINTER(t.GLboolean)))
    set_func('glGetDoublev', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetError', t.GLenum, ())
    set_func('glGetFloatv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetIntegerv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetString', ct.POINTER(t.GLubyte), (t.GLenum,))
    set_func('glGetTexImage', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetTexParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTexParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexLevelParameterfv', t.void, (t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTexLevelParameteriv', t.void, (t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glIsEnabled', t.GLboolean, (t.GLenum,))
    set_func('glDepthRange', t.void, (t.GLdouble, t.GLdouble))
    set_func('glViewport', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glNewList', t.void, (t.GLuint, t.GLenum))
    set_func('glEndList', t.void, ())
    set_func('glCallList', t.void, (t.GLuint,))
    set_func('glCallLists', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glDeleteLists', t.void, (t.GLuint, t.GLsizei))
    set_func('glGenLists', t.GLuint, (t.GLsizei,))
    set_func('glListBase', t.void, (t.GLuint,))
    set_func('glBegin', t.void, (t.GLenum,))
    set_func('glBitmap', t.void, (t.GLsizei, t.GLsizei, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, ct.POINTER(t.GLubyte)))
    set_func('glColor3b', t.void, (t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glColor3bv', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glColor3d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glColor3dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glColor3f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glColor3fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glColor3i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glColor3iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glColor3s', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glColor3sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glColor3ub', t.void, (t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glColor3ubv', t.void, (ct.POINTER(t.GLubyte),))
    set_func('glColor3ui', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glColor3uiv', t.void, (ct.POINTER(t.GLuint),))
    set_func('glColor3us', t.void, (t.GLushort, t.GLushort, t.GLushort))
    set_func('glColor3usv', t.void, (ct.POINTER(t.GLushort),))
    set_func('glColor4b', t.void, (t.GLbyte, t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glColor4bv', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glColor4d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glColor4dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glColor4f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glColor4fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glColor4i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glColor4iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glColor4s', t.void, (t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glColor4sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glColor4ub', t.void, (t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glColor4ubv', t.void, (ct.POINTER(t.GLubyte),))
    set_func('glColor4ui', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glColor4uiv', t.void, (ct.POINTER(t.GLuint),))
    set_func('glColor4us', t.void, (t.GLushort, t.GLushort, t.GLushort, t.GLushort))
    set_func('glColor4usv', t.void, (ct.POINTER(t.GLushort),))
    set_func('glEdgeFlag', t.void, (t.GLboolean,))
    set_func('glEdgeFlagv', t.void, (ct.POINTER(t.GLboolean),))
    set_func('glEnd', t.void, ())
    set_func('glIndexd', t.void, (t.GLdouble,))
    set_func('glIndexdv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glIndexf', t.void, (t.GLfloat,))
    set_func('glIndexfv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glIndexi', t.void, (t.GLint,))
    set_func('glIndexiv', t.void, (ct.POINTER(t.GLint),))
    set_func('glIndexs', t.void, (t.GLshort,))
    set_func('glIndexsv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glNormal3b', t.void, (t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glNormal3bv', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glNormal3d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glNormal3dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glNormal3f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glNormal3fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glNormal3i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glNormal3iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glNormal3s', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glNormal3sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glRasterPos2d', t.void, (t.GLdouble, t.GLdouble))
    set_func('glRasterPos2dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glRasterPos2f', t.void, (t.GLfloat, t.GLfloat))
    set_func('glRasterPos2fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glRasterPos2i', t.void, (t.GLint, t.GLint))
    set_func('glRasterPos2iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glRasterPos2s', t.void, (t.GLshort, t.GLshort))
    set_func('glRasterPos2sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glRasterPos3d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glRasterPos3dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glRasterPos3f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glRasterPos3fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glRasterPos3i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glRasterPos3iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glRasterPos3s', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glRasterPos3sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glRasterPos4d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glRasterPos4dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glRasterPos4f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glRasterPos4fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glRasterPos4i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glRasterPos4iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glRasterPos4s', t.void, (t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glRasterPos4sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glRectd', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glRectdv', t.void, (ct.POINTER(t.GLdouble), ct.POINTER(t.GLdouble)))
    set_func('glRectf', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glRectfv', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glRecti', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glRectiv', t.void, (ct.POINTER(t.GLint), ct.POINTER(t.GLint)))
    set_func('glRects', t.void, (t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glRectsv', t.void, (ct.POINTER(t.GLshort), ct.POINTER(t.GLshort)))
    set_func('glTexCoord1d', t.void, (t.GLdouble,))
    set_func('glTexCoord1dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glTexCoord1f', t.void, (t.GLfloat,))
    set_func('glTexCoord1fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glTexCoord1i', t.void, (t.GLint,))
    set_func('glTexCoord1iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glTexCoord1s', t.void, (t.GLshort,))
    set_func('glTexCoord1sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glTexCoord2d', t.void, (t.GLdouble, t.GLdouble))
    set_func('glTexCoord2dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glTexCoord2f', t.void, (t.GLfloat, t.GLfloat))
    set_func('glTexCoord2fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glTexCoord2i', t.void, (t.GLint, t.GLint))
    set_func('glTexCoord2iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glTexCoord2s', t.void, (t.GLshort, t.GLshort))
    set_func('glTexCoord2sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glTexCoord3d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glTexCoord3dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glTexCoord3f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord3fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glTexCoord3i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glTexCoord3iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glTexCoord3s', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glTexCoord3sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glTexCoord4d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glTexCoord4dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glTexCoord4f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord4fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glTexCoord4i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glTexCoord4iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glTexCoord4s', t.void, (t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glTexCoord4sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glVertex2d', t.void, (t.GLdouble, t.GLdouble))
    set_func('glVertex2dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glVertex2f', t.void, (t.GLfloat, t.GLfloat))
    set_func('glVertex2fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glVertex2i', t.void, (t.GLint, t.GLint))
    set_func('glVertex2iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glVertex2s', t.void, (t.GLshort, t.GLshort))
    set_func('glVertex2sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glVertex3d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertex3dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glVertex3f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertex3fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glVertex3i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glVertex3iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glVertex3s', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertex3sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glVertex4d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertex4dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glVertex4f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertex4fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glVertex4i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glVertex4iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glVertex4s', t.void, (t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertex4sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glClipPlane', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glColorMaterial', t.void, (t.GLenum, t.GLenum))
    set_func('glFogf', t.void, (t.GLenum, t.GLfloat))
    set_func('glFogfv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glFogi', t.void, (t.GLenum, t.GLint))
    set_func('glFogiv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glLightf', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glLightfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glLighti', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glLightiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glLightModelf', t.void, (t.GLenum, t.GLfloat))
    set_func('glLightModelfv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glLightModeli', t.void, (t.GLenum, t.GLint))
    set_func('glLightModeliv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glLineStipple', t.void, (t.GLint, t.GLushort))
    set_func('glMaterialf', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glMaterialfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMateriali', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glMaterialiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glPolygonStipple', t.void, (ct.POINTER(t.GLubyte),))
    set_func('glShadeModel', t.void, (t.GLenum,))
    set_func('glTexEnvf', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glTexEnvfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTexEnvi', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glTexEnviv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexGend', t.void, (t.GLenum, t.GLenum, t.GLdouble))
    set_func('glTexGendv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glTexGenf', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glTexGenfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTexGeni', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glTexGeniv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glFeedbackBuffer', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glSelectBuffer', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glRenderMode', t.GLint, (t.GLenum,))
    set_func('glInitNames', t.void, ())
    set_func('glLoadName', t.void, (t.GLuint,))
    set_func('glPassThrough', t.void, (t.GLfloat,))
    set_func('glPopName', t.void, ())
    set_func('glPushName', t.void, (t.GLuint,))
    set_func('glClearAccum', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glClearIndex', t.void, (t.GLfloat,))
    set_func('glIndexMask', t.void, (t.GLuint,))
    set_func('glAccum', t.void, (t.GLenum, t.GLfloat))
    set_func('glPopAttrib', t.void, ())
    set_func('glPushAttrib', t.void, (t.GLbitfield,))
    set_func('glMap1d', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLint, t.GLint, ct.POINTER(t.GLdouble)))
    set_func('glMap1f', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLint, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glMap2d', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLint, t.GLint, t.GLdouble, t.GLdouble, t.GLint, t.GLint, ct.POINTER(t.GLdouble)))
    set_func('glMap2f', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLint, t.GLint, t.GLfloat, t.GLfloat, t.GLint, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glMapGrid1d', t.void, (t.GLint, t.GLdouble, t.GLdouble))
    set_func('glMapGrid1f', t.void, (t.GLint, t.GLfloat, t.GLfloat))
    set_func('glMapGrid2d', t.void, (t.GLint, t.GLdouble, t.GLdouble, t.GLint, t.GLdouble, t.GLdouble))
    set_func('glMapGrid2f', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLint, t.GLfloat, t.GLfloat))
    set_func('glEvalCoord1d', t.void, (t.GLdouble,))
    set_func('glEvalCoord1dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glEvalCoord1f', t.void, (t.GLfloat,))
    set_func('glEvalCoord1fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glEvalCoord2d', t.void, (t.GLdouble, t.GLdouble))
    set_func('glEvalCoord2dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glEvalCoord2f', t.void, (t.GLfloat, t.GLfloat))
    set_func('glEvalCoord2fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glEvalMesh1', t.void, (t.GLenum, t.GLint, t.GLint))
    set_func('glEvalPoint1', t.void, (t.GLint,))
    set_func('glEvalMesh2', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glEvalPoint2', t.void, (t.GLint, t.GLint))
    set_func('glAlphaFunc', t.void, (t.GLenum, t.GLfloat))
    set_func('glPixelZoom', t.void, (t.GLfloat, t.GLfloat))
    set_func('glPixelTransferf', t.void, (t.GLenum, t.GLfloat))
    set_func('glPixelTransferi', t.void, (t.GLenum, t.GLint))
    set_func('glPixelMapfv', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glPixelMapuiv', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glPixelMapusv', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLushort)))
    set_func('glCopyPixels', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum))
    set_func('glDrawPixels', t.void, (t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetClipPlane', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetLightfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetLightiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMapdv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetMapfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMapiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMaterialfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMaterialiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetPixelMapfv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetPixelMapuiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetPixelMapusv', t.void, (t.GLenum, ct.POINTER(t.GLushort)))
    set_func('glGetPolygonStipple', t.void, (ct.POINTER(t.GLubyte),))
    set_func('glGetTexEnvfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTexEnviv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexGendv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetTexGenfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTexGeniv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glIsList', t.GLboolean, (t.GLuint,))
    set_func('glFrustum', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glLoadIdentity', t.void, ())
    set_func('glLoadMatrixf', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glLoadMatrixd', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glMatrixMode', t.void, (t.GLenum,))
    set_func('glMultMatrixf', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glMultMatrixd', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glOrtho', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glPopMatrix', t.void, ())
    set_func('glPushMatrix', t.void, ())
    set_func('glRotated', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glRotatef', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glScaled', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glScalef', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTranslated', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glTranslatef', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))


#### GL VERSION 1.1 ####
def init_gl_version_1_1():
    set_func('glDrawArrays', t.void, (t.GLenum, t.GLint, t.GLsizei))
    set_func('glDrawElements', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetPointerv', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glPolygonOffset', t.void, (t.GLfloat, t.GLfloat))
    set_func('glCopyTexImage1D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLint))
    set_func('glCopyTexImage2D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint))
    set_func('glCopyTexSubImage1D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei))
    set_func('glCopyTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glTexSubImage1D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glBindTexture', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteTextures', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTextures', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsTexture', t.GLboolean, (t.GLuint,))
    set_func('glArrayElement', t.void, (t.GLint,))
    set_func('glColorPointer', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glDisableClientState', t.void, (t.GLenum,))
    set_func('glEdgeFlagPointer', t.void, (t.GLsizei, ct.POINTER(t.void)))
    set_func('glEnableClientState', t.void, (t.GLenum,))
    set_func('glIndexPointer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glInterleavedArrays', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glNormalPointer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glTexCoordPointer', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glVertexPointer', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glAreTexturesResident', t.GLboolean, (t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLboolean)))
    set_func('glPrioritizeTextures', t.void, (t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat)))
    set_func('glIndexub', t.void, (t.GLubyte,))
    set_func('glIndexubv', t.void, (ct.POINTER(t.GLubyte),))
    set_func('glPopClientAttrib', t.void, ())
    set_func('glPushClientAttrib', t.void, (t.GLbitfield,))
    set_enum("GL_DEPTH_BUFFER_BIT", 0x00000100)
    set_enum("GL_STENCIL_BUFFER_BIT", 0x00000400)
    set_enum("GL_COLOR_BUFFER_BIT", 0x00004000)
    set_enum("GL_FALSE", 0)
    set_enum("GL_TRUE", 1)
    set_enum("GL_POINTS", 0x0000)
    set_enum("GL_LINES", 0x0001)
    set_enum("GL_LINE_LOOP", 0x0002)
    set_enum("GL_LINE_STRIP", 0x0003)
    set_enum("GL_TRIANGLES", 0x0004)
    set_enum("GL_TRIANGLE_STRIP", 0x0005)
    set_enum("GL_TRIANGLE_FAN", 0x0006)
    set_enum("GL_QUADS", 0x0007)
    set_enum("GL_NEVER", 0x0200)
    set_enum("GL_LESS", 0x0201)
    set_enum("GL_EQUAL", 0x0202)
    set_enum("GL_LEQUAL", 0x0203)
    set_enum("GL_GREATER", 0x0204)
    set_enum("GL_NOTEQUAL", 0x0205)
    set_enum("GL_GEQUAL", 0x0206)
    set_enum("GL_ALWAYS", 0x0207)
    set_enum("GL_ZERO", 0)
    set_enum("GL_ONE", 1)
    set_enum("GL_SRC_COLOR", 0x0300)
    set_enum("GL_ONE_MINUS_SRC_COLOR", 0x0301)
    set_enum("GL_SRC_ALPHA", 0x0302)
    set_enum("GL_ONE_MINUS_SRC_ALPHA", 0x0303)
    set_enum("GL_DST_ALPHA", 0x0304)
    set_enum("GL_ONE_MINUS_DST_ALPHA", 0x0305)
    set_enum("GL_DST_COLOR", 0x0306)
    set_enum("GL_ONE_MINUS_DST_COLOR", 0x0307)
    set_enum("GL_SRC_ALPHA_SATURATE", 0x0308)
    set_enum("GL_NONE", 0)
    set_enum("GL_FRONT_LEFT", 0x0400)
    set_enum("GL_FRONT_RIGHT", 0x0401)
    set_enum("GL_BACK_LEFT", 0x0402)
    set_enum("GL_BACK_RIGHT", 0x0403)
    set_enum("GL_FRONT", 0x0404)
    set_enum("GL_BACK", 0x0405)
    set_enum("GL_LEFT", 0x0406)
    set_enum("GL_RIGHT", 0x0407)
    set_enum("GL_FRONT_AND_BACK", 0x0408)
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_INVALID_ENUM", 0x0500)
    set_enum("GL_INVALID_VALUE", 0x0501)
    set_enum("GL_INVALID_OPERATION", 0x0502)
    set_enum("GL_OUT_OF_MEMORY", 0x0505)
    set_enum("GL_CW", 0x0900)
    set_enum("GL_CCW", 0x0901)
    set_enum("GL_POINT_SIZE", 0x0B11)
    set_enum("GL_POINT_SIZE_RANGE", 0x0B12)
    set_enum("GL_POINT_SIZE_GRANULARITY", 0x0B13)
    set_enum("GL_LINE_SMOOTH", 0x0B20)
    set_enum("GL_LINE_WIDTH", 0x0B21)
    set_enum("GL_LINE_WIDTH_RANGE", 0x0B22)
    set_enum("GL_LINE_WIDTH_GRANULARITY", 0x0B23)
    set_enum("GL_POLYGON_MODE", 0x0B40)
    set_enum("GL_POLYGON_SMOOTH", 0x0B41)
    set_enum("GL_CULL_FACE", 0x0B44)
    set_enum("GL_CULL_FACE_MODE", 0x0B45)
    set_enum("GL_FRONT_FACE", 0x0B46)
    set_enum("GL_DEPTH_RANGE", 0x0B70)
    set_enum("GL_DEPTH_TEST", 0x0B71)
    set_enum("GL_DEPTH_WRITEMASK", 0x0B72)
    set_enum("GL_DEPTH_CLEAR_VALUE", 0x0B73)
    set_enum("GL_DEPTH_FUNC", 0x0B74)
    set_enum("GL_STENCIL_TEST", 0x0B90)
    set_enum("GL_STENCIL_CLEAR_VALUE", 0x0B91)
    set_enum("GL_STENCIL_FUNC", 0x0B92)
    set_enum("GL_STENCIL_VALUE_MASK", 0x0B93)
    set_enum("GL_STENCIL_FAIL", 0x0B94)
    set_enum("GL_STENCIL_PASS_DEPTH_FAIL", 0x0B95)
    set_enum("GL_STENCIL_PASS_DEPTH_PASS", 0x0B96)
    set_enum("GL_STENCIL_REF", 0x0B97)
    set_enum("GL_STENCIL_WRITEMASK", 0x0B98)
    set_enum("GL_VIEWPORT", 0x0BA2)
    set_enum("GL_DITHER", 0x0BD0)
    set_enum("GL_BLEND_DST", 0x0BE0)
    set_enum("GL_BLEND_SRC", 0x0BE1)
    set_enum("GL_BLEND", 0x0BE2)
    set_enum("GL_LOGIC_OP_MODE", 0x0BF0)
    set_enum("GL_COLOR_LOGIC_OP", 0x0BF2)
    set_enum("GL_DRAW_BUFFER", 0x0C01)
    set_enum("GL_READ_BUFFER", 0x0C02)
    set_enum("GL_SCISSOR_BOX", 0x0C10)
    set_enum("GL_SCISSOR_TEST", 0x0C11)
    set_enum("GL_COLOR_CLEAR_VALUE", 0x0C22)
    set_enum("GL_COLOR_WRITEMASK", 0x0C23)
    set_enum("GL_DOUBLEBUFFER", 0x0C32)
    set_enum("GL_STEREO", 0x0C33)
    set_enum("GL_LINE_SMOOTH_HINT", 0x0C52)
    set_enum("GL_POLYGON_SMOOTH_HINT", 0x0C53)
    set_enum("GL_UNPACK_SWAP_BYTES", 0x0CF0)
    set_enum("GL_UNPACK_LSB_FIRST", 0x0CF1)
    set_enum("GL_UNPACK_ROW_LENGTH", 0x0CF2)
    set_enum("GL_UNPACK_SKIP_ROWS", 0x0CF3)
    set_enum("GL_UNPACK_SKIP_PIXELS", 0x0CF4)
    set_enum("GL_UNPACK_ALIGNMENT", 0x0CF5)
    set_enum("GL_PACK_SWAP_BYTES", 0x0D00)
    set_enum("GL_PACK_LSB_FIRST", 0x0D01)
    set_enum("GL_PACK_ROW_LENGTH", 0x0D02)
    set_enum("GL_PACK_SKIP_ROWS", 0x0D03)
    set_enum("GL_PACK_SKIP_PIXELS", 0x0D04)
    set_enum("GL_PACK_ALIGNMENT", 0x0D05)
    set_enum("GL_MAX_TEXTURE_SIZE", 0x0D33)
    set_enum("GL_MAX_VIEWPORT_DIMS", 0x0D3A)
    set_enum("GL_SUBPIXEL_BITS", 0x0D50)
    set_enum("GL_TEXTURE_1D", 0x0DE0)
    set_enum("GL_TEXTURE_2D", 0x0DE1)
    set_enum("GL_POLYGON_OFFSET_UNITS", 0x2A00)
    set_enum("GL_POLYGON_OFFSET_POINT", 0x2A01)
    set_enum("GL_POLYGON_OFFSET_LINE", 0x2A02)
    set_enum("GL_POLYGON_OFFSET_FILL", 0x8037)
    set_enum("GL_POLYGON_OFFSET_FACTOR", 0x8038)
    set_enum("GL_TEXTURE_BINDING_1D", 0x8068)
    set_enum("GL_TEXTURE_BINDING_2D", 0x8069)
    set_enum("GL_TEXTURE_WIDTH", 0x1000)
    set_enum("GL_TEXTURE_HEIGHT", 0x1001)
    set_enum("GL_TEXTURE_INTERNAL_FORMAT", 0x1003)
    set_enum("GL_TEXTURE_BORDER_COLOR", 0x1004)
    set_enum("GL_TEXTURE_RED_SIZE", 0x805C)
    set_enum("GL_TEXTURE_GREEN_SIZE", 0x805D)
    set_enum("GL_TEXTURE_BLUE_SIZE", 0x805E)
    set_enum("GL_TEXTURE_ALPHA_SIZE", 0x805F)
    set_enum("GL_DONT_CARE", 0x1100)
    set_enum("GL_FASTEST", 0x1101)
    set_enum("GL_NICEST", 0x1102)
    set_enum("GL_BYTE", 0x1400)
    set_enum("GL_UNSIGNED_BYTE", 0x1401)
    set_enum("GL_SHORT", 0x1402)
    set_enum("GL_UNSIGNED_SHORT", 0x1403)
    set_enum("GL_INT", 0x1404)
    set_enum("GL_UNSIGNED_INT", 0x1405)
    set_enum("GL_FLOAT", 0x1406)
    set_enum("GL_DOUBLE", 0x140A)
    set_enum("GL_STACK_OVERFLOW", 0x0503)
    set_enum("GL_STACK_UNDERFLOW", 0x0504)
    set_enum("GL_CLEAR", 0x1500)
    set_enum("GL_AND", 0x1501)
    set_enum("GL_AND_REVERSE", 0x1502)
    set_enum("GL_COPY", 0x1503)
    set_enum("GL_AND_INVERTED", 0x1504)
    set_enum("GL_NOOP", 0x1505)
    set_enum("GL_XOR", 0x1506)
    set_enum("GL_OR", 0x1507)
    set_enum("GL_NOR", 0x1508)
    set_enum("GL_EQUIV", 0x1509)
    set_enum("GL_INVERT", 0x150A)
    set_enum("GL_OR_REVERSE", 0x150B)
    set_enum("GL_COPY_INVERTED", 0x150C)
    set_enum("GL_OR_INVERTED", 0x150D)
    set_enum("GL_NAND", 0x150E)
    set_enum("GL_SET", 0x150F)
    set_enum("GL_TEXTURE", 0x1702)
    set_enum("GL_COLOR", 0x1800)
    set_enum("GL_DEPTH", 0x1801)
    set_enum("GL_STENCIL", 0x1802)
    set_enum("GL_STENCIL_INDEX", 0x1901)
    set_enum("GL_DEPTH_COMPONENT", 0x1902)
    set_enum("GL_RED", 0x1903)
    set_enum("GL_GREEN", 0x1904)
    set_enum("GL_BLUE", 0x1905)
    set_enum("GL_ALPHA", 0x1906)
    set_enum("GL_RGB", 0x1907)
    set_enum("GL_RGBA", 0x1908)
    set_enum("GL_POINT", 0x1B00)
    set_enum("GL_LINE", 0x1B01)
    set_enum("GL_FILL", 0x1B02)
    set_enum("GL_KEEP", 0x1E00)
    set_enum("GL_REPLACE", 0x1E01)
    set_enum("GL_INCR", 0x1E02)
    set_enum("GL_DECR", 0x1E03)
    set_enum("GL_VENDOR", 0x1F00)
    set_enum("GL_RENDERER", 0x1F01)
    set_enum("GL_VERSION", 0x1F02)
    set_enum("GL_EXTENSIONS", 0x1F03)
    set_enum("GL_NEAREST", 0x2600)
    set_enum("GL_LINEAR", 0x2601)
    set_enum("GL_NEAREST_MIPMAP_NEAREST", 0x2700)
    set_enum("GL_LINEAR_MIPMAP_NEAREST", 0x2701)
    set_enum("GL_NEAREST_MIPMAP_LINEAR", 0x2702)
    set_enum("GL_LINEAR_MIPMAP_LINEAR", 0x2703)
    set_enum("GL_TEXTURE_MAG_FILTER", 0x2800)
    set_enum("GL_TEXTURE_MIN_FILTER", 0x2801)
    set_enum("GL_TEXTURE_WRAP_S", 0x2802)
    set_enum("GL_TEXTURE_WRAP_T", 0x2803)
    set_enum("GL_PROXY_TEXTURE_1D", 0x8063)
    set_enum("GL_PROXY_TEXTURE_2D", 0x8064)
    set_enum("GL_REPEAT", 0x2901)
    set_enum("GL_R3_G3_B2", 0x2A10)
    set_enum("GL_RGB4", 0x804F)
    set_enum("GL_RGB5", 0x8050)
    set_enum("GL_RGB8", 0x8051)
    set_enum("GL_RGB10", 0x8052)
    set_enum("GL_RGB12", 0x8053)
    set_enum("GL_RGB16", 0x8054)
    set_enum("GL_RGBA2", 0x8055)
    set_enum("GL_RGBA4", 0x8056)
    set_enum("GL_RGB5_A1", 0x8057)
    set_enum("GL_RGBA8", 0x8058)
    set_enum("GL_RGB10_A2", 0x8059)
    set_enum("GL_RGBA12", 0x805A)
    set_enum("GL_RGBA16", 0x805B)
    set_enum("GL_CURRENT_BIT", 0x00000001)
    set_enum("GL_POINT_BIT", 0x00000002)
    set_enum("GL_LINE_BIT", 0x00000004)
    set_enum("GL_POLYGON_BIT", 0x00000008)
    set_enum("GL_POLYGON_STIPPLE_BIT", 0x00000010)
    set_enum("GL_PIXEL_MODE_BIT", 0x00000020)
    set_enum("GL_LIGHTING_BIT", 0x00000040)
    set_enum("GL_FOG_BIT", 0x00000080)
    set_enum("GL_ACCUM_BUFFER_BIT", 0x00000200)
    set_enum("GL_VIEWPORT_BIT", 0x00000800)
    set_enum("GL_TRANSFORM_BIT", 0x00001000)
    set_enum("GL_ENABLE_BIT", 0x00002000)
    set_enum("GL_HINT_BIT", 0x00008000)
    set_enum("GL_EVAL_BIT", 0x00010000)
    set_enum("GL_LIST_BIT", 0x00020000)
    set_enum("GL_TEXTURE_BIT", 0x00040000)
    set_enum("GL_SCISSOR_BIT", 0x00080000)
    set_enum("GL_ALL_ATTRIB_BITS", 0xFFFFFFFF)
    set_enum("GL_CLIENT_PIXEL_STORE_BIT", 0x00000001)
    set_enum("GL_CLIENT_VERTEX_ARRAY_BIT", 0x00000002)
    set_enum("GL_CLIENT_ALL_ATTRIB_BITS", 0xFFFFFFFF)
    set_enum("GL_QUAD_STRIP", 0x0008)
    set_enum("GL_POLYGON", 0x0009)
    set_enum("GL_ACCUM", 0x0100)
    set_enum("GL_LOAD", 0x0101)
    set_enum("GL_RETURN", 0x0102)
    set_enum("GL_MULT", 0x0103)
    set_enum("GL_ADD", 0x0104)
    set_enum("GL_AUX0", 0x0409)
    set_enum("GL_AUX1", 0x040A)
    set_enum("GL_AUX2", 0x040B)
    set_enum("GL_AUX3", 0x040C)
    set_enum("GL_2D", 0x0600)
    set_enum("GL_3D", 0x0601)
    set_enum("GL_3D_COLOR", 0x0602)
    set_enum("GL_3D_COLOR_TEXTURE", 0x0603)
    set_enum("GL_4D_COLOR_TEXTURE", 0x0604)
    set_enum("GL_PASS_THROUGH_TOKEN", 0x0700)
    set_enum("GL_POINT_TOKEN", 0x0701)
    set_enum("GL_LINE_TOKEN", 0x0702)
    set_enum("GL_POLYGON_TOKEN", 0x0703)
    set_enum("GL_BITMAP_TOKEN", 0x0704)
    set_enum("GL_DRAW_PIXEL_TOKEN", 0x0705)
    set_enum("GL_COPY_PIXEL_TOKEN", 0x0706)
    set_enum("GL_LINE_RESET_TOKEN", 0x0707)
    set_enum("GL_EXP", 0x0800)
    set_enum("GL_EXP2", 0x0801)
    set_enum("GL_COEFF", 0x0A00)
    set_enum("GL_ORDER", 0x0A01)
    set_enum("GL_DOMAIN", 0x0A02)
    set_enum("GL_PIXEL_MAP_I_TO_I", 0x0C70)
    set_enum("GL_PIXEL_MAP_S_TO_S", 0x0C71)
    set_enum("GL_PIXEL_MAP_I_TO_R", 0x0C72)
    set_enum("GL_PIXEL_MAP_I_TO_G", 0x0C73)
    set_enum("GL_PIXEL_MAP_I_TO_B", 0x0C74)
    set_enum("GL_PIXEL_MAP_I_TO_A", 0x0C75)
    set_enum("GL_PIXEL_MAP_R_TO_R", 0x0C76)
    set_enum("GL_PIXEL_MAP_G_TO_G", 0x0C77)
    set_enum("GL_PIXEL_MAP_B_TO_B", 0x0C78)
    set_enum("GL_PIXEL_MAP_A_TO_A", 0x0C79)
    set_enum("GL_VERTEX_ARRAY_POINTER", 0x808E)
    set_enum("GL_NORMAL_ARRAY_POINTER", 0x808F)
    set_enum("GL_COLOR_ARRAY_POINTER", 0x8090)
    set_enum("GL_INDEX_ARRAY_POINTER", 0x8091)
    set_enum("GL_TEXTURE_COORD_ARRAY_POINTER", 0x8092)
    set_enum("GL_EDGE_FLAG_ARRAY_POINTER", 0x8093)
    set_enum("GL_FEEDBACK_BUFFER_POINTER", 0x0DF0)
    set_enum("GL_SELECTION_BUFFER_POINTER", 0x0DF3)
    set_enum("GL_CURRENT_COLOR", 0x0B00)
    set_enum("GL_CURRENT_INDEX", 0x0B01)
    set_enum("GL_CURRENT_NORMAL", 0x0B02)
    set_enum("GL_CURRENT_TEXTURE_COORDS", 0x0B03)
    set_enum("GL_CURRENT_RASTER_COLOR", 0x0B04)
    set_enum("GL_CURRENT_RASTER_INDEX", 0x0B05)
    set_enum("GL_CURRENT_RASTER_TEXTURE_COORDS", 0x0B06)
    set_enum("GL_CURRENT_RASTER_POSITION", 0x0B07)
    set_enum("GL_CURRENT_RASTER_POSITION_VALID", 0x0B08)
    set_enum("GL_CURRENT_RASTER_DISTANCE", 0x0B09)
    set_enum("GL_POINT_SMOOTH", 0x0B10)
    set_enum("GL_LINE_STIPPLE", 0x0B24)
    set_enum("GL_LINE_STIPPLE_PATTERN", 0x0B25)
    set_enum("GL_LINE_STIPPLE_REPEAT", 0x0B26)
    set_enum("GL_LIST_MODE", 0x0B30)
    set_enum("GL_MAX_LIST_NESTING", 0x0B31)
    set_enum("GL_LIST_BASE", 0x0B32)
    set_enum("GL_LIST_INDEX", 0x0B33)
    set_enum("GL_POLYGON_STIPPLE", 0x0B42)
    set_enum("GL_EDGE_FLAG", 0x0B43)
    set_enum("GL_LIGHTING", 0x0B50)
    set_enum("GL_LIGHT_MODEL_LOCAL_VIEWER", 0x0B51)
    set_enum("GL_LIGHT_MODEL_TWO_SIDE", 0x0B52)
    set_enum("GL_LIGHT_MODEL_AMBIENT", 0x0B53)
    set_enum("GL_SHADE_MODEL", 0x0B54)
    set_enum("GL_COLOR_MATERIAL_FACE", 0x0B55)
    set_enum("GL_COLOR_MATERIAL_PARAMETER", 0x0B56)
    set_enum("GL_COLOR_MATERIAL", 0x0B57)
    set_enum("GL_FOG", 0x0B60)
    set_enum("GL_FOG_INDEX", 0x0B61)
    set_enum("GL_FOG_DENSITY", 0x0B62)
    set_enum("GL_FOG_START", 0x0B63)
    set_enum("GL_FOG_END", 0x0B64)
    set_enum("GL_FOG_MODE", 0x0B65)
    set_enum("GL_FOG_COLOR", 0x0B66)
    set_enum("GL_ACCUM_CLEAR_VALUE", 0x0B80)
    set_enum("GL_MATRIX_MODE", 0x0BA0)
    set_enum("GL_NORMALIZE", 0x0BA1)
    set_enum("GL_MODELVIEW_STACK_DEPTH", 0x0BA3)
    set_enum("GL_PROJECTION_STACK_DEPTH", 0x0BA4)
    set_enum("GL_TEXTURE_STACK_DEPTH", 0x0BA5)
    set_enum("GL_MODELVIEW_MATRIX", 0x0BA6)
    set_enum("GL_PROJECTION_MATRIX", 0x0BA7)
    set_enum("GL_TEXTURE_MATRIX", 0x0BA8)
    set_enum("GL_ATTRIB_STACK_DEPTH", 0x0BB0)
    set_enum("GL_CLIENT_ATTRIB_STACK_DEPTH", 0x0BB1)
    set_enum("GL_ALPHA_TEST", 0x0BC0)
    set_enum("GL_ALPHA_TEST_FUNC", 0x0BC1)
    set_enum("GL_ALPHA_TEST_REF", 0x0BC2)
    set_enum("GL_INDEX_LOGIC_OP", 0x0BF1)
    set_enum("GL_LOGIC_OP", 0x0BF1)
    set_enum("GL_AUX_BUFFERS", 0x0C00)
    set_enum("GL_INDEX_CLEAR_VALUE", 0x0C20)
    set_enum("GL_INDEX_WRITEMASK", 0x0C21)
    set_enum("GL_INDEX_MODE", 0x0C30)
    set_enum("GL_RGBA_MODE", 0x0C31)
    set_enum("GL_RENDER_MODE", 0x0C40)
    set_enum("GL_PERSPECTIVE_CORRECTION_HINT", 0x0C50)
    set_enum("GL_POINT_SMOOTH_HINT", 0x0C51)
    set_enum("GL_FOG_HINT", 0x0C54)
    set_enum("GL_TEXTURE_GEN_S", 0x0C60)
    set_enum("GL_TEXTURE_GEN_T", 0x0C61)
    set_enum("GL_TEXTURE_GEN_R", 0x0C62)
    set_enum("GL_TEXTURE_GEN_Q", 0x0C63)
    set_enum("GL_PIXEL_MAP_I_TO_I_SIZE", 0x0CB0)
    set_enum("GL_PIXEL_MAP_S_TO_S_SIZE", 0x0CB1)
    set_enum("GL_PIXEL_MAP_I_TO_R_SIZE", 0x0CB2)
    set_enum("GL_PIXEL_MAP_I_TO_G_SIZE", 0x0CB3)
    set_enum("GL_PIXEL_MAP_I_TO_B_SIZE", 0x0CB4)
    set_enum("GL_PIXEL_MAP_I_TO_A_SIZE", 0x0CB5)
    set_enum("GL_PIXEL_MAP_R_TO_R_SIZE", 0x0CB6)
    set_enum("GL_PIXEL_MAP_G_TO_G_SIZE", 0x0CB7)
    set_enum("GL_PIXEL_MAP_B_TO_B_SIZE", 0x0CB8)
    set_enum("GL_PIXEL_MAP_A_TO_A_SIZE", 0x0CB9)
    set_enum("GL_MAP_COLOR", 0x0D10)
    set_enum("GL_MAP_STENCIL", 0x0D11)
    set_enum("GL_INDEX_SHIFT", 0x0D12)
    set_enum("GL_INDEX_OFFSET", 0x0D13)
    set_enum("GL_RED_SCALE", 0x0D14)
    set_enum("GL_RED_BIAS", 0x0D15)
    set_enum("GL_ZOOM_X", 0x0D16)
    set_enum("GL_ZOOM_Y", 0x0D17)
    set_enum("GL_GREEN_SCALE", 0x0D18)
    set_enum("GL_GREEN_BIAS", 0x0D19)
    set_enum("GL_BLUE_SCALE", 0x0D1A)
    set_enum("GL_BLUE_BIAS", 0x0D1B)
    set_enum("GL_ALPHA_SCALE", 0x0D1C)
    set_enum("GL_ALPHA_BIAS", 0x0D1D)
    set_enum("GL_DEPTH_SCALE", 0x0D1E)
    set_enum("GL_DEPTH_BIAS", 0x0D1F)
    set_enum("GL_MAX_EVAL_ORDER", 0x0D30)
    set_enum("GL_MAX_LIGHTS", 0x0D31)
    set_enum("GL_MAX_CLIP_PLANES", 0x0D32)
    set_enum("GL_MAX_PIXEL_MAP_TABLE", 0x0D34)
    set_enum("GL_MAX_ATTRIB_STACK_DEPTH", 0x0D35)
    set_enum("GL_MAX_MODELVIEW_STACK_DEPTH", 0x0D36)
    set_enum("GL_MAX_NAME_STACK_DEPTH", 0x0D37)
    set_enum("GL_MAX_PROJECTION_STACK_DEPTH", 0x0D38)
    set_enum("GL_MAX_TEXTURE_STACK_DEPTH", 0x0D39)
    set_enum("GL_MAX_CLIENT_ATTRIB_STACK_DEPTH", 0x0D3B)
    set_enum("GL_INDEX_BITS", 0x0D51)
    set_enum("GL_RED_BITS", 0x0D52)
    set_enum("GL_GREEN_BITS", 0x0D53)
    set_enum("GL_BLUE_BITS", 0x0D54)
    set_enum("GL_ALPHA_BITS", 0x0D55)
    set_enum("GL_DEPTH_BITS", 0x0D56)
    set_enum("GL_STENCIL_BITS", 0x0D57)
    set_enum("GL_ACCUM_RED_BITS", 0x0D58)
    set_enum("GL_ACCUM_GREEN_BITS", 0x0D59)
    set_enum("GL_ACCUM_BLUE_BITS", 0x0D5A)
    set_enum("GL_ACCUM_ALPHA_BITS", 0x0D5B)
    set_enum("GL_NAME_STACK_DEPTH", 0x0D70)
    set_enum("GL_AUTO_NORMAL", 0x0D80)
    set_enum("GL_MAP1_COLOR_4", 0x0D90)
    set_enum("GL_MAP1_INDEX", 0x0D91)
    set_enum("GL_MAP1_NORMAL", 0x0D92)
    set_enum("GL_MAP1_TEXTURE_COORD_1", 0x0D93)
    set_enum("GL_MAP1_TEXTURE_COORD_2", 0x0D94)
    set_enum("GL_MAP1_TEXTURE_COORD_3", 0x0D95)
    set_enum("GL_MAP1_TEXTURE_COORD_4", 0x0D96)
    set_enum("GL_MAP1_VERTEX_3", 0x0D97)
    set_enum("GL_MAP1_VERTEX_4", 0x0D98)
    set_enum("GL_MAP2_COLOR_4", 0x0DB0)
    set_enum("GL_MAP2_INDEX", 0x0DB1)
    set_enum("GL_MAP2_NORMAL", 0x0DB2)
    set_enum("GL_MAP2_TEXTURE_COORD_1", 0x0DB3)
    set_enum("GL_MAP2_TEXTURE_COORD_2", 0x0DB4)
    set_enum("GL_MAP2_TEXTURE_COORD_3", 0x0DB5)
    set_enum("GL_MAP2_TEXTURE_COORD_4", 0x0DB6)
    set_enum("GL_MAP2_VERTEX_3", 0x0DB7)
    set_enum("GL_MAP2_VERTEX_4", 0x0DB8)
    set_enum("GL_MAP1_GRID_DOMAIN", 0x0DD0)
    set_enum("GL_MAP1_GRID_SEGMENTS", 0x0DD1)
    set_enum("GL_MAP2_GRID_DOMAIN", 0x0DD2)
    set_enum("GL_MAP2_GRID_SEGMENTS", 0x0DD3)
    set_enum("GL_FEEDBACK_BUFFER_SIZE", 0x0DF1)
    set_enum("GL_FEEDBACK_BUFFER_TYPE", 0x0DF2)
    set_enum("GL_SELECTION_BUFFER_SIZE", 0x0DF4)
    set_enum("GL_VERTEX_ARRAY", 0x8074)
    set_enum("GL_NORMAL_ARRAY", 0x8075)
    set_enum("GL_COLOR_ARRAY", 0x8076)
    set_enum("GL_INDEX_ARRAY", 0x8077)
    set_enum("GL_TEXTURE_COORD_ARRAY", 0x8078)
    set_enum("GL_EDGE_FLAG_ARRAY", 0x8079)
    set_enum("GL_VERTEX_ARRAY_SIZE", 0x807A)
    set_enum("GL_VERTEX_ARRAY_TYPE", 0x807B)
    set_enum("GL_VERTEX_ARRAY_STRIDE", 0x807C)
    set_enum("GL_NORMAL_ARRAY_TYPE", 0x807E)
    set_enum("GL_NORMAL_ARRAY_STRIDE", 0x807F)
    set_enum("GL_COLOR_ARRAY_SIZE", 0x8081)
    set_enum("GL_COLOR_ARRAY_TYPE", 0x8082)
    set_enum("GL_COLOR_ARRAY_STRIDE", 0x8083)
    set_enum("GL_INDEX_ARRAY_TYPE", 0x8085)
    set_enum("GL_INDEX_ARRAY_STRIDE", 0x8086)
    set_enum("GL_TEXTURE_COORD_ARRAY_SIZE", 0x8088)
    set_enum("GL_TEXTURE_COORD_ARRAY_TYPE", 0x8089)
    set_enum("GL_TEXTURE_COORD_ARRAY_STRIDE", 0x808A)
    set_enum("GL_EDGE_FLAG_ARRAY_STRIDE", 0x808C)
    set_enum("GL_TEXTURE_COMPONENTS", 0x1003)
    set_enum("GL_TEXTURE_BORDER", 0x1005)
    set_enum("GL_TEXTURE_LUMINANCE_SIZE", 0x8060)
    set_enum("GL_TEXTURE_INTENSITY_SIZE", 0x8061)
    set_enum("GL_TEXTURE_PRIORITY", 0x8066)
    set_enum("GL_TEXTURE_RESIDENT", 0x8067)
    set_enum("GL_AMBIENT", 0x1200)
    set_enum("GL_DIFFUSE", 0x1201)
    set_enum("GL_SPECULAR", 0x1202)
    set_enum("GL_POSITION", 0x1203)
    set_enum("GL_SPOT_DIRECTION", 0x1204)
    set_enum("GL_SPOT_EXPONENT", 0x1205)
    set_enum("GL_SPOT_CUTOFF", 0x1206)
    set_enum("GL_CONSTANT_ATTENUATION", 0x1207)
    set_enum("GL_LINEAR_ATTENUATION", 0x1208)
    set_enum("GL_QUADRATIC_ATTENUATION", 0x1209)
    set_enum("GL_COMPILE", 0x1300)
    set_enum("GL_COMPILE_AND_EXECUTE", 0x1301)
    set_enum("GL_2_BYTES", 0x1407)
    set_enum("GL_3_BYTES", 0x1408)
    set_enum("GL_4_BYTES", 0x1409)
    set_enum("GL_EMISSION", 0x1600)
    set_enum("GL_SHININESS", 0x1601)
    set_enum("GL_AMBIENT_AND_DIFFUSE", 0x1602)
    set_enum("GL_COLOR_INDEXES", 0x1603)
    set_enum("GL_MODELVIEW", 0x1700)
    set_enum("GL_PROJECTION", 0x1701)
    set_enum("GL_COLOR_INDEX", 0x1900)
    set_enum("GL_LUMINANCE", 0x1909)
    set_enum("GL_LUMINANCE_ALPHA", 0x190A)
    set_enum("GL_BITMAP", 0x1A00)
    set_enum("GL_RENDER", 0x1C00)
    set_enum("GL_FEEDBACK", 0x1C01)
    set_enum("GL_SELECT", 0x1C02)
    set_enum("GL_FLAT", 0x1D00)
    set_enum("GL_SMOOTH", 0x1D01)
    set_enum("GL_S", 0x2000)
    set_enum("GL_T", 0x2001)
    set_enum("GL_R", 0x2002)
    set_enum("GL_Q", 0x2003)
    set_enum("GL_MODULATE", 0x2100)
    set_enum("GL_DECAL", 0x2101)
    set_enum("GL_TEXTURE_ENV_MODE", 0x2200)
    set_enum("GL_TEXTURE_ENV_COLOR", 0x2201)
    set_enum("GL_TEXTURE_ENV", 0x2300)
    set_enum("GL_EYE_LINEAR", 0x2400)
    set_enum("GL_OBJECT_LINEAR", 0x2401)
    set_enum("GL_SPHERE_MAP", 0x2402)
    set_enum("GL_TEXTURE_GEN_MODE", 0x2500)
    set_enum("GL_OBJECT_PLANE", 0x2501)
    set_enum("GL_EYE_PLANE", 0x2502)
    set_enum("GL_CLAMP", 0x2900)
    set_enum("GL_ALPHA4", 0x803B)
    set_enum("GL_ALPHA8", 0x803C)
    set_enum("GL_ALPHA12", 0x803D)
    set_enum("GL_ALPHA16", 0x803E)
    set_enum("GL_LUMINANCE4", 0x803F)
    set_enum("GL_LUMINANCE8", 0x8040)
    set_enum("GL_LUMINANCE12", 0x8041)
    set_enum("GL_LUMINANCE16", 0x8042)
    set_enum("GL_LUMINANCE4_ALPHA4", 0x8043)
    set_enum("GL_LUMINANCE6_ALPHA2", 0x8044)
    set_enum("GL_LUMINANCE8_ALPHA8", 0x8045)
    set_enum("GL_LUMINANCE12_ALPHA4", 0x8046)
    set_enum("GL_LUMINANCE12_ALPHA12", 0x8047)
    set_enum("GL_LUMINANCE16_ALPHA16", 0x8048)
    set_enum("GL_INTENSITY", 0x8049)
    set_enum("GL_INTENSITY4", 0x804A)
    set_enum("GL_INTENSITY8", 0x804B)
    set_enum("GL_INTENSITY12", 0x804C)
    set_enum("GL_INTENSITY16", 0x804D)
    set_enum("GL_V2F", 0x2A20)
    set_enum("GL_V3F", 0x2A21)
    set_enum("GL_C4UB_V2F", 0x2A22)
    set_enum("GL_C4UB_V3F", 0x2A23)
    set_enum("GL_C3F_V3F", 0x2A24)
    set_enum("GL_N3F_V3F", 0x2A25)
    set_enum("GL_C4F_N3F_V3F", 0x2A26)
    set_enum("GL_T2F_V3F", 0x2A27)
    set_enum("GL_T4F_V4F", 0x2A28)
    set_enum("GL_T2F_C4UB_V3F", 0x2A29)
    set_enum("GL_T2F_C3F_V3F", 0x2A2A)
    set_enum("GL_T2F_N3F_V3F", 0x2A2B)
    set_enum("GL_T2F_C4F_N3F_V3F", 0x2A2C)
    set_enum("GL_T4F_C4F_N3F_V4F", 0x2A2D)
    set_enum("GL_CLIP_PLANE0", 0x3000)
    set_enum("GL_CLIP_PLANE1", 0x3001)
    set_enum("GL_CLIP_PLANE2", 0x3002)
    set_enum("GL_CLIP_PLANE3", 0x3003)
    set_enum("GL_CLIP_PLANE4", 0x3004)
    set_enum("GL_CLIP_PLANE5", 0x3005)
    set_enum("GL_LIGHT0", 0x4000)
    set_enum("GL_LIGHT1", 0x4001)
    set_enum("GL_LIGHT2", 0x4002)
    set_enum("GL_LIGHT3", 0x4003)
    set_enum("GL_LIGHT4", 0x4004)
    set_enum("GL_LIGHT5", 0x4005)
    set_enum("GL_LIGHT6", 0x4006)
    set_enum("GL_LIGHT7", 0x4007)


#### GL VERSION 1.2 ####
def init_gl_version_1_2():
    set_func('glDrawRangeElements', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexImage3D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexSubImage3D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyTexSubImage3D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_enum("GL_UNSIGNED_BYTE_3_3_2", 0x8032)
    set_enum("GL_UNSIGNED_SHORT_4_4_4_4", 0x8033)
    set_enum("GL_UNSIGNED_SHORT_5_5_5_1", 0x8034)
    set_enum("GL_UNSIGNED_INT_8_8_8_8", 0x8035)
    set_enum("GL_UNSIGNED_INT_10_10_10_2", 0x8036)
    set_enum("GL_TEXTURE_BINDING_3D", 0x806A)
    set_enum("GL_PACK_SKIP_IMAGES", 0x806B)
    set_enum("GL_PACK_IMAGE_HEIGHT", 0x806C)
    set_enum("GL_UNPACK_SKIP_IMAGES", 0x806D)
    set_enum("GL_UNPACK_IMAGE_HEIGHT", 0x806E)
    set_enum("GL_TEXTURE_3D", 0x806F)
    set_enum("GL_PROXY_TEXTURE_3D", 0x8070)
    set_enum("GL_TEXTURE_DEPTH", 0x8071)
    set_enum("GL_TEXTURE_WRAP_R", 0x8072)
    set_enum("GL_MAX_3D_TEXTURE_SIZE", 0x8073)
    set_enum("GL_UNSIGNED_BYTE_2_3_3_REV", 0x8362)
    set_enum("GL_UNSIGNED_SHORT_5_6_5", 0x8363)
    set_enum("GL_UNSIGNED_SHORT_5_6_5_REV", 0x8364)
    set_enum("GL_UNSIGNED_SHORT_4_4_4_4_REV", 0x8365)
    set_enum("GL_UNSIGNED_SHORT_1_5_5_5_REV", 0x8366)
    set_enum("GL_UNSIGNED_INT_8_8_8_8_REV", 0x8367)
    set_enum("GL_UNSIGNED_INT_2_10_10_10_REV", 0x8368)
    set_enum("GL_BGR", 0x80E0)
    set_enum("GL_BGRA", 0x80E1)
    set_enum("GL_MAX_ELEMENTS_VERTICES", 0x80E8)
    set_enum("GL_MAX_ELEMENTS_INDICES", 0x80E9)
    set_enum("GL_CLAMP_TO_EDGE", 0x812F)
    set_enum("GL_TEXTURE_MIN_LOD", 0x813A)
    set_enum("GL_TEXTURE_MAX_LOD", 0x813B)
    set_enum("GL_TEXTURE_BASE_LEVEL", 0x813C)
    set_enum("GL_TEXTURE_MAX_LEVEL", 0x813D)
    set_enum("GL_SMOOTH_POINT_SIZE_RANGE", 0x0B12)
    set_enum("GL_SMOOTH_POINT_SIZE_GRANULARITY", 0x0B13)
    set_enum("GL_SMOOTH_LINE_WIDTH_RANGE", 0x0B22)
    set_enum("GL_SMOOTH_LINE_WIDTH_GRANULARITY", 0x0B23)
    set_enum("GL_ALIASED_LINE_WIDTH_RANGE", 0x846E)
    set_enum("GL_RESCALE_NORMAL", 0x803A)
    set_enum("GL_LIGHT_MODEL_COLOR_CONTROL", 0x81F8)
    set_enum("GL_SINGLE_COLOR", 0x81F9)
    set_enum("GL_SEPARATE_SPECULAR_COLOR", 0x81FA)
    set_enum("GL_ALIASED_POINT_SIZE_RANGE", 0x846D)


#### GL VERSION 1.3 ####
def init_gl_version_1_3():
    set_func('glActiveTexture', t.void, (t.GLenum,))
    set_func('glSampleCoverage', t.void, (t.GLfloat, t.GLboolean))
    set_func('glCompressedTexImage3D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexImage2D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexImage1D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage3D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage1D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetCompressedTexImage', t.void, (t.GLenum, t.GLint, ct.POINTER(t.void)))
    set_func('glClientActiveTexture', t.void, (t.GLenum,))
    set_func('glMultiTexCoord1d', t.void, (t.GLenum, t.GLdouble))
    set_func('glMultiTexCoord1dv', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexCoord1f', t.void, (t.GLenum, t.GLfloat))
    set_func('glMultiTexCoord1fv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexCoord1i', t.void, (t.GLenum, t.GLint))
    set_func('glMultiTexCoord1iv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexCoord1s', t.void, (t.GLenum, t.GLshort))
    set_func('glMultiTexCoord1sv', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glMultiTexCoord2d', t.void, (t.GLenum, t.GLdouble, t.GLdouble))
    set_func('glMultiTexCoord2dv', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexCoord2f', t.void, (t.GLenum, t.GLfloat, t.GLfloat))
    set_func('glMultiTexCoord2fv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexCoord2i', t.void, (t.GLenum, t.GLint, t.GLint))
    set_func('glMultiTexCoord2iv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexCoord2s', t.void, (t.GLenum, t.GLshort, t.GLshort))
    set_func('glMultiTexCoord2sv', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glMultiTexCoord3d', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMultiTexCoord3dv', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexCoord3f', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glMultiTexCoord3fv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexCoord3i', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint))
    set_func('glMultiTexCoord3iv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexCoord3s', t.void, (t.GLenum, t.GLshort, t.GLshort, t.GLshort))
    set_func('glMultiTexCoord3sv', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glMultiTexCoord4d', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMultiTexCoord4dv', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexCoord4f', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glMultiTexCoord4fv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexCoord4i', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glMultiTexCoord4iv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexCoord4s', t.void, (t.GLenum, t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glMultiTexCoord4sv', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glLoadTransposeMatrixf', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glLoadTransposeMatrixd', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glMultTransposeMatrixf', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glMultTransposeMatrixd', t.void, (ct.POINTER(t.GLdouble),))
    set_enum("GL_TEXTURE0", 0x84C0)
    set_enum("GL_TEXTURE1", 0x84C1)
    set_enum("GL_TEXTURE2", 0x84C2)
    set_enum("GL_TEXTURE3", 0x84C3)
    set_enum("GL_TEXTURE4", 0x84C4)
    set_enum("GL_TEXTURE5", 0x84C5)
    set_enum("GL_TEXTURE6", 0x84C6)
    set_enum("GL_TEXTURE7", 0x84C7)
    set_enum("GL_TEXTURE8", 0x84C8)
    set_enum("GL_TEXTURE9", 0x84C9)
    set_enum("GL_TEXTURE10", 0x84CA)
    set_enum("GL_TEXTURE11", 0x84CB)
    set_enum("GL_TEXTURE12", 0x84CC)
    set_enum("GL_TEXTURE13", 0x84CD)
    set_enum("GL_TEXTURE14", 0x84CE)
    set_enum("GL_TEXTURE15", 0x84CF)
    set_enum("GL_TEXTURE16", 0x84D0)
    set_enum("GL_TEXTURE17", 0x84D1)
    set_enum("GL_TEXTURE18", 0x84D2)
    set_enum("GL_TEXTURE19", 0x84D3)
    set_enum("GL_TEXTURE20", 0x84D4)
    set_enum("GL_TEXTURE21", 0x84D5)
    set_enum("GL_TEXTURE22", 0x84D6)
    set_enum("GL_TEXTURE23", 0x84D7)
    set_enum("GL_TEXTURE24", 0x84D8)
    set_enum("GL_TEXTURE25", 0x84D9)
    set_enum("GL_TEXTURE26", 0x84DA)
    set_enum("GL_TEXTURE27", 0x84DB)
    set_enum("GL_TEXTURE28", 0x84DC)
    set_enum("GL_TEXTURE29", 0x84DD)
    set_enum("GL_TEXTURE30", 0x84DE)
    set_enum("GL_TEXTURE31", 0x84DF)
    set_enum("GL_ACTIVE_TEXTURE", 0x84E0)
    set_enum("GL_MULTISAMPLE", 0x809D)
    set_enum("GL_SAMPLE_ALPHA_TO_COVERAGE", 0x809E)
    set_enum("GL_SAMPLE_ALPHA_TO_ONE", 0x809F)
    set_enum("GL_SAMPLE_COVERAGE", 0x80A0)
    set_enum("GL_SAMPLE_BUFFERS", 0x80A8)
    set_enum("GL_SAMPLES", 0x80A9)
    set_enum("GL_SAMPLE_COVERAGE_VALUE", 0x80AA)
    set_enum("GL_SAMPLE_COVERAGE_INVERT", 0x80AB)
    set_enum("GL_TEXTURE_CUBE_MAP", 0x8513)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP", 0x8514)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_X", 0x8515)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_X", 0x8516)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Y", 0x8517)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Y", 0x8518)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Z", 0x8519)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Z", 0x851A)
    set_enum("GL_PROXY_TEXTURE_CUBE_MAP", 0x851B)
    set_enum("GL_MAX_CUBE_MAP_TEXTURE_SIZE", 0x851C)
    set_enum("GL_COMPRESSED_RGB", 0x84ED)
    set_enum("GL_COMPRESSED_RGBA", 0x84EE)
    set_enum("GL_TEXTURE_COMPRESSION_HINT", 0x84EF)
    set_enum("GL_TEXTURE_COMPRESSED_IMAGE_SIZE", 0x86A0)
    set_enum("GL_TEXTURE_COMPRESSED", 0x86A1)
    set_enum("GL_NUM_COMPRESSED_TEXTURE_FORMATS", 0x86A2)
    set_enum("GL_COMPRESSED_TEXTURE_FORMATS", 0x86A3)
    set_enum("GL_CLAMP_TO_BORDER", 0x812D)
    set_enum("GL_CLIENT_ACTIVE_TEXTURE", 0x84E1)
    set_enum("GL_MAX_TEXTURE_UNITS", 0x84E2)
    set_enum("GL_TRANSPOSE_MODELVIEW_MATRIX", 0x84E3)
    set_enum("GL_TRANSPOSE_PROJECTION_MATRIX", 0x84E4)
    set_enum("GL_TRANSPOSE_TEXTURE_MATRIX", 0x84E5)
    set_enum("GL_TRANSPOSE_COLOR_MATRIX", 0x84E6)
    set_enum("GL_MULTISAMPLE_BIT", 0x20000000)
    set_enum("GL_NORMAL_MAP", 0x8511)
    set_enum("GL_REFLECTION_MAP", 0x8512)
    set_enum("GL_COMPRESSED_ALPHA", 0x84E9)
    set_enum("GL_COMPRESSED_LUMINANCE", 0x84EA)
    set_enum("GL_COMPRESSED_LUMINANCE_ALPHA", 0x84EB)
    set_enum("GL_COMPRESSED_INTENSITY", 0x84EC)
    set_enum("GL_COMBINE", 0x8570)
    set_enum("GL_COMBINE_RGB", 0x8571)
    set_enum("GL_COMBINE_ALPHA", 0x8572)
    set_enum("GL_SOURCE0_RGB", 0x8580)
    set_enum("GL_SOURCE1_RGB", 0x8581)
    set_enum("GL_SOURCE2_RGB", 0x8582)
    set_enum("GL_SOURCE0_ALPHA", 0x8588)
    set_enum("GL_SOURCE1_ALPHA", 0x8589)
    set_enum("GL_SOURCE2_ALPHA", 0x858A)
    set_enum("GL_OPERAND0_RGB", 0x8590)
    set_enum("GL_OPERAND1_RGB", 0x8591)
    set_enum("GL_OPERAND2_RGB", 0x8592)
    set_enum("GL_OPERAND0_ALPHA", 0x8598)
    set_enum("GL_OPERAND1_ALPHA", 0x8599)
    set_enum("GL_OPERAND2_ALPHA", 0x859A)
    set_enum("GL_RGB_SCALE", 0x8573)
    set_enum("GL_ADD_SIGNED", 0x8574)
    set_enum("GL_INTERPOLATE", 0x8575)
    set_enum("GL_SUBTRACT", 0x84E7)
    set_enum("GL_CONSTANT", 0x8576)
    set_enum("GL_PRIMARY_COLOR", 0x8577)
    set_enum("GL_PREVIOUS", 0x8578)
    set_enum("GL_DOT3_RGB", 0x86AE)
    set_enum("GL_DOT3_RGBA", 0x86AF)


#### GL VERSION 1.4 ####
def init_gl_version_1_4():
    set_func('glBlendFuncSeparate', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glMultiDrawArrays', t.void, (t.GLenum, ct.POINTER(t.GLint), ct.POINTER(t.GLsizei), t.GLsizei))
    set_func('glMultiDrawElements', t.void, (t.GLenum, ct.POINTER(t.GLsizei), t.GLenum, ct.POINTER(ct.POINTER(t.void)), t.GLsizei))
    set_func('glPointParameterf', t.void, (t.GLenum, t.GLfloat))
    set_func('glPointParameterfv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glPointParameteri', t.void, (t.GLenum, t.GLint))
    set_func('glPointParameteriv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glFogCoordf', t.void, (t.GLfloat,))
    set_func('glFogCoordfv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glFogCoordd', t.void, (t.GLdouble,))
    set_func('glFogCoorddv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glFogCoordPointer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glSecondaryColor3b', t.void, (t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glSecondaryColor3bv', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glSecondaryColor3d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glSecondaryColor3dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glSecondaryColor3f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glSecondaryColor3fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glSecondaryColor3i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glSecondaryColor3iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glSecondaryColor3s', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glSecondaryColor3sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glSecondaryColor3ub', t.void, (t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glSecondaryColor3ubv', t.void, (ct.POINTER(t.GLubyte),))
    set_func('glSecondaryColor3ui', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glSecondaryColor3uiv', t.void, (ct.POINTER(t.GLuint),))
    set_func('glSecondaryColor3us', t.void, (t.GLushort, t.GLushort, t.GLushort))
    set_func('glSecondaryColor3usv', t.void, (ct.POINTER(t.GLushort),))
    set_func('glSecondaryColorPointer', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glWindowPos2d', t.void, (t.GLdouble, t.GLdouble))
    set_func('glWindowPos2dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glWindowPos2f', t.void, (t.GLfloat, t.GLfloat))
    set_func('glWindowPos2fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glWindowPos2i', t.void, (t.GLint, t.GLint))
    set_func('glWindowPos2iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glWindowPos2s', t.void, (t.GLshort, t.GLshort))
    set_func('glWindowPos2sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glWindowPos3d', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glWindowPos3dv', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glWindowPos3f', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glWindowPos3fv', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glWindowPos3i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glWindowPos3iv', t.void, (ct.POINTER(t.GLint),))
    set_func('glWindowPos3s', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glWindowPos3sv', t.void, (ct.POINTER(t.GLshort),))
    set_func('glBlendColor', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glBlendEquation', t.void, (t.GLenum,))
    set_enum("GL_BLEND_DST_RGB", 0x80C8)
    set_enum("GL_BLEND_SRC_RGB", 0x80C9)
    set_enum("GL_BLEND_DST_ALPHA", 0x80CA)
    set_enum("GL_BLEND_SRC_ALPHA", 0x80CB)
    set_enum("GL_POINT_FADE_THRESHOLD_SIZE", 0x8128)
    set_enum("GL_DEPTH_COMPONENT16", 0x81A5)
    set_enum("GL_DEPTH_COMPONENT24", 0x81A6)
    set_enum("GL_DEPTH_COMPONENT32", 0x81A7)
    set_enum("GL_MIRRORED_REPEAT", 0x8370)
    set_enum("GL_MAX_TEXTURE_LOD_BIAS", 0x84FD)
    set_enum("GL_TEXTURE_LOD_BIAS", 0x8501)
    set_enum("GL_INCR_WRAP", 0x8507)
    set_enum("GL_DECR_WRAP", 0x8508)
    set_enum("GL_TEXTURE_DEPTH_SIZE", 0x884A)
    set_enum("GL_TEXTURE_COMPARE_MODE", 0x884C)
    set_enum("GL_TEXTURE_COMPARE_FUNC", 0x884D)
    set_enum("GL_POINT_SIZE_MIN", 0x8126)
    set_enum("GL_POINT_SIZE_MAX", 0x8127)
    set_enum("GL_POINT_DISTANCE_ATTENUATION", 0x8129)
    set_enum("GL_GENERATE_MIPMAP", 0x8191)
    set_enum("GL_GENERATE_MIPMAP_HINT", 0x8192)
    set_enum("GL_FOG_COORDINATE_SOURCE", 0x8450)
    set_enum("GL_FOG_COORDINATE", 0x8451)
    set_enum("GL_FRAGMENT_DEPTH", 0x8452)
    set_enum("GL_CURRENT_FOG_COORDINATE", 0x8453)
    set_enum("GL_FOG_COORDINATE_ARRAY_TYPE", 0x8454)
    set_enum("GL_FOG_COORDINATE_ARRAY_STRIDE", 0x8455)
    set_enum("GL_FOG_COORDINATE_ARRAY_POINTER", 0x8456)
    set_enum("GL_FOG_COORDINATE_ARRAY", 0x8457)
    set_enum("GL_COLOR_SUM", 0x8458)
    set_enum("GL_CURRENT_SECONDARY_COLOR", 0x8459)
    set_enum("GL_SECONDARY_COLOR_ARRAY_SIZE", 0x845A)
    set_enum("GL_SECONDARY_COLOR_ARRAY_TYPE", 0x845B)
    set_enum("GL_SECONDARY_COLOR_ARRAY_STRIDE", 0x845C)
    set_enum("GL_SECONDARY_COLOR_ARRAY_POINTER", 0x845D)
    set_enum("GL_SECONDARY_COLOR_ARRAY", 0x845E)
    set_enum("GL_TEXTURE_FILTER_CONTROL", 0x8500)
    set_enum("GL_DEPTH_TEXTURE_MODE", 0x884B)
    set_enum("GL_COMPARE_R_TO_TEXTURE", 0x884E)
    set_enum("GL_FUNC_ADD", 0x8006)
    set_enum("GL_FUNC_SUBTRACT", 0x800A)
    set_enum("GL_FUNC_REVERSE_SUBTRACT", 0x800B)
    set_enum("GL_MIN", 0x8007)
    set_enum("GL_MAX", 0x8008)
    set_enum("GL_CONSTANT_COLOR", 0x8001)
    set_enum("GL_ONE_MINUS_CONSTANT_COLOR", 0x8002)
    set_enum("GL_CONSTANT_ALPHA", 0x8003)
    set_enum("GL_ONE_MINUS_CONSTANT_ALPHA", 0x8004)


#### GL VERSION 1.5 ####
def init_gl_version_1_5():
    set_func('glGenQueries', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteQueries', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsQuery', t.GLboolean, (t.GLuint,))
    set_func('glBeginQuery', t.void, (t.GLenum, t.GLuint))
    set_func('glEndQuery', t.void, (t.GLenum,))
    set_func('glGetQueryiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetQueryObjectiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetQueryObjectuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glBindBuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsBuffer', t.GLboolean, (t.GLuint,))
    set_func('glBufferData', t.void, (t.GLenum, t.GLsizeiptr, ct.POINTER(t.void), t.GLenum))
    set_func('glBufferSubData', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glGetBufferSubData', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glMapBuffer', ct.POINTER(t.void), (t.GLenum, t.GLenum))
    set_func('glUnmapBuffer', t.GLboolean, (t.GLenum,))
    set_func('glGetBufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetBufferPointerv', t.void, (t.GLenum, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_BUFFER_SIZE", 0x8764)
    set_enum("GL_BUFFER_USAGE", 0x8765)
    set_enum("GL_QUERY_COUNTER_BITS", 0x8864)
    set_enum("GL_CURRENT_QUERY", 0x8865)
    set_enum("GL_QUERY_RESULT", 0x8866)
    set_enum("GL_QUERY_RESULT_AVAILABLE", 0x8867)
    set_enum("GL_ARRAY_BUFFER", 0x8892)
    set_enum("GL_ELEMENT_ARRAY_BUFFER", 0x8893)
    set_enum("GL_ARRAY_BUFFER_BINDING", 0x8894)
    set_enum("GL_ELEMENT_ARRAY_BUFFER_BINDING", 0x8895)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", 0x889F)
    set_enum("GL_READ_ONLY", 0x88B8)
    set_enum("GL_WRITE_ONLY", 0x88B9)
    set_enum("GL_READ_WRITE", 0x88BA)
    set_enum("GL_BUFFER_ACCESS", 0x88BB)
    set_enum("GL_BUFFER_MAPPED", 0x88BC)
    set_enum("GL_BUFFER_MAP_POINTER", 0x88BD)
    set_enum("GL_STREAM_DRAW", 0x88E0)
    set_enum("GL_STREAM_READ", 0x88E1)
    set_enum("GL_STREAM_COPY", 0x88E2)
    set_enum("GL_STATIC_DRAW", 0x88E4)
    set_enum("GL_STATIC_READ", 0x88E5)
    set_enum("GL_STATIC_COPY", 0x88E6)
    set_enum("GL_DYNAMIC_DRAW", 0x88E8)
    set_enum("GL_DYNAMIC_READ", 0x88E9)
    set_enum("GL_DYNAMIC_COPY", 0x88EA)
    set_enum("GL_SAMPLES_PASSED", 0x8914)
    set_enum("GL_SRC1_ALPHA", 0x8589)
    set_enum("GL_VERTEX_ARRAY_BUFFER_BINDING", 0x8896)
    set_enum("GL_NORMAL_ARRAY_BUFFER_BINDING", 0x8897)
    set_enum("GL_COLOR_ARRAY_BUFFER_BINDING", 0x8898)
    set_enum("GL_INDEX_ARRAY_BUFFER_BINDING", 0x8899)
    set_enum("GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING", 0x889A)
    set_enum("GL_EDGE_FLAG_ARRAY_BUFFER_BINDING", 0x889B)
    set_enum("GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING", 0x889C)
    set_enum("GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING", 0x889D)
    set_enum("GL_WEIGHT_ARRAY_BUFFER_BINDING", 0x889E)
    set_enum("GL_FOG_COORD_SRC", 0x8450)
    set_enum("GL_FOG_COORD", 0x8451)
    set_enum("GL_CURRENT_FOG_COORD", 0x8453)
    set_enum("GL_FOG_COORD_ARRAY_TYPE", 0x8454)
    set_enum("GL_FOG_COORD_ARRAY_STRIDE", 0x8455)
    set_enum("GL_FOG_COORD_ARRAY_POINTER", 0x8456)
    set_enum("GL_FOG_COORD_ARRAY", 0x8457)
    set_enum("GL_FOG_COORD_ARRAY_BUFFER_BINDING", 0x889D)
    set_enum("GL_SRC0_RGB", 0x8580)
    set_enum("GL_SRC1_RGB", 0x8581)
    set_enum("GL_SRC2_RGB", 0x8582)
    set_enum("GL_SRC0_ALPHA", 0x8588)
    set_enum("GL_SRC2_ALPHA", 0x858A)


#### GL VERSION 2.0 ####
def init_gl_version_2_0():
    set_func('glBlendEquationSeparate', t.void, (t.GLenum, t.GLenum))
    set_func('glDrawBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glStencilOpSeparate', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glStencilFuncSeparate', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLuint))
    set_func('glStencilMaskSeparate', t.void, (t.GLenum, t.GLuint))
    set_func('glAttachShader', t.void, (t.GLuint, t.GLuint))
    set_func('glBindAttribLocation', t.void, (t.GLuint, t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glCompileShader', t.void, (t.GLuint,))
    set_func('glCreateProgram', t.GLuint, ())
    set_func('glCreateShader', t.GLuint, (t.GLenum,))
    set_func('glDeleteProgram', t.void, (t.GLuint,))
    set_func('glDeleteShader', t.void, (t.GLuint,))
    set_func('glDetachShader', t.void, (t.GLuint, t.GLuint))
    set_func('glDisableVertexAttribArray', t.void, (t.GLuint,))
    set_func('glEnableVertexAttribArray', t.void, (t.GLuint,))
    set_func('glGetActiveAttrib', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint), ct.POINTER(t.GLenum), ct.POINTER(t.GLchar)))
    set_func('glGetActiveUniform', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint), ct.POINTER(t.GLenum), ct.POINTER(t.GLchar)))
    set_func('glGetAttachedShaders', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLuint)))
    set_func('glGetAttribLocation', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetProgramiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramInfoLog', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetShaderiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetShaderInfoLog', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetShaderSource', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetUniformLocation', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetUniformfv', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glGetUniformiv', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribdv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetVertexAttribfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVertexAttribiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribPointerv', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glIsProgram', t.GLboolean, (t.GLuint,))
    set_func('glIsShader', t.GLboolean, (t.GLuint,))
    set_func('glLinkProgram', t.void, (t.GLuint,))
    set_func('glShaderSource', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), ct.POINTER(t.GLint)))
    set_func('glUseProgram', t.void, (t.GLuint,))
    set_func('glUniform1f', t.void, (t.GLint, t.GLfloat))
    set_func('glUniform2f', t.void, (t.GLint, t.GLfloat, t.GLfloat))
    set_func('glUniform3f', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glUniform4f', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glUniform1i', t.void, (t.GLint, t.GLint))
    set_func('glUniform2i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glUniform3i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glUniform4i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glUniform1fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform2fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform3fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform4fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform1iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform2iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform3iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform4iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniformMatrix2fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glValidateProgram', t.void, (t.GLuint,))
    set_func('glVertexAttrib1d', t.void, (t.GLuint, t.GLdouble))
    set_func('glVertexAttrib1dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib1f', t.void, (t.GLuint, t.GLfloat))
    set_func('glVertexAttrib1fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib1s', t.void, (t.GLuint, t.GLshort))
    set_func('glVertexAttrib1sv', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib2d', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib2dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib2f', t.void, (t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib2fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib2s', t.void, (t.GLuint, t.GLshort, t.GLshort))
    set_func('glVertexAttrib2sv', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib3d', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib3dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib3f', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib3fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib3s', t.void, (t.GLuint, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexAttrib3sv', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4Nbv', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVertexAttrib4Niv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttrib4Nsv', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4Nub', t.void, (t.GLuint, t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glVertexAttrib4Nubv', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttrib4Nuiv', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttrib4Nusv', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glVertexAttrib4bv', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVertexAttrib4d', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib4dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib4f', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib4fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib4iv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttrib4s', t.void, (t.GLuint, t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexAttrib4sv', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4ubv', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttrib4uiv', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttrib4usv', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glVertexAttribPointer', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_BLEND_EQUATION_RGB", 0x8009)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_ENABLED", 0x8622)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_SIZE", 0x8623)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_STRIDE", 0x8624)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_TYPE", 0x8625)
    set_enum("GL_CURRENT_VERTEX_ATTRIB", 0x8626)
    set_enum("GL_VERTEX_PROGRAM_POINT_SIZE", 0x8642)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_POINTER", 0x8645)
    set_enum("GL_STENCIL_BACK_FUNC", 0x8800)
    set_enum("GL_STENCIL_BACK_FAIL", 0x8801)
    set_enum("GL_STENCIL_BACK_PASS_DEPTH_FAIL", 0x8802)
    set_enum("GL_STENCIL_BACK_PASS_DEPTH_PASS", 0x8803)
    set_enum("GL_MAX_DRAW_BUFFERS", 0x8824)
    set_enum("GL_DRAW_BUFFER0", 0x8825)
    set_enum("GL_DRAW_BUFFER1", 0x8826)
    set_enum("GL_DRAW_BUFFER2", 0x8827)
    set_enum("GL_DRAW_BUFFER3", 0x8828)
    set_enum("GL_DRAW_BUFFER4", 0x8829)
    set_enum("GL_DRAW_BUFFER5", 0x882A)
    set_enum("GL_DRAW_BUFFER6", 0x882B)
    set_enum("GL_DRAW_BUFFER7", 0x882C)
    set_enum("GL_DRAW_BUFFER8", 0x882D)
    set_enum("GL_DRAW_BUFFER9", 0x882E)
    set_enum("GL_DRAW_BUFFER10", 0x882F)
    set_enum("GL_DRAW_BUFFER11", 0x8830)
    set_enum("GL_DRAW_BUFFER12", 0x8831)
    set_enum("GL_DRAW_BUFFER13", 0x8832)
    set_enum("GL_DRAW_BUFFER14", 0x8833)
    set_enum("GL_DRAW_BUFFER15", 0x8834)
    set_enum("GL_BLEND_EQUATION_ALPHA", 0x883D)
    set_enum("GL_MAX_VERTEX_ATTRIBS", 0x8869)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_NORMALIZED", 0x886A)
    set_enum("GL_MAX_TEXTURE_IMAGE_UNITS", 0x8872)
    set_enum("GL_FRAGMENT_SHADER", 0x8B30)
    set_enum("GL_VERTEX_SHADER", 0x8B31)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_COMPONENTS", 0x8B49)
    set_enum("GL_MAX_VERTEX_UNIFORM_COMPONENTS", 0x8B4A)
    set_enum("GL_MAX_VARYING_FLOATS", 0x8B4B)
    set_enum("GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS", 0x8B4C)
    set_enum("GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS", 0x8B4D)
    set_enum("GL_SHADER_TYPE", 0x8B4F)
    set_enum("GL_FLOAT_VEC2", 0x8B50)
    set_enum("GL_FLOAT_VEC3", 0x8B51)
    set_enum("GL_FLOAT_VEC4", 0x8B52)
    set_enum("GL_INT_VEC2", 0x8B53)
    set_enum("GL_INT_VEC3", 0x8B54)
    set_enum("GL_INT_VEC4", 0x8B55)
    set_enum("GL_BOOL", 0x8B56)
    set_enum("GL_BOOL_VEC2", 0x8B57)
    set_enum("GL_BOOL_VEC3", 0x8B58)
    set_enum("GL_BOOL_VEC4", 0x8B59)
    set_enum("GL_FLOAT_MAT2", 0x8B5A)
    set_enum("GL_FLOAT_MAT3", 0x8B5B)
    set_enum("GL_FLOAT_MAT4", 0x8B5C)
    set_enum("GL_SAMPLER_1D", 0x8B5D)
    set_enum("GL_SAMPLER_2D", 0x8B5E)
    set_enum("GL_SAMPLER_3D", 0x8B5F)
    set_enum("GL_SAMPLER_CUBE", 0x8B60)
    set_enum("GL_SAMPLER_1D_SHADOW", 0x8B61)
    set_enum("GL_SAMPLER_2D_SHADOW", 0x8B62)
    set_enum("GL_DELETE_STATUS", 0x8B80)
    set_enum("GL_COMPILE_STATUS", 0x8B81)
    set_enum("GL_LINK_STATUS", 0x8B82)
    set_enum("GL_VALIDATE_STATUS", 0x8B83)
    set_enum("GL_INFO_LOG_LENGTH", 0x8B84)
    set_enum("GL_ATTACHED_SHADERS", 0x8B85)
    set_enum("GL_ACTIVE_UNIFORMS", 0x8B86)
    set_enum("GL_ACTIVE_UNIFORM_MAX_LENGTH", 0x8B87)
    set_enum("GL_SHADER_SOURCE_LENGTH", 0x8B88)
    set_enum("GL_ACTIVE_ATTRIBUTES", 0x8B89)
    set_enum("GL_ACTIVE_ATTRIBUTE_MAX_LENGTH", 0x8B8A)
    set_enum("GL_FRAGMENT_SHADER_DERIVATIVE_HINT", 0x8B8B)
    set_enum("GL_SHADING_LANGUAGE_VERSION", 0x8B8C)
    set_enum("GL_CURRENT_PROGRAM", 0x8B8D)
    set_enum("GL_POINT_SPRITE_COORD_ORIGIN", 0x8CA0)
    set_enum("GL_LOWER_LEFT", 0x8CA1)
    set_enum("GL_UPPER_LEFT", 0x8CA2)
    set_enum("GL_STENCIL_BACK_REF", 0x8CA3)
    set_enum("GL_STENCIL_BACK_VALUE_MASK", 0x8CA4)
    set_enum("GL_STENCIL_BACK_WRITEMASK", 0x8CA5)
    set_enum("GL_VERTEX_PROGRAM_TWO_SIDE", 0x8643)
    set_enum("GL_POINT_SPRITE", 0x8861)
    set_enum("GL_COORD_REPLACE", 0x8862)
    set_enum("GL_MAX_TEXTURE_COORDS", 0x8871)


#### GL VERSION 2.1 ####
def init_gl_version_2_1():
    set_func('glUniformMatrix2x3fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3x2fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix2x4fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4x2fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3x4fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4x3fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_enum("GL_PIXEL_PACK_BUFFER", 0x88EB)
    set_enum("GL_PIXEL_UNPACK_BUFFER", 0x88EC)
    set_enum("GL_PIXEL_PACK_BUFFER_BINDING", 0x88ED)
    set_enum("GL_PIXEL_UNPACK_BUFFER_BINDING", 0x88EF)
    set_enum("GL_FLOAT_MAT2x3", 0x8B65)
    set_enum("GL_FLOAT_MAT2x4", 0x8B66)
    set_enum("GL_FLOAT_MAT3x2", 0x8B67)
    set_enum("GL_FLOAT_MAT3x4", 0x8B68)
    set_enum("GL_FLOAT_MAT4x2", 0x8B69)
    set_enum("GL_FLOAT_MAT4x3", 0x8B6A)
    set_enum("GL_SRGB", 0x8C40)
    set_enum("GL_SRGB8", 0x8C41)
    set_enum("GL_SRGB_ALPHA", 0x8C42)
    set_enum("GL_SRGB8_ALPHA8", 0x8C43)
    set_enum("GL_COMPRESSED_SRGB", 0x8C48)
    set_enum("GL_COMPRESSED_SRGB_ALPHA", 0x8C49)
    set_enum("GL_CURRENT_RASTER_SECONDARY_COLOR", 0x845F)
    set_enum("GL_SLUMINANCE_ALPHA", 0x8C44)
    set_enum("GL_SLUMINANCE8_ALPHA8", 0x8C45)
    set_enum("GL_SLUMINANCE", 0x8C46)
    set_enum("GL_SLUMINANCE8", 0x8C47)
    set_enum("GL_COMPRESSED_SLUMINANCE", 0x8C4A)
    set_enum("GL_COMPRESSED_SLUMINANCE_ALPHA", 0x8C4B)


#### GL VERSION 3.0 ####
def init_gl_version_3_0():
    set_func('glColorMaski', t.void, (t.GLuint, t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glGetBooleani_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLboolean)))
    set_func('glGetIntegeri_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glEnablei', t.void, (t.GLenum, t.GLuint))
    set_func('glDisablei', t.void, (t.GLenum, t.GLuint))
    set_func('glIsEnabledi', t.GLboolean, (t.GLenum, t.GLuint))
    set_func('glBeginTransformFeedback', t.void, (t.GLenum,))
    set_func('glEndTransformFeedback', t.void, ())
    set_func('glBindBufferRange', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glBindBufferBase', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glTransformFeedbackVaryings', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), t.GLenum))
    set_func('glGetTransformFeedbackVarying', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLsizei), ct.POINTER(t.GLenum), ct.POINTER(t.GLchar)))
    set_func('glClampColor', t.void, (t.GLenum, t.GLenum))
    set_func('glBeginConditionalRender', t.void, (t.GLuint, t.GLenum))
    set_func('glEndConditionalRender', t.void, ())
    set_func('glVertexAttribIPointer', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetVertexAttribIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI1i', t.void, (t.GLuint, t.GLint))
    set_func('glVertexAttribI2i', t.void, (t.GLuint, t.GLint, t.GLint))
    set_func('glVertexAttribI3i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint))
    set_func('glVertexAttribI4i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glVertexAttribI1ui', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexAttribI2ui', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexAttribI3ui', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexAttribI4ui', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexAttribI1iv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI2iv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI3iv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI4iv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI1uiv', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI2uiv', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI3uiv', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI4uiv', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI4bv', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVertexAttribI4sv', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttribI4ubv', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttribI4usv', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glGetUniformuiv', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glBindFragDataLocation', t.void, (t.GLuint, t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetFragDataLocation', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glUniform1ui', t.void, (t.GLint, t.GLuint))
    set_func('glUniform2ui', t.void, (t.GLint, t.GLuint, t.GLuint))
    set_func('glUniform3ui', t.void, (t.GLint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glUniform4ui', t.void, (t.GLint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glUniform1uiv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform2uiv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform3uiv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform4uiv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glTexParameterIiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexParameterIuiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetTexParameterIiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexParameterIuiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glClearBufferiv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLint)))
    set_func('glClearBufferuiv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glClearBufferfv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glClearBufferfi', t.void, (t.GLenum, t.GLint, t.GLfloat, t.GLint))
    set_func('glGetStringi', ct.POINTER(t.GLubyte), (t.GLenum, t.GLuint))
    set_func('glIsRenderbuffer', t.GLboolean, (t.GLuint,))
    set_func('glBindRenderbuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glRenderbufferStorage', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glGetRenderbufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glIsFramebuffer', t.GLboolean, (t.GLuint,))
    set_func('glBindFramebuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glCheckFramebufferStatus', t.GLenum, (t.GLenum,))
    set_func('glFramebufferTexture1D', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFramebufferTexture2D', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFramebufferTexture3D', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glFramebufferRenderbuffer', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint))
    set_func('glGetFramebufferAttachmentParameteriv', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGenerateMipmap', t.void, (t.GLenum,))
    set_func('glBlitFramebuffer', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLbitfield, t.GLenum))
    set_func('glRenderbufferStorageMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glFramebufferTextureLayer', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glMapBufferRange', ct.POINTER(t.void), (t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLbitfield))
    set_func('glFlushMappedBufferRange', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr))
    set_func('glBindVertexArray', t.void, (t.GLuint,))
    set_func('glDeleteVertexArrays', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenVertexArrays', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsVertexArray', t.GLboolean, (t.GLuint,))
    set_enum("GL_COMPARE_REF_TO_TEXTURE", 0x884E)
    set_enum("GL_CLIP_DISTANCE0", 0x3000)
    set_enum("GL_CLIP_DISTANCE1", 0x3001)
    set_enum("GL_CLIP_DISTANCE2", 0x3002)
    set_enum("GL_CLIP_DISTANCE3", 0x3003)
    set_enum("GL_CLIP_DISTANCE4", 0x3004)
    set_enum("GL_CLIP_DISTANCE5", 0x3005)
    set_enum("GL_CLIP_DISTANCE6", 0x3006)
    set_enum("GL_CLIP_DISTANCE7", 0x3007)
    set_enum("GL_MAX_CLIP_DISTANCES", 0x0D32)
    set_enum("GL_MAJOR_VERSION", 0x821B)
    set_enum("GL_MINOR_VERSION", 0x821C)
    set_enum("GL_NUM_EXTENSIONS", 0x821D)
    set_enum("GL_CONTEXT_FLAGS", 0x821E)
    set_enum("GL_COMPRESSED_RED", 0x8225)
    set_enum("GL_COMPRESSED_RG", 0x8226)
    set_enum("GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT", 0x00000001)
    set_enum("GL_RGBA32F", 0x8814)
    set_enum("GL_RGB32F", 0x8815)
    set_enum("GL_RGBA16F", 0x881A)
    set_enum("GL_RGB16F", 0x881B)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_INTEGER", 0x88FD)
    set_enum("GL_MAX_ARRAY_TEXTURE_LAYERS", 0x88FF)
    set_enum("GL_MIN_PROGRAM_TEXEL_OFFSET", 0x8904)
    set_enum("GL_MAX_PROGRAM_TEXEL_OFFSET", 0x8905)
    set_enum("GL_CLAMP_READ_COLOR", 0x891C)
    set_enum("GL_FIXED_ONLY", 0x891D)
    set_enum("GL_MAX_VARYING_COMPONENTS", 0x8B4B)
    set_enum("GL_TEXTURE_1D_ARRAY", 0x8C18)
    set_enum("GL_PROXY_TEXTURE_1D_ARRAY", 0x8C19)
    set_enum("GL_TEXTURE_2D_ARRAY", 0x8C1A)
    set_enum("GL_PROXY_TEXTURE_2D_ARRAY", 0x8C1B)
    set_enum("GL_TEXTURE_BINDING_1D_ARRAY", 0x8C1C)
    set_enum("GL_TEXTURE_BINDING_2D_ARRAY", 0x8C1D)
    set_enum("GL_R11F_G11F_B10F", 0x8C3A)
    set_enum("GL_UNSIGNED_INT_10F_11F_11F_REV", 0x8C3B)
    set_enum("GL_RGB9_E5", 0x8C3D)
    set_enum("GL_UNSIGNED_INT_5_9_9_9_REV", 0x8C3E)
    set_enum("GL_TEXTURE_SHARED_SIZE", 0x8C3F)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH", 0x8C76)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_MODE", 0x8C7F)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS", 0x8C80)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYINGS", 0x8C83)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_START", 0x8C84)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_SIZE", 0x8C85)
    set_enum("GL_PRIMITIVES_GENERATED", 0x8C87)
    set_enum("GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN", 0x8C88)
    set_enum("GL_RASTERIZER_DISCARD", 0x8C89)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS", 0x8C8A)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS", 0x8C8B)
    set_enum("GL_INTERLEAVED_ATTRIBS", 0x8C8C)
    set_enum("GL_SEPARATE_ATTRIBS", 0x8C8D)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER", 0x8C8E)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_BINDING", 0x8C8F)
    set_enum("GL_RGBA32UI", 0x8D70)
    set_enum("GL_RGB32UI", 0x8D71)
    set_enum("GL_RGBA16UI", 0x8D76)
    set_enum("GL_RGB16UI", 0x8D77)
    set_enum("GL_RGBA8UI", 0x8D7C)
    set_enum("GL_RGB8UI", 0x8D7D)
    set_enum("GL_RGBA32I", 0x8D82)
    set_enum("GL_RGB32I", 0x8D83)
    set_enum("GL_RGBA16I", 0x8D88)
    set_enum("GL_RGB16I", 0x8D89)
    set_enum("GL_RGBA8I", 0x8D8E)
    set_enum("GL_RGB8I", 0x8D8F)
    set_enum("GL_RED_INTEGER", 0x8D94)
    set_enum("GL_GREEN_INTEGER", 0x8D95)
    set_enum("GL_BLUE_INTEGER", 0x8D96)
    set_enum("GL_RGB_INTEGER", 0x8D98)
    set_enum("GL_RGBA_INTEGER", 0x8D99)
    set_enum("GL_BGR_INTEGER", 0x8D9A)
    set_enum("GL_BGRA_INTEGER", 0x8D9B)
    set_enum("GL_SAMPLER_1D_ARRAY", 0x8DC0)
    set_enum("GL_SAMPLER_2D_ARRAY", 0x8DC1)
    set_enum("GL_SAMPLER_1D_ARRAY_SHADOW", 0x8DC3)
    set_enum("GL_SAMPLER_2D_ARRAY_SHADOW", 0x8DC4)
    set_enum("GL_SAMPLER_CUBE_SHADOW", 0x8DC5)
    set_enum("GL_UNSIGNED_INT_VEC2", 0x8DC6)
    set_enum("GL_UNSIGNED_INT_VEC3", 0x8DC7)
    set_enum("GL_UNSIGNED_INT_VEC4", 0x8DC8)
    set_enum("GL_INT_SAMPLER_1D", 0x8DC9)
    set_enum("GL_INT_SAMPLER_2D", 0x8DCA)
    set_enum("GL_INT_SAMPLER_3D", 0x8DCB)
    set_enum("GL_INT_SAMPLER_CUBE", 0x8DCC)
    set_enum("GL_INT_SAMPLER_1D_ARRAY", 0x8DCE)
    set_enum("GL_INT_SAMPLER_2D_ARRAY", 0x8DCF)
    set_enum("GL_UNSIGNED_INT_SAMPLER_1D", 0x8DD1)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D", 0x8DD2)
    set_enum("GL_UNSIGNED_INT_SAMPLER_3D", 0x8DD3)
    set_enum("GL_UNSIGNED_INT_SAMPLER_CUBE", 0x8DD4)
    set_enum("GL_UNSIGNED_INT_SAMPLER_1D_ARRAY", 0x8DD6)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_ARRAY", 0x8DD7)
    set_enum("GL_QUERY_WAIT", 0x8E13)
    set_enum("GL_QUERY_NO_WAIT", 0x8E14)
    set_enum("GL_QUERY_BY_REGION_WAIT", 0x8E15)
    set_enum("GL_QUERY_BY_REGION_NO_WAIT", 0x8E16)
    set_enum("GL_BUFFER_ACCESS_FLAGS", 0x911F)
    set_enum("GL_BUFFER_MAP_LENGTH", 0x9120)
    set_enum("GL_BUFFER_MAP_OFFSET", 0x9121)
    set_enum("GL_DEPTH_COMPONENT32F", 0x8CAC)
    set_enum("GL_DEPTH32F_STENCIL8", 0x8CAD)
    set_enum("GL_FLOAT_32_UNSIGNED_INT_24_8_REV", 0x8DAD)
    set_enum("GL_INVALID_FRAMEBUFFER_OPERATION", 0x0506)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING", 0x8210)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE", 0x8211)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE", 0x8212)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE", 0x8213)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE", 0x8214)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE", 0x8215)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE", 0x8216)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE", 0x8217)
    set_enum("GL_FRAMEBUFFER_DEFAULT", 0x8218)
    set_enum("GL_FRAMEBUFFER_UNDEFINED", 0x8219)
    set_enum("GL_DEPTH_STENCIL_ATTACHMENT", 0x821A)
    set_enum("GL_MAX_RENDERBUFFER_SIZE", 0x84E8)
    set_enum("GL_DEPTH_STENCIL", 0x84F9)
    set_enum("GL_UNSIGNED_INT_24_8", 0x84FA)
    set_enum("GL_DEPTH24_STENCIL8", 0x88F0)
    set_enum("GL_TEXTURE_STENCIL_SIZE", 0x88F1)
    set_enum("GL_TEXTURE_RED_TYPE", 0x8C10)
    set_enum("GL_TEXTURE_GREEN_TYPE", 0x8C11)
    set_enum("GL_TEXTURE_BLUE_TYPE", 0x8C12)
    set_enum("GL_TEXTURE_ALPHA_TYPE", 0x8C13)
    set_enum("GL_TEXTURE_DEPTH_TYPE", 0x8C16)
    set_enum("GL_UNSIGNED_NORMALIZED", 0x8C17)
    set_enum("GL_FRAMEBUFFER_BINDING", 0x8CA6)
    set_enum("GL_DRAW_FRAMEBUFFER_BINDING", 0x8CA6)
    set_enum("GL_RENDERBUFFER_BINDING", 0x8CA7)
    set_enum("GL_READ_FRAMEBUFFER", 0x8CA8)
    set_enum("GL_DRAW_FRAMEBUFFER", 0x8CA9)
    set_enum("GL_READ_FRAMEBUFFER_BINDING", 0x8CAA)
    set_enum("GL_RENDERBUFFER_SAMPLES", 0x8CAB)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", 0x8CD0)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", 0x8CD1)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", 0x8CD2)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", 0x8CD3)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER", 0x8CD4)
    set_enum("GL_FRAMEBUFFER_COMPLETE", 0x8CD5)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT", 0x8CD6)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", 0x8CD7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER", 0x8CDB)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER", 0x8CDC)
    set_enum("GL_FRAMEBUFFER_UNSUPPORTED", 0x8CDD)
    set_enum("GL_MAX_COLOR_ATTACHMENTS", 0x8CDF)
    set_enum("GL_COLOR_ATTACHMENT0", 0x8CE0)
    set_enum("GL_COLOR_ATTACHMENT1", 0x8CE1)
    set_enum("GL_COLOR_ATTACHMENT2", 0x8CE2)
    set_enum("GL_COLOR_ATTACHMENT3", 0x8CE3)
    set_enum("GL_COLOR_ATTACHMENT4", 0x8CE4)
    set_enum("GL_COLOR_ATTACHMENT5", 0x8CE5)
    set_enum("GL_COLOR_ATTACHMENT6", 0x8CE6)
    set_enum("GL_COLOR_ATTACHMENT7", 0x8CE7)
    set_enum("GL_COLOR_ATTACHMENT8", 0x8CE8)
    set_enum("GL_COLOR_ATTACHMENT9", 0x8CE9)
    set_enum("GL_COLOR_ATTACHMENT10", 0x8CEA)
    set_enum("GL_COLOR_ATTACHMENT11", 0x8CEB)
    set_enum("GL_COLOR_ATTACHMENT12", 0x8CEC)
    set_enum("GL_COLOR_ATTACHMENT13", 0x8CED)
    set_enum("GL_COLOR_ATTACHMENT14", 0x8CEE)
    set_enum("GL_COLOR_ATTACHMENT15", 0x8CEF)
    set_enum("GL_COLOR_ATTACHMENT16", 0x8CF0)
    set_enum("GL_COLOR_ATTACHMENT17", 0x8CF1)
    set_enum("GL_COLOR_ATTACHMENT18", 0x8CF2)
    set_enum("GL_COLOR_ATTACHMENT19", 0x8CF3)
    set_enum("GL_COLOR_ATTACHMENT20", 0x8CF4)
    set_enum("GL_COLOR_ATTACHMENT21", 0x8CF5)
    set_enum("GL_COLOR_ATTACHMENT22", 0x8CF6)
    set_enum("GL_COLOR_ATTACHMENT23", 0x8CF7)
    set_enum("GL_COLOR_ATTACHMENT24", 0x8CF8)
    set_enum("GL_COLOR_ATTACHMENT25", 0x8CF9)
    set_enum("GL_COLOR_ATTACHMENT26", 0x8CFA)
    set_enum("GL_COLOR_ATTACHMENT27", 0x8CFB)
    set_enum("GL_COLOR_ATTACHMENT28", 0x8CFC)
    set_enum("GL_COLOR_ATTACHMENT29", 0x8CFD)
    set_enum("GL_COLOR_ATTACHMENT30", 0x8CFE)
    set_enum("GL_COLOR_ATTACHMENT31", 0x8CFF)
    set_enum("GL_DEPTH_ATTACHMENT", 0x8D00)
    set_enum("GL_STENCIL_ATTACHMENT", 0x8D20)
    set_enum("GL_FRAMEBUFFER", 0x8D40)
    set_enum("GL_RENDERBUFFER", 0x8D41)
    set_enum("GL_RENDERBUFFER_WIDTH", 0x8D42)
    set_enum("GL_RENDERBUFFER_HEIGHT", 0x8D43)
    set_enum("GL_RENDERBUFFER_INTERNAL_FORMAT", 0x8D44)
    set_enum("GL_STENCIL_INDEX1", 0x8D46)
    set_enum("GL_STENCIL_INDEX4", 0x8D47)
    set_enum("GL_STENCIL_INDEX8", 0x8D48)
    set_enum("GL_STENCIL_INDEX16", 0x8D49)
    set_enum("GL_RENDERBUFFER_RED_SIZE", 0x8D50)
    set_enum("GL_RENDERBUFFER_GREEN_SIZE", 0x8D51)
    set_enum("GL_RENDERBUFFER_BLUE_SIZE", 0x8D52)
    set_enum("GL_RENDERBUFFER_ALPHA_SIZE", 0x8D53)
    set_enum("GL_RENDERBUFFER_DEPTH_SIZE", 0x8D54)
    set_enum("GL_RENDERBUFFER_STENCIL_SIZE", 0x8D55)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE", 0x8D56)
    set_enum("GL_MAX_SAMPLES", 0x8D57)
    set_enum("GL_FRAMEBUFFER_SRGB", 0x8DB9)
    set_enum("GL_HALF_FLOAT", 0x140B)
    set_enum("GL_MAP_READ_BIT", 0x0001)
    set_enum("GL_MAP_WRITE_BIT", 0x0002)
    set_enum("GL_MAP_INVALIDATE_RANGE_BIT", 0x0004)
    set_enum("GL_MAP_INVALIDATE_BUFFER_BIT", 0x0008)
    set_enum("GL_MAP_FLUSH_EXPLICIT_BIT", 0x0010)
    set_enum("GL_MAP_UNSYNCHRONIZED_BIT", 0x0020)
    set_enum("GL_COMPRESSED_RED_RGTC1", 0x8DBB)
    set_enum("GL_COMPRESSED_SIGNED_RED_RGTC1", 0x8DBC)
    set_enum("GL_COMPRESSED_RG_RGTC2", 0x8DBD)
    set_enum("GL_COMPRESSED_SIGNED_RG_RGTC2", 0x8DBE)
    set_enum("GL_RG", 0x8227)
    set_enum("GL_RG_INTEGER", 0x8228)
    set_enum("GL_R8", 0x8229)
    set_enum("GL_R16", 0x822A)
    set_enum("GL_RG8", 0x822B)
    set_enum("GL_RG16", 0x822C)
    set_enum("GL_R16F", 0x822D)
    set_enum("GL_R32F", 0x822E)
    set_enum("GL_RG16F", 0x822F)
    set_enum("GL_RG32F", 0x8230)
    set_enum("GL_R8I", 0x8231)
    set_enum("GL_R8UI", 0x8232)
    set_enum("GL_R16I", 0x8233)
    set_enum("GL_R16UI", 0x8234)
    set_enum("GL_R32I", 0x8235)
    set_enum("GL_R32UI", 0x8236)
    set_enum("GL_RG8I", 0x8237)
    set_enum("GL_RG8UI", 0x8238)
    set_enum("GL_RG16I", 0x8239)
    set_enum("GL_RG16UI", 0x823A)
    set_enum("GL_RG32I", 0x823B)
    set_enum("GL_RG32UI", 0x823C)
    set_enum("GL_VERTEX_ARRAY_BINDING", 0x85B5)
    set_enum("GL_CLAMP_VERTEX_COLOR", 0x891A)
    set_enum("GL_CLAMP_FRAGMENT_COLOR", 0x891B)
    set_enum("GL_ALPHA_INTEGER", 0x8D97)


#### GL VERSION 3.1 ####
def init_gl_version_3_1():
    set_func('glDrawArraysInstanced', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glDrawElementsInstanced', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glTexBuffer', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glPrimitiveRestartIndex', t.void, (t.GLuint,))
    set_func('glCopyBufferSubData', t.void, (t.GLenum, t.GLenum, t.GLintptr, t.GLintptr, t.GLsizeiptr))
    set_func('glGetUniformIndices', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), ct.POINTER(t.GLuint)))
    set_func('glGetActiveUniformsiv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetActiveUniformName', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetUniformBlockIndex', t.GLuint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetActiveUniformBlockiv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetActiveUniformBlockName', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glUniformBlockBinding', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glBindBufferRange', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glBindBufferBase', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glGetIntegeri_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_enum("GL_SAMPLER_2D_RECT", 0x8B63)
    set_enum("GL_SAMPLER_2D_RECT_SHADOW", 0x8B64)
    set_enum("GL_SAMPLER_BUFFER", 0x8DC2)
    set_enum("GL_INT_SAMPLER_2D_RECT", 0x8DCD)
    set_enum("GL_INT_SAMPLER_BUFFER", 0x8DD0)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_RECT", 0x8DD5)
    set_enum("GL_UNSIGNED_INT_SAMPLER_BUFFER", 0x8DD8)
    set_enum("GL_TEXTURE_BUFFER", 0x8C2A)
    set_enum("GL_MAX_TEXTURE_BUFFER_SIZE", 0x8C2B)
    set_enum("GL_TEXTURE_BINDING_BUFFER", 0x8C2C)
    set_enum("GL_TEXTURE_BUFFER_DATA_STORE_BINDING", 0x8C2D)
    set_enum("GL_TEXTURE_RECTANGLE", 0x84F5)
    set_enum("GL_TEXTURE_BINDING_RECTANGLE", 0x84F6)
    set_enum("GL_PROXY_TEXTURE_RECTANGLE", 0x84F7)
    set_enum("GL_MAX_RECTANGLE_TEXTURE_SIZE", 0x84F8)
    set_enum("GL_R8_SNORM", 0x8F94)
    set_enum("GL_RG8_SNORM", 0x8F95)
    set_enum("GL_RGB8_SNORM", 0x8F96)
    set_enum("GL_RGBA8_SNORM", 0x8F97)
    set_enum("GL_R16_SNORM", 0x8F98)
    set_enum("GL_RG16_SNORM", 0x8F99)
    set_enum("GL_RGB16_SNORM", 0x8F9A)
    set_enum("GL_RGBA16_SNORM", 0x8F9B)
    set_enum("GL_SIGNED_NORMALIZED", 0x8F9C)
    set_enum("GL_PRIMITIVE_RESTART", 0x8F9D)
    set_enum("GL_PRIMITIVE_RESTART_INDEX", 0x8F9E)
    set_enum("GL_COPY_READ_BUFFER", 0x8F36)
    set_enum("GL_COPY_WRITE_BUFFER", 0x8F37)
    set_enum("GL_UNIFORM_BUFFER", 0x8A11)
    set_enum("GL_UNIFORM_BUFFER_BINDING", 0x8A28)
    set_enum("GL_UNIFORM_BUFFER_START", 0x8A29)
    set_enum("GL_UNIFORM_BUFFER_SIZE", 0x8A2A)
    set_enum("GL_MAX_VERTEX_UNIFORM_BLOCKS", 0x8A2B)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_BLOCKS", 0x8A2C)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_BLOCKS", 0x8A2D)
    set_enum("GL_MAX_COMBINED_UNIFORM_BLOCKS", 0x8A2E)
    set_enum("GL_MAX_UNIFORM_BUFFER_BINDINGS", 0x8A2F)
    set_enum("GL_MAX_UNIFORM_BLOCK_SIZE", 0x8A30)
    set_enum("GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS", 0x8A31)
    set_enum("GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS", 0x8A32)
    set_enum("GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS", 0x8A33)
    set_enum("GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT", 0x8A34)
    set_enum("GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH", 0x8A35)
    set_enum("GL_ACTIVE_UNIFORM_BLOCKS", 0x8A36)
    set_enum("GL_UNIFORM_TYPE", 0x8A37)
    set_enum("GL_UNIFORM_SIZE", 0x8A38)
    set_enum("GL_UNIFORM_NAME_LENGTH", 0x8A39)
    set_enum("GL_UNIFORM_BLOCK_INDEX", 0x8A3A)
    set_enum("GL_UNIFORM_OFFSET", 0x8A3B)
    set_enum("GL_UNIFORM_ARRAY_STRIDE", 0x8A3C)
    set_enum("GL_UNIFORM_MATRIX_STRIDE", 0x8A3D)
    set_enum("GL_UNIFORM_IS_ROW_MAJOR", 0x8A3E)
    set_enum("GL_UNIFORM_BLOCK_BINDING", 0x8A3F)
    set_enum("GL_UNIFORM_BLOCK_DATA_SIZE", 0x8A40)
    set_enum("GL_UNIFORM_BLOCK_NAME_LENGTH", 0x8A41)
    set_enum("GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS", 0x8A42)
    set_enum("GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES", 0x8A43)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER", 0x8A44)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER", 0x8A45)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER", 0x8A46)
    set_enum("GL_INVALID_INDEX", 0xFFFFFFFF)


#### GL VERSION 3.2 ####
def init_gl_version_3_2():
    set_func('glDrawElementsBaseVertex', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawRangeElementsBaseVertex', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawElementsInstancedBaseVertex', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLint))
    set_func('glMultiDrawElementsBaseVertex', t.void, (t.GLenum, ct.POINTER(t.GLsizei), t.GLenum, ct.POINTER(ct.POINTER(t.void)), t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProvokingVertex', t.void, (t.GLenum,))
    set_func('glFenceSync', t.GLsync, (t.GLenum, t.GLbitfield))
    set_func('glIsSync', t.GLboolean, (t.GLsync,))
    set_func('glDeleteSync', t.void, (t.GLsync,))
    set_func('glClientWaitSync', t.GLenum, (t.GLsync, t.GLbitfield, t.GLuint64))
    set_func('glWaitSync', t.void, (t.GLsync, t.GLbitfield, t.GLuint64))
    set_func('glGetInteger64v', t.void, (t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetSynciv', t.void, (t.GLsync, t.GLenum, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint)))
    set_func('glGetInteger64i_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint64)))
    set_func('glGetBufferParameteri64v', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glFramebufferTexture', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glTexImage2DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTexImage3DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glGetMultisamplefv', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glSampleMaski', t.void, (t.GLuint, t.GLbitfield))
    set_enum("GL_CONTEXT_CORE_PROFILE_BIT", 0x00000001)
    set_enum("GL_CONTEXT_COMPATIBILITY_PROFILE_BIT", 0x00000002)
    set_enum("GL_LINES_ADJACENCY", 0x000A)
    set_enum("GL_LINE_STRIP_ADJACENCY", 0x000B)
    set_enum("GL_TRIANGLES_ADJACENCY", 0x000C)
    set_enum("GL_TRIANGLE_STRIP_ADJACENCY", 0x000D)
    set_enum("GL_PROGRAM_POINT_SIZE", 0x8642)
    set_enum("GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS", 0x8C29)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_LAYERED", 0x8DA7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS", 0x8DA8)
    set_enum("GL_GEOMETRY_SHADER", 0x8DD9)
    set_enum("GL_GEOMETRY_VERTICES_OUT", 0x8916)
    set_enum("GL_GEOMETRY_INPUT_TYPE", 0x8917)
    set_enum("GL_GEOMETRY_OUTPUT_TYPE", 0x8918)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_COMPONENTS", 0x8DDF)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_VERTICES", 0x8DE0)
    set_enum("GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS", 0x8DE1)
    set_enum("GL_MAX_VERTEX_OUTPUT_COMPONENTS", 0x9122)
    set_enum("GL_MAX_GEOMETRY_INPUT_COMPONENTS", 0x9123)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_COMPONENTS", 0x9124)
    set_enum("GL_MAX_FRAGMENT_INPUT_COMPONENTS", 0x9125)
    set_enum("GL_CONTEXT_PROFILE_MASK", 0x9126)
    set_enum("GL_DEPTH_CLAMP", 0x864F)
    set_enum("GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION", 0x8E4C)
    set_enum("GL_FIRST_VERTEX_CONVENTION", 0x8E4D)
    set_enum("GL_LAST_VERTEX_CONVENTION", 0x8E4E)
    set_enum("GL_PROVOKING_VERTEX", 0x8E4F)
    set_enum("GL_TEXTURE_CUBE_MAP_SEAMLESS", 0x884F)
    set_enum("GL_MAX_SERVER_WAIT_TIMEOUT", 0x9111)
    set_enum("GL_OBJECT_TYPE", 0x9112)
    set_enum("GL_SYNC_CONDITION", 0x9113)
    set_enum("GL_SYNC_STATUS", 0x9114)
    set_enum("GL_SYNC_FLAGS", 0x9115)
    set_enum("GL_SYNC_FENCE", 0x9116)
    set_enum("GL_SYNC_GPU_COMMANDS_COMPLETE", 0x9117)
    set_enum("GL_UNSIGNALED", 0x9118)
    set_enum("GL_SIGNALED", 0x9119)
    set_enum("GL_ALREADY_SIGNALED", 0x911A)
    set_enum("GL_TIMEOUT_EXPIRED", 0x911B)
    set_enum("GL_CONDITION_SATISFIED", 0x911C)
    set_enum("GL_WAIT_FAILED", 0x911D)
    set_enum("GL_TIMEOUT_IGNORED", 0xFFFFFFFFFFFFFFFF)
    set_enum("GL_SYNC_FLUSH_COMMANDS_BIT", 0x00000001)
    set_enum("GL_SAMPLE_POSITION", 0x8E50)
    set_enum("GL_SAMPLE_MASK", 0x8E51)
    set_enum("GL_SAMPLE_MASK_VALUE", 0x8E52)
    set_enum("GL_MAX_SAMPLE_MASK_WORDS", 0x8E59)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE", 0x9100)
    set_enum("GL_PROXY_TEXTURE_2D_MULTISAMPLE", 0x9101)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE_ARRAY", 0x9102)
    set_enum("GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY", 0x9103)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE", 0x9104)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY", 0x9105)
    set_enum("GL_TEXTURE_SAMPLES", 0x9106)
    set_enum("GL_TEXTURE_FIXED_SAMPLE_LOCATIONS", 0x9107)
    set_enum("GL_SAMPLER_2D_MULTISAMPLE", 0x9108)
    set_enum("GL_INT_SAMPLER_2D_MULTISAMPLE", 0x9109)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE", 0x910A)
    set_enum("GL_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910B)
    set_enum("GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910C)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910D)
    set_enum("GL_MAX_COLOR_TEXTURE_SAMPLES", 0x910E)
    set_enum("GL_MAX_DEPTH_TEXTURE_SAMPLES", 0x910F)
    set_enum("GL_MAX_INTEGER_SAMPLES", 0x9110)


#### GL VERSION 3.3 ####
def init_gl_version_3_3():
    set_func('glBindFragDataLocationIndexed', t.void, (t.GLuint, t.GLuint, t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetFragDataIndex', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGenSamplers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteSamplers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsSampler', t.GLboolean, (t.GLuint,))
    set_func('glBindSampler', t.void, (t.GLuint, t.GLuint))
    set_func('glSamplerParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glSamplerParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glSamplerParameterf', t.void, (t.GLuint, t.GLenum, t.GLfloat))
    set_func('glSamplerParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glSamplerParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glSamplerParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetSamplerParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSamplerParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSamplerParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetSamplerParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glQueryCounter', t.void, (t.GLuint, t.GLenum))
    set_func('glGetQueryObjecti64v', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetQueryObjectui64v', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint64)))
    set_func('glVertexAttribDivisor', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexAttribP1ui', t.void, (t.GLuint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribP1uiv', t.void, (t.GLuint, t.GLenum, t.GLboolean, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribP2ui', t.void, (t.GLuint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribP2uiv', t.void, (t.GLuint, t.GLenum, t.GLboolean, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribP3ui', t.void, (t.GLuint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribP3uiv', t.void, (t.GLuint, t.GLenum, t.GLboolean, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribP4ui', t.void, (t.GLuint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribP4uiv', t.void, (t.GLuint, t.GLenum, t.GLboolean, ct.POINTER(t.GLuint)))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_DIVISOR", 0x88FE)
    set_enum("GL_SRC1_COLOR", 0x88F9)
    set_enum("GL_ONE_MINUS_SRC1_COLOR", 0x88FA)
    set_enum("GL_ONE_MINUS_SRC1_ALPHA", 0x88FB)
    set_enum("GL_MAX_DUAL_SOURCE_DRAW_BUFFERS", 0x88FC)
    set_enum("GL_ANY_SAMPLES_PASSED", 0x8C2F)
    set_enum("GL_SAMPLER_BINDING", 0x8919)
    set_enum("GL_RGB10_A2UI", 0x906F)
    set_enum("GL_TEXTURE_SWIZZLE_R", 0x8E42)
    set_enum("GL_TEXTURE_SWIZZLE_G", 0x8E43)
    set_enum("GL_TEXTURE_SWIZZLE_B", 0x8E44)
    set_enum("GL_TEXTURE_SWIZZLE_A", 0x8E45)
    set_enum("GL_TEXTURE_SWIZZLE_RGBA", 0x8E46)
    set_enum("GL_TIME_ELAPSED", 0x88BF)
    set_enum("GL_TIMESTAMP", 0x8E28)
    set_enum("GL_INT_2_10_10_10_REV", 0x8D9F)


#### GL VERSION 4.0 ####
def init_gl_version_4_0():
    set_func('glMinSampleShading', t.void, (t.GLfloat,))
    set_func('glBlendEquationi', t.void, (t.GLuint, t.GLenum))
    set_func('glBlendEquationSeparatei', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFunci', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFuncSeparatei', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glDrawArraysIndirect', t.void, (t.GLenum, ct.POINTER(t.void)))
    set_func('glDrawElementsIndirect', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glUniform1d', t.void, (t.GLint, t.GLdouble))
    set_func('glUniform2d', t.void, (t.GLint, t.GLdouble, t.GLdouble))
    set_func('glUniform3d', t.void, (t.GLint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glUniform4d', t.void, (t.GLint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glUniform1dv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glUniform2dv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glUniform3dv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glUniform4dv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix2dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix3dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix4dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix2x3dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix2x4dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix3x2dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix3x4dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix4x2dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix4x3dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glGetUniformdv', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLdouble)))
    set_func('glGetSubroutineUniformLocation', t.GLint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetSubroutineIndex', t.GLuint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetActiveSubroutineUniformiv', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetActiveSubroutineUniformName', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetActiveSubroutineName', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glUniformSubroutinesuiv', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetUniformSubroutineuiv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glGetProgramStageiv', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glPatchParameteri', t.void, (t.GLenum, t.GLint))
    set_func('glPatchParameterfv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glBindTransformFeedback', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteTransformFeedbacks', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTransformFeedbacks', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsTransformFeedback', t.GLboolean, (t.GLuint,))
    set_func('glPauseTransformFeedback', t.void, ())
    set_func('glResumeTransformFeedback', t.void, ())
    set_func('glDrawTransformFeedback', t.void, (t.GLenum, t.GLuint))
    set_func('glDrawTransformFeedbackStream', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glBeginQueryIndexed', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glEndQueryIndexed', t.void, (t.GLenum, t.GLuint))
    set_func('glGetQueryIndexediv', t.void, (t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_SAMPLE_SHADING", 0x8C36)
    set_enum("GL_MIN_SAMPLE_SHADING_VALUE", 0x8C37)
    set_enum("GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET", 0x8E5E)
    set_enum("GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET", 0x8E5F)
    set_enum("GL_TEXTURE_CUBE_MAP_ARRAY", 0x9009)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_ARRAY", 0x900A)
    set_enum("GL_PROXY_TEXTURE_CUBE_MAP_ARRAY", 0x900B)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY", 0x900C)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW", 0x900D)
    set_enum("GL_INT_SAMPLER_CUBE_MAP_ARRAY", 0x900E)
    set_enum("GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY", 0x900F)
    set_enum("GL_DRAW_INDIRECT_BUFFER", 0x8F3F)
    set_enum("GL_DRAW_INDIRECT_BUFFER_BINDING", 0x8F43)
    set_enum("GL_GEOMETRY_SHADER_INVOCATIONS", 0x887F)
    set_enum("GL_MAX_GEOMETRY_SHADER_INVOCATIONS", 0x8E5A)
    set_enum("GL_MIN_FRAGMENT_INTERPOLATION_OFFSET", 0x8E5B)
    set_enum("GL_MAX_FRAGMENT_INTERPOLATION_OFFSET", 0x8E5C)
    set_enum("GL_FRAGMENT_INTERPOLATION_OFFSET_BITS", 0x8E5D)
    set_enum("GL_MAX_VERTEX_STREAMS", 0x8E71)
    set_enum("GL_DOUBLE_VEC2", 0x8FFC)
    set_enum("GL_DOUBLE_VEC3", 0x8FFD)
    set_enum("GL_DOUBLE_VEC4", 0x8FFE)
    set_enum("GL_DOUBLE_MAT2", 0x8F46)
    set_enum("GL_DOUBLE_MAT3", 0x8F47)
    set_enum("GL_DOUBLE_MAT4", 0x8F48)
    set_enum("GL_DOUBLE_MAT2x3", 0x8F49)
    set_enum("GL_DOUBLE_MAT2x4", 0x8F4A)
    set_enum("GL_DOUBLE_MAT3x2", 0x8F4B)
    set_enum("GL_DOUBLE_MAT3x4", 0x8F4C)
    set_enum("GL_DOUBLE_MAT4x2", 0x8F4D)
    set_enum("GL_DOUBLE_MAT4x3", 0x8F4E)
    set_enum("GL_ACTIVE_SUBROUTINES", 0x8DE5)
    set_enum("GL_ACTIVE_SUBROUTINE_UNIFORMS", 0x8DE6)
    set_enum("GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS", 0x8E47)
    set_enum("GL_ACTIVE_SUBROUTINE_MAX_LENGTH", 0x8E48)
    set_enum("GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH", 0x8E49)
    set_enum("GL_MAX_SUBROUTINES", 0x8DE7)
    set_enum("GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS", 0x8DE8)
    set_enum("GL_NUM_COMPATIBLE_SUBROUTINES", 0x8E4A)
    set_enum("GL_COMPATIBLE_SUBROUTINES", 0x8E4B)
    set_enum("GL_PATCHES", 0x000E)
    set_enum("GL_PATCH_VERTICES", 0x8E72)
    set_enum("GL_PATCH_DEFAULT_INNER_LEVEL", 0x8E73)
    set_enum("GL_PATCH_DEFAULT_OUTER_LEVEL", 0x8E74)
    set_enum("GL_TESS_CONTROL_OUTPUT_VERTICES", 0x8E75)
    set_enum("GL_TESS_GEN_MODE", 0x8E76)
    set_enum("GL_TESS_GEN_SPACING", 0x8E77)
    set_enum("GL_TESS_GEN_VERTEX_ORDER", 0x8E78)
    set_enum("GL_TESS_GEN_POINT_MODE", 0x8E79)
    set_enum("GL_ISOLINES", 0x8E7A)
    set_enum("GL_QUADS", 0x0007)
    set_enum("GL_FRACTIONAL_ODD", 0x8E7B)
    set_enum("GL_FRACTIONAL_EVEN", 0x8E7C)
    set_enum("GL_MAX_PATCH_VERTICES", 0x8E7D)
    set_enum("GL_MAX_TESS_GEN_LEVEL", 0x8E7E)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS", 0x8E7F)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS", 0x8E80)
    set_enum("GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS", 0x8E81)
    set_enum("GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS", 0x8E82)
    set_enum("GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS", 0x8E83)
    set_enum("GL_MAX_TESS_PATCH_COMPONENTS", 0x8E84)
    set_enum("GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS", 0x8E85)
    set_enum("GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS", 0x8E86)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS", 0x8E89)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS", 0x8E8A)
    set_enum("GL_MAX_TESS_CONTROL_INPUT_COMPONENTS", 0x886C)
    set_enum("GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS", 0x886D)
    set_enum("GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS", 0x8E1E)
    set_enum("GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS", 0x8E1F)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER", 0x84F0)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER", 0x84F1)
    set_enum("GL_TESS_EVALUATION_SHADER", 0x8E87)
    set_enum("GL_TESS_CONTROL_SHADER", 0x8E88)
    set_enum("GL_TRANSFORM_FEEDBACK", 0x8E22)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED", 0x8E23)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE", 0x8E24)
    set_enum("GL_TRANSFORM_FEEDBACK_BINDING", 0x8E25)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_BUFFERS", 0x8E70)


#### GL VERSION 4.1 ####
def init_gl_version_4_1():
    set_func('glReleaseShaderCompiler', t.void, ())
    set_func('glShaderBinary', t.void, (t.GLsizei, ct.POINTER(t.GLuint), t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glGetShaderPrecisionFormat', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint), ct.POINTER(t.GLint)))
    set_func('glDepthRangef', t.void, (t.GLfloat, t.GLfloat))
    set_func('glClearDepthf', t.void, (t.GLfloat,))
    set_func('glGetProgramBinary', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLenum), ct.POINTER(t.void)))
    set_func('glProgramBinary', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glProgramParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glUseProgramStages', t.void, (t.GLuint, t.GLbitfield, t.GLuint))
    set_func('glActiveShaderProgram', t.void, (t.GLuint, t.GLuint))
    set_func('glCreateShaderProgramv', t.GLuint, (t.GLenum, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar))))
    set_func('glBindProgramPipeline', t.void, (t.GLuint,))
    set_func('glDeleteProgramPipelines', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenProgramPipelines', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsProgramPipeline', t.GLboolean, (t.GLuint,))
    set_func('glGetProgramPipelineiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glProgramUniform1i', t.void, (t.GLuint, t.GLint, t.GLint))
    set_func('glProgramUniform1iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform1f', t.void, (t.GLuint, t.GLint, t.GLfloat))
    set_func('glProgramUniform1fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform1d', t.void, (t.GLuint, t.GLint, t.GLdouble))
    set_func('glProgramUniform1dv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform1ui', t.void, (t.GLuint, t.GLint, t.GLuint))
    set_func('glProgramUniform1uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform2i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform2iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform2f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform2d', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform2dv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform2ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint))
    set_func('glProgramUniform2uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform3i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform3iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform3f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform3d', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform3dv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform3ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform3uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform4i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform4iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform4f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform4d', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform4dv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform4ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform4uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniformMatrix2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix2x3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x3dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3x2dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix2x4dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4x2dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3x4dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4x3dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glValidateProgramPipeline', t.void, (t.GLuint,))
    set_func('glGetProgramPipelineInfoLog', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glVertexAttribL1d', t.void, (t.GLuint, t.GLdouble))
    set_func('glVertexAttribL2d', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL3d', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL4d', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL1dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL2dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL3dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL4dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribLPointer', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetVertexAttribLdv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glViewportArrayv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glViewportIndexedf', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glViewportIndexedfv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glScissorArrayv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glScissorIndexed', t.void, (t.GLuint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glScissorIndexedv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glDepthRangeArrayv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glDepthRangeIndexed', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glGetFloati_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetDoublei_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_enum("GL_FIXED", 0x140C)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_TYPE", 0x8B9A)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_FORMAT", 0x8B9B)
    set_enum("GL_LOW_FLOAT", 0x8DF0)
    set_enum("GL_MEDIUM_FLOAT", 0x8DF1)
    set_enum("GL_HIGH_FLOAT", 0x8DF2)
    set_enum("GL_LOW_INT", 0x8DF3)
    set_enum("GL_MEDIUM_INT", 0x8DF4)
    set_enum("GL_HIGH_INT", 0x8DF5)
    set_enum("GL_SHADER_COMPILER", 0x8DFA)
    set_enum("GL_SHADER_BINARY_FORMATS", 0x8DF8)
    set_enum("GL_NUM_SHADER_BINARY_FORMATS", 0x8DF9)
    set_enum("GL_MAX_VERTEX_UNIFORM_VECTORS", 0x8DFB)
    set_enum("GL_MAX_VARYING_VECTORS", 0x8DFC)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_VECTORS", 0x8DFD)
    set_enum("GL_RGB565", 0x8D62)
    set_enum("GL_PROGRAM_BINARY_RETRIEVABLE_HINT", 0x8257)
    set_enum("GL_PROGRAM_BINARY_LENGTH", 0x8741)
    set_enum("GL_NUM_PROGRAM_BINARY_FORMATS", 0x87FE)
    set_enum("GL_PROGRAM_BINARY_FORMATS", 0x87FF)
    set_enum("GL_VERTEX_SHADER_BIT", 0x00000001)
    set_enum("GL_FRAGMENT_SHADER_BIT", 0x00000002)
    set_enum("GL_GEOMETRY_SHADER_BIT", 0x00000004)
    set_enum("GL_TESS_CONTROL_SHADER_BIT", 0x00000008)
    set_enum("GL_TESS_EVALUATION_SHADER_BIT", 0x00000010)
    set_enum("GL_ALL_SHADER_BITS", 0xFFFFFFFF)
    set_enum("GL_PROGRAM_SEPARABLE", 0x8258)
    set_enum("GL_ACTIVE_PROGRAM", 0x8259)
    set_enum("GL_PROGRAM_PIPELINE_BINDING", 0x825A)
    set_enum("GL_MAX_VIEWPORTS", 0x825B)
    set_enum("GL_VIEWPORT_SUBPIXEL_BITS", 0x825C)
    set_enum("GL_VIEWPORT_BOUNDS_RANGE", 0x825D)
    set_enum("GL_LAYER_PROVOKING_VERTEX", 0x825E)
    set_enum("GL_VIEWPORT_INDEX_PROVOKING_VERTEX", 0x825F)
    set_enum("GL_UNDEFINED_VERTEX", 0x8260)


#### GL VERSION 4.2 ####
def init_gl_version_4_2():
    set_func('glDrawArraysInstancedBaseInstance', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei, t.GLuint))
    set_func('glDrawElementsInstancedBaseInstance', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLuint))
    set_func('glDrawElementsInstancedBaseVertexBaseInstance', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLint, t.GLuint))
    set_func('glGetInternalformativ', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glGetActiveAtomicCounterBufferiv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glBindImageTexture', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLboolean, t.GLint, t.GLenum, t.GLenum))
    set_func('glMemoryBarrier', t.void, (t.GLbitfield,))
    set_func('glTexStorage1D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei))
    set_func('glTexStorage2D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTexStorage3D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glDrawTransformFeedbackInstanced', t.void, (t.GLenum, t.GLuint, t.GLsizei))
    set_func('glDrawTransformFeedbackStreamInstanced', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei))
    set_enum("GL_COPY_READ_BUFFER_BINDING", 0x8F36)
    set_enum("GL_COPY_WRITE_BUFFER_BINDING", 0x8F37)
    set_enum("GL_TRANSFORM_FEEDBACK_ACTIVE", 0x8E24)
    set_enum("GL_TRANSFORM_FEEDBACK_PAUSED", 0x8E23)
    set_enum("GL_UNPACK_COMPRESSED_BLOCK_WIDTH", 0x9127)
    set_enum("GL_UNPACK_COMPRESSED_BLOCK_HEIGHT", 0x9128)
    set_enum("GL_UNPACK_COMPRESSED_BLOCK_DEPTH", 0x9129)
    set_enum("GL_UNPACK_COMPRESSED_BLOCK_SIZE", 0x912A)
    set_enum("GL_PACK_COMPRESSED_BLOCK_WIDTH", 0x912B)
    set_enum("GL_PACK_COMPRESSED_BLOCK_HEIGHT", 0x912C)
    set_enum("GL_PACK_COMPRESSED_BLOCK_DEPTH", 0x912D)
    set_enum("GL_PACK_COMPRESSED_BLOCK_SIZE", 0x912E)
    set_enum("GL_NUM_SAMPLE_COUNTS", 0x9380)
    set_enum("GL_MIN_MAP_BUFFER_ALIGNMENT", 0x90BC)
    set_enum("GL_ATOMIC_COUNTER_BUFFER", 0x92C0)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_BINDING", 0x92C1)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_START", 0x92C2)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_SIZE", 0x92C3)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE", 0x92C4)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS", 0x92C5)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES", 0x92C6)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER", 0x92C7)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER", 0x92C8)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER", 0x92C9)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER", 0x92CA)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER", 0x92CB)
    set_enum("GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS", 0x92CC)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS", 0x92CD)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS", 0x92CE)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS", 0x92CF)
    set_enum("GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS", 0x92D0)
    set_enum("GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS", 0x92D1)
    set_enum("GL_MAX_VERTEX_ATOMIC_COUNTERS", 0x92D2)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS", 0x92D3)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS", 0x92D4)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTERS", 0x92D5)
    set_enum("GL_MAX_FRAGMENT_ATOMIC_COUNTERS", 0x92D6)
    set_enum("GL_MAX_COMBINED_ATOMIC_COUNTERS", 0x92D7)
    set_enum("GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE", 0x92D8)
    set_enum("GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS", 0x92DC)
    set_enum("GL_ACTIVE_ATOMIC_COUNTER_BUFFERS", 0x92D9)
    set_enum("GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX", 0x92DA)
    set_enum("GL_UNSIGNED_INT_ATOMIC_COUNTER", 0x92DB)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT", 0x00000001)
    set_enum("GL_ELEMENT_ARRAY_BARRIER_BIT", 0x00000002)
    set_enum("GL_UNIFORM_BARRIER_BIT", 0x00000004)
    set_enum("GL_TEXTURE_FETCH_BARRIER_BIT", 0x00000008)
    set_enum("GL_SHADER_IMAGE_ACCESS_BARRIER_BIT", 0x00000020)
    set_enum("GL_COMMAND_BARRIER_BIT", 0x00000040)
    set_enum("GL_PIXEL_BUFFER_BARRIER_BIT", 0x00000080)
    set_enum("GL_TEXTURE_UPDATE_BARRIER_BIT", 0x00000100)
    set_enum("GL_BUFFER_UPDATE_BARRIER_BIT", 0x00000200)
    set_enum("GL_FRAMEBUFFER_BARRIER_BIT", 0x00000400)
    set_enum("GL_TRANSFORM_FEEDBACK_BARRIER_BIT", 0x00000800)
    set_enum("GL_ATOMIC_COUNTER_BARRIER_BIT", 0x00001000)
    set_enum("GL_ALL_BARRIER_BITS", 0xFFFFFFFF)
    set_enum("GL_MAX_IMAGE_UNITS", 0x8F38)
    set_enum("GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS", 0x8F39)
    set_enum("GL_IMAGE_BINDING_NAME", 0x8F3A)
    set_enum("GL_IMAGE_BINDING_LEVEL", 0x8F3B)
    set_enum("GL_IMAGE_BINDING_LAYERED", 0x8F3C)
    set_enum("GL_IMAGE_BINDING_LAYER", 0x8F3D)
    set_enum("GL_IMAGE_BINDING_ACCESS", 0x8F3E)
    set_enum("GL_IMAGE_1D", 0x904C)
    set_enum("GL_IMAGE_2D", 0x904D)
    set_enum("GL_IMAGE_3D", 0x904E)
    set_enum("GL_IMAGE_2D_RECT", 0x904F)
    set_enum("GL_IMAGE_CUBE", 0x9050)
    set_enum("GL_IMAGE_BUFFER", 0x9051)
    set_enum("GL_IMAGE_1D_ARRAY", 0x9052)
    set_enum("GL_IMAGE_2D_ARRAY", 0x9053)
    set_enum("GL_IMAGE_CUBE_MAP_ARRAY", 0x9054)
    set_enum("GL_IMAGE_2D_MULTISAMPLE", 0x9055)
    set_enum("GL_IMAGE_2D_MULTISAMPLE_ARRAY", 0x9056)
    set_enum("GL_INT_IMAGE_1D", 0x9057)
    set_enum("GL_INT_IMAGE_2D", 0x9058)
    set_enum("GL_INT_IMAGE_3D", 0x9059)
    set_enum("GL_INT_IMAGE_2D_RECT", 0x905A)
    set_enum("GL_INT_IMAGE_CUBE", 0x905B)
    set_enum("GL_INT_IMAGE_BUFFER", 0x905C)
    set_enum("GL_INT_IMAGE_1D_ARRAY", 0x905D)
    set_enum("GL_INT_IMAGE_2D_ARRAY", 0x905E)
    set_enum("GL_INT_IMAGE_CUBE_MAP_ARRAY", 0x905F)
    set_enum("GL_INT_IMAGE_2D_MULTISAMPLE", 0x9060)
    set_enum("GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY", 0x9061)
    set_enum("GL_UNSIGNED_INT_IMAGE_1D", 0x9062)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D", 0x9063)
    set_enum("GL_UNSIGNED_INT_IMAGE_3D", 0x9064)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_RECT", 0x9065)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE", 0x9066)
    set_enum("GL_UNSIGNED_INT_IMAGE_BUFFER", 0x9067)
    set_enum("GL_UNSIGNED_INT_IMAGE_1D_ARRAY", 0x9068)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_ARRAY", 0x9069)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY", 0x906A)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE", 0x906B)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY", 0x906C)
    set_enum("GL_MAX_IMAGE_SAMPLES", 0x906D)
    set_enum("GL_IMAGE_BINDING_FORMAT", 0x906E)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_TYPE", 0x90C7)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE", 0x90C8)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS", 0x90C9)
    set_enum("GL_MAX_VERTEX_IMAGE_UNIFORMS", 0x90CA)
    set_enum("GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS", 0x90CB)
    set_enum("GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS", 0x90CC)
    set_enum("GL_MAX_GEOMETRY_IMAGE_UNIFORMS", 0x90CD)
    set_enum("GL_MAX_FRAGMENT_IMAGE_UNIFORMS", 0x90CE)
    set_enum("GL_MAX_COMBINED_IMAGE_UNIFORMS", 0x90CF)
    set_enum("GL_COMPRESSED_RGBA_BPTC_UNORM", 0x8E8C)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM", 0x8E8D)
    set_enum("GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT", 0x8E8E)
    set_enum("GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT", 0x8E8F)
    set_enum("GL_TEXTURE_IMMUTABLE_FORMAT", 0x912F)


#### GL VERSION 4.3 ####
def init_gl_version_4_3():
    set_func('glClearBufferData', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glClearBufferSubData', t.void, (t.GLenum, t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glDispatchCompute', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glDispatchComputeIndirect', t.void, (t.GLintptr,))
    set_func('glCopyImageSubData', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glFramebufferParameteri', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glGetFramebufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetInternalformati64v', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glInvalidateTexSubImage', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glInvalidateTexImage', t.void, (t.GLuint, t.GLint))
    set_func('glInvalidateBufferSubData', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glInvalidateBufferData', t.void, (t.GLuint,))
    set_func('glInvalidateFramebuffer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glInvalidateSubFramebuffer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLenum), t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glMultiDrawArraysIndirect', t.void, (t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei))
    set_func('glMultiDrawElementsIndirect', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei))
    set_func('glGetProgramInterfaceiv', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramResourceIndex', t.GLuint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceName', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceiv', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint)))
    set_func('glGetProgramResourceLocation', t.GLint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceLocationIndex', t.GLint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glShaderStorageBlockBinding', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glTexBufferRange', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glTexStorage2DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTexStorage3DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureView', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glBindVertexBuffer', t.void, (t.GLuint, t.GLuint, t.GLintptr, t.GLsizei))
    set_func('glVertexAttribFormat', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribIFormat', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexAttribLFormat', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexAttribBinding', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexBindingDivisor', t.void, (t.GLuint, t.GLuint))
    set_func('glDebugMessageControl', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLuint), t.GLboolean))
    set_func('glDebugMessageInsert', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLenum, t.GLsizei, ct.POINTER(t.GLchar)))
#     set_func('glDebugMessageCallback', t.void, (t.GLDEBUGPROC, ct.POINTER(t.void)))
    set_func('glGetDebugMessageLog', t.GLuint, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), ct.POINTER(t.GLenum), ct.POINTER(t.GLuint), ct.POINTER(t.GLenum), ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glPushDebugGroup', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glPopDebugGroup', t.void, ())
    set_func('glObjectLabel', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectLabel', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glObjectPtrLabel', t.void, (ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectPtrLabel', t.void, (ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetPointerv', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_NUM_SHADING_LANGUAGE_VERSIONS", 0x82E9)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_LONG", 0x874E)
    set_enum("GL_COMPRESSED_RGB8_ETC2", 0x9274)
    set_enum("GL_COMPRESSED_SRGB8_ETC2", 0x9275)
    set_enum("GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2", 0x9276)
    set_enum("GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2", 0x9277)
    set_enum("GL_COMPRESSED_RGBA8_ETC2_EAC", 0x9278)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC", 0x9279)
    set_enum("GL_COMPRESSED_R11_EAC", 0x9270)
    set_enum("GL_COMPRESSED_SIGNED_R11_EAC", 0x9271)
    set_enum("GL_COMPRESSED_RG11_EAC", 0x9272)
    set_enum("GL_COMPRESSED_SIGNED_RG11_EAC", 0x9273)
    set_enum("GL_PRIMITIVE_RESTART_FIXED_INDEX", 0x8D69)
    set_enum("GL_ANY_SAMPLES_PASSED_CONSERVATIVE", 0x8D6A)
    set_enum("GL_MAX_ELEMENT_INDEX", 0x8D6B)
    set_enum("GL_COMPUTE_SHADER", 0x91B9)
    set_enum("GL_MAX_COMPUTE_UNIFORM_BLOCKS", 0x91BB)
    set_enum("GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS", 0x91BC)
    set_enum("GL_MAX_COMPUTE_IMAGE_UNIFORMS", 0x91BD)
    set_enum("GL_MAX_COMPUTE_SHARED_MEMORY_SIZE", 0x8262)
    set_enum("GL_MAX_COMPUTE_UNIFORM_COMPONENTS", 0x8263)
    set_enum("GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS", 0x8264)
    set_enum("GL_MAX_COMPUTE_ATOMIC_COUNTERS", 0x8265)
    set_enum("GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS", 0x8266)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS", 0x90EB)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_COUNT", 0x91BE)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_SIZE", 0x91BF)
    set_enum("GL_COMPUTE_WORK_GROUP_SIZE", 0x8267)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER", 0x90EC)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER", 0x90ED)
    set_enum("GL_DISPATCH_INDIRECT_BUFFER", 0x90EE)
    set_enum("GL_DISPATCH_INDIRECT_BUFFER_BINDING", 0x90EF)
    set_enum("GL_COMPUTE_SHADER_BIT", 0x00000020)
    set_enum("GL_DEBUG_OUTPUT_SYNCHRONOUS", 0x8242)
    set_enum("GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH", 0x8243)
    set_enum("GL_DEBUG_CALLBACK_FUNCTION", 0x8244)
    set_enum("GL_DEBUG_CALLBACK_USER_PARAM", 0x8245)
    set_enum("GL_DEBUG_SOURCE_API", 0x8246)
    set_enum("GL_DEBUG_SOURCE_WINDOW_SYSTEM", 0x8247)
    set_enum("GL_DEBUG_SOURCE_SHADER_COMPILER", 0x8248)
    set_enum("GL_DEBUG_SOURCE_THIRD_PARTY", 0x8249)
    set_enum("GL_DEBUG_SOURCE_APPLICATION", 0x824A)
    set_enum("GL_DEBUG_SOURCE_OTHER", 0x824B)
    set_enum("GL_DEBUG_TYPE_ERROR", 0x824C)
    set_enum("GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR", 0x824D)
    set_enum("GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR", 0x824E)
    set_enum("GL_DEBUG_TYPE_PORTABILITY", 0x824F)
    set_enum("GL_DEBUG_TYPE_PERFORMANCE", 0x8250)
    set_enum("GL_DEBUG_TYPE_OTHER", 0x8251)
    set_enum("GL_MAX_DEBUG_MESSAGE_LENGTH", 0x9143)
    set_enum("GL_MAX_DEBUG_LOGGED_MESSAGES", 0x9144)
    set_enum("GL_DEBUG_LOGGED_MESSAGES", 0x9145)
    set_enum("GL_DEBUG_SEVERITY_HIGH", 0x9146)
    set_enum("GL_DEBUG_SEVERITY_MEDIUM", 0x9147)
    set_enum("GL_DEBUG_SEVERITY_LOW", 0x9148)
    set_enum("GL_DEBUG_TYPE_MARKER", 0x8268)
    set_enum("GL_DEBUG_TYPE_PUSH_GROUP", 0x8269)
    set_enum("GL_DEBUG_TYPE_POP_GROUP", 0x826A)
    set_enum("GL_DEBUG_SEVERITY_NOTIFICATION", 0x826B)
    set_enum("GL_MAX_DEBUG_GROUP_STACK_DEPTH", 0x826C)
    set_enum("GL_DEBUG_GROUP_STACK_DEPTH", 0x826D)
    set_enum("GL_BUFFER", 0x82E0)
    set_enum("GL_SHADER", 0x82E1)
    set_enum("GL_PROGRAM", 0x82E2)
    set_enum("GL_VERTEX_ARRAY", 0x8074)
    set_enum("GL_QUERY", 0x82E3)
    set_enum("GL_PROGRAM_PIPELINE", 0x82E4)
    set_enum("GL_SAMPLER", 0x82E6)
    set_enum("GL_MAX_LABEL_LENGTH", 0x82E8)
    set_enum("GL_DEBUG_OUTPUT", 0x92E0)
    set_enum("GL_CONTEXT_FLAG_DEBUG_BIT", 0x00000002)
    set_enum("GL_MAX_UNIFORM_LOCATIONS", 0x826E)
    set_enum("GL_FRAMEBUFFER_DEFAULT_WIDTH", 0x9310)
    set_enum("GL_FRAMEBUFFER_DEFAULT_HEIGHT", 0x9311)
    set_enum("GL_FRAMEBUFFER_DEFAULT_LAYERS", 0x9312)
    set_enum("GL_FRAMEBUFFER_DEFAULT_SAMPLES", 0x9313)
    set_enum("GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS", 0x9314)
    set_enum("GL_MAX_FRAMEBUFFER_WIDTH", 0x9315)
    set_enum("GL_MAX_FRAMEBUFFER_HEIGHT", 0x9316)
    set_enum("GL_MAX_FRAMEBUFFER_LAYERS", 0x9317)
    set_enum("GL_MAX_FRAMEBUFFER_SAMPLES", 0x9318)
    set_enum("GL_INTERNALFORMAT_SUPPORTED", 0x826F)
    set_enum("GL_INTERNALFORMAT_PREFERRED", 0x8270)
    set_enum("GL_INTERNALFORMAT_RED_SIZE", 0x8271)
    set_enum("GL_INTERNALFORMAT_GREEN_SIZE", 0x8272)
    set_enum("GL_INTERNALFORMAT_BLUE_SIZE", 0x8273)
    set_enum("GL_INTERNALFORMAT_ALPHA_SIZE", 0x8274)
    set_enum("GL_INTERNALFORMAT_DEPTH_SIZE", 0x8275)
    set_enum("GL_INTERNALFORMAT_STENCIL_SIZE", 0x8276)
    set_enum("GL_INTERNALFORMAT_SHARED_SIZE", 0x8277)
    set_enum("GL_INTERNALFORMAT_RED_TYPE", 0x8278)
    set_enum("GL_INTERNALFORMAT_GREEN_TYPE", 0x8279)
    set_enum("GL_INTERNALFORMAT_BLUE_TYPE", 0x827A)
    set_enum("GL_INTERNALFORMAT_ALPHA_TYPE", 0x827B)
    set_enum("GL_INTERNALFORMAT_DEPTH_TYPE", 0x827C)
    set_enum("GL_INTERNALFORMAT_STENCIL_TYPE", 0x827D)
    set_enum("GL_MAX_WIDTH", 0x827E)
    set_enum("GL_MAX_HEIGHT", 0x827F)
    set_enum("GL_MAX_DEPTH", 0x8280)
    set_enum("GL_MAX_LAYERS", 0x8281)
    set_enum("GL_MAX_COMBINED_DIMENSIONS", 0x8282)
    set_enum("GL_COLOR_COMPONENTS", 0x8283)
    set_enum("GL_DEPTH_COMPONENTS", 0x8284)
    set_enum("GL_STENCIL_COMPONENTS", 0x8285)
    set_enum("GL_COLOR_RENDERABLE", 0x8286)
    set_enum("GL_DEPTH_RENDERABLE", 0x8287)
    set_enum("GL_STENCIL_RENDERABLE", 0x8288)
    set_enum("GL_FRAMEBUFFER_RENDERABLE", 0x8289)
    set_enum("GL_FRAMEBUFFER_RENDERABLE_LAYERED", 0x828A)
    set_enum("GL_FRAMEBUFFER_BLEND", 0x828B)
    set_enum("GL_READ_PIXELS", 0x828C)
    set_enum("GL_READ_PIXELS_FORMAT", 0x828D)
    set_enum("GL_READ_PIXELS_TYPE", 0x828E)
    set_enum("GL_TEXTURE_IMAGE_FORMAT", 0x828F)
    set_enum("GL_TEXTURE_IMAGE_TYPE", 0x8290)
    set_enum("GL_GET_TEXTURE_IMAGE_FORMAT", 0x8291)
    set_enum("GL_GET_TEXTURE_IMAGE_TYPE", 0x8292)
    set_enum("GL_MIPMAP", 0x8293)
    set_enum("GL_MANUAL_GENERATE_MIPMAP", 0x8294)
    set_enum("GL_AUTO_GENERATE_MIPMAP", 0x8295)
    set_enum("GL_COLOR_ENCODING", 0x8296)
    set_enum("GL_SRGB_READ", 0x8297)
    set_enum("GL_SRGB_WRITE", 0x8298)
    set_enum("GL_FILTER", 0x829A)
    set_enum("GL_VERTEX_TEXTURE", 0x829B)
    set_enum("GL_TESS_CONTROL_TEXTURE", 0x829C)
    set_enum("GL_TESS_EVALUATION_TEXTURE", 0x829D)
    set_enum("GL_GEOMETRY_TEXTURE", 0x829E)
    set_enum("GL_FRAGMENT_TEXTURE", 0x829F)
    set_enum("GL_COMPUTE_TEXTURE", 0x82A0)
    set_enum("GL_TEXTURE_SHADOW", 0x82A1)
    set_enum("GL_TEXTURE_GATHER", 0x82A2)
    set_enum("GL_TEXTURE_GATHER_SHADOW", 0x82A3)
    set_enum("GL_SHADER_IMAGE_LOAD", 0x82A4)
    set_enum("GL_SHADER_IMAGE_STORE", 0x82A5)
    set_enum("GL_SHADER_IMAGE_ATOMIC", 0x82A6)
    set_enum("GL_IMAGE_TEXEL_SIZE", 0x82A7)
    set_enum("GL_IMAGE_COMPATIBILITY_CLASS", 0x82A8)
    set_enum("GL_IMAGE_PIXEL_FORMAT", 0x82A9)
    set_enum("GL_IMAGE_PIXEL_TYPE", 0x82AA)
    set_enum("GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST", 0x82AC)
    set_enum("GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST", 0x82AD)
    set_enum("GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE", 0x82AE)
    set_enum("GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE", 0x82AF)
    set_enum("GL_TEXTURE_COMPRESSED_BLOCK_WIDTH", 0x82B1)
    set_enum("GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT", 0x82B2)
    set_enum("GL_TEXTURE_COMPRESSED_BLOCK_SIZE", 0x82B3)
    set_enum("GL_CLEAR_BUFFER", 0x82B4)
    set_enum("GL_TEXTURE_VIEW", 0x82B5)
    set_enum("GL_VIEW_COMPATIBILITY_CLASS", 0x82B6)
    set_enum("GL_FULL_SUPPORT", 0x82B7)
    set_enum("GL_CAVEAT_SUPPORT", 0x82B8)
    set_enum("GL_IMAGE_CLASS_4_X_32", 0x82B9)
    set_enum("GL_IMAGE_CLASS_2_X_32", 0x82BA)
    set_enum("GL_IMAGE_CLASS_1_X_32", 0x82BB)
    set_enum("GL_IMAGE_CLASS_4_X_16", 0x82BC)
    set_enum("GL_IMAGE_CLASS_2_X_16", 0x82BD)
    set_enum("GL_IMAGE_CLASS_1_X_16", 0x82BE)
    set_enum("GL_IMAGE_CLASS_4_X_8", 0x82BF)
    set_enum("GL_IMAGE_CLASS_2_X_8", 0x82C0)
    set_enum("GL_IMAGE_CLASS_1_X_8", 0x82C1)
    set_enum("GL_IMAGE_CLASS_11_11_10", 0x82C2)
    set_enum("GL_IMAGE_CLASS_10_10_10_2", 0x82C3)
    set_enum("GL_VIEW_CLASS_128_BITS", 0x82C4)
    set_enum("GL_VIEW_CLASS_96_BITS", 0x82C5)
    set_enum("GL_VIEW_CLASS_64_BITS", 0x82C6)
    set_enum("GL_VIEW_CLASS_48_BITS", 0x82C7)
    set_enum("GL_VIEW_CLASS_32_BITS", 0x82C8)
    set_enum("GL_VIEW_CLASS_24_BITS", 0x82C9)
    set_enum("GL_VIEW_CLASS_16_BITS", 0x82CA)
    set_enum("GL_VIEW_CLASS_8_BITS", 0x82CB)
    set_enum("GL_VIEW_CLASS_S3TC_DXT1_RGB", 0x82CC)
    set_enum("GL_VIEW_CLASS_S3TC_DXT1_RGBA", 0x82CD)
    set_enum("GL_VIEW_CLASS_S3TC_DXT3_RGBA", 0x82CE)
    set_enum("GL_VIEW_CLASS_S3TC_DXT5_RGBA", 0x82CF)
    set_enum("GL_VIEW_CLASS_RGTC1_RED", 0x82D0)
    set_enum("GL_VIEW_CLASS_RGTC2_RG", 0x82D1)
    set_enum("GL_VIEW_CLASS_BPTC_UNORM", 0x82D2)
    set_enum("GL_VIEW_CLASS_BPTC_FLOAT", 0x82D3)
    set_enum("GL_UNIFORM", 0x92E1)
    set_enum("GL_UNIFORM_BLOCK", 0x92E2)
    set_enum("GL_PROGRAM_INPUT", 0x92E3)
    set_enum("GL_PROGRAM_OUTPUT", 0x92E4)
    set_enum("GL_BUFFER_VARIABLE", 0x92E5)
    set_enum("GL_SHADER_STORAGE_BLOCK", 0x92E6)
    set_enum("GL_VERTEX_SUBROUTINE", 0x92E8)
    set_enum("GL_TESS_CONTROL_SUBROUTINE", 0x92E9)
    set_enum("GL_TESS_EVALUATION_SUBROUTINE", 0x92EA)
    set_enum("GL_GEOMETRY_SUBROUTINE", 0x92EB)
    set_enum("GL_FRAGMENT_SUBROUTINE", 0x92EC)
    set_enum("GL_COMPUTE_SUBROUTINE", 0x92ED)
    set_enum("GL_VERTEX_SUBROUTINE_UNIFORM", 0x92EE)
    set_enum("GL_TESS_CONTROL_SUBROUTINE_UNIFORM", 0x92EF)
    set_enum("GL_TESS_EVALUATION_SUBROUTINE_UNIFORM", 0x92F0)
    set_enum("GL_GEOMETRY_SUBROUTINE_UNIFORM", 0x92F1)
    set_enum("GL_FRAGMENT_SUBROUTINE_UNIFORM", 0x92F2)
    set_enum("GL_COMPUTE_SUBROUTINE_UNIFORM", 0x92F3)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYING", 0x92F4)
    set_enum("GL_ACTIVE_RESOURCES", 0x92F5)
    set_enum("GL_MAX_NAME_LENGTH", 0x92F6)
    set_enum("GL_MAX_NUM_ACTIVE_VARIABLES", 0x92F7)
    set_enum("GL_MAX_NUM_COMPATIBLE_SUBROUTINES", 0x92F8)
    set_enum("GL_NAME_LENGTH", 0x92F9)
    set_enum("GL_TYPE", 0x92FA)
    set_enum("GL_ARRAY_SIZE", 0x92FB)
    set_enum("GL_OFFSET", 0x92FC)
    set_enum("GL_BLOCK_INDEX", 0x92FD)
    set_enum("GL_ARRAY_STRIDE", 0x92FE)
    set_enum("GL_MATRIX_STRIDE", 0x92FF)
    set_enum("GL_IS_ROW_MAJOR", 0x9300)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_INDEX", 0x9301)
    set_enum("GL_BUFFER_BINDING", 0x9302)
    set_enum("GL_BUFFER_DATA_SIZE", 0x9303)
    set_enum("GL_NUM_ACTIVE_VARIABLES", 0x9304)
    set_enum("GL_ACTIVE_VARIABLES", 0x9305)
    set_enum("GL_REFERENCED_BY_VERTEX_SHADER", 0x9306)
    set_enum("GL_REFERENCED_BY_TESS_CONTROL_SHADER", 0x9307)
    set_enum("GL_REFERENCED_BY_TESS_EVALUATION_SHADER", 0x9308)
    set_enum("GL_REFERENCED_BY_GEOMETRY_SHADER", 0x9309)
    set_enum("GL_REFERENCED_BY_FRAGMENT_SHADER", 0x930A)
    set_enum("GL_REFERENCED_BY_COMPUTE_SHADER", 0x930B)
    set_enum("GL_TOP_LEVEL_ARRAY_SIZE", 0x930C)
    set_enum("GL_TOP_LEVEL_ARRAY_STRIDE", 0x930D)
    set_enum("GL_LOCATION", 0x930E)
    set_enum("GL_LOCATION_INDEX", 0x930F)
    set_enum("GL_IS_PER_PATCH", 0x92E7)
    set_enum("GL_SHADER_STORAGE_BUFFER", 0x90D2)
    set_enum("GL_SHADER_STORAGE_BUFFER_BINDING", 0x90D3)
    set_enum("GL_SHADER_STORAGE_BUFFER_START", 0x90D4)
    set_enum("GL_SHADER_STORAGE_BUFFER_SIZE", 0x90D5)
    set_enum("GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS", 0x90D6)
    set_enum("GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS", 0x90D7)
    set_enum("GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS", 0x90D8)
    set_enum("GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS", 0x90D9)
    set_enum("GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS", 0x90DA)
    set_enum("GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS", 0x90DB)
    set_enum("GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS", 0x90DC)
    set_enum("GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS", 0x90DD)
    set_enum("GL_MAX_SHADER_STORAGE_BLOCK_SIZE", 0x90DE)
    set_enum("GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT", 0x90DF)
    set_enum("GL_SHADER_STORAGE_BARRIER_BIT", 0x00002000)
    set_enum("GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES", 0x8F39)
    set_enum("GL_DEPTH_STENCIL_TEXTURE_MODE", 0x90EA)
    set_enum("GL_TEXTURE_BUFFER_OFFSET", 0x919D)
    set_enum("GL_TEXTURE_BUFFER_SIZE", 0x919E)
    set_enum("GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT", 0x919F)
    set_enum("GL_TEXTURE_VIEW_MIN_LEVEL", 0x82DB)
    set_enum("GL_TEXTURE_VIEW_NUM_LEVELS", 0x82DC)
    set_enum("GL_TEXTURE_VIEW_MIN_LAYER", 0x82DD)
    set_enum("GL_TEXTURE_VIEW_NUM_LAYERS", 0x82DE)
    set_enum("GL_TEXTURE_IMMUTABLE_LEVELS", 0x82DF)
    set_enum("GL_VERTEX_ATTRIB_BINDING", 0x82D4)
    set_enum("GL_VERTEX_ATTRIB_RELATIVE_OFFSET", 0x82D5)
    set_enum("GL_VERTEX_BINDING_DIVISOR", 0x82D6)
    set_enum("GL_VERTEX_BINDING_OFFSET", 0x82D7)
    set_enum("GL_VERTEX_BINDING_STRIDE", 0x82D8)
    set_enum("GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET", 0x82D9)
    set_enum("GL_MAX_VERTEX_ATTRIB_BINDINGS", 0x82DA)
    set_enum("GL_VERTEX_BINDING_BUFFER", 0x8F4F)


#### GL VERSION 4.4 ####
def init_gl_version_4_4():
    set_func('glBufferStorage', t.void, (t.GLenum, t.GLsizeiptr, ct.POINTER(t.void), t.GLbitfield))
    set_func('glClearTexImage', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glClearTexSubImage', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glBindBuffersBase', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glBindBuffersRange', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLintptr), ct.POINTER(t.GLsizeiptr)))
    set_func('glBindTextures', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glBindSamplers', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glBindImageTextures', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glBindVertexBuffers', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLintptr), ct.POINTER(t.GLsizei)))
    set_enum("GL_MAX_VERTEX_ATTRIB_STRIDE", 0x82E5)
    set_enum("GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED", 0x8221)
    set_enum("GL_TEXTURE_BUFFER_BINDING", 0x8C2A)
    set_enum("GL_MAP_READ_BIT", 0x0001)
    set_enum("GL_MAP_WRITE_BIT", 0x0002)
    set_enum("GL_MAP_PERSISTENT_BIT", 0x0040)
    set_enum("GL_MAP_COHERENT_BIT", 0x0080)
    set_enum("GL_DYNAMIC_STORAGE_BIT", 0x0100)
    set_enum("GL_CLIENT_STORAGE_BIT", 0x0200)
    set_enum("GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT", 0x00004000)
    set_enum("GL_BUFFER_IMMUTABLE_STORAGE", 0x821F)
    set_enum("GL_BUFFER_STORAGE_FLAGS", 0x8220)
    set_enum("GL_CLEAR_TEXTURE", 0x9365)
    set_enum("GL_LOCATION_COMPONENT", 0x934A)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER", 0x8C8E)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_INDEX", 0x934B)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE", 0x934C)
    set_enum("GL_QUERY_BUFFER", 0x9192)
    set_enum("GL_QUERY_BUFFER_BARRIER_BIT", 0x00008000)
    set_enum("GL_QUERY_BUFFER_BINDING", 0x9193)
    set_enum("GL_QUERY_RESULT_NO_WAIT", 0x9194)
    set_enum("GL_MIRROR_CLAMP_TO_EDGE", 0x8743)
    set_enum("GL_STENCIL_INDEX", 0x1901)
    set_enum("GL_STENCIL_INDEX8", 0x8D48)
    set_enum("GL_UNSIGNED_INT_10F_11F_11F_REV", 0x8C3B)


#### GL VERSION 4.5 ####
def init_gl_version_4_5():
    set_func('glClipControl', t.void, (t.GLenum, t.GLenum))
    set_func('glCreateTransformFeedbacks', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glTransformFeedbackBufferBase', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glTransformFeedbackBufferRange', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glGetTransformFeedbackiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTransformFeedbacki_v', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glGetTransformFeedbacki64_v', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLint64)))
    set_func('glCreateBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glNamedBufferStorage', t.void, (t.GLuint, t.GLsizeiptr, ct.POINTER(t.void), t.GLbitfield))
    set_func('glNamedBufferData', t.void, (t.GLuint, t.GLsizeiptr, ct.POINTER(t.void), t.GLenum))
    set_func('glNamedBufferSubData', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glCopyNamedBufferSubData', t.void, (t.GLuint, t.GLuint, t.GLintptr, t.GLintptr, t.GLsizeiptr))
    set_func('glClearNamedBufferData', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glClearNamedBufferSubData', t.void, (t.GLuint, t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glMapNamedBuffer', ct.POINTER(t.void), (t.GLuint, t.GLenum))
    set_func('glMapNamedBufferRange', ct.POINTER(t.void), (t.GLuint, t.GLintptr, t.GLsizeiptr, t.GLbitfield))
    set_func('glUnmapNamedBuffer', t.GLboolean, (t.GLuint,))
    set_func('glFlushMappedNamedBufferRange', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glGetNamedBufferParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetNamedBufferParameteri64v', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetNamedBufferPointerv', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glGetNamedBufferSubData', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glCreateFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glNamedFramebufferRenderbuffer', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLuint))
    set_func('glNamedFramebufferParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glNamedFramebufferTexture', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLint))
    set_func('glNamedFramebufferTextureLayer', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glNamedFramebufferDrawBuffer', t.void, (t.GLuint, t.GLenum))
    set_func('glNamedFramebufferDrawBuffers', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glNamedFramebufferReadBuffer', t.void, (t.GLuint, t.GLenum))
    set_func('glInvalidateNamedFramebufferData', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glInvalidateNamedFramebufferSubData', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glClearNamedFramebufferiv', t.void, (t.GLuint, t.GLenum, t.GLint, ct.POINTER(t.GLint)))
    set_func('glClearNamedFramebufferuiv', t.void, (t.GLuint, t.GLenum, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glClearNamedFramebufferfv', t.void, (t.GLuint, t.GLenum, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glClearNamedFramebufferfi', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLfloat, t.GLint))
    set_func('glBlitNamedFramebuffer', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLbitfield, t.GLenum))
    set_func('glCheckNamedFramebufferStatus', t.GLenum, (t.GLuint, t.GLenum))
    set_func('glGetNamedFramebufferParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetNamedFramebufferAttachmentParameteriv', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCreateRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glNamedRenderbufferStorage', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glNamedRenderbufferStorageMultisample', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glGetNamedRenderbufferParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCreateTextures', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glTextureBuffer', t.void, (t.GLuint, t.GLenum, t.GLuint))
    set_func('glTextureBufferRange', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glTextureStorage1D', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei))
    set_func('glTextureStorage2D', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTextureStorage3D', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glTextureStorage2DMultisample', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureStorage3DMultisample', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureSubImage1D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTextureSubImage2D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTextureSubImage3D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage1D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage2D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage3D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCopyTextureSubImage1D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei))
    set_func('glCopyTextureSubImage2D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glCopyTextureSubImage3D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glTextureParameterf', t.void, (t.GLuint, t.GLenum, t.GLfloat))
    set_func('glTextureParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTextureParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glTextureParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTextureParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glTextureParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGenerateTextureMipmap', t.void, (t.GLuint,))
    set_func('glBindTextureUnit', t.void, (t.GLuint, t.GLuint))
    set_func('glGetTextureImage', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetCompressedTextureImage', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetTextureLevelParameterfv', t.void, (t.GLuint, t.GLint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTextureLevelParameteriv', t.void, (t.GLuint, t.GLint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTextureParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTextureParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTextureParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetTextureParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCreateVertexArrays', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDisableVertexArrayAttrib', t.void, (t.GLuint, t.GLuint))
    set_func('glEnableVertexArrayAttrib', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexArrayElementBuffer', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexArrayVertexBuffer', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLintptr, t.GLsizei))
    set_func('glVertexArrayVertexBuffers', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLintptr), ct.POINTER(t.GLsizei)))
    set_func('glVertexArrayAttribBinding', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexArrayAttribFormat', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexArrayAttribIFormat', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexArrayAttribLFormat', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexArrayBindingDivisor', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glGetVertexArrayiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexArrayIndexediv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexArrayIndexed64iv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glCreateSamplers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glCreateProgramPipelines', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glCreateQueries', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetQueryBufferObjecti64v', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptr))
    set_func('glGetQueryBufferObjectiv', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptr))
    set_func('glGetQueryBufferObjectui64v', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptr))
    set_func('glGetQueryBufferObjectuiv', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptr))
    set_func('glMemoryBarrierByRegion', t.void, (t.GLbitfield,))
    set_func('glGetTextureSubImage', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetCompressedTextureSubImage', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetGraphicsResetStatus', t.GLenum, ())
    set_func('glGetnCompressedTexImage', t.void, (t.GLenum, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnTexImage', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnUniformdv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glGetnUniformfv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnUniformiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glGetnUniformuiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glReadnPixels', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glTextureBarrier', t.void, ())
    set_enum("GL_CONTEXT_LOST", 0x0507)
    set_enum("GL_LOWER_LEFT", 0x8CA1)
    set_enum("GL_UPPER_LEFT", 0x8CA2)
    set_enum("GL_NEGATIVE_ONE_TO_ONE", 0x935E)
    set_enum("GL_ZERO_TO_ONE", 0x935F)
    set_enum("GL_CLIP_ORIGIN", 0x935C)
    set_enum("GL_CLIP_DEPTH_MODE", 0x935D)
    set_enum("GL_QUERY_WAIT_INVERTED", 0x8E17)
    set_enum("GL_QUERY_NO_WAIT_INVERTED", 0x8E18)
    set_enum("GL_QUERY_BY_REGION_WAIT_INVERTED", 0x8E19)
    set_enum("GL_QUERY_BY_REGION_NO_WAIT_INVERTED", 0x8E1A)
    set_enum("GL_MAX_CULL_DISTANCES", 0x82F9)
    set_enum("GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES", 0x82FA)
    set_enum("GL_TEXTURE_TARGET", 0x1006)
    set_enum("GL_QUERY_TARGET", 0x82EA)
    set_enum("GL_TEXTURE_BINDING_1D", 0x8068)
    set_enum("GL_TEXTURE_BINDING_1D_ARRAY", 0x8C1C)
    set_enum("GL_TEXTURE_BINDING_2D", 0x8069)
    set_enum("GL_TEXTURE_BINDING_2D_ARRAY", 0x8C1D)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE", 0x9104)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY", 0x9105)
    set_enum("GL_TEXTURE_BINDING_3D", 0x806A)
    set_enum("GL_TEXTURE_BINDING_BUFFER", 0x8C2C)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP", 0x8514)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_ARRAY", 0x900A)
    set_enum("GL_TEXTURE_BINDING_RECTANGLE", 0x84F6)
    set_enum("GL_BACK", 0x0405)
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_GUILTY_CONTEXT_RESET", 0x8253)
    set_enum("GL_INNOCENT_CONTEXT_RESET", 0x8254)
    set_enum("GL_UNKNOWN_CONTEXT_RESET", 0x8255)
    set_enum("GL_RESET_NOTIFICATION_STRATEGY", 0x8256)
    set_enum("GL_LOSE_CONTEXT_ON_RESET", 0x8252)
    set_enum("GL_NO_RESET_NOTIFICATION", 0x8261)
    set_enum("GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT", 0x00000004)
    set_enum("GL_CONTEXT_RELEASE_BEHAVIOR", 0x82FB)
    set_enum("GL_NONE", 0)
    set_enum("GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH", 0x82FC)


#### GLES1 VERSION 1.0 ####
def init_gl_version_es_cm_1_0():
    set_func('glActiveTexture', t.void, (t.GLenum,))
    set_func('glAlphaFuncx', t.void, (t.GLenum, t.GLfixed))
    set_func('glBindBuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glBindTexture', t.void, (t.GLenum, t.GLuint))
    set_func('glBlendFunc', t.void, (t.GLenum, t.GLenum))
    set_func('glBufferData', t.void, (t.GLenum, t.GLsizeiptr, ct.POINTER(t.void), t.GLenum))
    set_func('glBufferSubData', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glClear', t.void, (t.GLbitfield,))
    set_func('glClearColorx', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glClearDepthx', t.void, (t.GLfixed,))
    set_func('glClearStencil', t.void, (t.GLint,))
    set_func('glClientActiveTexture', t.void, (t.GLenum,))
    set_func('glClipPlanex', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glColor4ub', t.void, (t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glColor4x', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glColorMask', t.void, (t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glColorPointer', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexImage2D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCopyTexImage2D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint))
    set_func('glCopyTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glCullFace', t.void, (t.GLenum,))
    set_func('glDeleteBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteTextures', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDepthFunc', t.void, (t.GLenum,))
    set_func('glDepthMask', t.void, (t.GLboolean,))
    set_func('glDepthRangex', t.void, (t.GLfixed, t.GLfixed))
    set_func('glDisable', t.void, (t.GLenum,))
    set_func('glDisableClientState', t.void, (t.GLenum,))
    set_func('glDrawArrays', t.void, (t.GLenum, t.GLint, t.GLsizei))
    set_func('glDrawElements', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glEnable', t.void, (t.GLenum,))
    set_func('glEnableClientState', t.void, (t.GLenum,))
    set_func('glFinish', t.void, ())
    set_func('glFlush', t.void, ())
    set_func('glFogx', t.void, (t.GLenum, t.GLfixed))
    set_func('glFogxv', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glFrontFace', t.void, (t.GLenum,))
    set_func('glFrustumx', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glGetBooleanv', t.void, (t.GLenum, ct.POINTER(t.GLboolean)))
    set_func('glGetBufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetClipPlanex', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGenBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTextures', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetError', t.GLenum, ())
    set_func('glGetFixedv', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetIntegerv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetLightxv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetMaterialxv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetPointerv', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glGetString', ct.POINTER(t.GLubyte), (t.GLenum,))
    set_func('glGetTexEnviv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexEnvxv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetTexParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexParameterxv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glHint', t.void, (t.GLenum, t.GLenum))
    set_func('glIsBuffer', t.GLboolean, (t.GLuint,))
    set_func('glIsEnabled', t.GLboolean, (t.GLenum,))
    set_func('glIsTexture', t.GLboolean, (t.GLuint,))
    set_func('glLightModelx', t.void, (t.GLenum, t.GLfixed))
    set_func('glLightModelxv', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glLightx', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glLightxv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glLineWidthx', t.void, (t.GLfixed,))
    set_func('glLoadIdentity', t.void, ())
    set_func('glLoadMatrixx', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glLogicOp', t.void, (t.GLenum,))
    set_func('glMaterialx', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glMaterialxv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glMatrixMode', t.void, (t.GLenum,))
    set_func('glMultMatrixx', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glMultiTexCoord4x', t.void, (t.GLenum, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glNormal3x', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glNormalPointer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glOrthox', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glPixelStorei', t.void, (t.GLenum, t.GLint))
    set_func('glPointParameterx', t.void, (t.GLenum, t.GLfixed))
    set_func('glPointParameterxv', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glPointSizex', t.void, (t.GLfixed,))
    set_func('glPolygonOffsetx', t.void, (t.GLfixed, t.GLfixed))
    set_func('glPopMatrix', t.void, ())
    set_func('glPushMatrix', t.void, ())
    set_func('glReadPixels', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glRotatex', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glSampleCoverage', t.void, (t.GLfloat, t.GLboolean))
    set_func('glSampleCoveragex', t.void, (t.GLclampx, t.GLboolean))
    set_func('glScalex', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glScissor', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glShadeModel', t.void, (t.GLenum,))
    set_func('glStencilFunc', t.void, (t.GLenum, t.GLint, t.GLuint))
    set_func('glStencilMask', t.void, (t.GLuint,))
    set_func('glStencilOp', t.void, (t.GLenum, t.GLenum, t.GLenum))
    set_func('glTexCoordPointer', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glTexEnvi', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glTexEnvx', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glTexEnviv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexEnvxv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glTexImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexParameteri', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glTexParameterx', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glTexParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexParameterxv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTranslatex', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glVertexPointer', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glViewport', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_enum("GL_VERSION_ES_CL_1_0", 1)
    set_enum("GL_VERSION_ES_CM_1_1", 1)
    set_enum("GL_VERSION_ES_CL_1_1", 1)
    set_enum("GL_DEPTH_BUFFER_BIT", 0x00000100)
    set_enum("GL_STENCIL_BUFFER_BIT", 0x00000400)
    set_enum("GL_COLOR_BUFFER_BIT", 0x00004000)
    set_enum("GL_FALSE", 0)
    set_enum("GL_TRUE", 1)
    set_enum("GL_POINTS", 0x0000)
    set_enum("GL_LINES", 0x0001)
    set_enum("GL_LINE_LOOP", 0x0002)
    set_enum("GL_LINE_STRIP", 0x0003)
    set_enum("GL_TRIANGLES", 0x0004)
    set_enum("GL_TRIANGLE_STRIP", 0x0005)
    set_enum("GL_TRIANGLE_FAN", 0x0006)
    set_enum("GL_NEVER", 0x0200)
    set_enum("GL_LESS", 0x0201)
    set_enum("GL_EQUAL", 0x0202)
    set_enum("GL_LEQUAL", 0x0203)
    set_enum("GL_GREATER", 0x0204)
    set_enum("GL_NOTEQUAL", 0x0205)
    set_enum("GL_GEQUAL", 0x0206)
    set_enum("GL_ALWAYS", 0x0207)
    set_enum("GL_ZERO", 0)
    set_enum("GL_ONE", 1)
    set_enum("GL_SRC_COLOR", 0x0300)
    set_enum("GL_ONE_MINUS_SRC_COLOR", 0x0301)
    set_enum("GL_SRC_ALPHA", 0x0302)
    set_enum("GL_ONE_MINUS_SRC_ALPHA", 0x0303)
    set_enum("GL_DST_ALPHA", 0x0304)
    set_enum("GL_ONE_MINUS_DST_ALPHA", 0x0305)
    set_enum("GL_DST_COLOR", 0x0306)
    set_enum("GL_ONE_MINUS_DST_COLOR", 0x0307)
    set_enum("GL_SRC_ALPHA_SATURATE", 0x0308)
    set_enum("GL_CLIP_PLANE0", 0x3000)
    set_enum("GL_CLIP_PLANE1", 0x3001)
    set_enum("GL_CLIP_PLANE2", 0x3002)
    set_enum("GL_CLIP_PLANE3", 0x3003)
    set_enum("GL_CLIP_PLANE4", 0x3004)
    set_enum("GL_CLIP_PLANE5", 0x3005)
    set_enum("GL_FRONT", 0x0404)
    set_enum("GL_BACK", 0x0405)
    set_enum("GL_FRONT_AND_BACK", 0x0408)
    set_enum("GL_FOG", 0x0B60)
    set_enum("GL_LIGHTING", 0x0B50)
    set_enum("GL_TEXTURE_2D", 0x0DE1)
    set_enum("GL_CULL_FACE", 0x0B44)
    set_enum("GL_ALPHA_TEST", 0x0BC0)
    set_enum("GL_BLEND", 0x0BE2)
    set_enum("GL_COLOR_LOGIC_OP", 0x0BF2)
    set_enum("GL_DITHER", 0x0BD0)
    set_enum("GL_STENCIL_TEST", 0x0B90)
    set_enum("GL_DEPTH_TEST", 0x0B71)
    set_enum("GL_POINT_SMOOTH", 0x0B10)
    set_enum("GL_LINE_SMOOTH", 0x0B20)
    set_enum("GL_SCISSOR_TEST", 0x0C11)
    set_enum("GL_COLOR_MATERIAL", 0x0B57)
    set_enum("GL_NORMALIZE", 0x0BA1)
    set_enum("GL_RESCALE_NORMAL", 0x803A)
    set_enum("GL_VERTEX_ARRAY", 0x8074)
    set_enum("GL_NORMAL_ARRAY", 0x8075)
    set_enum("GL_COLOR_ARRAY", 0x8076)
    set_enum("GL_TEXTURE_COORD_ARRAY", 0x8078)
    set_enum("GL_MULTISAMPLE", 0x809D)
    set_enum("GL_SAMPLE_ALPHA_TO_COVERAGE", 0x809E)
    set_enum("GL_SAMPLE_ALPHA_TO_ONE", 0x809F)
    set_enum("GL_SAMPLE_COVERAGE", 0x80A0)
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_INVALID_ENUM", 0x0500)
    set_enum("GL_INVALID_VALUE", 0x0501)
    set_enum("GL_INVALID_OPERATION", 0x0502)
    set_enum("GL_STACK_OVERFLOW", 0x0503)
    set_enum("GL_STACK_UNDERFLOW", 0x0504)
    set_enum("GL_OUT_OF_MEMORY", 0x0505)
    set_enum("GL_EXP", 0x0800)
    set_enum("GL_EXP2", 0x0801)
    set_enum("GL_FOG_DENSITY", 0x0B62)
    set_enum("GL_FOG_START", 0x0B63)
    set_enum("GL_FOG_END", 0x0B64)
    set_enum("GL_FOG_MODE", 0x0B65)
    set_enum("GL_FOG_COLOR", 0x0B66)
    set_enum("GL_CW", 0x0900)
    set_enum("GL_CCW", 0x0901)
    set_enum("GL_CURRENT_COLOR", 0x0B00)
    set_enum("GL_CURRENT_NORMAL", 0x0B02)
    set_enum("GL_CURRENT_TEXTURE_COORDS", 0x0B03)
    set_enum("GL_POINT_SIZE", 0x0B11)
    set_enum("GL_POINT_SIZE_MIN", 0x8126)
    set_enum("GL_POINT_SIZE_MAX", 0x8127)
    set_enum("GL_POINT_FADE_THRESHOLD_SIZE", 0x8128)
    set_enum("GL_POINT_DISTANCE_ATTENUATION", 0x8129)
    set_enum("GL_SMOOTH_POINT_SIZE_RANGE", 0x0B12)
    set_enum("GL_LINE_WIDTH", 0x0B21)
    set_enum("GL_SMOOTH_LINE_WIDTH_RANGE", 0x0B22)
    set_enum("GL_ALIASED_POINT_SIZE_RANGE", 0x846D)
    set_enum("GL_ALIASED_LINE_WIDTH_RANGE", 0x846E)
    set_enum("GL_CULL_FACE_MODE", 0x0B45)
    set_enum("GL_FRONT_FACE", 0x0B46)
    set_enum("GL_SHADE_MODEL", 0x0B54)
    set_enum("GL_DEPTH_RANGE", 0x0B70)
    set_enum("GL_DEPTH_WRITEMASK", 0x0B72)
    set_enum("GL_DEPTH_CLEAR_VALUE", 0x0B73)
    set_enum("GL_DEPTH_FUNC", 0x0B74)
    set_enum("GL_STENCIL_CLEAR_VALUE", 0x0B91)
    set_enum("GL_STENCIL_FUNC", 0x0B92)
    set_enum("GL_STENCIL_VALUE_MASK", 0x0B93)
    set_enum("GL_STENCIL_FAIL", 0x0B94)
    set_enum("GL_STENCIL_PASS_DEPTH_FAIL", 0x0B95)
    set_enum("GL_STENCIL_PASS_DEPTH_PASS", 0x0B96)
    set_enum("GL_STENCIL_REF", 0x0B97)
    set_enum("GL_STENCIL_WRITEMASK", 0x0B98)
    set_enum("GL_MATRIX_MODE", 0x0BA0)
    set_enum("GL_VIEWPORT", 0x0BA2)
    set_enum("GL_MODELVIEW_STACK_DEPTH", 0x0BA3)
    set_enum("GL_PROJECTION_STACK_DEPTH", 0x0BA4)
    set_enum("GL_TEXTURE_STACK_DEPTH", 0x0BA5)
    set_enum("GL_MODELVIEW_MATRIX", 0x0BA6)
    set_enum("GL_PROJECTION_MATRIX", 0x0BA7)
    set_enum("GL_TEXTURE_MATRIX", 0x0BA8)
    set_enum("GL_ALPHA_TEST_FUNC", 0x0BC1)
    set_enum("GL_ALPHA_TEST_REF", 0x0BC2)
    set_enum("GL_BLEND_DST", 0x0BE0)
    set_enum("GL_BLEND_SRC", 0x0BE1)
    set_enum("GL_LOGIC_OP_MODE", 0x0BF0)
    set_enum("GL_SCISSOR_BOX", 0x0C10)
    set_enum("GL_COLOR_CLEAR_VALUE", 0x0C22)
    set_enum("GL_COLOR_WRITEMASK", 0x0C23)
    set_enum("GL_MAX_LIGHTS", 0x0D31)
    set_enum("GL_MAX_CLIP_PLANES", 0x0D32)
    set_enum("GL_MAX_TEXTURE_SIZE", 0x0D33)
    set_enum("GL_MAX_MODELVIEW_STACK_DEPTH", 0x0D36)
    set_enum("GL_MAX_PROJECTION_STACK_DEPTH", 0x0D38)
    set_enum("GL_MAX_TEXTURE_STACK_DEPTH", 0x0D39)
    set_enum("GL_MAX_VIEWPORT_DIMS", 0x0D3A)
    set_enum("GL_MAX_TEXTURE_UNITS", 0x84E2)
    set_enum("GL_SUBPIXEL_BITS", 0x0D50)
    set_enum("GL_RED_BITS", 0x0D52)
    set_enum("GL_GREEN_BITS", 0x0D53)
    set_enum("GL_BLUE_BITS", 0x0D54)
    set_enum("GL_ALPHA_BITS", 0x0D55)
    set_enum("GL_DEPTH_BITS", 0x0D56)
    set_enum("GL_STENCIL_BITS", 0x0D57)
    set_enum("GL_POLYGON_OFFSET_UNITS", 0x2A00)
    set_enum("GL_POLYGON_OFFSET_FILL", 0x8037)
    set_enum("GL_POLYGON_OFFSET_FACTOR", 0x8038)
    set_enum("GL_TEXTURE_BINDING_2D", 0x8069)
    set_enum("GL_VERTEX_ARRAY_SIZE", 0x807A)
    set_enum("GL_VERTEX_ARRAY_TYPE", 0x807B)
    set_enum("GL_VERTEX_ARRAY_STRIDE", 0x807C)
    set_enum("GL_NORMAL_ARRAY_TYPE", 0x807E)
    set_enum("GL_NORMAL_ARRAY_STRIDE", 0x807F)
    set_enum("GL_COLOR_ARRAY_SIZE", 0x8081)
    set_enum("GL_COLOR_ARRAY_TYPE", 0x8082)
    set_enum("GL_COLOR_ARRAY_STRIDE", 0x8083)
    set_enum("GL_TEXTURE_COORD_ARRAY_SIZE", 0x8088)
    set_enum("GL_TEXTURE_COORD_ARRAY_TYPE", 0x8089)
    set_enum("GL_TEXTURE_COORD_ARRAY_STRIDE", 0x808A)
    set_enum("GL_VERTEX_ARRAY_POINTER", 0x808E)
    set_enum("GL_NORMAL_ARRAY_POINTER", 0x808F)
    set_enum("GL_COLOR_ARRAY_POINTER", 0x8090)
    set_enum("GL_TEXTURE_COORD_ARRAY_POINTER", 0x8092)
    set_enum("GL_SAMPLE_BUFFERS", 0x80A8)
    set_enum("GL_SAMPLES", 0x80A9)
    set_enum("GL_SAMPLE_COVERAGE_VALUE", 0x80AA)
    set_enum("GL_SAMPLE_COVERAGE_INVERT", 0x80AB)
    set_enum("GL_NUM_COMPRESSED_TEXTURE_FORMATS", 0x86A2)
    set_enum("GL_COMPRESSED_TEXTURE_FORMATS", 0x86A3)
    set_enum("GL_DONT_CARE", 0x1100)
    set_enum("GL_FASTEST", 0x1101)
    set_enum("GL_NICEST", 0x1102)
    set_enum("GL_PERSPECTIVE_CORRECTION_HINT", 0x0C50)
    set_enum("GL_POINT_SMOOTH_HINT", 0x0C51)
    set_enum("GL_LINE_SMOOTH_HINT", 0x0C52)
    set_enum("GL_FOG_HINT", 0x0C54)
    set_enum("GL_GENERATE_MIPMAP_HINT", 0x8192)
    set_enum("GL_LIGHT_MODEL_AMBIENT", 0x0B53)
    set_enum("GL_LIGHT_MODEL_TWO_SIDE", 0x0B52)
    set_enum("GL_AMBIENT", 0x1200)
    set_enum("GL_DIFFUSE", 0x1201)
    set_enum("GL_SPECULAR", 0x1202)
    set_enum("GL_POSITION", 0x1203)
    set_enum("GL_SPOT_DIRECTION", 0x1204)
    set_enum("GL_SPOT_EXPONENT", 0x1205)
    set_enum("GL_SPOT_CUTOFF", 0x1206)
    set_enum("GL_CONSTANT_ATTENUATION", 0x1207)
    set_enum("GL_LINEAR_ATTENUATION", 0x1208)
    set_enum("GL_QUADRATIC_ATTENUATION", 0x1209)
    set_enum("GL_BYTE", 0x1400)
    set_enum("GL_UNSIGNED_BYTE", 0x1401)
    set_enum("GL_SHORT", 0x1402)
    set_enum("GL_UNSIGNED_SHORT", 0x1403)
    set_enum("GL_FLOAT", 0x1406)
    set_enum("GL_FIXED", 0x140C)
    set_enum("GL_CLEAR", 0x1500)
    set_enum("GL_AND", 0x1501)
    set_enum("GL_AND_REVERSE", 0x1502)
    set_enum("GL_COPY", 0x1503)
    set_enum("GL_AND_INVERTED", 0x1504)
    set_enum("GL_NOOP", 0x1505)
    set_enum("GL_XOR", 0x1506)
    set_enum("GL_OR", 0x1507)
    set_enum("GL_NOR", 0x1508)
    set_enum("GL_EQUIV", 0x1509)
    set_enum("GL_INVERT", 0x150A)
    set_enum("GL_OR_REVERSE", 0x150B)
    set_enum("GL_COPY_INVERTED", 0x150C)
    set_enum("GL_OR_INVERTED", 0x150D)
    set_enum("GL_NAND", 0x150E)
    set_enum("GL_SET", 0x150F)
    set_enum("GL_EMISSION", 0x1600)
    set_enum("GL_SHININESS", 0x1601)
    set_enum("GL_AMBIENT_AND_DIFFUSE", 0x1602)
    set_enum("GL_MODELVIEW", 0x1700)
    set_enum("GL_PROJECTION", 0x1701)
    set_enum("GL_TEXTURE", 0x1702)
    set_enum("GL_ALPHA", 0x1906)
    set_enum("GL_RGB", 0x1907)
    set_enum("GL_RGBA", 0x1908)
    set_enum("GL_LUMINANCE", 0x1909)
    set_enum("GL_LUMINANCE_ALPHA", 0x190A)
    set_enum("GL_UNPACK_ALIGNMENT", 0x0CF5)
    set_enum("GL_PACK_ALIGNMENT", 0x0D05)
    set_enum("GL_UNSIGNED_SHORT_4_4_4_4", 0x8033)
    set_enum("GL_UNSIGNED_SHORT_5_5_5_1", 0x8034)
    set_enum("GL_UNSIGNED_SHORT_5_6_5", 0x8363)
    set_enum("GL_FLAT", 0x1D00)
    set_enum("GL_SMOOTH", 0x1D01)
    set_enum("GL_KEEP", 0x1E00)
    set_enum("GL_REPLACE", 0x1E01)
    set_enum("GL_INCR", 0x1E02)
    set_enum("GL_DECR", 0x1E03)
    set_enum("GL_VENDOR", 0x1F00)
    set_enum("GL_RENDERER", 0x1F01)
    set_enum("GL_VERSION", 0x1F02)
    set_enum("GL_EXTENSIONS", 0x1F03)
    set_enum("GL_MODULATE", 0x2100)
    set_enum("GL_DECAL", 0x2101)
    set_enum("GL_ADD", 0x0104)
    set_enum("GL_TEXTURE_ENV_MODE", 0x2200)
    set_enum("GL_TEXTURE_ENV_COLOR", 0x2201)
    set_enum("GL_TEXTURE_ENV", 0x2300)
    set_enum("GL_NEAREST", 0x2600)
    set_enum("GL_LINEAR", 0x2601)
    set_enum("GL_NEAREST_MIPMAP_NEAREST", 0x2700)
    set_enum("GL_LINEAR_MIPMAP_NEAREST", 0x2701)
    set_enum("GL_NEAREST_MIPMAP_LINEAR", 0x2702)
    set_enum("GL_LINEAR_MIPMAP_LINEAR", 0x2703)
    set_enum("GL_TEXTURE_MAG_FILTER", 0x2800)
    set_enum("GL_TEXTURE_MIN_FILTER", 0x2801)
    set_enum("GL_TEXTURE_WRAP_S", 0x2802)
    set_enum("GL_TEXTURE_WRAP_T", 0x2803)
    set_enum("GL_GENERATE_MIPMAP", 0x8191)
    set_enum("GL_TEXTURE0", 0x84C0)
    set_enum("GL_TEXTURE1", 0x84C1)
    set_enum("GL_TEXTURE2", 0x84C2)
    set_enum("GL_TEXTURE3", 0x84C3)
    set_enum("GL_TEXTURE4", 0x84C4)
    set_enum("GL_TEXTURE5", 0x84C5)
    set_enum("GL_TEXTURE6", 0x84C6)
    set_enum("GL_TEXTURE7", 0x84C7)
    set_enum("GL_TEXTURE8", 0x84C8)
    set_enum("GL_TEXTURE9", 0x84C9)
    set_enum("GL_TEXTURE10", 0x84CA)
    set_enum("GL_TEXTURE11", 0x84CB)
    set_enum("GL_TEXTURE12", 0x84CC)
    set_enum("GL_TEXTURE13", 0x84CD)
    set_enum("GL_TEXTURE14", 0x84CE)
    set_enum("GL_TEXTURE15", 0x84CF)
    set_enum("GL_TEXTURE16", 0x84D0)
    set_enum("GL_TEXTURE17", 0x84D1)
    set_enum("GL_TEXTURE18", 0x84D2)
    set_enum("GL_TEXTURE19", 0x84D3)
    set_enum("GL_TEXTURE20", 0x84D4)
    set_enum("GL_TEXTURE21", 0x84D5)
    set_enum("GL_TEXTURE22", 0x84D6)
    set_enum("GL_TEXTURE23", 0x84D7)
    set_enum("GL_TEXTURE24", 0x84D8)
    set_enum("GL_TEXTURE25", 0x84D9)
    set_enum("GL_TEXTURE26", 0x84DA)
    set_enum("GL_TEXTURE27", 0x84DB)
    set_enum("GL_TEXTURE28", 0x84DC)
    set_enum("GL_TEXTURE29", 0x84DD)
    set_enum("GL_TEXTURE30", 0x84DE)
    set_enum("GL_TEXTURE31", 0x84DF)
    set_enum("GL_ACTIVE_TEXTURE", 0x84E0)
    set_enum("GL_CLIENT_ACTIVE_TEXTURE", 0x84E1)
    set_enum("GL_REPEAT", 0x2901)
    set_enum("GL_CLAMP_TO_EDGE", 0x812F)
    set_enum("GL_LIGHT0", 0x4000)
    set_enum("GL_LIGHT1", 0x4001)
    set_enum("GL_LIGHT2", 0x4002)
    set_enum("GL_LIGHT3", 0x4003)
    set_enum("GL_LIGHT4", 0x4004)
    set_enum("GL_LIGHT5", 0x4005)
    set_enum("GL_LIGHT6", 0x4006)
    set_enum("GL_LIGHT7", 0x4007)
    set_enum("GL_ARRAY_BUFFER", 0x8892)
    set_enum("GL_ELEMENT_ARRAY_BUFFER", 0x8893)
    set_enum("GL_ARRAY_BUFFER_BINDING", 0x8894)
    set_enum("GL_ELEMENT_ARRAY_BUFFER_BINDING", 0x8895)
    set_enum("GL_VERTEX_ARRAY_BUFFER_BINDING", 0x8896)
    set_enum("GL_NORMAL_ARRAY_BUFFER_BINDING", 0x8897)
    set_enum("GL_COLOR_ARRAY_BUFFER_BINDING", 0x8898)
    set_enum("GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING", 0x889A)
    set_enum("GL_STATIC_DRAW", 0x88E4)
    set_enum("GL_DYNAMIC_DRAW", 0x88E8)
    set_enum("GL_BUFFER_SIZE", 0x8764)
    set_enum("GL_BUFFER_USAGE", 0x8765)
    set_enum("GL_SUBTRACT", 0x84E7)
    set_enum("GL_COMBINE", 0x8570)
    set_enum("GL_COMBINE_RGB", 0x8571)
    set_enum("GL_COMBINE_ALPHA", 0x8572)
    set_enum("GL_RGB_SCALE", 0x8573)
    set_enum("GL_ADD_SIGNED", 0x8574)
    set_enum("GL_INTERPOLATE", 0x8575)
    set_enum("GL_CONSTANT", 0x8576)
    set_enum("GL_PRIMARY_COLOR", 0x8577)
    set_enum("GL_PREVIOUS", 0x8578)
    set_enum("GL_OPERAND0_RGB", 0x8590)
    set_enum("GL_OPERAND1_RGB", 0x8591)
    set_enum("GL_OPERAND2_RGB", 0x8592)
    set_enum("GL_OPERAND0_ALPHA", 0x8598)
    set_enum("GL_OPERAND1_ALPHA", 0x8599)
    set_enum("GL_OPERAND2_ALPHA", 0x859A)
    set_enum("GL_ALPHA_SCALE", 0x0D1C)
    set_enum("GL_SRC0_RGB", 0x8580)
    set_enum("GL_SRC1_RGB", 0x8581)
    set_enum("GL_SRC2_RGB", 0x8582)
    set_enum("GL_SRC0_ALPHA", 0x8588)
    set_enum("GL_SRC1_ALPHA", 0x8589)
    set_enum("GL_SRC2_ALPHA", 0x858A)
    set_enum("GL_DOT3_RGB", 0x86AE)
    set_enum("GL_DOT3_RGBA", 0x86AF)


#### GLES2 VERSION 2.0 ####
def init_gl_es_version_2_0():
    set_func('glActiveTexture', t.void, (t.GLenum,))
    set_func('glAttachShader', t.void, (t.GLuint, t.GLuint))
    set_func('glBindAttribLocation', t.void, (t.GLuint, t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glBindBuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glBindFramebuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glBindRenderbuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glBindTexture', t.void, (t.GLenum, t.GLuint))
    set_func('glBlendColor', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glBlendEquation', t.void, (t.GLenum,))
    set_func('glBlendEquationSeparate', t.void, (t.GLenum, t.GLenum))
    set_func('glBlendFunc', t.void, (t.GLenum, t.GLenum))
    set_func('glBlendFuncSeparate', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glBufferData', t.void, (t.GLenum, t.GLsizeiptr, ct.POINTER(t.void), t.GLenum))
    set_func('glBufferSubData', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glCheckFramebufferStatus', t.GLenum, (t.GLenum,))
    set_func('glClear', t.void, (t.GLbitfield,))
    set_func('glClearColor', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glClearDepthf', t.void, (t.GLfloat,))
    set_func('glClearStencil', t.void, (t.GLint,))
    set_func('glColorMask', t.void, (t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glCompileShader', t.void, (t.GLuint,))
    set_func('glCompressedTexImage2D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCopyTexImage2D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint))
    set_func('glCopyTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glCreateProgram', t.GLuint, ())
    set_func('glCreateShader', t.GLuint, (t.GLenum,))
    set_func('glCullFace', t.void, (t.GLenum,))
    set_func('glDeleteBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteProgram', t.void, (t.GLuint,))
    set_func('glDeleteRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteShader', t.void, (t.GLuint,))
    set_func('glDeleteTextures', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDepthFunc', t.void, (t.GLenum,))
    set_func('glDepthMask', t.void, (t.GLboolean,))
    set_func('glDepthRangef', t.void, (t.GLfloat, t.GLfloat))
    set_func('glDetachShader', t.void, (t.GLuint, t.GLuint))
    set_func('glDisable', t.void, (t.GLenum,))
    set_func('glDisableVertexAttribArray', t.void, (t.GLuint,))
    set_func('glDrawArrays', t.void, (t.GLenum, t.GLint, t.GLsizei))
    set_func('glDrawElements', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glEnable', t.void, (t.GLenum,))
    set_func('glEnableVertexAttribArray', t.void, (t.GLuint,))
    set_func('glFinish', t.void, ())
    set_func('glFlush', t.void, ())
    set_func('glFramebufferRenderbuffer', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint))
    set_func('glFramebufferTexture2D', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFrontFace', t.void, (t.GLenum,))
    set_func('glGenBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenerateMipmap', t.void, (t.GLenum,))
    set_func('glGenFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTextures', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetActiveAttrib', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint), ct.POINTER(t.GLenum), ct.POINTER(t.GLchar)))
    set_func('glGetActiveUniform', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint), ct.POINTER(t.GLenum), ct.POINTER(t.GLchar)))
    set_func('glGetAttachedShaders', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLuint)))
    set_func('glGetAttribLocation', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetBooleanv', t.void, (t.GLenum, ct.POINTER(t.GLboolean)))
    set_func('glGetBufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetError', t.GLenum, ())
    set_func('glGetFloatv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetFramebufferAttachmentParameteriv', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetIntegerv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramInfoLog', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetRenderbufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetShaderiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetShaderInfoLog', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetShaderPrecisionFormat', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint), ct.POINTER(t.GLint)))
    set_func('glGetShaderSource', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetString', ct.POINTER(t.GLubyte), (t.GLenum,))
    set_func('glGetTexParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTexParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetUniformfv', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glGetUniformiv', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLint)))
    set_func('glGetUniformLocation', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetVertexAttribfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVertexAttribiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribPointerv', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glHint', t.void, (t.GLenum, t.GLenum))
    set_func('glIsBuffer', t.GLboolean, (t.GLuint,))
    set_func('glIsEnabled', t.GLboolean, (t.GLenum,))
    set_func('glIsFramebuffer', t.GLboolean, (t.GLuint,))
    set_func('glIsProgram', t.GLboolean, (t.GLuint,))
    set_func('glIsRenderbuffer', t.GLboolean, (t.GLuint,))
    set_func('glIsShader', t.GLboolean, (t.GLuint,))
    set_func('glIsTexture', t.GLboolean, (t.GLuint,))
    set_func('glLineWidth', t.void, (t.GLfloat,))
    set_func('glLinkProgram', t.void, (t.GLuint,))
    set_func('glPixelStorei', t.void, (t.GLenum, t.GLint))
    set_func('glPolygonOffset', t.void, (t.GLfloat, t.GLfloat))
    set_func('glReadPixels', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glReleaseShaderCompiler', t.void, ())
    set_func('glRenderbufferStorage', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glSampleCoverage', t.void, (t.GLfloat, t.GLboolean))
    set_func('glScissor', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glShaderBinary', t.void, (t.GLsizei, ct.POINTER(t.GLuint), t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glShaderSource', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), ct.POINTER(t.GLint)))
    set_func('glStencilFunc', t.void, (t.GLenum, t.GLint, t.GLuint))
    set_func('glStencilFuncSeparate', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLuint))
    set_func('glStencilMask', t.void, (t.GLuint,))
    set_func('glStencilMaskSeparate', t.void, (t.GLenum, t.GLuint))
    set_func('glStencilOp', t.void, (t.GLenum, t.GLenum, t.GLenum))
    set_func('glStencilOpSeparate', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glTexImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexParameterf', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glTexParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTexParameteri', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glTexParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glUniform1f', t.void, (t.GLint, t.GLfloat))
    set_func('glUniform1fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform1i', t.void, (t.GLint, t.GLint))
    set_func('glUniform1iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform2f', t.void, (t.GLint, t.GLfloat, t.GLfloat))
    set_func('glUniform2fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform2i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glUniform2iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform3f', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glUniform3fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform3i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glUniform3iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform4f', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glUniform4fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform4i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glUniform4iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniformMatrix2fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUseProgram', t.void, (t.GLuint,))
    set_func('glValidateProgram', t.void, (t.GLuint,))
    set_func('glVertexAttrib1f', t.void, (t.GLuint, t.GLfloat))
    set_func('glVertexAttrib1fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib2f', t.void, (t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib2fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib3f', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib3fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib4f', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib4fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttribPointer', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLsizei, ct.POINTER(t.void)))
    set_func('glViewport', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_enum("GL_DEPTH_BUFFER_BIT", 0x00000100)
    set_enum("GL_STENCIL_BUFFER_BIT", 0x00000400)
    set_enum("GL_COLOR_BUFFER_BIT", 0x00004000)
    set_enum("GL_FALSE", 0)
    set_enum("GL_TRUE", 1)
    set_enum("GL_POINTS", 0x0000)
    set_enum("GL_LINES", 0x0001)
    set_enum("GL_LINE_LOOP", 0x0002)
    set_enum("GL_LINE_STRIP", 0x0003)
    set_enum("GL_TRIANGLES", 0x0004)
    set_enum("GL_TRIANGLE_STRIP", 0x0005)
    set_enum("GL_TRIANGLE_FAN", 0x0006)
    set_enum("GL_ZERO", 0)
    set_enum("GL_ONE", 1)
    set_enum("GL_SRC_COLOR", 0x0300)
    set_enum("GL_ONE_MINUS_SRC_COLOR", 0x0301)
    set_enum("GL_SRC_ALPHA", 0x0302)
    set_enum("GL_ONE_MINUS_SRC_ALPHA", 0x0303)
    set_enum("GL_DST_ALPHA", 0x0304)
    set_enum("GL_ONE_MINUS_DST_ALPHA", 0x0305)
    set_enum("GL_DST_COLOR", 0x0306)
    set_enum("GL_ONE_MINUS_DST_COLOR", 0x0307)
    set_enum("GL_SRC_ALPHA_SATURATE", 0x0308)
    set_enum("GL_FUNC_ADD", 0x8006)
    set_enum("GL_BLEND_EQUATION", 0x8009)
    set_enum("GL_BLEND_EQUATION_RGB", 0x8009)
    set_enum("GL_BLEND_EQUATION_ALPHA", 0x883D)
    set_enum("GL_FUNC_SUBTRACT", 0x800A)
    set_enum("GL_FUNC_REVERSE_SUBTRACT", 0x800B)
    set_enum("GL_BLEND_DST_RGB", 0x80C8)
    set_enum("GL_BLEND_SRC_RGB", 0x80C9)
    set_enum("GL_BLEND_DST_ALPHA", 0x80CA)
    set_enum("GL_BLEND_SRC_ALPHA", 0x80CB)
    set_enum("GL_CONSTANT_COLOR", 0x8001)
    set_enum("GL_ONE_MINUS_CONSTANT_COLOR", 0x8002)
    set_enum("GL_CONSTANT_ALPHA", 0x8003)
    set_enum("GL_ONE_MINUS_CONSTANT_ALPHA", 0x8004)
    set_enum("GL_BLEND_COLOR", 0x8005)
    set_enum("GL_ARRAY_BUFFER", 0x8892)
    set_enum("GL_ELEMENT_ARRAY_BUFFER", 0x8893)
    set_enum("GL_ARRAY_BUFFER_BINDING", 0x8894)
    set_enum("GL_ELEMENT_ARRAY_BUFFER_BINDING", 0x8895)
    set_enum("GL_STREAM_DRAW", 0x88E0)
    set_enum("GL_STATIC_DRAW", 0x88E4)
    set_enum("GL_DYNAMIC_DRAW", 0x88E8)
    set_enum("GL_BUFFER_SIZE", 0x8764)
    set_enum("GL_BUFFER_USAGE", 0x8765)
    set_enum("GL_CURRENT_VERTEX_ATTRIB", 0x8626)
    set_enum("GL_FRONT", 0x0404)
    set_enum("GL_BACK", 0x0405)
    set_enum("GL_FRONT_AND_BACK", 0x0408)
    set_enum("GL_TEXTURE_2D", 0x0DE1)
    set_enum("GL_CULL_FACE", 0x0B44)
    set_enum("GL_BLEND", 0x0BE2)
    set_enum("GL_DITHER", 0x0BD0)
    set_enum("GL_STENCIL_TEST", 0x0B90)
    set_enum("GL_DEPTH_TEST", 0x0B71)
    set_enum("GL_SCISSOR_TEST", 0x0C11)
    set_enum("GL_POLYGON_OFFSET_FILL", 0x8037)
    set_enum("GL_SAMPLE_ALPHA_TO_COVERAGE", 0x809E)
    set_enum("GL_SAMPLE_COVERAGE", 0x80A0)
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_INVALID_ENUM", 0x0500)
    set_enum("GL_INVALID_VALUE", 0x0501)
    set_enum("GL_INVALID_OPERATION", 0x0502)
    set_enum("GL_OUT_OF_MEMORY", 0x0505)
    set_enum("GL_CW", 0x0900)
    set_enum("GL_CCW", 0x0901)
    set_enum("GL_LINE_WIDTH", 0x0B21)
    set_enum("GL_ALIASED_POINT_SIZE_RANGE", 0x846D)
    set_enum("GL_ALIASED_LINE_WIDTH_RANGE", 0x846E)
    set_enum("GL_CULL_FACE_MODE", 0x0B45)
    set_enum("GL_FRONT_FACE", 0x0B46)
    set_enum("GL_DEPTH_RANGE", 0x0B70)
    set_enum("GL_DEPTH_WRITEMASK", 0x0B72)
    set_enum("GL_DEPTH_CLEAR_VALUE", 0x0B73)
    set_enum("GL_DEPTH_FUNC", 0x0B74)
    set_enum("GL_STENCIL_CLEAR_VALUE", 0x0B91)
    set_enum("GL_STENCIL_FUNC", 0x0B92)
    set_enum("GL_STENCIL_FAIL", 0x0B94)
    set_enum("GL_STENCIL_PASS_DEPTH_FAIL", 0x0B95)
    set_enum("GL_STENCIL_PASS_DEPTH_PASS", 0x0B96)
    set_enum("GL_STENCIL_REF", 0x0B97)
    set_enum("GL_STENCIL_VALUE_MASK", 0x0B93)
    set_enum("GL_STENCIL_WRITEMASK", 0x0B98)
    set_enum("GL_STENCIL_BACK_FUNC", 0x8800)
    set_enum("GL_STENCIL_BACK_FAIL", 0x8801)
    set_enum("GL_STENCIL_BACK_PASS_DEPTH_FAIL", 0x8802)
    set_enum("GL_STENCIL_BACK_PASS_DEPTH_PASS", 0x8803)
    set_enum("GL_STENCIL_BACK_REF", 0x8CA3)
    set_enum("GL_STENCIL_BACK_VALUE_MASK", 0x8CA4)
    set_enum("GL_STENCIL_BACK_WRITEMASK", 0x8CA5)
    set_enum("GL_VIEWPORT", 0x0BA2)
    set_enum("GL_SCISSOR_BOX", 0x0C10)
    set_enum("GL_COLOR_CLEAR_VALUE", 0x0C22)
    set_enum("GL_COLOR_WRITEMASK", 0x0C23)
    set_enum("GL_UNPACK_ALIGNMENT", 0x0CF5)
    set_enum("GL_PACK_ALIGNMENT", 0x0D05)
    set_enum("GL_MAX_TEXTURE_SIZE", 0x0D33)
    set_enum("GL_MAX_VIEWPORT_DIMS", 0x0D3A)
    set_enum("GL_SUBPIXEL_BITS", 0x0D50)
    set_enum("GL_RED_BITS", 0x0D52)
    set_enum("GL_GREEN_BITS", 0x0D53)
    set_enum("GL_BLUE_BITS", 0x0D54)
    set_enum("GL_ALPHA_BITS", 0x0D55)
    set_enum("GL_DEPTH_BITS", 0x0D56)
    set_enum("GL_STENCIL_BITS", 0x0D57)
    set_enum("GL_POLYGON_OFFSET_UNITS", 0x2A00)
    set_enum("GL_POLYGON_OFFSET_FACTOR", 0x8038)
    set_enum("GL_TEXTURE_BINDING_2D", 0x8069)
    set_enum("GL_SAMPLE_BUFFERS", 0x80A8)
    set_enum("GL_SAMPLES", 0x80A9)
    set_enum("GL_SAMPLE_COVERAGE_VALUE", 0x80AA)
    set_enum("GL_SAMPLE_COVERAGE_INVERT", 0x80AB)
    set_enum("GL_NUM_COMPRESSED_TEXTURE_FORMATS", 0x86A2)
    set_enum("GL_COMPRESSED_TEXTURE_FORMATS", 0x86A3)
    set_enum("GL_DONT_CARE", 0x1100)
    set_enum("GL_FASTEST", 0x1101)
    set_enum("GL_NICEST", 0x1102)
    set_enum("GL_GENERATE_MIPMAP_HINT", 0x8192)
    set_enum("GL_BYTE", 0x1400)
    set_enum("GL_UNSIGNED_BYTE", 0x1401)
    set_enum("GL_SHORT", 0x1402)
    set_enum("GL_UNSIGNED_SHORT", 0x1403)
    set_enum("GL_INT", 0x1404)
    set_enum("GL_UNSIGNED_INT", 0x1405)
    set_enum("GL_FLOAT", 0x1406)
    set_enum("GL_FIXED", 0x140C)
    set_enum("GL_DEPTH_COMPONENT", 0x1902)
    set_enum("GL_ALPHA", 0x1906)
    set_enum("GL_RGB", 0x1907)
    set_enum("GL_RGBA", 0x1908)
    set_enum("GL_LUMINANCE", 0x1909)
    set_enum("GL_LUMINANCE_ALPHA", 0x190A)
    set_enum("GL_UNSIGNED_SHORT_4_4_4_4", 0x8033)
    set_enum("GL_UNSIGNED_SHORT_5_5_5_1", 0x8034)
    set_enum("GL_UNSIGNED_SHORT_5_6_5", 0x8363)
    set_enum("GL_FRAGMENT_SHADER", 0x8B30)
    set_enum("GL_VERTEX_SHADER", 0x8B31)
    set_enum("GL_MAX_VERTEX_ATTRIBS", 0x8869)
    set_enum("GL_MAX_VERTEX_UNIFORM_VECTORS", 0x8DFB)
    set_enum("GL_MAX_VARYING_VECTORS", 0x8DFC)
    set_enum("GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS", 0x8B4D)
    set_enum("GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS", 0x8B4C)
    set_enum("GL_MAX_TEXTURE_IMAGE_UNITS", 0x8872)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_VECTORS", 0x8DFD)
    set_enum("GL_SHADER_TYPE", 0x8B4F)
    set_enum("GL_DELETE_STATUS", 0x8B80)
    set_enum("GL_LINK_STATUS", 0x8B82)
    set_enum("GL_VALIDATE_STATUS", 0x8B83)
    set_enum("GL_ATTACHED_SHADERS", 0x8B85)
    set_enum("GL_ACTIVE_UNIFORMS", 0x8B86)
    set_enum("GL_ACTIVE_UNIFORM_MAX_LENGTH", 0x8B87)
    set_enum("GL_ACTIVE_ATTRIBUTES", 0x8B89)
    set_enum("GL_ACTIVE_ATTRIBUTE_MAX_LENGTH", 0x8B8A)
    set_enum("GL_SHADING_LANGUAGE_VERSION", 0x8B8C)
    set_enum("GL_CURRENT_PROGRAM", 0x8B8D)
    set_enum("GL_NEVER", 0x0200)
    set_enum("GL_LESS", 0x0201)
    set_enum("GL_EQUAL", 0x0202)
    set_enum("GL_LEQUAL", 0x0203)
    set_enum("GL_GREATER", 0x0204)
    set_enum("GL_NOTEQUAL", 0x0205)
    set_enum("GL_GEQUAL", 0x0206)
    set_enum("GL_ALWAYS", 0x0207)
    set_enum("GL_KEEP", 0x1E00)
    set_enum("GL_REPLACE", 0x1E01)
    set_enum("GL_INCR", 0x1E02)
    set_enum("GL_DECR", 0x1E03)
    set_enum("GL_INVERT", 0x150A)
    set_enum("GL_INCR_WRAP", 0x8507)
    set_enum("GL_DECR_WRAP", 0x8508)
    set_enum("GL_VENDOR", 0x1F00)
    set_enum("GL_RENDERER", 0x1F01)
    set_enum("GL_VERSION", 0x1F02)
    set_enum("GL_EXTENSIONS", 0x1F03)
    set_enum("GL_NEAREST", 0x2600)
    set_enum("GL_LINEAR", 0x2601)
    set_enum("GL_NEAREST_MIPMAP_NEAREST", 0x2700)
    set_enum("GL_LINEAR_MIPMAP_NEAREST", 0x2701)
    set_enum("GL_NEAREST_MIPMAP_LINEAR", 0x2702)
    set_enum("GL_LINEAR_MIPMAP_LINEAR", 0x2703)
    set_enum("GL_TEXTURE_MAG_FILTER", 0x2800)
    set_enum("GL_TEXTURE_MIN_FILTER", 0x2801)
    set_enum("GL_TEXTURE_WRAP_S", 0x2802)
    set_enum("GL_TEXTURE_WRAP_T", 0x2803)
    set_enum("GL_TEXTURE", 0x1702)
    set_enum("GL_TEXTURE_CUBE_MAP", 0x8513)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP", 0x8514)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_X", 0x8515)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_X", 0x8516)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Y", 0x8517)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Y", 0x8518)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Z", 0x8519)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Z", 0x851A)
    set_enum("GL_MAX_CUBE_MAP_TEXTURE_SIZE", 0x851C)
    set_enum("GL_TEXTURE0", 0x84C0)
    set_enum("GL_TEXTURE1", 0x84C1)
    set_enum("GL_TEXTURE2", 0x84C2)
    set_enum("GL_TEXTURE3", 0x84C3)
    set_enum("GL_TEXTURE4", 0x84C4)
    set_enum("GL_TEXTURE5", 0x84C5)
    set_enum("GL_TEXTURE6", 0x84C6)
    set_enum("GL_TEXTURE7", 0x84C7)
    set_enum("GL_TEXTURE8", 0x84C8)
    set_enum("GL_TEXTURE9", 0x84C9)
    set_enum("GL_TEXTURE10", 0x84CA)
    set_enum("GL_TEXTURE11", 0x84CB)
    set_enum("GL_TEXTURE12", 0x84CC)
    set_enum("GL_TEXTURE13", 0x84CD)
    set_enum("GL_TEXTURE14", 0x84CE)
    set_enum("GL_TEXTURE15", 0x84CF)
    set_enum("GL_TEXTURE16", 0x84D0)
    set_enum("GL_TEXTURE17", 0x84D1)
    set_enum("GL_TEXTURE18", 0x84D2)
    set_enum("GL_TEXTURE19", 0x84D3)
    set_enum("GL_TEXTURE20", 0x84D4)
    set_enum("GL_TEXTURE21", 0x84D5)
    set_enum("GL_TEXTURE22", 0x84D6)
    set_enum("GL_TEXTURE23", 0x84D7)
    set_enum("GL_TEXTURE24", 0x84D8)
    set_enum("GL_TEXTURE25", 0x84D9)
    set_enum("GL_TEXTURE26", 0x84DA)
    set_enum("GL_TEXTURE27", 0x84DB)
    set_enum("GL_TEXTURE28", 0x84DC)
    set_enum("GL_TEXTURE29", 0x84DD)
    set_enum("GL_TEXTURE30", 0x84DE)
    set_enum("GL_TEXTURE31", 0x84DF)
    set_enum("GL_ACTIVE_TEXTURE", 0x84E0)
    set_enum("GL_REPEAT", 0x2901)
    set_enum("GL_CLAMP_TO_EDGE", 0x812F)
    set_enum("GL_MIRRORED_REPEAT", 0x8370)
    set_enum("GL_FLOAT_VEC2", 0x8B50)
    set_enum("GL_FLOAT_VEC3", 0x8B51)
    set_enum("GL_FLOAT_VEC4", 0x8B52)
    set_enum("GL_INT_VEC2", 0x8B53)
    set_enum("GL_INT_VEC3", 0x8B54)
    set_enum("GL_INT_VEC4", 0x8B55)
    set_enum("GL_BOOL", 0x8B56)
    set_enum("GL_BOOL_VEC2", 0x8B57)
    set_enum("GL_BOOL_VEC3", 0x8B58)
    set_enum("GL_BOOL_VEC4", 0x8B59)
    set_enum("GL_FLOAT_MAT2", 0x8B5A)
    set_enum("GL_FLOAT_MAT3", 0x8B5B)
    set_enum("GL_FLOAT_MAT4", 0x8B5C)
    set_enum("GL_SAMPLER_2D", 0x8B5E)
    set_enum("GL_SAMPLER_CUBE", 0x8B60)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_ENABLED", 0x8622)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_SIZE", 0x8623)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_STRIDE", 0x8624)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_TYPE", 0x8625)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_NORMALIZED", 0x886A)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_POINTER", 0x8645)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", 0x889F)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_TYPE", 0x8B9A)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_FORMAT", 0x8B9B)
    set_enum("GL_COMPILE_STATUS", 0x8B81)
    set_enum("GL_INFO_LOG_LENGTH", 0x8B84)
    set_enum("GL_SHADER_SOURCE_LENGTH", 0x8B88)
    set_enum("GL_SHADER_COMPILER", 0x8DFA)
    set_enum("GL_SHADER_BINARY_FORMATS", 0x8DF8)
    set_enum("GL_NUM_SHADER_BINARY_FORMATS", 0x8DF9)
    set_enum("GL_LOW_FLOAT", 0x8DF0)
    set_enum("GL_MEDIUM_FLOAT", 0x8DF1)
    set_enum("GL_HIGH_FLOAT", 0x8DF2)
    set_enum("GL_LOW_INT", 0x8DF3)
    set_enum("GL_MEDIUM_INT", 0x8DF4)
    set_enum("GL_HIGH_INT", 0x8DF5)
    set_enum("GL_FRAMEBUFFER", 0x8D40)
    set_enum("GL_RENDERBUFFER", 0x8D41)
    set_enum("GL_RGBA4", 0x8056)
    set_enum("GL_RGB5_A1", 0x8057)
    set_enum("GL_RGB565", 0x8D62)
    set_enum("GL_DEPTH_COMPONENT16", 0x81A5)
    set_enum("GL_STENCIL_INDEX8", 0x8D48)
    set_enum("GL_RENDERBUFFER_WIDTH", 0x8D42)
    set_enum("GL_RENDERBUFFER_HEIGHT", 0x8D43)
    set_enum("GL_RENDERBUFFER_INTERNAL_FORMAT", 0x8D44)
    set_enum("GL_RENDERBUFFER_RED_SIZE", 0x8D50)
    set_enum("GL_RENDERBUFFER_GREEN_SIZE", 0x8D51)
    set_enum("GL_RENDERBUFFER_BLUE_SIZE", 0x8D52)
    set_enum("GL_RENDERBUFFER_ALPHA_SIZE", 0x8D53)
    set_enum("GL_RENDERBUFFER_DEPTH_SIZE", 0x8D54)
    set_enum("GL_RENDERBUFFER_STENCIL_SIZE", 0x8D55)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", 0x8CD0)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", 0x8CD1)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", 0x8CD2)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", 0x8CD3)
    set_enum("GL_COLOR_ATTACHMENT0", 0x8CE0)
    set_enum("GL_DEPTH_ATTACHMENT", 0x8D00)
    set_enum("GL_STENCIL_ATTACHMENT", 0x8D20)
    set_enum("GL_NONE", 0)
    set_enum("GL_FRAMEBUFFER_COMPLETE", 0x8CD5)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT", 0x8CD6)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", 0x8CD7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS", 0x8CD9)
    set_enum("GL_FRAMEBUFFER_UNSUPPORTED", 0x8CDD)
    set_enum("GL_FRAMEBUFFER_BINDING", 0x8CA6)
    set_enum("GL_RENDERBUFFER_BINDING", 0x8CA7)
    set_enum("GL_MAX_RENDERBUFFER_SIZE", 0x84E8)
    set_enum("GL_INVALID_FRAMEBUFFER_OPERATION", 0x0506)


#### GLES2 VERSION 3.0 ####
def init_gl_es_version_3_0():
    set_func('glReadBuffer', t.void, (t.GLenum,))
    set_func('glDrawRangeElements', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexImage3D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexSubImage3D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyTexSubImage3D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glCompressedTexImage3D', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage3D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGenQueries', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteQueries', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsQuery', t.GLboolean, (t.GLuint,))
    set_func('glBeginQuery', t.void, (t.GLenum, t.GLuint))
    set_func('glEndQuery', t.void, (t.GLenum,))
    set_func('glGetQueryiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetQueryObjectuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glUnmapBuffer', t.GLboolean, (t.GLenum,))
    set_func('glGetBufferPointerv', t.void, (t.GLenum, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glDrawBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glUniformMatrix2x3fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3x2fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix2x4fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4x2fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3x4fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4x3fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glBlitFramebuffer', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLbitfield, t.GLenum))
    set_func('glRenderbufferStorageMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glFramebufferTextureLayer', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glMapBufferRange', ct.POINTER(t.void), (t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLbitfield))
    set_func('glFlushMappedBufferRange', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr))
    set_func('glBindVertexArray', t.void, (t.GLuint,))
    set_func('glDeleteVertexArrays', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenVertexArrays', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsVertexArray', t.GLboolean, (t.GLuint,))
    set_func('glGetIntegeri_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glBeginTransformFeedback', t.void, (t.GLenum,))
    set_func('glEndTransformFeedback', t.void, ())
    set_func('glBindBufferRange', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glBindBufferBase', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glTransformFeedbackVaryings', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), t.GLenum))
    set_func('glGetTransformFeedbackVarying', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLsizei), ct.POINTER(t.GLenum), ct.POINTER(t.GLchar)))
    set_func('glVertexAttribIPointer', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetVertexAttribIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI4i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glVertexAttribI4ui', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexAttribI4iv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI4uiv', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glGetUniformuiv', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glGetFragDataLocation', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glUniform1ui', t.void, (t.GLint, t.GLuint))
    set_func('glUniform2ui', t.void, (t.GLint, t.GLuint, t.GLuint))
    set_func('glUniform3ui', t.void, (t.GLint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glUniform4ui', t.void, (t.GLint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glUniform1uiv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform2uiv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform3uiv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform4uiv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glClearBufferiv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLint)))
    set_func('glClearBufferuiv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glClearBufferfv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glClearBufferfi', t.void, (t.GLenum, t.GLint, t.GLfloat, t.GLint))
    set_func('glGetStringi', ct.POINTER(t.GLubyte), (t.GLenum, t.GLuint))
    set_func('glCopyBufferSubData', t.void, (t.GLenum, t.GLenum, t.GLintptr, t.GLintptr, t.GLsizeiptr))
    set_func('glGetUniformIndices', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), ct.POINTER(t.GLuint)))
    set_func('glGetActiveUniformsiv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetUniformBlockIndex', t.GLuint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetActiveUniformBlockiv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetActiveUniformBlockName', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glUniformBlockBinding', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glDrawArraysInstanced', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glDrawElementsInstanced', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glFenceSync', t.GLsync, (t.GLenum, t.GLbitfield))
    set_func('glIsSync', t.GLboolean, (t.GLsync,))
    set_func('glDeleteSync', t.void, (t.GLsync,))
    set_func('glClientWaitSync', t.GLenum, (t.GLsync, t.GLbitfield, t.GLuint64))
    set_func('glWaitSync', t.void, (t.GLsync, t.GLbitfield, t.GLuint64))
    set_func('glGetInteger64v', t.void, (t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetSynciv', t.void, (t.GLsync, t.GLenum, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint)))
    set_func('glGetInteger64i_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint64)))
    set_func('glGetBufferParameteri64v', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGenSamplers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteSamplers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsSampler', t.GLboolean, (t.GLuint,))
    set_func('glBindSampler', t.void, (t.GLuint, t.GLuint))
    set_func('glSamplerParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glSamplerParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glSamplerParameterf', t.void, (t.GLuint, t.GLenum, t.GLfloat))
    set_func('glSamplerParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetSamplerParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSamplerParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttribDivisor', t.void, (t.GLuint, t.GLuint))
    set_func('glBindTransformFeedback', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteTransformFeedbacks', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTransformFeedbacks', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsTransformFeedback', t.GLboolean, (t.GLuint,))
    set_func('glPauseTransformFeedback', t.void, ())
    set_func('glResumeTransformFeedback', t.void, ())
    set_func('glGetProgramBinary', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLenum), ct.POINTER(t.void)))
    set_func('glProgramBinary', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glProgramParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glInvalidateFramebuffer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glInvalidateSubFramebuffer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLenum), t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glTexStorage2D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTexStorage3D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glGetInternalformativ', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLint)))
    set_enum("GL_READ_BUFFER", 0x0C02)
    set_enum("GL_UNPACK_ROW_LENGTH", 0x0CF2)
    set_enum("GL_UNPACK_SKIP_ROWS", 0x0CF3)
    set_enum("GL_UNPACK_SKIP_PIXELS", 0x0CF4)
    set_enum("GL_PACK_ROW_LENGTH", 0x0D02)
    set_enum("GL_PACK_SKIP_ROWS", 0x0D03)
    set_enum("GL_PACK_SKIP_PIXELS", 0x0D04)
    set_enum("GL_COLOR", 0x1800)
    set_enum("GL_DEPTH", 0x1801)
    set_enum("GL_STENCIL", 0x1802)
    set_enum("GL_RED", 0x1903)
    set_enum("GL_RGB8", 0x8051)
    set_enum("GL_RGBA8", 0x8058)
    set_enum("GL_RGB10_A2", 0x8059)
    set_enum("GL_TEXTURE_BINDING_3D", 0x806A)
    set_enum("GL_UNPACK_SKIP_IMAGES", 0x806D)
    set_enum("GL_UNPACK_IMAGE_HEIGHT", 0x806E)
    set_enum("GL_TEXTURE_3D", 0x806F)
    set_enum("GL_TEXTURE_WRAP_R", 0x8072)
    set_enum("GL_MAX_3D_TEXTURE_SIZE", 0x8073)
    set_enum("GL_UNSIGNED_INT_2_10_10_10_REV", 0x8368)
    set_enum("GL_MAX_ELEMENTS_VERTICES", 0x80E8)
    set_enum("GL_MAX_ELEMENTS_INDICES", 0x80E9)
    set_enum("GL_TEXTURE_MIN_LOD", 0x813A)
    set_enum("GL_TEXTURE_MAX_LOD", 0x813B)
    set_enum("GL_TEXTURE_BASE_LEVEL", 0x813C)
    set_enum("GL_TEXTURE_MAX_LEVEL", 0x813D)
    set_enum("GL_MIN", 0x8007)
    set_enum("GL_MAX", 0x8008)
    set_enum("GL_DEPTH_COMPONENT24", 0x81A6)
    set_enum("GL_MAX_TEXTURE_LOD_BIAS", 0x84FD)
    set_enum("GL_TEXTURE_COMPARE_MODE", 0x884C)
    set_enum("GL_TEXTURE_COMPARE_FUNC", 0x884D)
    set_enum("GL_CURRENT_QUERY", 0x8865)
    set_enum("GL_QUERY_RESULT", 0x8866)
    set_enum("GL_QUERY_RESULT_AVAILABLE", 0x8867)
    set_enum("GL_BUFFER_MAPPED", 0x88BC)
    set_enum("GL_BUFFER_MAP_POINTER", 0x88BD)
    set_enum("GL_STREAM_READ", 0x88E1)
    set_enum("GL_STREAM_COPY", 0x88E2)
    set_enum("GL_STATIC_READ", 0x88E5)
    set_enum("GL_STATIC_COPY", 0x88E6)
    set_enum("GL_DYNAMIC_READ", 0x88E9)
    set_enum("GL_DYNAMIC_COPY", 0x88EA)
    set_enum("GL_MAX_DRAW_BUFFERS", 0x8824)
    set_enum("GL_DRAW_BUFFER0", 0x8825)
    set_enum("GL_DRAW_BUFFER1", 0x8826)
    set_enum("GL_DRAW_BUFFER2", 0x8827)
    set_enum("GL_DRAW_BUFFER3", 0x8828)
    set_enum("GL_DRAW_BUFFER4", 0x8829)
    set_enum("GL_DRAW_BUFFER5", 0x882A)
    set_enum("GL_DRAW_BUFFER6", 0x882B)
    set_enum("GL_DRAW_BUFFER7", 0x882C)
    set_enum("GL_DRAW_BUFFER8", 0x882D)
    set_enum("GL_DRAW_BUFFER9", 0x882E)
    set_enum("GL_DRAW_BUFFER10", 0x882F)
    set_enum("GL_DRAW_BUFFER11", 0x8830)
    set_enum("GL_DRAW_BUFFER12", 0x8831)
    set_enum("GL_DRAW_BUFFER13", 0x8832)
    set_enum("GL_DRAW_BUFFER14", 0x8833)
    set_enum("GL_DRAW_BUFFER15", 0x8834)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_COMPONENTS", 0x8B49)
    set_enum("GL_MAX_VERTEX_UNIFORM_COMPONENTS", 0x8B4A)
    set_enum("GL_SAMPLER_3D", 0x8B5F)
    set_enum("GL_SAMPLER_2D_SHADOW", 0x8B62)
    set_enum("GL_FRAGMENT_SHADER_DERIVATIVE_HINT", 0x8B8B)
    set_enum("GL_PIXEL_PACK_BUFFER", 0x88EB)
    set_enum("GL_PIXEL_UNPACK_BUFFER", 0x88EC)
    set_enum("GL_PIXEL_PACK_BUFFER_BINDING", 0x88ED)
    set_enum("GL_PIXEL_UNPACK_BUFFER_BINDING", 0x88EF)
    set_enum("GL_FLOAT_MAT2x3", 0x8B65)
    set_enum("GL_FLOAT_MAT2x4", 0x8B66)
    set_enum("GL_FLOAT_MAT3x2", 0x8B67)
    set_enum("GL_FLOAT_MAT3x4", 0x8B68)
    set_enum("GL_FLOAT_MAT4x2", 0x8B69)
    set_enum("GL_FLOAT_MAT4x3", 0x8B6A)
    set_enum("GL_SRGB", 0x8C40)
    set_enum("GL_SRGB8", 0x8C41)
    set_enum("GL_SRGB8_ALPHA8", 0x8C43)
    set_enum("GL_COMPARE_REF_TO_TEXTURE", 0x884E)
    set_enum("GL_MAJOR_VERSION", 0x821B)
    set_enum("GL_MINOR_VERSION", 0x821C)
    set_enum("GL_NUM_EXTENSIONS", 0x821D)
    set_enum("GL_RGBA32F", 0x8814)
    set_enum("GL_RGB32F", 0x8815)
    set_enum("GL_RGBA16F", 0x881A)
    set_enum("GL_RGB16F", 0x881B)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_INTEGER", 0x88FD)
    set_enum("GL_MAX_ARRAY_TEXTURE_LAYERS", 0x88FF)
    set_enum("GL_MIN_PROGRAM_TEXEL_OFFSET", 0x8904)
    set_enum("GL_MAX_PROGRAM_TEXEL_OFFSET", 0x8905)
    set_enum("GL_MAX_VARYING_COMPONENTS", 0x8B4B)
    set_enum("GL_TEXTURE_2D_ARRAY", 0x8C1A)
    set_enum("GL_TEXTURE_BINDING_2D_ARRAY", 0x8C1D)
    set_enum("GL_R11F_G11F_B10F", 0x8C3A)
    set_enum("GL_UNSIGNED_INT_10F_11F_11F_REV", 0x8C3B)
    set_enum("GL_RGB9_E5", 0x8C3D)
    set_enum("GL_UNSIGNED_INT_5_9_9_9_REV", 0x8C3E)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH", 0x8C76)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_MODE", 0x8C7F)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS", 0x8C80)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYINGS", 0x8C83)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_START", 0x8C84)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_SIZE", 0x8C85)
    set_enum("GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN", 0x8C88)
    set_enum("GL_RASTERIZER_DISCARD", 0x8C89)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS", 0x8C8A)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS", 0x8C8B)
    set_enum("GL_INTERLEAVED_ATTRIBS", 0x8C8C)
    set_enum("GL_SEPARATE_ATTRIBS", 0x8C8D)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER", 0x8C8E)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_BINDING", 0x8C8F)
    set_enum("GL_RGBA32UI", 0x8D70)
    set_enum("GL_RGB32UI", 0x8D71)
    set_enum("GL_RGBA16UI", 0x8D76)
    set_enum("GL_RGB16UI", 0x8D77)
    set_enum("GL_RGBA8UI", 0x8D7C)
    set_enum("GL_RGB8UI", 0x8D7D)
    set_enum("GL_RGBA32I", 0x8D82)
    set_enum("GL_RGB32I", 0x8D83)
    set_enum("GL_RGBA16I", 0x8D88)
    set_enum("GL_RGB16I", 0x8D89)
    set_enum("GL_RGBA8I", 0x8D8E)
    set_enum("GL_RGB8I", 0x8D8F)
    set_enum("GL_RED_INTEGER", 0x8D94)
    set_enum("GL_RGB_INTEGER", 0x8D98)
    set_enum("GL_RGBA_INTEGER", 0x8D99)
    set_enum("GL_SAMPLER_2D_ARRAY", 0x8DC1)
    set_enum("GL_SAMPLER_2D_ARRAY_SHADOW", 0x8DC4)
    set_enum("GL_SAMPLER_CUBE_SHADOW", 0x8DC5)
    set_enum("GL_UNSIGNED_INT_VEC2", 0x8DC6)
    set_enum("GL_UNSIGNED_INT_VEC3", 0x8DC7)
    set_enum("GL_UNSIGNED_INT_VEC4", 0x8DC8)
    set_enum("GL_INT_SAMPLER_2D", 0x8DCA)
    set_enum("GL_INT_SAMPLER_3D", 0x8DCB)
    set_enum("GL_INT_SAMPLER_CUBE", 0x8DCC)
    set_enum("GL_INT_SAMPLER_2D_ARRAY", 0x8DCF)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D", 0x8DD2)
    set_enum("GL_UNSIGNED_INT_SAMPLER_3D", 0x8DD3)
    set_enum("GL_UNSIGNED_INT_SAMPLER_CUBE", 0x8DD4)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_ARRAY", 0x8DD7)
    set_enum("GL_BUFFER_ACCESS_FLAGS", 0x911F)
    set_enum("GL_BUFFER_MAP_LENGTH", 0x9120)
    set_enum("GL_BUFFER_MAP_OFFSET", 0x9121)
    set_enum("GL_DEPTH_COMPONENT32F", 0x8CAC)
    set_enum("GL_DEPTH32F_STENCIL8", 0x8CAD)
    set_enum("GL_FLOAT_32_UNSIGNED_INT_24_8_REV", 0x8DAD)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING", 0x8210)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE", 0x8211)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE", 0x8212)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE", 0x8213)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE", 0x8214)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE", 0x8215)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE", 0x8216)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE", 0x8217)
    set_enum("GL_FRAMEBUFFER_DEFAULT", 0x8218)
    set_enum("GL_FRAMEBUFFER_UNDEFINED", 0x8219)
    set_enum("GL_DEPTH_STENCIL_ATTACHMENT", 0x821A)
    set_enum("GL_DEPTH_STENCIL", 0x84F9)
    set_enum("GL_UNSIGNED_INT_24_8", 0x84FA)
    set_enum("GL_DEPTH24_STENCIL8", 0x88F0)
    set_enum("GL_UNSIGNED_NORMALIZED", 0x8C17)
    set_enum("GL_DRAW_FRAMEBUFFER_BINDING", 0x8CA6)
    set_enum("GL_READ_FRAMEBUFFER", 0x8CA8)
    set_enum("GL_DRAW_FRAMEBUFFER", 0x8CA9)
    set_enum("GL_READ_FRAMEBUFFER_BINDING", 0x8CAA)
    set_enum("GL_RENDERBUFFER_SAMPLES", 0x8CAB)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER", 0x8CD4)
    set_enum("GL_MAX_COLOR_ATTACHMENTS", 0x8CDF)
    set_enum("GL_COLOR_ATTACHMENT1", 0x8CE1)
    set_enum("GL_COLOR_ATTACHMENT2", 0x8CE2)
    set_enum("GL_COLOR_ATTACHMENT3", 0x8CE3)
    set_enum("GL_COLOR_ATTACHMENT4", 0x8CE4)
    set_enum("GL_COLOR_ATTACHMENT5", 0x8CE5)
    set_enum("GL_COLOR_ATTACHMENT6", 0x8CE6)
    set_enum("GL_COLOR_ATTACHMENT7", 0x8CE7)
    set_enum("GL_COLOR_ATTACHMENT8", 0x8CE8)
    set_enum("GL_COLOR_ATTACHMENT9", 0x8CE9)
    set_enum("GL_COLOR_ATTACHMENT10", 0x8CEA)
    set_enum("GL_COLOR_ATTACHMENT11", 0x8CEB)
    set_enum("GL_COLOR_ATTACHMENT12", 0x8CEC)
    set_enum("GL_COLOR_ATTACHMENT13", 0x8CED)
    set_enum("GL_COLOR_ATTACHMENT14", 0x8CEE)
    set_enum("GL_COLOR_ATTACHMENT15", 0x8CEF)
    set_enum("GL_COLOR_ATTACHMENT16", 0x8CF0)
    set_enum("GL_COLOR_ATTACHMENT17", 0x8CF1)
    set_enum("GL_COLOR_ATTACHMENT18", 0x8CF2)
    set_enum("GL_COLOR_ATTACHMENT19", 0x8CF3)
    set_enum("GL_COLOR_ATTACHMENT20", 0x8CF4)
    set_enum("GL_COLOR_ATTACHMENT21", 0x8CF5)
    set_enum("GL_COLOR_ATTACHMENT22", 0x8CF6)
    set_enum("GL_COLOR_ATTACHMENT23", 0x8CF7)
    set_enum("GL_COLOR_ATTACHMENT24", 0x8CF8)
    set_enum("GL_COLOR_ATTACHMENT25", 0x8CF9)
    set_enum("GL_COLOR_ATTACHMENT26", 0x8CFA)
    set_enum("GL_COLOR_ATTACHMENT27", 0x8CFB)
    set_enum("GL_COLOR_ATTACHMENT28", 0x8CFC)
    set_enum("GL_COLOR_ATTACHMENT29", 0x8CFD)
    set_enum("GL_COLOR_ATTACHMENT30", 0x8CFE)
    set_enum("GL_COLOR_ATTACHMENT31", 0x8CFF)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE", 0x8D56)
    set_enum("GL_MAX_SAMPLES", 0x8D57)
    set_enum("GL_HALF_FLOAT", 0x140B)
    set_enum("GL_MAP_READ_BIT", 0x0001)
    set_enum("GL_MAP_WRITE_BIT", 0x0002)
    set_enum("GL_MAP_INVALIDATE_RANGE_BIT", 0x0004)
    set_enum("GL_MAP_INVALIDATE_BUFFER_BIT", 0x0008)
    set_enum("GL_MAP_FLUSH_EXPLICIT_BIT", 0x0010)
    set_enum("GL_MAP_UNSYNCHRONIZED_BIT", 0x0020)
    set_enum("GL_RG", 0x8227)
    set_enum("GL_RG_INTEGER", 0x8228)
    set_enum("GL_R8", 0x8229)
    set_enum("GL_RG8", 0x822B)
    set_enum("GL_R16F", 0x822D)
    set_enum("GL_R32F", 0x822E)
    set_enum("GL_RG16F", 0x822F)
    set_enum("GL_RG32F", 0x8230)
    set_enum("GL_R8I", 0x8231)
    set_enum("GL_R8UI", 0x8232)
    set_enum("GL_R16I", 0x8233)
    set_enum("GL_R16UI", 0x8234)
    set_enum("GL_R32I", 0x8235)
    set_enum("GL_R32UI", 0x8236)
    set_enum("GL_RG8I", 0x8237)
    set_enum("GL_RG8UI", 0x8238)
    set_enum("GL_RG16I", 0x8239)
    set_enum("GL_RG16UI", 0x823A)
    set_enum("GL_RG32I", 0x823B)
    set_enum("GL_RG32UI", 0x823C)
    set_enum("GL_VERTEX_ARRAY_BINDING", 0x85B5)
    set_enum("GL_R8_SNORM", 0x8F94)
    set_enum("GL_RG8_SNORM", 0x8F95)
    set_enum("GL_RGB8_SNORM", 0x8F96)
    set_enum("GL_RGBA8_SNORM", 0x8F97)
    set_enum("GL_SIGNED_NORMALIZED", 0x8F9C)
    set_enum("GL_PRIMITIVE_RESTART_FIXED_INDEX", 0x8D69)
    set_enum("GL_COPY_READ_BUFFER", 0x8F36)
    set_enum("GL_COPY_WRITE_BUFFER", 0x8F37)
    set_enum("GL_COPY_READ_BUFFER_BINDING", 0x8F36)
    set_enum("GL_COPY_WRITE_BUFFER_BINDING", 0x8F37)
    set_enum("GL_UNIFORM_BUFFER", 0x8A11)
    set_enum("GL_UNIFORM_BUFFER_BINDING", 0x8A28)
    set_enum("GL_UNIFORM_BUFFER_START", 0x8A29)
    set_enum("GL_UNIFORM_BUFFER_SIZE", 0x8A2A)
    set_enum("GL_MAX_VERTEX_UNIFORM_BLOCKS", 0x8A2B)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_BLOCKS", 0x8A2D)
    set_enum("GL_MAX_COMBINED_UNIFORM_BLOCKS", 0x8A2E)
    set_enum("GL_MAX_UNIFORM_BUFFER_BINDINGS", 0x8A2F)
    set_enum("GL_MAX_UNIFORM_BLOCK_SIZE", 0x8A30)
    set_enum("GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS", 0x8A31)
    set_enum("GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS", 0x8A33)
    set_enum("GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT", 0x8A34)
    set_enum("GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH", 0x8A35)
    set_enum("GL_ACTIVE_UNIFORM_BLOCKS", 0x8A36)
    set_enum("GL_UNIFORM_TYPE", 0x8A37)
    set_enum("GL_UNIFORM_SIZE", 0x8A38)
    set_enum("GL_UNIFORM_NAME_LENGTH", 0x8A39)
    set_enum("GL_UNIFORM_BLOCK_INDEX", 0x8A3A)
    set_enum("GL_UNIFORM_OFFSET", 0x8A3B)
    set_enum("GL_UNIFORM_ARRAY_STRIDE", 0x8A3C)
    set_enum("GL_UNIFORM_MATRIX_STRIDE", 0x8A3D)
    set_enum("GL_UNIFORM_IS_ROW_MAJOR", 0x8A3E)
    set_enum("GL_UNIFORM_BLOCK_BINDING", 0x8A3F)
    set_enum("GL_UNIFORM_BLOCK_DATA_SIZE", 0x8A40)
    set_enum("GL_UNIFORM_BLOCK_NAME_LENGTH", 0x8A41)
    set_enum("GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS", 0x8A42)
    set_enum("GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES", 0x8A43)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER", 0x8A44)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER", 0x8A46)
    set_enum("GL_INVALID_INDEX", 0xFFFFFFFF)
    set_enum("GL_MAX_VERTEX_OUTPUT_COMPONENTS", 0x9122)
    set_enum("GL_MAX_FRAGMENT_INPUT_COMPONENTS", 0x9125)
    set_enum("GL_MAX_SERVER_WAIT_TIMEOUT", 0x9111)
    set_enum("GL_OBJECT_TYPE", 0x9112)
    set_enum("GL_SYNC_CONDITION", 0x9113)
    set_enum("GL_SYNC_STATUS", 0x9114)
    set_enum("GL_SYNC_FLAGS", 0x9115)
    set_enum("GL_SYNC_FENCE", 0x9116)
    set_enum("GL_SYNC_GPU_COMMANDS_COMPLETE", 0x9117)
    set_enum("GL_UNSIGNALED", 0x9118)
    set_enum("GL_SIGNALED", 0x9119)
    set_enum("GL_ALREADY_SIGNALED", 0x911A)
    set_enum("GL_TIMEOUT_EXPIRED", 0x911B)
    set_enum("GL_CONDITION_SATISFIED", 0x911C)
    set_enum("GL_WAIT_FAILED", 0x911D)
    set_enum("GL_SYNC_FLUSH_COMMANDS_BIT", 0x00000001)
    set_enum("GL_TIMEOUT_IGNORED", 0xFFFFFFFFFFFFFFFF)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_DIVISOR", 0x88FE)
    set_enum("GL_ANY_SAMPLES_PASSED", 0x8C2F)
    set_enum("GL_ANY_SAMPLES_PASSED_CONSERVATIVE", 0x8D6A)
    set_enum("GL_SAMPLER_BINDING", 0x8919)
    set_enum("GL_RGB10_A2UI", 0x906F)
    set_enum("GL_TEXTURE_SWIZZLE_R", 0x8E42)
    set_enum("GL_TEXTURE_SWIZZLE_G", 0x8E43)
    set_enum("GL_TEXTURE_SWIZZLE_B", 0x8E44)
    set_enum("GL_TEXTURE_SWIZZLE_A", 0x8E45)
    set_enum("GL_GREEN", 0x1904)
    set_enum("GL_BLUE", 0x1905)
    set_enum("GL_INT_2_10_10_10_REV", 0x8D9F)
    set_enum("GL_TRANSFORM_FEEDBACK", 0x8E22)
    set_enum("GL_TRANSFORM_FEEDBACK_PAUSED", 0x8E23)
    set_enum("GL_TRANSFORM_FEEDBACK_ACTIVE", 0x8E24)
    set_enum("GL_TRANSFORM_FEEDBACK_BINDING", 0x8E25)
    set_enum("GL_PROGRAM_BINARY_RETRIEVABLE_HINT", 0x8257)
    set_enum("GL_PROGRAM_BINARY_LENGTH", 0x8741)
    set_enum("GL_NUM_PROGRAM_BINARY_FORMATS", 0x87FE)
    set_enum("GL_PROGRAM_BINARY_FORMATS", 0x87FF)
    set_enum("GL_COMPRESSED_R11_EAC", 0x9270)
    set_enum("GL_COMPRESSED_SIGNED_R11_EAC", 0x9271)
    set_enum("GL_COMPRESSED_RG11_EAC", 0x9272)
    set_enum("GL_COMPRESSED_SIGNED_RG11_EAC", 0x9273)
    set_enum("GL_COMPRESSED_RGB8_ETC2", 0x9274)
    set_enum("GL_COMPRESSED_SRGB8_ETC2", 0x9275)
    set_enum("GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2", 0x9276)
    set_enum("GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2", 0x9277)
    set_enum("GL_COMPRESSED_RGBA8_ETC2_EAC", 0x9278)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC", 0x9279)
    set_enum("GL_TEXTURE_IMMUTABLE_FORMAT", 0x912F)
    set_enum("GL_MAX_ELEMENT_INDEX", 0x8D6B)
    set_enum("GL_NUM_SAMPLE_COUNTS", 0x9380)
    set_enum("GL_TEXTURE_IMMUTABLE_LEVELS", 0x82DF)


#### GLES2 VERSION 3.1 ####
def init_gl_es_version_3_1():
    set_func('glDispatchCompute', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glDispatchComputeIndirect', t.void, (t.GLintptr,))
    set_func('glDrawArraysIndirect', t.void, (t.GLenum, ct.POINTER(t.void)))
    set_func('glDrawElementsIndirect', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glFramebufferParameteri', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glGetFramebufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramInterfaceiv', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramResourceIndex', t.GLuint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceName', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceiv', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint)))
    set_func('glGetProgramResourceLocation', t.GLint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glUseProgramStages', t.void, (t.GLuint, t.GLbitfield, t.GLuint))
    set_func('glActiveShaderProgram', t.void, (t.GLuint, t.GLuint))
    set_func('glCreateShaderProgramv', t.GLuint, (t.GLenum, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar))))
    set_func('glBindProgramPipeline', t.void, (t.GLuint,))
    set_func('glDeleteProgramPipelines', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenProgramPipelines', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsProgramPipeline', t.GLboolean, (t.GLuint,))
    set_func('glGetProgramPipelineiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glProgramUniform1i', t.void, (t.GLuint, t.GLint, t.GLint))
    set_func('glProgramUniform2i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform3i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform4i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform1ui', t.void, (t.GLuint, t.GLint, t.GLuint))
    set_func('glProgramUniform2ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint))
    set_func('glProgramUniform3ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform4ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform1f', t.void, (t.GLuint, t.GLint, t.GLfloat))
    set_func('glProgramUniform2f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform3f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform4f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform1iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform2iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform3iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform4iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform1uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform2uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform3uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform4uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform1fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glValidateProgramPipeline', t.void, (t.GLuint,))
    set_func('glGetProgramPipelineInfoLog', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glBindImageTexture', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLboolean, t.GLint, t.GLenum, t.GLenum))
    set_func('glGetBooleani_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLboolean)))
    set_func('glMemoryBarrier', t.void, (t.GLbitfield,))
    set_func('glMemoryBarrierByRegion', t.void, (t.GLbitfield,))
    set_func('glTexStorage2DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glGetMultisamplefv', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glSampleMaski', t.void, (t.GLuint, t.GLbitfield))
    set_func('glGetTexLevelParameteriv', t.void, (t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexLevelParameterfv', t.void, (t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glBindVertexBuffer', t.void, (t.GLuint, t.GLuint, t.GLintptr, t.GLsizei))
    set_func('glVertexAttribFormat', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribIFormat', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexAttribBinding', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexBindingDivisor', t.void, (t.GLuint, t.GLuint))
    set_enum("GL_COMPUTE_SHADER", 0x91B9)
    set_enum("GL_MAX_COMPUTE_UNIFORM_BLOCKS", 0x91BB)
    set_enum("GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS", 0x91BC)
    set_enum("GL_MAX_COMPUTE_IMAGE_UNIFORMS", 0x91BD)
    set_enum("GL_MAX_COMPUTE_SHARED_MEMORY_SIZE", 0x8262)
    set_enum("GL_MAX_COMPUTE_UNIFORM_COMPONENTS", 0x8263)
    set_enum("GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS", 0x8264)
    set_enum("GL_MAX_COMPUTE_ATOMIC_COUNTERS", 0x8265)
    set_enum("GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS", 0x8266)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS", 0x90EB)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_COUNT", 0x91BE)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_SIZE", 0x91BF)
    set_enum("GL_COMPUTE_WORK_GROUP_SIZE", 0x8267)
    set_enum("GL_DISPATCH_INDIRECT_BUFFER", 0x90EE)
    set_enum("GL_DISPATCH_INDIRECT_BUFFER_BINDING", 0x90EF)
    set_enum("GL_COMPUTE_SHADER_BIT", 0x00000020)
    set_enum("GL_DRAW_INDIRECT_BUFFER", 0x8F3F)
    set_enum("GL_DRAW_INDIRECT_BUFFER_BINDING", 0x8F43)
    set_enum("GL_MAX_UNIFORM_LOCATIONS", 0x826E)
    set_enum("GL_FRAMEBUFFER_DEFAULT_WIDTH", 0x9310)
    set_enum("GL_FRAMEBUFFER_DEFAULT_HEIGHT", 0x9311)
    set_enum("GL_FRAMEBUFFER_DEFAULT_SAMPLES", 0x9313)
    set_enum("GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS", 0x9314)
    set_enum("GL_MAX_FRAMEBUFFER_WIDTH", 0x9315)
    set_enum("GL_MAX_FRAMEBUFFER_HEIGHT", 0x9316)
    set_enum("GL_MAX_FRAMEBUFFER_SAMPLES", 0x9318)
    set_enum("GL_UNIFORM", 0x92E1)
    set_enum("GL_UNIFORM_BLOCK", 0x92E2)
    set_enum("GL_PROGRAM_INPUT", 0x92E3)
    set_enum("GL_PROGRAM_OUTPUT", 0x92E4)
    set_enum("GL_BUFFER_VARIABLE", 0x92E5)
    set_enum("GL_SHADER_STORAGE_BLOCK", 0x92E6)
    set_enum("GL_ATOMIC_COUNTER_BUFFER", 0x92C0)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYING", 0x92F4)
    set_enum("GL_ACTIVE_RESOURCES", 0x92F5)
    set_enum("GL_MAX_NAME_LENGTH", 0x92F6)
    set_enum("GL_MAX_NUM_ACTIVE_VARIABLES", 0x92F7)
    set_enum("GL_NAME_LENGTH", 0x92F9)
    set_enum("GL_TYPE", 0x92FA)
    set_enum("GL_ARRAY_SIZE", 0x92FB)
    set_enum("GL_OFFSET", 0x92FC)
    set_enum("GL_BLOCK_INDEX", 0x92FD)
    set_enum("GL_ARRAY_STRIDE", 0x92FE)
    set_enum("GL_MATRIX_STRIDE", 0x92FF)
    set_enum("GL_IS_ROW_MAJOR", 0x9300)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_INDEX", 0x9301)
    set_enum("GL_BUFFER_BINDING", 0x9302)
    set_enum("GL_BUFFER_DATA_SIZE", 0x9303)
    set_enum("GL_NUM_ACTIVE_VARIABLES", 0x9304)
    set_enum("GL_ACTIVE_VARIABLES", 0x9305)
    set_enum("GL_REFERENCED_BY_VERTEX_SHADER", 0x9306)
    set_enum("GL_REFERENCED_BY_FRAGMENT_SHADER", 0x930A)
    set_enum("GL_REFERENCED_BY_COMPUTE_SHADER", 0x930B)
    set_enum("GL_TOP_LEVEL_ARRAY_SIZE", 0x930C)
    set_enum("GL_TOP_LEVEL_ARRAY_STRIDE", 0x930D)
    set_enum("GL_LOCATION", 0x930E)
    set_enum("GL_VERTEX_SHADER_BIT", 0x00000001)
    set_enum("GL_FRAGMENT_SHADER_BIT", 0x00000002)
    set_enum("GL_ALL_SHADER_BITS", 0xFFFFFFFF)
    set_enum("GL_PROGRAM_SEPARABLE", 0x8258)
    set_enum("GL_ACTIVE_PROGRAM", 0x8259)
    set_enum("GL_PROGRAM_PIPELINE_BINDING", 0x825A)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_BINDING", 0x92C1)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_START", 0x92C2)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_SIZE", 0x92C3)
    set_enum("GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS", 0x92CC)
    set_enum("GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS", 0x92D0)
    set_enum("GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS", 0x92D1)
    set_enum("GL_MAX_VERTEX_ATOMIC_COUNTERS", 0x92D2)
    set_enum("GL_MAX_FRAGMENT_ATOMIC_COUNTERS", 0x92D6)
    set_enum("GL_MAX_COMBINED_ATOMIC_COUNTERS", 0x92D7)
    set_enum("GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE", 0x92D8)
    set_enum("GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS", 0x92DC)
    set_enum("GL_ACTIVE_ATOMIC_COUNTER_BUFFERS", 0x92D9)
    set_enum("GL_UNSIGNED_INT_ATOMIC_COUNTER", 0x92DB)
    set_enum("GL_MAX_IMAGE_UNITS", 0x8F38)
    set_enum("GL_MAX_VERTEX_IMAGE_UNIFORMS", 0x90CA)
    set_enum("GL_MAX_FRAGMENT_IMAGE_UNIFORMS", 0x90CE)
    set_enum("GL_MAX_COMBINED_IMAGE_UNIFORMS", 0x90CF)
    set_enum("GL_IMAGE_BINDING_NAME", 0x8F3A)
    set_enum("GL_IMAGE_BINDING_LEVEL", 0x8F3B)
    set_enum("GL_IMAGE_BINDING_LAYERED", 0x8F3C)
    set_enum("GL_IMAGE_BINDING_LAYER", 0x8F3D)
    set_enum("GL_IMAGE_BINDING_ACCESS", 0x8F3E)
    set_enum("GL_IMAGE_BINDING_FORMAT", 0x906E)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT", 0x00000001)
    set_enum("GL_ELEMENT_ARRAY_BARRIER_BIT", 0x00000002)
    set_enum("GL_UNIFORM_BARRIER_BIT", 0x00000004)
    set_enum("GL_TEXTURE_FETCH_BARRIER_BIT", 0x00000008)
    set_enum("GL_SHADER_IMAGE_ACCESS_BARRIER_BIT", 0x00000020)
    set_enum("GL_COMMAND_BARRIER_BIT", 0x00000040)
    set_enum("GL_PIXEL_BUFFER_BARRIER_BIT", 0x00000080)
    set_enum("GL_TEXTURE_UPDATE_BARRIER_BIT", 0x00000100)
    set_enum("GL_BUFFER_UPDATE_BARRIER_BIT", 0x00000200)
    set_enum("GL_FRAMEBUFFER_BARRIER_BIT", 0x00000400)
    set_enum("GL_TRANSFORM_FEEDBACK_BARRIER_BIT", 0x00000800)
    set_enum("GL_ATOMIC_COUNTER_BARRIER_BIT", 0x00001000)
    set_enum("GL_ALL_BARRIER_BITS", 0xFFFFFFFF)
    set_enum("GL_IMAGE_2D", 0x904D)
    set_enum("GL_IMAGE_3D", 0x904E)
    set_enum("GL_IMAGE_CUBE", 0x9050)
    set_enum("GL_IMAGE_2D_ARRAY", 0x9053)
    set_enum("GL_INT_IMAGE_2D", 0x9058)
    set_enum("GL_INT_IMAGE_3D", 0x9059)
    set_enum("GL_INT_IMAGE_CUBE", 0x905B)
    set_enum("GL_INT_IMAGE_2D_ARRAY", 0x905E)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D", 0x9063)
    set_enum("GL_UNSIGNED_INT_IMAGE_3D", 0x9064)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE", 0x9066)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_ARRAY", 0x9069)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_TYPE", 0x90C7)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE", 0x90C8)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS", 0x90C9)
    set_enum("GL_READ_ONLY", 0x88B8)
    set_enum("GL_WRITE_ONLY", 0x88B9)
    set_enum("GL_READ_WRITE", 0x88BA)
    set_enum("GL_SHADER_STORAGE_BUFFER", 0x90D2)
    set_enum("GL_SHADER_STORAGE_BUFFER_BINDING", 0x90D3)
    set_enum("GL_SHADER_STORAGE_BUFFER_START", 0x90D4)
    set_enum("GL_SHADER_STORAGE_BUFFER_SIZE", 0x90D5)
    set_enum("GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS", 0x90D6)
    set_enum("GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS", 0x90DA)
    set_enum("GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS", 0x90DB)
    set_enum("GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS", 0x90DC)
    set_enum("GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS", 0x90DD)
    set_enum("GL_MAX_SHADER_STORAGE_BLOCK_SIZE", 0x90DE)
    set_enum("GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT", 0x90DF)
    set_enum("GL_SHADER_STORAGE_BARRIER_BIT", 0x00002000)
    set_enum("GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES", 0x8F39)
    set_enum("GL_DEPTH_STENCIL_TEXTURE_MODE", 0x90EA)
    set_enum("GL_STENCIL_INDEX", 0x1901)
    set_enum("GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET", 0x8E5E)
    set_enum("GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET", 0x8E5F)
    set_enum("GL_SAMPLE_POSITION", 0x8E50)
    set_enum("GL_SAMPLE_MASK", 0x8E51)
    set_enum("GL_SAMPLE_MASK_VALUE", 0x8E52)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE", 0x9100)
    set_enum("GL_MAX_SAMPLE_MASK_WORDS", 0x8E59)
    set_enum("GL_MAX_COLOR_TEXTURE_SAMPLES", 0x910E)
    set_enum("GL_MAX_DEPTH_TEXTURE_SAMPLES", 0x910F)
    set_enum("GL_MAX_INTEGER_SAMPLES", 0x9110)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE", 0x9104)
    set_enum("GL_TEXTURE_SAMPLES", 0x9106)
    set_enum("GL_TEXTURE_FIXED_SAMPLE_LOCATIONS", 0x9107)
    set_enum("GL_TEXTURE_WIDTH", 0x1000)
    set_enum("GL_TEXTURE_HEIGHT", 0x1001)
    set_enum("GL_TEXTURE_DEPTH", 0x8071)
    set_enum("GL_TEXTURE_INTERNAL_FORMAT", 0x1003)
    set_enum("GL_TEXTURE_RED_SIZE", 0x805C)
    set_enum("GL_TEXTURE_GREEN_SIZE", 0x805D)
    set_enum("GL_TEXTURE_BLUE_SIZE", 0x805E)
    set_enum("GL_TEXTURE_ALPHA_SIZE", 0x805F)
    set_enum("GL_TEXTURE_DEPTH_SIZE", 0x884A)
    set_enum("GL_TEXTURE_STENCIL_SIZE", 0x88F1)
    set_enum("GL_TEXTURE_SHARED_SIZE", 0x8C3F)
    set_enum("GL_TEXTURE_RED_TYPE", 0x8C10)
    set_enum("GL_TEXTURE_GREEN_TYPE", 0x8C11)
    set_enum("GL_TEXTURE_BLUE_TYPE", 0x8C12)
    set_enum("GL_TEXTURE_ALPHA_TYPE", 0x8C13)
    set_enum("GL_TEXTURE_DEPTH_TYPE", 0x8C16)
    set_enum("GL_TEXTURE_COMPRESSED", 0x86A1)
    set_enum("GL_SAMPLER_2D_MULTISAMPLE", 0x9108)
    set_enum("GL_INT_SAMPLER_2D_MULTISAMPLE", 0x9109)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE", 0x910A)
    set_enum("GL_VERTEX_ATTRIB_BINDING", 0x82D4)
    set_enum("GL_VERTEX_ATTRIB_RELATIVE_OFFSET", 0x82D5)
    set_enum("GL_VERTEX_BINDING_DIVISOR", 0x82D6)
    set_enum("GL_VERTEX_BINDING_OFFSET", 0x82D7)
    set_enum("GL_VERTEX_BINDING_STRIDE", 0x82D8)
    set_enum("GL_VERTEX_BINDING_BUFFER", 0x8F4F)
    set_enum("GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET", 0x82D9)
    set_enum("GL_MAX_VERTEX_ATTRIB_BINDINGS", 0x82DA)
    set_enum("GL_MAX_VERTEX_ATTRIB_STRIDE", 0x82E5)


#### GLES2 VERSION 3.2 ####
def init_gl_es_version_3_2():
    set_func('glBlendBarrier', t.void, ())
    set_func('glCopyImageSubData', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glDebugMessageControl', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLuint), t.GLboolean))
    set_func('glDebugMessageInsert', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLenum, t.GLsizei, ct.POINTER(t.GLchar)))
#     set_func('glDebugMessageCallback', t.void, (t.GLDEBUGPROC, ct.POINTER(t.void)))
    set_func('glGetDebugMessageLog', t.GLuint, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), ct.POINTER(t.GLenum), ct.POINTER(t.GLuint), ct.POINTER(t.GLenum), ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glPushDebugGroup', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glPopDebugGroup', t.void, ())
    set_func('glObjectLabel', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectLabel', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glObjectPtrLabel', t.void, (ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectPtrLabel', t.void, (ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetPointerv', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glEnablei', t.void, (t.GLenum, t.GLuint))
    set_func('glDisablei', t.void, (t.GLenum, t.GLuint))
    set_func('glBlendEquationi', t.void, (t.GLuint, t.GLenum))
    set_func('glBlendEquationSeparatei', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFunci', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFuncSeparatei', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glColorMaski', t.void, (t.GLuint, t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glIsEnabledi', t.GLboolean, (t.GLenum, t.GLuint))
    set_func('glDrawElementsBaseVertex', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawRangeElementsBaseVertex', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawElementsInstancedBaseVertex', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLint))
    set_func('glFramebufferTexture', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glPrimitiveBoundingBox', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glGetGraphicsResetStatus', t.GLenum, ())
    set_func('glReadnPixels', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnUniformfv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnUniformiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glGetnUniformuiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glMinSampleShading', t.void, (t.GLfloat,))
    set_func('glPatchParameteri', t.void, (t.GLenum, t.GLint))
    set_func('glTexParameterIiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexParameterIuiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetTexParameterIiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexParameterIuiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glSamplerParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glSamplerParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetSamplerParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSamplerParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glTexBuffer', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glTexBufferRange', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glTexStorage3DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_enum("GL_MULTISAMPLE_LINE_WIDTH_RANGE", 0x9381)
    set_enum("GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY", 0x9382)
    set_enum("GL_MULTIPLY", 0x9294)
    set_enum("GL_SCREEN", 0x9295)
    set_enum("GL_OVERLAY", 0x9296)
    set_enum("GL_DARKEN", 0x9297)
    set_enum("GL_LIGHTEN", 0x9298)
    set_enum("GL_COLORDODGE", 0x9299)
    set_enum("GL_COLORBURN", 0x929A)
    set_enum("GL_HARDLIGHT", 0x929B)
    set_enum("GL_SOFTLIGHT", 0x929C)
    set_enum("GL_DIFFERENCE", 0x929E)
    set_enum("GL_EXCLUSION", 0x92A0)
    set_enum("GL_HSL_HUE", 0x92AD)
    set_enum("GL_HSL_SATURATION", 0x92AE)
    set_enum("GL_HSL_COLOR", 0x92AF)
    set_enum("GL_HSL_LUMINOSITY", 0x92B0)
    set_enum("GL_DEBUG_OUTPUT_SYNCHRONOUS", 0x8242)
    set_enum("GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH", 0x8243)
    set_enum("GL_DEBUG_CALLBACK_FUNCTION", 0x8244)
    set_enum("GL_DEBUG_CALLBACK_USER_PARAM", 0x8245)
    set_enum("GL_DEBUG_SOURCE_API", 0x8246)
    set_enum("GL_DEBUG_SOURCE_WINDOW_SYSTEM", 0x8247)
    set_enum("GL_DEBUG_SOURCE_SHADER_COMPILER", 0x8248)
    set_enum("GL_DEBUG_SOURCE_THIRD_PARTY", 0x8249)
    set_enum("GL_DEBUG_SOURCE_APPLICATION", 0x824A)
    set_enum("GL_DEBUG_SOURCE_OTHER", 0x824B)
    set_enum("GL_DEBUG_TYPE_ERROR", 0x824C)
    set_enum("GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR", 0x824D)
    set_enum("GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR", 0x824E)
    set_enum("GL_DEBUG_TYPE_PORTABILITY", 0x824F)
    set_enum("GL_DEBUG_TYPE_PERFORMANCE", 0x8250)
    set_enum("GL_DEBUG_TYPE_OTHER", 0x8251)
    set_enum("GL_DEBUG_TYPE_MARKER", 0x8268)
    set_enum("GL_DEBUG_TYPE_PUSH_GROUP", 0x8269)
    set_enum("GL_DEBUG_TYPE_POP_GROUP", 0x826A)
    set_enum("GL_DEBUG_SEVERITY_NOTIFICATION", 0x826B)
    set_enum("GL_MAX_DEBUG_GROUP_STACK_DEPTH", 0x826C)
    set_enum("GL_DEBUG_GROUP_STACK_DEPTH", 0x826D)
    set_enum("GL_BUFFER", 0x82E0)
    set_enum("GL_SHADER", 0x82E1)
    set_enum("GL_PROGRAM", 0x82E2)
    set_enum("GL_VERTEX_ARRAY", 0x8074)
    set_enum("GL_QUERY", 0x82E3)
    set_enum("GL_PROGRAM_PIPELINE", 0x82E4)
    set_enum("GL_SAMPLER", 0x82E6)
    set_enum("GL_MAX_LABEL_LENGTH", 0x82E8)
    set_enum("GL_MAX_DEBUG_MESSAGE_LENGTH", 0x9143)
    set_enum("GL_MAX_DEBUG_LOGGED_MESSAGES", 0x9144)
    set_enum("GL_DEBUG_LOGGED_MESSAGES", 0x9145)
    set_enum("GL_DEBUG_SEVERITY_HIGH", 0x9146)
    set_enum("GL_DEBUG_SEVERITY_MEDIUM", 0x9147)
    set_enum("GL_DEBUG_SEVERITY_LOW", 0x9148)
    set_enum("GL_DEBUG_OUTPUT", 0x92E0)
    set_enum("GL_CONTEXT_FLAG_DEBUG_BIT", 0x00000002)
    set_enum("GL_STACK_OVERFLOW", 0x0503)
    set_enum("GL_STACK_UNDERFLOW", 0x0504)
    set_enum("GL_GEOMETRY_SHADER", 0x8DD9)
    set_enum("GL_GEOMETRY_SHADER_BIT", 0x00000004)
    set_enum("GL_GEOMETRY_VERTICES_OUT", 0x8916)
    set_enum("GL_GEOMETRY_INPUT_TYPE", 0x8917)
    set_enum("GL_GEOMETRY_OUTPUT_TYPE", 0x8918)
    set_enum("GL_GEOMETRY_SHADER_INVOCATIONS", 0x887F)
    set_enum("GL_LAYER_PROVOKING_VERTEX", 0x825E)
    set_enum("GL_LINES_ADJACENCY", 0x000A)
    set_enum("GL_LINE_STRIP_ADJACENCY", 0x000B)
    set_enum("GL_TRIANGLES_ADJACENCY", 0x000C)
    set_enum("GL_TRIANGLE_STRIP_ADJACENCY", 0x000D)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_COMPONENTS", 0x8DDF)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_BLOCKS", 0x8A2C)
    set_enum("GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS", 0x8A32)
    set_enum("GL_MAX_GEOMETRY_INPUT_COMPONENTS", 0x9123)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_COMPONENTS", 0x9124)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_VERTICES", 0x8DE0)
    set_enum("GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS", 0x8DE1)
    set_enum("GL_MAX_GEOMETRY_SHADER_INVOCATIONS", 0x8E5A)
    set_enum("GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS", 0x8C29)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS", 0x92CF)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTERS", 0x92D5)
    set_enum("GL_MAX_GEOMETRY_IMAGE_UNIFORMS", 0x90CD)
    set_enum("GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS", 0x90D7)
    set_enum("GL_FIRST_VERTEX_CONVENTION", 0x8E4D)
    set_enum("GL_LAST_VERTEX_CONVENTION", 0x8E4E)
    set_enum("GL_UNDEFINED_VERTEX", 0x8260)
    set_enum("GL_PRIMITIVES_GENERATED", 0x8C87)
    set_enum("GL_FRAMEBUFFER_DEFAULT_LAYERS", 0x9312)
    set_enum("GL_MAX_FRAMEBUFFER_LAYERS", 0x9317)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS", 0x8DA8)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_LAYERED", 0x8DA7)
    set_enum("GL_REFERENCED_BY_GEOMETRY_SHADER", 0x9309)
    set_enum("GL_PRIMITIVE_BOUNDING_BOX", 0x92BE)
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT", 0x00000004)
    set_enum("GL_CONTEXT_FLAGS", 0x821E)
    set_enum("GL_LOSE_CONTEXT_ON_RESET", 0x8252)
    set_enum("GL_GUILTY_CONTEXT_RESET", 0x8253)
    set_enum("GL_INNOCENT_CONTEXT_RESET", 0x8254)
    set_enum("GL_UNKNOWN_CONTEXT_RESET", 0x8255)
    set_enum("GL_RESET_NOTIFICATION_STRATEGY", 0x8256)
    set_enum("GL_NO_RESET_NOTIFICATION", 0x8261)
    set_enum("GL_CONTEXT_LOST", 0x0507)
    set_enum("GL_SAMPLE_SHADING", 0x8C36)
    set_enum("GL_MIN_SAMPLE_SHADING_VALUE", 0x8C37)
    set_enum("GL_MIN_FRAGMENT_INTERPOLATION_OFFSET", 0x8E5B)
    set_enum("GL_MAX_FRAGMENT_INTERPOLATION_OFFSET", 0x8E5C)
    set_enum("GL_FRAGMENT_INTERPOLATION_OFFSET_BITS", 0x8E5D)
    set_enum("GL_PATCHES", 0x000E)
    set_enum("GL_PATCH_VERTICES", 0x8E72)
    set_enum("GL_TESS_CONTROL_OUTPUT_VERTICES", 0x8E75)
    set_enum("GL_TESS_GEN_MODE", 0x8E76)
    set_enum("GL_TESS_GEN_SPACING", 0x8E77)
    set_enum("GL_TESS_GEN_VERTEX_ORDER", 0x8E78)
    set_enum("GL_TESS_GEN_POINT_MODE", 0x8E79)
    set_enum("GL_TRIANGLES", 0x0004)
    set_enum("GL_ISOLINES", 0x8E7A)
    set_enum("GL_QUADS", 0x0007)
    set_enum("GL_EQUAL", 0x0202)
    set_enum("GL_FRACTIONAL_ODD", 0x8E7B)
    set_enum("GL_FRACTIONAL_EVEN", 0x8E7C)
    set_enum("GL_CCW", 0x0901)
    set_enum("GL_CW", 0x0900)
    set_enum("GL_MAX_PATCH_VERTICES", 0x8E7D)
    set_enum("GL_MAX_TESS_GEN_LEVEL", 0x8E7E)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS", 0x8E7F)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS", 0x8E80)
    set_enum("GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS", 0x8E81)
    set_enum("GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS", 0x8E82)
    set_enum("GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS", 0x8E83)
    set_enum("GL_MAX_TESS_PATCH_COMPONENTS", 0x8E84)
    set_enum("GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS", 0x8E85)
    set_enum("GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS", 0x8E86)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS", 0x8E89)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS", 0x8E8A)
    set_enum("GL_MAX_TESS_CONTROL_INPUT_COMPONENTS", 0x886C)
    set_enum("GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS", 0x886D)
    set_enum("GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS", 0x8E1E)
    set_enum("GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS", 0x8E1F)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS", 0x92CD)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS", 0x92CE)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS", 0x92D3)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS", 0x92D4)
    set_enum("GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS", 0x90CB)
    set_enum("GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS", 0x90CC)
    set_enum("GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS", 0x90D8)
    set_enum("GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS", 0x90D9)
    set_enum("GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED", 0x8221)
    set_enum("GL_IS_PER_PATCH", 0x92E7)
    set_enum("GL_REFERENCED_BY_TESS_CONTROL_SHADER", 0x9307)
    set_enum("GL_REFERENCED_BY_TESS_EVALUATION_SHADER", 0x9308)
    set_enum("GL_TESS_CONTROL_SHADER", 0x8E88)
    set_enum("GL_TESS_EVALUATION_SHADER", 0x8E87)
    set_enum("GL_TESS_CONTROL_SHADER_BIT", 0x00000008)
    set_enum("GL_TESS_EVALUATION_SHADER_BIT", 0x00000010)
    set_enum("GL_TEXTURE_BORDER_COLOR", 0x1004)
    set_enum("GL_CLAMP_TO_BORDER", 0x812D)
    set_enum("GL_TEXTURE_BUFFER", 0x8C2A)
    set_enum("GL_TEXTURE_BUFFER_BINDING", 0x8C2A)
    set_enum("GL_MAX_TEXTURE_BUFFER_SIZE", 0x8C2B)
    set_enum("GL_TEXTURE_BINDING_BUFFER", 0x8C2C)
    set_enum("GL_TEXTURE_BUFFER_DATA_STORE_BINDING", 0x8C2D)
    set_enum("GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT", 0x919F)
    set_enum("GL_SAMPLER_BUFFER", 0x8DC2)
    set_enum("GL_INT_SAMPLER_BUFFER", 0x8DD0)
    set_enum("GL_UNSIGNED_INT_SAMPLER_BUFFER", 0x8DD8)
    set_enum("GL_IMAGE_BUFFER", 0x9051)
    set_enum("GL_INT_IMAGE_BUFFER", 0x905C)
    set_enum("GL_UNSIGNED_INT_IMAGE_BUFFER", 0x9067)
    set_enum("GL_TEXTURE_BUFFER_OFFSET", 0x919D)
    set_enum("GL_TEXTURE_BUFFER_SIZE", 0x919E)
    set_enum("GL_COMPRESSED_RGBA_ASTC_4x4", 0x93B0)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x4", 0x93B1)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x5", 0x93B2)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x5", 0x93B3)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x6", 0x93B4)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x5", 0x93B5)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x6", 0x93B6)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x8", 0x93B7)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x5", 0x93B8)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x6", 0x93B9)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x8", 0x93BA)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x10", 0x93BB)
    set_enum("GL_COMPRESSED_RGBA_ASTC_12x10", 0x93BC)
    set_enum("GL_COMPRESSED_RGBA_ASTC_12x12", 0x93BD)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4", 0x93D0)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4", 0x93D1)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5", 0x93D2)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5", 0x93D3)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6", 0x93D4)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5", 0x93D5)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6", 0x93D6)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8", 0x93D7)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5", 0x93D8)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6", 0x93D9)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8", 0x93DA)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10", 0x93DB)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10", 0x93DC)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12", 0x93DD)
    set_enum("GL_TEXTURE_CUBE_MAP_ARRAY", 0x9009)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_ARRAY", 0x900A)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY", 0x900C)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW", 0x900D)
    set_enum("GL_INT_SAMPLER_CUBE_MAP_ARRAY", 0x900E)
    set_enum("GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY", 0x900F)
    set_enum("GL_IMAGE_CUBE_MAP_ARRAY", 0x9054)
    set_enum("GL_INT_IMAGE_CUBE_MAP_ARRAY", 0x905F)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY", 0x906A)
    set_enum("GL_STENCIL_INDEX", 0x1901)
    set_enum("GL_STENCIL_INDEX8", 0x8D48)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE_ARRAY", 0x9102)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY", 0x9105)
    set_enum("GL_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910B)
    set_enum("GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910C)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910D)


#### GLSC2 VERSION 2.0 ####
def init_gl_sc_version_2_0():
    set_func('glActiveTexture', t.void, (t.GLenum,))
    set_func('glBindBuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glBindFramebuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glBindRenderbuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glBindTexture', t.void, (t.GLenum, t.GLuint))
    set_func('glBlendColor', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glBlendEquation', t.void, (t.GLenum,))
    set_func('glBlendEquationSeparate', t.void, (t.GLenum, t.GLenum))
    set_func('glBlendFunc', t.void, (t.GLenum, t.GLenum))
    set_func('glBlendFuncSeparate', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glBufferData', t.void, (t.GLenum, t.GLsizeiptr, ct.POINTER(t.void), t.GLenum))
    set_func('glBufferSubData', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glCheckFramebufferStatus', t.GLenum, (t.GLenum,))
    set_func('glClear', t.void, (t.GLbitfield,))
    set_func('glClearColor', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glClearDepthf', t.void, (t.GLfloat,))
    set_func('glClearStencil', t.void, (t.GLint,))
    set_func('glColorMask', t.void, (t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glCompressedTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCreateProgram', t.GLuint, ())
    set_func('glCullFace', t.void, (t.GLenum,))
    set_func('glDepthFunc', t.void, (t.GLenum,))
    set_func('glDepthMask', t.void, (t.GLboolean,))
    set_func('glDepthRangef', t.void, (t.GLfloat, t.GLfloat))
    set_func('glDisable', t.void, (t.GLenum,))
    set_func('glDisableVertexAttribArray', t.void, (t.GLuint,))
    set_func('glDrawArrays', t.void, (t.GLenum, t.GLint, t.GLsizei))
    set_func('glDrawRangeElements', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glEnable', t.void, (t.GLenum,))
    set_func('glEnableVertexAttribArray', t.void, (t.GLuint,))
    set_func('glFinish', t.void, ())
    set_func('glFlush', t.void, ())
    set_func('glFramebufferRenderbuffer', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint))
    set_func('glFramebufferTexture2D', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFrontFace', t.void, (t.GLenum,))
    set_func('glGenBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenerateMipmap', t.void, (t.GLenum,))
    set_func('glGenFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTextures', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetAttribLocation', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetBooleanv', t.void, (t.GLenum, ct.POINTER(t.GLboolean)))
    set_func('glGetBufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetError', t.GLenum, ())
    set_func('glGetFloatv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetFramebufferAttachmentParameteriv', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetGraphicsResetStatus', t.GLenum, ())
    set_func('glGetIntegerv', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetRenderbufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetString', ct.POINTER(t.GLubyte), (t.GLenum,))
    set_func('glGetTexParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTexParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetnUniformfv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnUniformiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glGetUniformLocation', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetVertexAttribfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVertexAttribiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribPointerv', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glHint', t.void, (t.GLenum, t.GLenum))
    set_func('glIsEnabled', t.GLboolean, (t.GLenum,))
    set_func('glLineWidth', t.void, (t.GLfloat,))
    set_func('glPixelStorei', t.void, (t.GLenum, t.GLint))
    set_func('glPolygonOffset', t.void, (t.GLfloat, t.GLfloat))
    set_func('glProgramBinary', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glReadnPixels', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glRenderbufferStorage', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glSampleCoverage', t.void, (t.GLfloat, t.GLboolean))
    set_func('glScissor', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glStencilFunc', t.void, (t.GLenum, t.GLint, t.GLuint))
    set_func('glStencilFuncSeparate', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLuint))
    set_func('glStencilMask', t.void, (t.GLuint,))
    set_func('glStencilMaskSeparate', t.void, (t.GLenum, t.GLuint))
    set_func('glStencilOp', t.void, (t.GLenum, t.GLenum, t.GLenum))
    set_func('glStencilOpSeparate', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glTexStorage2D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTexParameterf', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glTexParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTexParameteri', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glTexParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexSubImage2D', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glUniform1f', t.void, (t.GLint, t.GLfloat))
    set_func('glUniform1fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform1i', t.void, (t.GLint, t.GLint))
    set_func('glUniform1iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform2f', t.void, (t.GLint, t.GLfloat, t.GLfloat))
    set_func('glUniform2fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform2i', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glUniform2iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform3f', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glUniform3fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform3i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glUniform3iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform4f', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glUniform4fv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform4i', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glUniform4iv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniformMatrix2fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4fv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUseProgram', t.void, (t.GLuint,))
    set_func('glVertexAttrib1f', t.void, (t.GLuint, t.GLfloat))
    set_func('glVertexAttrib1fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib2f', t.void, (t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib2fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib3f', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib3fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib4f', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib4fv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttribPointer', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLsizei, ct.POINTER(t.void)))
    set_func('glViewport', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_enum("GL_DEPTH_BUFFER_BIT", 0x00000100)
    set_enum("GL_STENCIL_BUFFER_BIT", 0x00000400)
    set_enum("GL_COLOR_BUFFER_BIT", 0x00004000)
    set_enum("GL_FALSE", 0)
    set_enum("GL_TRUE", 1)
    set_enum("GL_POINTS", 0x0000)
    set_enum("GL_LINES", 0x0001)
    set_enum("GL_LINE_LOOP", 0x0002)
    set_enum("GL_LINE_STRIP", 0x0003)
    set_enum("GL_TRIANGLES", 0x0004)
    set_enum("GL_TRIANGLE_STRIP", 0x0005)
    set_enum("GL_TRIANGLE_FAN", 0x0006)
    set_enum("GL_ZERO", 0)
    set_enum("GL_ONE", 1)
    set_enum("GL_SRC_COLOR", 0x0300)
    set_enum("GL_ONE_MINUS_SRC_COLOR", 0x0301)
    set_enum("GL_SRC_ALPHA", 0x0302)
    set_enum("GL_ONE_MINUS_SRC_ALPHA", 0x0303)
    set_enum("GL_DST_ALPHA", 0x0304)
    set_enum("GL_ONE_MINUS_DST_ALPHA", 0x0305)
    set_enum("GL_DST_COLOR", 0x0306)
    set_enum("GL_ONE_MINUS_DST_COLOR", 0x0307)
    set_enum("GL_SRC_ALPHA_SATURATE", 0x0308)
    set_enum("GL_FUNC_ADD", 0x8006)
    set_enum("GL_BLEND_EQUATION", 0x8009)
    set_enum("GL_BLEND_EQUATION_RGB", 0x8009)
    set_enum("GL_BLEND_EQUATION_ALPHA", 0x883D)
    set_enum("GL_FUNC_SUBTRACT", 0x800A)
    set_enum("GL_FUNC_REVERSE_SUBTRACT", 0x800B)
    set_enum("GL_BLEND_DST_RGB", 0x80C8)
    set_enum("GL_BLEND_SRC_RGB", 0x80C9)
    set_enum("GL_BLEND_DST_ALPHA", 0x80CA)
    set_enum("GL_BLEND_SRC_ALPHA", 0x80CB)
    set_enum("GL_CONSTANT_COLOR", 0x8001)
    set_enum("GL_ONE_MINUS_CONSTANT_COLOR", 0x8002)
    set_enum("GL_CONSTANT_ALPHA", 0x8003)
    set_enum("GL_ONE_MINUS_CONSTANT_ALPHA", 0x8004)
    set_enum("GL_BLEND_COLOR", 0x8005)
    set_enum("GL_ARRAY_BUFFER", 0x8892)
    set_enum("GL_ELEMENT_ARRAY_BUFFER", 0x8893)
    set_enum("GL_ARRAY_BUFFER_BINDING", 0x8894)
    set_enum("GL_ELEMENT_ARRAY_BUFFER_BINDING", 0x8895)
    set_enum("GL_STREAM_DRAW", 0x88E0)
    set_enum("GL_STATIC_DRAW", 0x88E4)
    set_enum("GL_DYNAMIC_DRAW", 0x88E8)
    set_enum("GL_BUFFER_SIZE", 0x8764)
    set_enum("GL_BUFFER_USAGE", 0x8765)
    set_enum("GL_CURRENT_VERTEX_ATTRIB", 0x8626)
    set_enum("GL_FRONT", 0x0404)
    set_enum("GL_BACK", 0x0405)
    set_enum("GL_FRONT_AND_BACK", 0x0408)
    set_enum("GL_TEXTURE_2D", 0x0DE1)
    set_enum("GL_CULL_FACE", 0x0B44)
    set_enum("GL_BLEND", 0x0BE2)
    set_enum("GL_DITHER", 0x0BD0)
    set_enum("GL_STENCIL_TEST", 0x0B90)
    set_enum("GL_DEPTH_TEST", 0x0B71)
    set_enum("GL_SCISSOR_TEST", 0x0C11)
    set_enum("GL_POLYGON_OFFSET_FILL", 0x8037)
    set_enum("GL_SAMPLE_ALPHA_TO_COVERAGE", 0x809E)
    set_enum("GL_SAMPLE_COVERAGE", 0x80A0)
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_INVALID_ENUM", 0x0500)
    set_enum("GL_INVALID_VALUE", 0x0501)
    set_enum("GL_INVALID_OPERATION", 0x0502)
    set_enum("GL_OUT_OF_MEMORY", 0x0505)
    set_enum("GL_INVALID_FRAMEBUFFER_OPERATION", 0x0506)
    set_enum("GL_CONTEXT_LOST", 0x0507)
    set_enum("GL_CW", 0x0900)
    set_enum("GL_CCW", 0x0901)
    set_enum("GL_LINE_WIDTH", 0x0B21)
    set_enum("GL_ALIASED_POINT_SIZE_RANGE", 0x846D)
    set_enum("GL_ALIASED_LINE_WIDTH_RANGE", 0x846E)
    set_enum("GL_CULL_FACE_MODE", 0x0B45)
    set_enum("GL_FRONT_FACE", 0x0B46)
    set_enum("GL_DEPTH_RANGE", 0x0B70)
    set_enum("GL_DEPTH_WRITEMASK", 0x0B72)
    set_enum("GL_DEPTH_CLEAR_VALUE", 0x0B73)
    set_enum("GL_DEPTH_FUNC", 0x0B74)
    set_enum("GL_STENCIL_CLEAR_VALUE", 0x0B91)
    set_enum("GL_STENCIL_FUNC", 0x0B92)
    set_enum("GL_STENCIL_FAIL", 0x0B94)
    set_enum("GL_STENCIL_PASS_DEPTH_FAIL", 0x0B95)
    set_enum("GL_STENCIL_PASS_DEPTH_PASS", 0x0B96)
    set_enum("GL_STENCIL_REF", 0x0B97)
    set_enum("GL_STENCIL_VALUE_MASK", 0x0B93)
    set_enum("GL_STENCIL_WRITEMASK", 0x0B98)
    set_enum("GL_STENCIL_BACK_FUNC", 0x8800)
    set_enum("GL_STENCIL_BACK_FAIL", 0x8801)
    set_enum("GL_STENCIL_BACK_PASS_DEPTH_FAIL", 0x8802)
    set_enum("GL_STENCIL_BACK_PASS_DEPTH_PASS", 0x8803)
    set_enum("GL_STENCIL_BACK_REF", 0x8CA3)
    set_enum("GL_STENCIL_BACK_VALUE_MASK", 0x8CA4)
    set_enum("GL_STENCIL_BACK_WRITEMASK", 0x8CA5)
    set_enum("GL_VIEWPORT", 0x0BA2)
    set_enum("GL_SCISSOR_BOX", 0x0C10)
    set_enum("GL_COLOR_CLEAR_VALUE", 0x0C22)
    set_enum("GL_COLOR_WRITEMASK", 0x0C23)
    set_enum("GL_UNPACK_ALIGNMENT", 0x0CF5)
    set_enum("GL_PACK_ALIGNMENT", 0x0D05)
    set_enum("GL_MAX_TEXTURE_SIZE", 0x0D33)
    set_enum("GL_MAX_VIEWPORT_DIMS", 0x0D3A)
    set_enum("GL_SUBPIXEL_BITS", 0x0D50)
    set_enum("GL_RED_BITS", 0x0D52)
    set_enum("GL_GREEN_BITS", 0x0D53)
    set_enum("GL_BLUE_BITS", 0x0D54)
    set_enum("GL_ALPHA_BITS", 0x0D55)
    set_enum("GL_DEPTH_BITS", 0x0D56)
    set_enum("GL_STENCIL_BITS", 0x0D57)
    set_enum("GL_POLYGON_OFFSET_UNITS", 0x2A00)
    set_enum("GL_POLYGON_OFFSET_FACTOR", 0x8038)
    set_enum("GL_TEXTURE_BINDING_2D", 0x8069)
    set_enum("GL_SAMPLE_BUFFERS", 0x80A8)
    set_enum("GL_SAMPLES", 0x80A9)
    set_enum("GL_SAMPLE_COVERAGE_VALUE", 0x80AA)
    set_enum("GL_SAMPLE_COVERAGE_INVERT", 0x80AB)
    set_enum("GL_NUM_COMPRESSED_TEXTURE_FORMATS", 0x86A2)
    set_enum("GL_COMPRESSED_TEXTURE_FORMATS", 0x86A3)
    set_enum("GL_DONT_CARE", 0x1100)
    set_enum("GL_FASTEST", 0x1101)
    set_enum("GL_NICEST", 0x1102)
    set_enum("GL_GENERATE_MIPMAP_HINT", 0x8192)
    set_enum("GL_BYTE", 0x1400)
    set_enum("GL_UNSIGNED_BYTE", 0x1401)
    set_enum("GL_SHORT", 0x1402)
    set_enum("GL_UNSIGNED_SHORT", 0x1403)
    set_enum("GL_INT", 0x1404)
    set_enum("GL_UNSIGNED_INT", 0x1405)
    set_enum("GL_FLOAT", 0x1406)
    set_enum("GL_RED", 0x1903)
    set_enum("GL_RG", 0x8227)
    set_enum("GL_RGB", 0x1907)
    set_enum("GL_RGBA", 0x1908)
    set_enum("GL_UNSIGNED_SHORT_4_4_4_4", 0x8033)
    set_enum("GL_UNSIGNED_SHORT_5_5_5_1", 0x8034)
    set_enum("GL_UNSIGNED_SHORT_5_6_5", 0x8363)
    set_enum("GL_MAX_VERTEX_ATTRIBS", 0x8869)
    set_enum("GL_MAX_VERTEX_UNIFORM_VECTORS", 0x8DFB)
    set_enum("GL_MAX_VARYING_VECTORS", 0x8DFC)
    set_enum("GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS", 0x8B4D)
    set_enum("GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS", 0x8B4C)
    set_enum("GL_MAX_TEXTURE_IMAGE_UNITS", 0x8872)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_VECTORS", 0x8DFD)
    set_enum("GL_LINK_STATUS", 0x8B82)
    set_enum("GL_SHADING_LANGUAGE_VERSION", 0x8B8C)
    set_enum("GL_CURRENT_PROGRAM", 0x8B8D)
    set_enum("GL_NEVER", 0x0200)
    set_enum("GL_LESS", 0x0201)
    set_enum("GL_EQUAL", 0x0202)
    set_enum("GL_LEQUAL", 0x0203)
    set_enum("GL_GREATER", 0x0204)
    set_enum("GL_NOTEQUAL", 0x0205)
    set_enum("GL_GEQUAL", 0x0206)
    set_enum("GL_ALWAYS", 0x0207)
    set_enum("GL_KEEP", 0x1E00)
    set_enum("GL_REPLACE", 0x1E01)
    set_enum("GL_INCR", 0x1E02)
    set_enum("GL_DECR", 0x1E03)
    set_enum("GL_INVERT", 0x150A)
    set_enum("GL_INCR_WRAP", 0x8507)
    set_enum("GL_DECR_WRAP", 0x8508)
    set_enum("GL_VENDOR", 0x1F00)
    set_enum("GL_RENDERER", 0x1F01)
    set_enum("GL_VERSION", 0x1F02)
    set_enum("GL_EXTENSIONS", 0x1F03)
    set_enum("GL_NEAREST", 0x2600)
    set_enum("GL_LINEAR", 0x2601)
    set_enum("GL_NEAREST_MIPMAP_NEAREST", 0x2700)
    set_enum("GL_LINEAR_MIPMAP_NEAREST", 0x2701)
    set_enum("GL_NEAREST_MIPMAP_LINEAR", 0x2702)
    set_enum("GL_LINEAR_MIPMAP_LINEAR", 0x2703)
    set_enum("GL_TEXTURE_MAG_FILTER", 0x2800)
    set_enum("GL_TEXTURE_MIN_FILTER", 0x2801)
    set_enum("GL_TEXTURE_WRAP_S", 0x2802)
    set_enum("GL_TEXTURE_WRAP_T", 0x2803)
    set_enum("GL_TEXTURE_IMMUTABLE_FORMAT", 0x912F)
    set_enum("GL_TEXTURE", 0x1702)
    set_enum("GL_TEXTURE0", 0x84C0)
    set_enum("GL_TEXTURE1", 0x84C1)
    set_enum("GL_TEXTURE2", 0x84C2)
    set_enum("GL_TEXTURE3", 0x84C3)
    set_enum("GL_TEXTURE4", 0x84C4)
    set_enum("GL_TEXTURE5", 0x84C5)
    set_enum("GL_TEXTURE6", 0x84C6)
    set_enum("GL_TEXTURE7", 0x84C7)
    set_enum("GL_TEXTURE8", 0x84C8)
    set_enum("GL_TEXTURE9", 0x84C9)
    set_enum("GL_TEXTURE10", 0x84CA)
    set_enum("GL_TEXTURE11", 0x84CB)
    set_enum("GL_TEXTURE12", 0x84CC)
    set_enum("GL_TEXTURE13", 0x84CD)
    set_enum("GL_TEXTURE14", 0x84CE)
    set_enum("GL_TEXTURE15", 0x84CF)
    set_enum("GL_TEXTURE16", 0x84D0)
    set_enum("GL_TEXTURE17", 0x84D1)
    set_enum("GL_TEXTURE18", 0x84D2)
    set_enum("GL_TEXTURE19", 0x84D3)
    set_enum("GL_TEXTURE20", 0x84D4)
    set_enum("GL_TEXTURE21", 0x84D5)
    set_enum("GL_TEXTURE22", 0x84D6)
    set_enum("GL_TEXTURE23", 0x84D7)
    set_enum("GL_TEXTURE24", 0x84D8)
    set_enum("GL_TEXTURE25", 0x84D9)
    set_enum("GL_TEXTURE26", 0x84DA)
    set_enum("GL_TEXTURE27", 0x84DB)
    set_enum("GL_TEXTURE28", 0x84DC)
    set_enum("GL_TEXTURE29", 0x84DD)
    set_enum("GL_TEXTURE30", 0x84DE)
    set_enum("GL_TEXTURE31", 0x84DF)
    set_enum("GL_ACTIVE_TEXTURE", 0x84E0)
    set_enum("GL_REPEAT", 0x2901)
    set_enum("GL_CLAMP_TO_EDGE", 0x812F)
    set_enum("GL_MIRRORED_REPEAT", 0x8370)
    set_enum("GL_SAMPLER_2D", 0x8B5E)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_ENABLED", 0x8622)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_SIZE", 0x8623)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_STRIDE", 0x8624)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_TYPE", 0x8625)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_NORMALIZED", 0x886A)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_POINTER", 0x8645)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", 0x889F)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_TYPE", 0x8B9A)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_FORMAT", 0x8B9B)
    set_enum("GL_NUM_PROGRAM_BINARY_FORMATS", 0x87FE)
    set_enum("GL_PROGRAM_BINARY_FORMATS", 0x87FF)
    set_enum("GL_LOW_FLOAT", 0x8DF0)
    set_enum("GL_MEDIUM_FLOAT", 0x8DF1)
    set_enum("GL_HIGH_FLOAT", 0x8DF2)
    set_enum("GL_LOW_INT", 0x8DF3)
    set_enum("GL_MEDIUM_INT", 0x8DF4)
    set_enum("GL_HIGH_INT", 0x8DF5)
    set_enum("GL_FRAMEBUFFER", 0x8D40)
    set_enum("GL_RENDERBUFFER", 0x8D41)
    set_enum("GL_R8", 0x8229)
    set_enum("GL_RG8", 0x822B)
    set_enum("GL_RGB8", 0x8051)
    set_enum("GL_RGBA8", 0x8058)
    set_enum("GL_RGBA4", 0x8056)
    set_enum("GL_RGB5_A1", 0x8057)
    set_enum("GL_RGB565", 0x8D62)
    set_enum("GL_DEPTH_COMPONENT16", 0x81A5)
    set_enum("GL_STENCIL_INDEX8", 0x8D48)
    set_enum("GL_RENDERBUFFER_WIDTH", 0x8D42)
    set_enum("GL_RENDERBUFFER_HEIGHT", 0x8D43)
    set_enum("GL_RENDERBUFFER_INTERNAL_FORMAT", 0x8D44)
    set_enum("GL_RENDERBUFFER_RED_SIZE", 0x8D50)
    set_enum("GL_RENDERBUFFER_GREEN_SIZE", 0x8D51)
    set_enum("GL_RENDERBUFFER_BLUE_SIZE", 0x8D52)
    set_enum("GL_RENDERBUFFER_ALPHA_SIZE", 0x8D53)
    set_enum("GL_RENDERBUFFER_DEPTH_SIZE", 0x8D54)
    set_enum("GL_RENDERBUFFER_STENCIL_SIZE", 0x8D55)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", 0x8CD0)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", 0x8CD1)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", 0x8CD2)
    set_enum("GL_COLOR_ATTACHMENT0", 0x8CE0)
    set_enum("GL_DEPTH_ATTACHMENT", 0x8D00)
    set_enum("GL_STENCIL_ATTACHMENT", 0x8D20)
    set_enum("GL_NONE", 0)
    set_enum("GL_FRAMEBUFFER_COMPLETE", 0x8CD5)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT", 0x8CD6)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", 0x8CD7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS", 0x8CD9)
    set_enum("GL_FRAMEBUFFER_UNSUPPORTED", 0x8CDD)
    set_enum("GL_FRAMEBUFFER_UNDEFINED", 0x8219)
    set_enum("GL_FRAMEBUFFER_BINDING", 0x8CA6)
    set_enum("GL_RENDERBUFFER_BINDING", 0x8CA7)
    set_enum("GL_MAX_RENDERBUFFER_SIZE", 0x84E8)
    set_enum("GL_GUILTY_CONTEXT_RESET", 0x8253)
    set_enum("GL_INNOCENT_CONTEXT_RESET", 0x8254)
    set_enum("GL_UNKNOWN_CONTEXT_RESET", 0x8255)
    set_enum("GL_CONTEXT_ROBUST_ACCESS", 0x90F3)
    set_enum("GL_RESET_NOTIFICATION_STRATEGY", 0x8256)
    set_enum("GL_LOSE_CONTEXT_ON_RESET", 0x8252)


#### GL_3DFX_MULTISAMPLE ####
def init_gl_3dfx_multisample():
    set_enum("GL_MULTISAMPLE_3DFX", 0x86B2)
    set_enum("GL_SAMPLE_BUFFERS_3DFX", 0x86B3)
    set_enum("GL_SAMPLES_3DFX", 0x86B4)
    set_enum("GL_MULTISAMPLE_BIT_3DFX", 0x20000000)


#### GL_3DFX_TBUFFER ####
def init_gl_3dfx_tbuffer():
    set_func('glTbufferMask3DFX', t.void, (t.GLuint,))


#### GL_3DFX_TEXTURE_COMPRESSION_FXT1 ####
def init_gl_3dfx_texture_compression_fxt1():
    set_enum("GL_COMPRESSED_RGB_FXT1_3DFX", 0x86B0)
    set_enum("GL_COMPRESSED_RGBA_FXT1_3DFX", 0x86B1)


#### GL_AMD_BLEND_MINMAX_FACTOR ####
def init_gl_amd_blend_minmax_factor():
    set_enum("GL_FACTOR_MIN_AMD", 0x901C)
    set_enum("GL_FACTOR_MAX_AMD", 0x901D)


#### GL_AMD_COMPRESSED_3DC_TEXTURE ####
def init_gl_amd_compressed_3dc_texture():
    set_enum("GL_3DC_X_AMD", 0x87F9)
    set_enum("GL_3DC_XY_AMD", 0x87FA)


#### GL_AMD_COMPRESSED_ATC_TEXTURE ####
def init_gl_amd_compressed_atc_texture():
    set_enum("GL_ATC_RGB_AMD", 0x8C92)
    set_enum("GL_ATC_RGBA_EXPLICIT_ALPHA_AMD", 0x8C93)
    set_enum("GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD", 0x87EE)


#### GL_AMD_DEBUG_OUTPUT ####
def init_gl_amd_debug_output():
    set_func('glDebugMessageEnableAMD', t.void, (t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLuint), t.GLboolean))
    set_func('glDebugMessageInsertAMD', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
#     set_func('glDebugMessageCallbackAMD', t.void, (t.GLDEBUGPROCAMD, ct.POINTER(t.void)))
    set_func('glGetDebugMessageLogAMD', t.GLuint, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_enum("GL_MAX_DEBUG_MESSAGE_LENGTH_AMD", 0x9143)
    set_enum("GL_MAX_DEBUG_LOGGED_MESSAGES_AMD", 0x9144)
    set_enum("GL_DEBUG_LOGGED_MESSAGES_AMD", 0x9145)
    set_enum("GL_DEBUG_SEVERITY_HIGH_AMD", 0x9146)
    set_enum("GL_DEBUG_SEVERITY_MEDIUM_AMD", 0x9147)
    set_enum("GL_DEBUG_SEVERITY_LOW_AMD", 0x9148)
    set_enum("GL_DEBUG_CATEGORY_API_ERROR_AMD", 0x9149)
    set_enum("GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD", 0x914A)
    set_enum("GL_DEBUG_CATEGORY_DEPRECATION_AMD", 0x914B)
    set_enum("GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD", 0x914C)
    set_enum("GL_DEBUG_CATEGORY_PERFORMANCE_AMD", 0x914D)
    set_enum("GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD", 0x914E)
    set_enum("GL_DEBUG_CATEGORY_APPLICATION_AMD", 0x914F)
    set_enum("GL_DEBUG_CATEGORY_OTHER_AMD", 0x9150)


#### GL_AMD_DEPTH_CLAMP_SEPARATE ####
def init_gl_amd_depth_clamp_separate():
    set_enum("GL_DEPTH_CLAMP_NEAR_AMD", 0x901E)
    set_enum("GL_DEPTH_CLAMP_FAR_AMD", 0x901F)


#### GL_AMD_DRAW_BUFFERS_BLEND ####
def init_gl_amd_draw_buffers_blend():
    set_func('glBlendFuncIndexedAMD', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFuncSeparateIndexedAMD', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glBlendEquationIndexedAMD', t.void, (t.GLuint, t.GLenum))
    set_func('glBlendEquationSeparateIndexedAMD', t.void, (t.GLuint, t.GLenum, t.GLenum))


#### GL_AMD_GPU_SHADER_INT64 ####
def init_gl_amd_gpu_shader_int64():
    set_func('glUniform1i64NV', t.void, (t.GLint, t.GLint64EXT))
    set_func('glUniform2i64NV', t.void, (t.GLint, t.GLint64EXT, t.GLint64EXT))
    set_func('glUniform3i64NV', t.void, (t.GLint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glUniform4i64NV', t.void, (t.GLint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glUniform1i64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glUniform2i64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glUniform3i64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glUniform4i64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glUniform1ui64NV', t.void, (t.GLint, t.GLuint64EXT))
    set_func('glUniform2ui64NV', t.void, (t.GLint, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glUniform3ui64NV', t.void, (t.GLint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glUniform4ui64NV', t.void, (t.GLint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glUniform1ui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glUniform2ui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glUniform3ui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glUniform4ui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glGetUniformi64vNV', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLint64EXT)))
    set_func('glGetUniformui64vNV', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLuint64EXT)))
    set_func('glProgramUniform1i64NV', t.void, (t.GLuint, t.GLint, t.GLint64EXT))
    set_func('glProgramUniform2i64NV', t.void, (t.GLuint, t.GLint, t.GLint64EXT, t.GLint64EXT))
    set_func('glProgramUniform3i64NV', t.void, (t.GLuint, t.GLint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glProgramUniform4i64NV', t.void, (t.GLuint, t.GLint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glProgramUniform1i64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform2i64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform3i64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform4i64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform1ui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT))
    set_func('glProgramUniform2ui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glProgramUniform3ui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glProgramUniform4ui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glProgramUniform1ui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glProgramUniform2ui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glProgramUniform3ui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glProgramUniform4ui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_enum("GL_INT64_NV", 0x140E)
    set_enum("GL_UNSIGNED_INT64_NV", 0x140F)
    set_enum("GL_INT8_NV", 0x8FE0)
    set_enum("GL_INT8_VEC2_NV", 0x8FE1)
    set_enum("GL_INT8_VEC3_NV", 0x8FE2)
    set_enum("GL_INT8_VEC4_NV", 0x8FE3)
    set_enum("GL_INT16_NV", 0x8FE4)
    set_enum("GL_INT16_VEC2_NV", 0x8FE5)
    set_enum("GL_INT16_VEC3_NV", 0x8FE6)
    set_enum("GL_INT16_VEC4_NV", 0x8FE7)
    set_enum("GL_INT64_VEC2_NV", 0x8FE9)
    set_enum("GL_INT64_VEC3_NV", 0x8FEA)
    set_enum("GL_INT64_VEC4_NV", 0x8FEB)
    set_enum("GL_UNSIGNED_INT8_NV", 0x8FEC)
    set_enum("GL_UNSIGNED_INT8_VEC2_NV", 0x8FED)
    set_enum("GL_UNSIGNED_INT8_VEC3_NV", 0x8FEE)
    set_enum("GL_UNSIGNED_INT8_VEC4_NV", 0x8FEF)
    set_enum("GL_UNSIGNED_INT16_NV", 0x8FF0)
    set_enum("GL_UNSIGNED_INT16_VEC2_NV", 0x8FF1)
    set_enum("GL_UNSIGNED_INT16_VEC3_NV", 0x8FF2)
    set_enum("GL_UNSIGNED_INT16_VEC4_NV", 0x8FF3)
    set_enum("GL_UNSIGNED_INT64_VEC2_NV", 0x8FF5)
    set_enum("GL_UNSIGNED_INT64_VEC3_NV", 0x8FF6)
    set_enum("GL_UNSIGNED_INT64_VEC4_NV", 0x8FF7)
    set_enum("GL_FLOAT16_NV", 0x8FF8)
    set_enum("GL_FLOAT16_VEC2_NV", 0x8FF9)
    set_enum("GL_FLOAT16_VEC3_NV", 0x8FFA)
    set_enum("GL_FLOAT16_VEC4_NV", 0x8FFB)


#### GL_AMD_INTERLEAVED_ELEMENTS ####
def init_gl_amd_interleaved_elements():
    set_func('glVertexAttribParameteriAMD', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_enum("GL_VERTEX_ELEMENT_SWIZZLE_AMD", 0x91A4)
    set_enum("GL_VERTEX_ID_SWIZZLE_AMD", 0x91A5)
    set_enum("GL_RED", 0x1903)
    set_enum("GL_GREEN", 0x1904)
    set_enum("GL_BLUE", 0x1905)
    set_enum("GL_ALPHA", 0x1906)
    set_enum("GL_RG8UI", 0x8238)
    set_enum("GL_RG16UI", 0x823A)
    set_enum("GL_RGBA8UI", 0x8D7C)


#### GL_AMD_MULTI_DRAW_INDIRECT ####
def init_gl_amd_multi_draw_indirect():
    set_func('glMultiDrawArraysIndirectAMD', t.void, (t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei))
    set_func('glMultiDrawElementsIndirectAMD', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei))


#### GL_AMD_NAME_GEN_DELETE ####
def init_gl_amd_name_gen_delete():
    set_func('glGenNamesAMD', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glDeleteNamesAMD', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glIsNameAMD', t.GLboolean, (t.GLenum, t.GLuint))
    set_enum("GL_DATA_BUFFER_AMD", 0x9151)
    set_enum("GL_PERFORMANCE_MONITOR_AMD", 0x9152)
    set_enum("GL_QUERY_OBJECT_AMD", 0x9153)
    set_enum("GL_VERTEX_ARRAY_OBJECT_AMD", 0x9154)
    set_enum("GL_SAMPLER_OBJECT_AMD", 0x9155)


#### GL_AMD_OCCLUSION_QUERY_EVENT ####
def init_gl_amd_occlusion_query_event():
    set_func('glQueryObjectParameteruiAMD', t.void, (t.GLenum, t.GLuint, t.GLenum, t.GLuint))
    set_enum("GL_OCCLUSION_QUERY_EVENT_MASK_AMD", 0x874F)
    set_enum("GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD", 0x00000001)
    set_enum("GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD", 0x00000002)
    set_enum("GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD", 0x00000004)
    set_enum("GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD", 0x00000008)
    set_enum("GL_QUERY_ALL_EVENT_BITS_AMD", 0xFFFFFFFF)


#### GL_AMD_PERFORMANCE_MONITOR ####
def init_gl_amd_performance_monitor():
    set_func('glGetPerfMonitorGroupsAMD', t.void, (ct.POINTER(t.GLint), t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetPerfMonitorCountersAMD', t.void, (t.GLuint, ct.POINTER(t.GLint), ct.POINTER(t.GLint), t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetPerfMonitorGroupStringAMD', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetPerfMonitorCounterStringAMD', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetPerfMonitorCounterInfoAMD', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.void)))
    set_func('glGenPerfMonitorsAMD', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeletePerfMonitorsAMD', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glSelectPerfMonitorCountersAMD', t.void, (t.GLuint, t.GLboolean, t.GLuint, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glBeginPerfMonitorAMD', t.void, (t.GLuint,))
    set_func('glEndPerfMonitorAMD', t.void, (t.GLuint,))
    set_func('glGetPerfMonitorCounterDataAMD', t.void, (t.GLuint, t.GLenum, t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLint)))
    set_enum("GL_COUNTER_TYPE_AMD", 0x8BC0)
    set_enum("GL_COUNTER_RANGE_AMD", 0x8BC1)
    set_enum("GL_UNSIGNED_INT64_AMD", 0x8BC2)
    set_enum("GL_PERCENTAGE_AMD", 0x8BC3)
    set_enum("GL_PERFMON_RESULT_AVAILABLE_AMD", 0x8BC4)
    set_enum("GL_PERFMON_RESULT_SIZE_AMD", 0x8BC5)
    set_enum("GL_PERFMON_RESULT_AMD", 0x8BC6)


#### GL_AMD_PINNED_MEMORY ####
def init_gl_amd_pinned_memory():
    set_enum("GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD", 0x9160)


#### GL_AMD_PROGRAM_BINARY_Z400 ####
def init_gl_amd_program_binary_z400():
    set_enum("GL_Z400_BINARY_AMD", 0x8740)


#### GL_AMD_QUERY_BUFFER_OBJECT ####
def init_gl_amd_query_buffer_object():
    set_enum("GL_QUERY_BUFFER_AMD", 0x9192)
    set_enum("GL_QUERY_BUFFER_BINDING_AMD", 0x9193)
    set_enum("GL_QUERY_RESULT_NO_WAIT_AMD", 0x9194)


#### GL_AMD_SAMPLE_POSITIONS ####
def init_gl_amd_sample_positions():
    set_func('glSetMultisamplefvAMD', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_enum("GL_SUBSAMPLE_DISTANCE_AMD", 0x883F)


#### GL_AMD_SEAMLESS_CUBEMAP_PER_TEXTURE ####
def init_gl_amd_seamless_cubemap_per_texture():
    set_enum("GL_TEXTURE_CUBE_MAP_SEAMLESS", 0x884F)


#### GL_AMD_SPARSE_TEXTURE ####
def init_gl_amd_sparse_texture():
    set_func('glTexStorageSparseAMD', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLsizei, t.GLbitfield))
    set_func('glTextureStorageSparseAMD', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLsizei, t.GLbitfield))
    set_enum("GL_VIRTUAL_PAGE_SIZE_X_AMD", 0x9195)
    set_enum("GL_VIRTUAL_PAGE_SIZE_Y_AMD", 0x9196)
    set_enum("GL_VIRTUAL_PAGE_SIZE_Z_AMD", 0x9197)
    set_enum("GL_MAX_SPARSE_TEXTURE_SIZE_AMD", 0x9198)
    set_enum("GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD", 0x9199)
    set_enum("GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS", 0x919A)
    set_enum("GL_MIN_SPARSE_LEVEL_AMD", 0x919B)
    set_enum("GL_MIN_LOD_WARNING_AMD", 0x919C)
    set_enum("GL_TEXTURE_STORAGE_SPARSE_BIT_AMD", 0x00000001)


#### GL_AMD_STENCIL_OPERATION_EXTENDED ####
def init_gl_amd_stencil_operation_extended():
    set_func('glStencilOpValueAMD', t.void, (t.GLenum, t.GLuint))
    set_enum("GL_SET_AMD", 0x874A)
    set_enum("GL_REPLACE_VALUE_AMD", 0x874B)
    set_enum("GL_STENCIL_OP_VALUE_AMD", 0x874C)
    set_enum("GL_STENCIL_BACK_OP_VALUE_AMD", 0x874D)


#### GL_AMD_TRANSFORM_FEEDBACK4 ####
def init_gl_amd_transform_feedback4():
    set_enum("GL_STREAM_RASTERIZATION_AMD", 0x91A0)


#### GL_AMD_VERTEX_SHADER_TESSELLATOR ####
def init_gl_amd_vertex_shader_tessellator():
    set_func('glTessellationFactorAMD', t.void, (t.GLfloat,))
    set_func('glTessellationModeAMD', t.void, (t.GLenum,))
    set_enum("GL_SAMPLER_BUFFER_AMD", 0x9001)
    set_enum("GL_INT_SAMPLER_BUFFER_AMD", 0x9002)
    set_enum("GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD", 0x9003)
    set_enum("GL_TESSELLATION_MODE_AMD", 0x9004)
    set_enum("GL_TESSELLATION_FACTOR_AMD", 0x9005)
    set_enum("GL_DISCRETE_AMD", 0x9006)
    set_enum("GL_CONTINUOUS_AMD", 0x9007)


#### GL_ANGLE_DEPTH_TEXTURE ####
def init_gl_angle_depth_texture():
    set_enum("GL_DEPTH_COMPONENT", 0x1902)
    set_enum("GL_DEPTH_STENCIL_OES", 0x84F9)
    set_enum("GL_UNSIGNED_SHORT", 0x1403)
    set_enum("GL_UNSIGNED_INT", 0x1405)
    set_enum("GL_UNSIGNED_INT_24_8_OES", 0x84FA)
    set_enum("GL_DEPTH_COMPONENT16", 0x81A5)
    set_enum("GL_DEPTH_COMPONENT32_OES", 0x81A7)
    set_enum("GL_DEPTH24_STENCIL8_OES", 0x88F0)


#### GL_ANGLE_FRAMEBUFFER_BLIT ####
def init_gl_angle_framebuffer_blit():
    set_func('glBlitFramebufferANGLE', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLbitfield, t.GLenum))
    set_enum("GL_READ_FRAMEBUFFER_ANGLE", 0x8CA8)
    set_enum("GL_DRAW_FRAMEBUFFER_ANGLE", 0x8CA9)
    set_enum("GL_DRAW_FRAMEBUFFER_BINDING_ANGLE", 0x8CA6)
    set_enum("GL_READ_FRAMEBUFFER_BINDING_ANGLE", 0x8CAA)


#### GL_ANGLE_FRAMEBUFFER_MULTISAMPLE ####
def init_gl_angle_framebuffer_multisample():
    set_func('glRenderbufferStorageMultisampleANGLE', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_enum("GL_RENDERBUFFER_SAMPLES_ANGLE", 0x8CAB)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE", 0x8D56)
    set_enum("GL_MAX_SAMPLES_ANGLE", 0x8D57)


#### GL_ANGLE_INSTANCED_ARRAYS ####
def init_gl_angle_instanced_arrays():
    set_func('glDrawArraysInstancedANGLE', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glDrawElementsInstancedANGLE', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glVertexAttribDivisorANGLE', t.void, (t.GLuint, t.GLuint))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE", 0x88FE)


#### GL_ANGLE_PACK_REVERSE_ROW_ORDER ####
def init_gl_angle_pack_reverse_row_order():
    set_enum("GL_PACK_REVERSE_ROW_ORDER_ANGLE", 0x93A4)


#### GL_ANGLE_PROGRAM_BINARY ####
def init_gl_angle_program_binary():
    set_enum("GL_PROGRAM_BINARY_ANGLE", 0x93A6)


#### GL_ANGLE_TEXTURE_COMPRESSION_DXT3 ####
def init_gl_angle_texture_compression_dxt3():
    set_enum("GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE", 0x83F2)


#### GL_ANGLE_TEXTURE_COMPRESSION_DXT5 ####
def init_gl_angle_texture_compression_dxt5():
    set_enum("GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE", 0x83F3)


#### GL_ANGLE_TEXTURE_USAGE ####
def init_gl_angle_texture_usage():
    set_enum("GL_TEXTURE_USAGE_ANGLE", 0x93A2)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_ANGLE", 0x93A3)


#### GL_ANGLE_TRANSLATED_SHADER_SOURCE ####
def init_gl_angle_translated_shader_source():
    set_func('glGetTranslatedShaderSourceANGLE', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_enum("GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE", 0x93A0)


#### GL_APPLE_AUX_DEPTH_STENCIL ####
def init_gl_apple_aux_depth_stencil():
    set_enum("GL_AUX_DEPTH_STENCIL_APPLE", 0x8A14)


#### GL_APPLE_CLIENT_STORAGE ####
def init_gl_apple_client_storage():
    set_enum("GL_UNPACK_CLIENT_STORAGE_APPLE", 0x85B2)


#### GL_APPLE_CLIP_DISTANCE ####
def init_gl_apple_clip_distance():
    set_enum("GL_MAX_CLIP_DISTANCES_APPLE", 0x0D32)
    set_enum("GL_CLIP_DISTANCE0_APPLE", 0x3000)
    set_enum("GL_CLIP_DISTANCE1_APPLE", 0x3001)
    set_enum("GL_CLIP_DISTANCE2_APPLE", 0x3002)
    set_enum("GL_CLIP_DISTANCE3_APPLE", 0x3003)
    set_enum("GL_CLIP_DISTANCE4_APPLE", 0x3004)
    set_enum("GL_CLIP_DISTANCE5_APPLE", 0x3005)
    set_enum("GL_CLIP_DISTANCE6_APPLE", 0x3006)
    set_enum("GL_CLIP_DISTANCE7_APPLE", 0x3007)


#### GL_APPLE_COPY_TEXTURE_LEVELS ####
def init_gl_apple_copy_texture_levels():
    set_func('glCopyTextureLevelsAPPLE', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLsizei))


#### GL_APPLE_ELEMENT_ARRAY ####
def init_gl_apple_element_array():
    set_func('glElementPointerAPPLE', t.void, (t.GLenum, ct.POINTER(t.void)))
    set_func('glDrawElementArrayAPPLE', t.void, (t.GLenum, t.GLint, t.GLsizei))
    set_func('glDrawRangeElementArrayAPPLE', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLint, t.GLsizei))
    set_func('glMultiDrawElementArrayAPPLE', t.void, (t.GLenum, ct.POINTER(t.GLint), ct.POINTER(t.GLsizei), t.GLsizei))
    set_func('glMultiDrawRangeElementArrayAPPLE', t.void, (t.GLenum, t.GLuint, t.GLuint, ct.POINTER(t.GLint), ct.POINTER(t.GLsizei), t.GLsizei))
    set_enum("GL_ELEMENT_ARRAY_APPLE", 0x8A0C)
    set_enum("GL_ELEMENT_ARRAY_TYPE_APPLE", 0x8A0D)
    set_enum("GL_ELEMENT_ARRAY_POINTER_APPLE", 0x8A0E)


#### GL_APPLE_FENCE ####
def init_gl_apple_fence():
    set_func('glGenFencesAPPLE', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteFencesAPPLE', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glSetFenceAPPLE', t.void, (t.GLuint,))
    set_func('glIsFenceAPPLE', t.GLboolean, (t.GLuint,))
    set_func('glTestFenceAPPLE', t.GLboolean, (t.GLuint,))
    set_func('glFinishFenceAPPLE', t.void, (t.GLuint,))
    set_func('glTestObjectAPPLE', t.GLboolean, (t.GLenum, t.GLuint))
    set_func('glFinishObjectAPPLE', t.void, (t.GLenum, t.GLint))
    set_enum("GL_DRAW_PIXELS_APPLE", 0x8A0A)
    set_enum("GL_FENCE_APPLE", 0x8A0B)


#### GL_APPLE_FLOAT_PIXELS ####
def init_gl_apple_float_pixels():
    set_enum("GL_HALF_APPLE", 0x140B)
    set_enum("GL_RGBA_FLOAT32_APPLE", 0x8814)
    set_enum("GL_RGB_FLOAT32_APPLE", 0x8815)
    set_enum("GL_ALPHA_FLOAT32_APPLE", 0x8816)
    set_enum("GL_INTENSITY_FLOAT32_APPLE", 0x8817)
    set_enum("GL_LUMINANCE_FLOAT32_APPLE", 0x8818)
    set_enum("GL_LUMINANCE_ALPHA_FLOAT32_APPLE", 0x8819)
    set_enum("GL_RGBA_FLOAT16_APPLE", 0x881A)
    set_enum("GL_RGB_FLOAT16_APPLE", 0x881B)
    set_enum("GL_ALPHA_FLOAT16_APPLE", 0x881C)
    set_enum("GL_INTENSITY_FLOAT16_APPLE", 0x881D)
    set_enum("GL_LUMINANCE_FLOAT16_APPLE", 0x881E)
    set_enum("GL_LUMINANCE_ALPHA_FLOAT16_APPLE", 0x881F)
    set_enum("GL_COLOR_FLOAT_APPLE", 0x8A0F)


#### GL_APPLE_FLUSH_BUFFER_RANGE ####
def init_gl_apple_flush_buffer_range():
    set_func('glBufferParameteriAPPLE', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glFlushMappedBufferRangeAPPLE', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr))
    set_enum("GL_BUFFER_SERIALIZED_MODIFY_APPLE", 0x8A12)
    set_enum("GL_BUFFER_FLUSHING_UNMAP_APPLE", 0x8A13)


#### GL_APPLE_FRAMEBUFFER_MULTISAMPLE ####
def init_gl_apple_framebuffer_multisample():
    set_func('glRenderbufferStorageMultisampleAPPLE', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glResolveMultisampleFramebufferAPPLE', t.void, ())
    set_enum("GL_RENDERBUFFER_SAMPLES_APPLE", 0x8CAB)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE", 0x8D56)
    set_enum("GL_MAX_SAMPLES_APPLE", 0x8D57)
    set_enum("GL_READ_FRAMEBUFFER_APPLE", 0x8CA8)
    set_enum("GL_DRAW_FRAMEBUFFER_APPLE", 0x8CA9)
    set_enum("GL_DRAW_FRAMEBUFFER_BINDING_APPLE", 0x8CA6)
    set_enum("GL_READ_FRAMEBUFFER_BINDING_APPLE", 0x8CAA)


#### GL_APPLE_OBJECT_PURGEABLE ####
def init_gl_apple_object_purgeable():
    set_func('glObjectPurgeableAPPLE', t.GLenum, (t.GLenum, t.GLuint, t.GLenum))
    set_func('glObjectUnpurgeableAPPLE', t.GLenum, (t.GLenum, t.GLuint, t.GLenum))
    set_func('glGetObjectParameterivAPPLE', t.void, (t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_BUFFER_OBJECT_APPLE", 0x85B3)
    set_enum("GL_RELEASED_APPLE", 0x8A19)
    set_enum("GL_VOLATILE_APPLE", 0x8A1A)
    set_enum("GL_RETAINED_APPLE", 0x8A1B)
    set_enum("GL_UNDEFINED_APPLE", 0x8A1C)
    set_enum("GL_PURGEABLE_APPLE", 0x8A1D)


#### GL_APPLE_RGB_422 ####
def init_gl_apple_rgb_422():
    set_enum("GL_RGB_422_APPLE", 0x8A1F)
    set_enum("GL_UNSIGNED_SHORT_8_8_APPLE", 0x85BA)
    set_enum("GL_UNSIGNED_SHORT_8_8_REV_APPLE", 0x85BB)
    set_enum("GL_RGB_RAW_422_APPLE", 0x8A51)


#### GL_APPLE_ROW_BYTES ####
def init_gl_apple_row_bytes():
    set_enum("GL_PACK_ROW_BYTES_APPLE", 0x8A15)
    set_enum("GL_UNPACK_ROW_BYTES_APPLE", 0x8A16)


#### GL_APPLE_SPECULAR_VECTOR ####
def init_gl_apple_specular_vector():
    set_enum("GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE", 0x85B0)


#### GL_APPLE_SYNC ####
def init_gl_apple_sync():
    set_func('glFenceSyncAPPLE', t.GLsync, (t.GLenum, t.GLbitfield))
    set_func('glIsSyncAPPLE', t.GLboolean, (t.GLsync,))
    set_func('glDeleteSyncAPPLE', t.void, (t.GLsync,))
    set_func('glClientWaitSyncAPPLE', t.GLenum, (t.GLsync, t.GLbitfield, t.GLuint64))
    set_func('glWaitSyncAPPLE', t.void, (t.GLsync, t.GLbitfield, t.GLuint64))
    set_func('glGetInteger64vAPPLE', t.void, (t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetSyncivAPPLE', t.void, (t.GLsync, t.GLenum, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint)))
    set_enum("GL_SYNC_OBJECT_APPLE", 0x8A53)
    set_enum("GL_MAX_SERVER_WAIT_TIMEOUT_APPLE", 0x9111)
    set_enum("GL_OBJECT_TYPE_APPLE", 0x9112)
    set_enum("GL_SYNC_CONDITION_APPLE", 0x9113)
    set_enum("GL_SYNC_STATUS_APPLE", 0x9114)
    set_enum("GL_SYNC_FLAGS_APPLE", 0x9115)
    set_enum("GL_SYNC_FENCE_APPLE", 0x9116)
    set_enum("GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE", 0x9117)
    set_enum("GL_UNSIGNALED_APPLE", 0x9118)
    set_enum("GL_SIGNALED_APPLE", 0x9119)
    set_enum("GL_ALREADY_SIGNALED_APPLE", 0x911A)
    set_enum("GL_TIMEOUT_EXPIRED_APPLE", 0x911B)
    set_enum("GL_CONDITION_SATISFIED_APPLE", 0x911C)
    set_enum("GL_WAIT_FAILED_APPLE", 0x911D)
    set_enum("GL_SYNC_FLUSH_COMMANDS_BIT_APPLE", 0x00000001)
    set_enum("GL_TIMEOUT_IGNORED_APPLE", 0xFFFFFFFFFFFFFFFF)


#### GL_APPLE_TEXTURE_FORMAT_BGRA8888 ####
def init_gl_apple_texture_format_bgra8888():
    set_enum("GL_BGRA_EXT", 0x80E1)
    set_enum("GL_BGRA8_EXT", 0x93A1)


#### GL_APPLE_TEXTURE_MAX_LEVEL ####
def init_gl_apple_texture_max_level():
    set_enum("GL_TEXTURE_MAX_LEVEL_APPLE", 0x813D)


#### GL_APPLE_TEXTURE_PACKED_FLOAT ####
def init_gl_apple_texture_packed_float():
    set_enum("GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE", 0x8C3B)
    set_enum("GL_UNSIGNED_INT_5_9_9_9_REV_APPLE", 0x8C3E)
    set_enum("GL_R11F_G11F_B10F_APPLE", 0x8C3A)
    set_enum("GL_RGB9_E5_APPLE", 0x8C3D)


#### GL_APPLE_TEXTURE_RANGE ####
def init_gl_apple_texture_range():
    set_func('glTextureRangeAPPLE', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetTexParameterPointervAPPLE', t.void, (t.GLenum, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_TEXTURE_RANGE_LENGTH_APPLE", 0x85B7)
    set_enum("GL_TEXTURE_RANGE_POINTER_APPLE", 0x85B8)
    set_enum("GL_TEXTURE_STORAGE_HINT_APPLE", 0x85BC)
    set_enum("GL_STORAGE_PRIVATE_APPLE", 0x85BD)
    set_enum("GL_STORAGE_CACHED_APPLE", 0x85BE)
    set_enum("GL_STORAGE_SHARED_APPLE", 0x85BF)


#### GL_APPLE_TRANSFORM_HINT ####
def init_gl_apple_transform_hint():
    set_enum("GL_TRANSFORM_HINT_APPLE", 0x85B1)


#### GL_APPLE_VERTEX_ARRAY_OBJECT ####
def init_gl_apple_vertex_array_object():
    set_func('glBindVertexArrayAPPLE', t.void, (t.GLuint,))
    set_func('glDeleteVertexArraysAPPLE', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenVertexArraysAPPLE', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsVertexArrayAPPLE', t.GLboolean, (t.GLuint,))
    set_enum("GL_VERTEX_ARRAY_BINDING_APPLE", 0x85B5)


#### GL_APPLE_VERTEX_ARRAY_RANGE ####
def init_gl_apple_vertex_array_range():
    set_func('glVertexArrayRangeAPPLE', t.void, (t.GLsizei, ct.POINTER(t.void)))
    set_func('glFlushVertexArrayRangeAPPLE', t.void, (t.GLsizei, ct.POINTER(t.void)))
    set_func('glVertexArrayParameteriAPPLE', t.void, (t.GLenum, t.GLint))
    set_enum("GL_VERTEX_ARRAY_RANGE_APPLE", 0x851D)
    set_enum("GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE", 0x851E)
    set_enum("GL_VERTEX_ARRAY_STORAGE_HINT_APPLE", 0x851F)
    set_enum("GL_VERTEX_ARRAY_RANGE_POINTER_APPLE", 0x8521)
    set_enum("GL_STORAGE_CLIENT_APPLE", 0x85B4)
    set_enum("GL_STORAGE_CACHED_APPLE", 0x85BE)
    set_enum("GL_STORAGE_SHARED_APPLE", 0x85BF)


#### GL_APPLE_VERTEX_PROGRAM_EVALUATORS ####
def init_gl_apple_vertex_program_evaluators():
    set_func('glEnableVertexAttribAPPLE', t.void, (t.GLuint, t.GLenum))
    set_func('glDisableVertexAttribAPPLE', t.void, (t.GLuint, t.GLenum))
    set_func('glIsVertexAttribEnabledAPPLE', t.GLboolean, (t.GLuint, t.GLenum))
    set_func('glMapVertexAttrib1dAPPLE', t.void, (t.GLuint, t.GLuint, t.GLdouble, t.GLdouble, t.GLint, t.GLint, ct.POINTER(t.GLdouble)))
    set_func('glMapVertexAttrib1fAPPLE', t.void, (t.GLuint, t.GLuint, t.GLfloat, t.GLfloat, t.GLint, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glMapVertexAttrib2dAPPLE', t.void, (t.GLuint, t.GLuint, t.GLdouble, t.GLdouble, t.GLint, t.GLint, t.GLdouble, t.GLdouble, t.GLint, t.GLint, ct.POINTER(t.GLdouble)))
    set_func('glMapVertexAttrib2fAPPLE', t.void, (t.GLuint, t.GLuint, t.GLfloat, t.GLfloat, t.GLint, t.GLint, t.GLfloat, t.GLfloat, t.GLint, t.GLint, ct.POINTER(t.GLfloat)))
    set_enum("GL_VERTEX_ATTRIB_MAP1_APPLE", 0x8A00)
    set_enum("GL_VERTEX_ATTRIB_MAP2_APPLE", 0x8A01)
    set_enum("GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE", 0x8A02)
    set_enum("GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE", 0x8A03)
    set_enum("GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE", 0x8A04)
    set_enum("GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE", 0x8A05)
    set_enum("GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE", 0x8A06)
    set_enum("GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE", 0x8A07)
    set_enum("GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE", 0x8A08)
    set_enum("GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE", 0x8A09)


#### GL_APPLE_YCBCR_422 ####
def init_gl_apple_ycbcr_422():
    set_enum("GL_YCBCR_422_APPLE", 0x85B9)
    set_enum("GL_UNSIGNED_SHORT_8_8_APPLE", 0x85BA)
    set_enum("GL_UNSIGNED_SHORT_8_8_REV_APPLE", 0x85BB)


#### GL_ARB_ES2_COMPATIBILITY ####
def init_gl_arb_es2_compatibility():
    set_func('glReleaseShaderCompiler', t.void, ())
    set_func('glShaderBinary', t.void, (t.GLsizei, ct.POINTER(t.GLuint), t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glGetShaderPrecisionFormat', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint), ct.POINTER(t.GLint)))
    set_func('glDepthRangef', t.void, (t.GLfloat, t.GLfloat))
    set_func('glClearDepthf', t.void, (t.GLfloat,))
    set_enum("GL_FIXED", 0x140C)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_TYPE", 0x8B9A)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_FORMAT", 0x8B9B)
    set_enum("GL_LOW_FLOAT", 0x8DF0)
    set_enum("GL_MEDIUM_FLOAT", 0x8DF1)
    set_enum("GL_HIGH_FLOAT", 0x8DF2)
    set_enum("GL_LOW_INT", 0x8DF3)
    set_enum("GL_MEDIUM_INT", 0x8DF4)
    set_enum("GL_HIGH_INT", 0x8DF5)
    set_enum("GL_SHADER_COMPILER", 0x8DFA)
    set_enum("GL_SHADER_BINARY_FORMATS", 0x8DF8)
    set_enum("GL_NUM_SHADER_BINARY_FORMATS", 0x8DF9)
    set_enum("GL_MAX_VERTEX_UNIFORM_VECTORS", 0x8DFB)
    set_enum("GL_MAX_VARYING_VECTORS", 0x8DFC)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_VECTORS", 0x8DFD)
    set_enum("GL_RGB565", 0x8D62)


#### GL_ARB_ES3_1_COMPATIBILITY ####
def init_gl_arb_es3_1_compatibility():
    set_func('glMemoryBarrierByRegion', t.void, (t.GLbitfield,))
    set_enum("GL_BACK", 0x0405)


#### GL_ARB_ES3_2_COMPATIBILITY ####
def init_gl_arb_es3_2_compatibility():
    set_func('glPrimitiveBoundingBoxARB', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_enum("GL_PRIMITIVE_BOUNDING_BOX_ARB", 0x92BE)
    set_enum("GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB", 0x9381)
    set_enum("GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB", 0x9382)


#### GL_ARB_ES3_COMPATIBILITY ####
def init_gl_arb_es3_compatibility():
    set_enum("GL_COMPRESSED_RGB8_ETC2", 0x9274)
    set_enum("GL_COMPRESSED_SRGB8_ETC2", 0x9275)
    set_enum("GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2", 0x9276)
    set_enum("GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2", 0x9277)
    set_enum("GL_COMPRESSED_RGBA8_ETC2_EAC", 0x9278)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC", 0x9279)
    set_enum("GL_COMPRESSED_R11_EAC", 0x9270)
    set_enum("GL_COMPRESSED_SIGNED_R11_EAC", 0x9271)
    set_enum("GL_COMPRESSED_RG11_EAC", 0x9272)
    set_enum("GL_COMPRESSED_SIGNED_RG11_EAC", 0x9273)
    set_enum("GL_PRIMITIVE_RESTART_FIXED_INDEX", 0x8D69)
    set_enum("GL_ANY_SAMPLES_PASSED_CONSERVATIVE", 0x8D6A)
    set_enum("GL_MAX_ELEMENT_INDEX", 0x8D6B)


#### GL_ARB_BASE_INSTANCE ####
def init_gl_arb_base_instance():
    set_func('glDrawArraysInstancedBaseInstance', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei, t.GLuint))
    set_func('glDrawElementsInstancedBaseInstance', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLuint))
    set_func('glDrawElementsInstancedBaseVertexBaseInstance', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLint, t.GLuint))


#### GL_ARB_BINDLESS_TEXTURE ####
def init_gl_arb_bindless_texture():
    set_func('glGetTextureHandleARB', t.GLuint64, (t.GLuint,))
    set_func('glGetTextureSamplerHandleARB', t.GLuint64, (t.GLuint, t.GLuint))
    set_func('glMakeTextureHandleResidentARB', t.void, (t.GLuint64,))
    set_func('glMakeTextureHandleNonResidentARB', t.void, (t.GLuint64,))
    set_func('glGetImageHandleARB', t.GLuint64, (t.GLuint, t.GLint, t.GLboolean, t.GLint, t.GLenum))
    set_func('glMakeImageHandleResidentARB', t.void, (t.GLuint64, t.GLenum))
    set_func('glMakeImageHandleNonResidentARB', t.void, (t.GLuint64,))
    set_func('glUniformHandleui64ARB', t.void, (t.GLint, t.GLuint64))
    set_func('glUniformHandleui64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glProgramUniformHandleui64ARB', t.void, (t.GLuint, t.GLint, t.GLuint64))
    set_func('glProgramUniformHandleui64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glIsTextureHandleResidentARB', t.GLboolean, (t.GLuint64,))
    set_func('glIsImageHandleResidentARB', t.GLboolean, (t.GLuint64,))
    set_func('glVertexAttribL1ui64ARB', t.void, (t.GLuint, t.GLuint64EXT))
    set_func('glVertexAttribL1ui64vARB', t.void, (t.GLuint, ct.POINTER(t.GLuint64EXT)))
    set_func('glGetVertexAttribLui64vARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint64EXT)))
    set_enum("GL_UNSIGNED_INT64_ARB", 0x140F)


#### GL_ARB_BLEND_FUNC_EXTENDED ####
def init_gl_arb_blend_func_extended():
    set_func('glBindFragDataLocationIndexed', t.void, (t.GLuint, t.GLuint, t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetFragDataIndex', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_enum("GL_SRC1_COLOR", 0x88F9)
    set_enum("GL_SRC1_ALPHA", 0x8589)
    set_enum("GL_ONE_MINUS_SRC1_COLOR", 0x88FA)
    set_enum("GL_ONE_MINUS_SRC1_ALPHA", 0x88FB)
    set_enum("GL_MAX_DUAL_SOURCE_DRAW_BUFFERS", 0x88FC)


#### GL_ARB_BUFFER_STORAGE ####
def init_gl_arb_buffer_storage():
    set_func('glBufferStorage', t.void, (t.GLenum, t.GLsizeiptr, ct.POINTER(t.void), t.GLbitfield))
    set_enum("GL_MAP_READ_BIT", 0x0001)
    set_enum("GL_MAP_WRITE_BIT", 0x0002)
    set_enum("GL_MAP_PERSISTENT_BIT", 0x0040)
    set_enum("GL_MAP_COHERENT_BIT", 0x0080)
    set_enum("GL_DYNAMIC_STORAGE_BIT", 0x0100)
    set_enum("GL_CLIENT_STORAGE_BIT", 0x0200)
    set_enum("GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT", 0x00004000)
    set_enum("GL_BUFFER_IMMUTABLE_STORAGE", 0x821F)
    set_enum("GL_BUFFER_STORAGE_FLAGS", 0x8220)


#### GL_ARB_CL_EVENT ####
def init_gl_arb_cl_event():
#     set_func('glCreateSyncFromCLeventARB', t.GLsync, (ct.POINTER(t.struct _cl_context), ct.POINTER(t.struct _cl_event), t.GLbitfield))
    set_enum("GL_SYNC_CL_EVENT_ARB", 0x8240)
    set_enum("GL_SYNC_CL_EVENT_COMPLETE_ARB", 0x8241)


#### GL_ARB_CLEAR_BUFFER_OBJECT ####
def init_gl_arb_clear_buffer_object():
    set_func('glClearBufferData', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glClearBufferSubData', t.void, (t.GLenum, t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLenum, t.GLenum, ct.POINTER(t.void)))


#### GL_ARB_CLEAR_TEXTURE ####
def init_gl_arb_clear_texture():
    set_func('glClearTexImage', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glClearTexSubImage', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_enum("GL_CLEAR_TEXTURE", 0x9365)


#### GL_ARB_CLIP_CONTROL ####
def init_gl_arb_clip_control():
    set_func('glClipControl', t.void, (t.GLenum, t.GLenum))
    set_enum("GL_LOWER_LEFT", 0x8CA1)
    set_enum("GL_UPPER_LEFT", 0x8CA2)
    set_enum("GL_NEGATIVE_ONE_TO_ONE", 0x935E)
    set_enum("GL_ZERO_TO_ONE", 0x935F)
    set_enum("GL_CLIP_ORIGIN", 0x935C)
    set_enum("GL_CLIP_DEPTH_MODE", 0x935D)


#### GL_ARB_COLOR_BUFFER_FLOAT ####
def init_gl_arb_color_buffer_float():
    set_func('glClampColorARB', t.void, (t.GLenum, t.GLenum))
    set_enum("GL_RGBA_FLOAT_MODE_ARB", 0x8820)
    set_enum("GL_CLAMP_VERTEX_COLOR_ARB", 0x891A)
    set_enum("GL_CLAMP_FRAGMENT_COLOR_ARB", 0x891B)
    set_enum("GL_CLAMP_READ_COLOR_ARB", 0x891C)
    set_enum("GL_FIXED_ONLY_ARB", 0x891D)


#### GL_ARB_COMPRESSED_TEXTURE_PIXEL_STORAGE ####
def init_gl_arb_compressed_texture_pixel_storage():
    set_enum("GL_UNPACK_COMPRESSED_BLOCK_WIDTH", 0x9127)
    set_enum("GL_UNPACK_COMPRESSED_BLOCK_HEIGHT", 0x9128)
    set_enum("GL_UNPACK_COMPRESSED_BLOCK_DEPTH", 0x9129)
    set_enum("GL_UNPACK_COMPRESSED_BLOCK_SIZE", 0x912A)
    set_enum("GL_PACK_COMPRESSED_BLOCK_WIDTH", 0x912B)
    set_enum("GL_PACK_COMPRESSED_BLOCK_HEIGHT", 0x912C)
    set_enum("GL_PACK_COMPRESSED_BLOCK_DEPTH", 0x912D)
    set_enum("GL_PACK_COMPRESSED_BLOCK_SIZE", 0x912E)


#### GL_ARB_COMPUTE_SHADER ####
def init_gl_arb_compute_shader():
    set_func('glDispatchCompute', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glDispatchComputeIndirect', t.void, (t.GLintptr,))
    set_enum("GL_COMPUTE_SHADER", 0x91B9)
    set_enum("GL_MAX_COMPUTE_UNIFORM_BLOCKS", 0x91BB)
    set_enum("GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS", 0x91BC)
    set_enum("GL_MAX_COMPUTE_IMAGE_UNIFORMS", 0x91BD)
    set_enum("GL_MAX_COMPUTE_SHARED_MEMORY_SIZE", 0x8262)
    set_enum("GL_MAX_COMPUTE_UNIFORM_COMPONENTS", 0x8263)
    set_enum("GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS", 0x8264)
    set_enum("GL_MAX_COMPUTE_ATOMIC_COUNTERS", 0x8265)
    set_enum("GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS", 0x8266)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS", 0x90EB)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_COUNT", 0x91BE)
    set_enum("GL_MAX_COMPUTE_WORK_GROUP_SIZE", 0x91BF)
    set_enum("GL_COMPUTE_WORK_GROUP_SIZE", 0x8267)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER", 0x90EC)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER", 0x90ED)
    set_enum("GL_DISPATCH_INDIRECT_BUFFER", 0x90EE)
    set_enum("GL_DISPATCH_INDIRECT_BUFFER_BINDING", 0x90EF)
    set_enum("GL_COMPUTE_SHADER_BIT", 0x00000020)


#### GL_ARB_COMPUTE_VARIABLE_GROUP_SIZE ####
def init_gl_arb_compute_variable_group_size():
    set_func('glDispatchComputeGroupSizeARB', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_enum("GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB", 0x9344)
    set_enum("GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB", 0x90EB)
    set_enum("GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB", 0x9345)
    set_enum("GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB", 0x91BF)


#### GL_ARB_CONDITIONAL_RENDER_INVERTED ####
def init_gl_arb_conditional_render_inverted():
    set_enum("GL_QUERY_WAIT_INVERTED", 0x8E17)
    set_enum("GL_QUERY_NO_WAIT_INVERTED", 0x8E18)
    set_enum("GL_QUERY_BY_REGION_WAIT_INVERTED", 0x8E19)
    set_enum("GL_QUERY_BY_REGION_NO_WAIT_INVERTED", 0x8E1A)


#### GL_ARB_COPY_BUFFER ####
def init_gl_arb_copy_buffer():
    set_func('glCopyBufferSubData', t.void, (t.GLenum, t.GLenum, t.GLintptr, t.GLintptr, t.GLsizeiptr))
    set_enum("GL_COPY_READ_BUFFER", 0x8F36)
    set_enum("GL_COPY_WRITE_BUFFER", 0x8F37)


#### GL_ARB_COPY_IMAGE ####
def init_gl_arb_copy_image():
    set_func('glCopyImageSubData', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei))


#### GL_ARB_CULL_DISTANCE ####
def init_gl_arb_cull_distance():
    set_enum("GL_MAX_CULL_DISTANCES", 0x82F9)
    set_enum("GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES", 0x82FA)


#### GL_ARB_DEBUG_OUTPUT ####
def init_gl_arb_debug_output():
    set_func('glDebugMessageControlARB', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLuint), t.GLboolean))
    set_func('glDebugMessageInsertARB', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLenum, t.GLsizei, ct.POINTER(t.GLchar)))
#     set_func('glDebugMessageCallbackARB', t.void, (t.GLDEBUGPROCARB, ct.POINTER(t.void)))
    set_func('glGetDebugMessageLogARB', t.GLuint, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), ct.POINTER(t.GLenum), ct.POINTER(t.GLuint), ct.POINTER(t.GLenum), ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_enum("GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB", 0x8242)
    set_enum("GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB", 0x8243)
    set_enum("GL_DEBUG_CALLBACK_FUNCTION_ARB", 0x8244)
    set_enum("GL_DEBUG_CALLBACK_USER_PARAM_ARB", 0x8245)
    set_enum("GL_DEBUG_SOURCE_API_ARB", 0x8246)
    set_enum("GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB", 0x8247)
    set_enum("GL_DEBUG_SOURCE_SHADER_COMPILER_ARB", 0x8248)
    set_enum("GL_DEBUG_SOURCE_THIRD_PARTY_ARB", 0x8249)
    set_enum("GL_DEBUG_SOURCE_APPLICATION_ARB", 0x824A)
    set_enum("GL_DEBUG_SOURCE_OTHER_ARB", 0x824B)
    set_enum("GL_DEBUG_TYPE_ERROR_ARB", 0x824C)
    set_enum("GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB", 0x824D)
    set_enum("GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB", 0x824E)
    set_enum("GL_DEBUG_TYPE_PORTABILITY_ARB", 0x824F)
    set_enum("GL_DEBUG_TYPE_PERFORMANCE_ARB", 0x8250)
    set_enum("GL_DEBUG_TYPE_OTHER_ARB", 0x8251)
    set_enum("GL_MAX_DEBUG_MESSAGE_LENGTH_ARB", 0x9143)
    set_enum("GL_MAX_DEBUG_LOGGED_MESSAGES_ARB", 0x9144)
    set_enum("GL_DEBUG_LOGGED_MESSAGES_ARB", 0x9145)
    set_enum("GL_DEBUG_SEVERITY_HIGH_ARB", 0x9146)
    set_enum("GL_DEBUG_SEVERITY_MEDIUM_ARB", 0x9147)
    set_enum("GL_DEBUG_SEVERITY_LOW_ARB", 0x9148)


#### GL_ARB_DEPTH_BUFFER_FLOAT ####
def init_gl_arb_depth_buffer_float():
    set_enum("GL_DEPTH_COMPONENT32F", 0x8CAC)
    set_enum("GL_DEPTH32F_STENCIL8", 0x8CAD)
    set_enum("GL_FLOAT_32_UNSIGNED_INT_24_8_REV", 0x8DAD)


#### GL_ARB_DEPTH_CLAMP ####
def init_gl_arb_depth_clamp():
    set_enum("GL_DEPTH_CLAMP", 0x864F)


#### GL_ARB_DEPTH_TEXTURE ####
def init_gl_arb_depth_texture():
    set_enum("GL_DEPTH_COMPONENT16_ARB", 0x81A5)
    set_enum("GL_DEPTH_COMPONENT24_ARB", 0x81A6)
    set_enum("GL_DEPTH_COMPONENT32_ARB", 0x81A7)
    set_enum("GL_TEXTURE_DEPTH_SIZE_ARB", 0x884A)
    set_enum("GL_DEPTH_TEXTURE_MODE_ARB", 0x884B)


#### GL_ARB_DIRECT_STATE_ACCESS ####
def init_gl_arb_direct_state_access():
    set_func('glCreateTransformFeedbacks', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glTransformFeedbackBufferBase', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glTransformFeedbackBufferRange', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glGetTransformFeedbackiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTransformFeedbacki_v', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glGetTransformFeedbacki64_v', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLint64)))
    set_func('glCreateBuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glNamedBufferStorage', t.void, (t.GLuint, t.GLsizeiptr, ct.POINTER(t.void), t.GLbitfield))
    set_func('glNamedBufferData', t.void, (t.GLuint, t.GLsizeiptr, ct.POINTER(t.void), t.GLenum))
    set_func('glNamedBufferSubData', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glCopyNamedBufferSubData', t.void, (t.GLuint, t.GLuint, t.GLintptr, t.GLintptr, t.GLsizeiptr))
    set_func('glClearNamedBufferData', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glClearNamedBufferSubData', t.void, (t.GLuint, t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glMapNamedBuffer', ct.POINTER(t.void), (t.GLuint, t.GLenum))
    set_func('glMapNamedBufferRange', ct.POINTER(t.void), (t.GLuint, t.GLintptr, t.GLsizeiptr, t.GLbitfield))
    set_func('glUnmapNamedBuffer', t.GLboolean, (t.GLuint,))
    set_func('glFlushMappedNamedBufferRange', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glGetNamedBufferParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetNamedBufferParameteri64v', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetNamedBufferPointerv', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glGetNamedBufferSubData', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glCreateFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glNamedFramebufferRenderbuffer', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLuint))
    set_func('glNamedFramebufferParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glNamedFramebufferTexture', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLint))
    set_func('glNamedFramebufferTextureLayer', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glNamedFramebufferDrawBuffer', t.void, (t.GLuint, t.GLenum))
    set_func('glNamedFramebufferDrawBuffers', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glNamedFramebufferReadBuffer', t.void, (t.GLuint, t.GLenum))
    set_func('glInvalidateNamedFramebufferData', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glInvalidateNamedFramebufferSubData', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glClearNamedFramebufferiv', t.void, (t.GLuint, t.GLenum, t.GLint, ct.POINTER(t.GLint)))
    set_func('glClearNamedFramebufferuiv', t.void, (t.GLuint, t.GLenum, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glClearNamedFramebufferfv', t.void, (t.GLuint, t.GLenum, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glClearNamedFramebufferfi', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLfloat, t.GLint))
    set_func('glBlitNamedFramebuffer', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLbitfield, t.GLenum))
    set_func('glCheckNamedFramebufferStatus', t.GLenum, (t.GLuint, t.GLenum))
    set_func('glGetNamedFramebufferParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetNamedFramebufferAttachmentParameteriv', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCreateRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glNamedRenderbufferStorage', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glNamedRenderbufferStorageMultisample', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glGetNamedRenderbufferParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCreateTextures', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glTextureBuffer', t.void, (t.GLuint, t.GLenum, t.GLuint))
    set_func('glTextureBufferRange', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glTextureStorage1D', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei))
    set_func('glTextureStorage2D', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTextureStorage3D', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glTextureStorage2DMultisample', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureStorage3DMultisample', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureSubImage1D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTextureSubImage2D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTextureSubImage3D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage1D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage2D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage3D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCopyTextureSubImage1D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei))
    set_func('glCopyTextureSubImage2D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glCopyTextureSubImage3D', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glTextureParameterf', t.void, (t.GLuint, t.GLenum, t.GLfloat))
    set_func('glTextureParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTextureParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glTextureParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTextureParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glTextureParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGenerateTextureMipmap', t.void, (t.GLuint,))
    set_func('glBindTextureUnit', t.void, (t.GLuint, t.GLuint))
    set_func('glGetTextureImage', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetCompressedTextureImage', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetTextureLevelParameterfv', t.void, (t.GLuint, t.GLint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTextureLevelParameteriv', t.void, (t.GLuint, t.GLint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTextureParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTextureParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTextureParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetTextureParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCreateVertexArrays', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDisableVertexArrayAttrib', t.void, (t.GLuint, t.GLuint))
    set_func('glEnableVertexArrayAttrib', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexArrayElementBuffer', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexArrayVertexBuffer', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLintptr, t.GLsizei))
    set_func('glVertexArrayVertexBuffers', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLintptr), ct.POINTER(t.GLsizei)))
    set_func('glVertexArrayAttribBinding', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexArrayAttribFormat', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexArrayAttribIFormat', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexArrayAttribLFormat', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexArrayBindingDivisor', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glGetVertexArrayiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexArrayIndexediv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexArrayIndexed64iv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glCreateSamplers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glCreateProgramPipelines', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glCreateQueries', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetQueryBufferObjecti64v', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptr))
    set_func('glGetQueryBufferObjectiv', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptr))
    set_func('glGetQueryBufferObjectui64v', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptr))
    set_func('glGetQueryBufferObjectuiv', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptr))
    set_enum("GL_TEXTURE_TARGET", 0x1006)
    set_enum("GL_QUERY_TARGET", 0x82EA)
    set_enum("GL_TEXTURE_BINDING_1D", 0x8068)
    set_enum("GL_TEXTURE_BINDING_1D_ARRAY", 0x8C1C)
    set_enum("GL_TEXTURE_BINDING_2D", 0x8069)
    set_enum("GL_TEXTURE_BINDING_2D_ARRAY", 0x8C1D)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE", 0x9104)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY", 0x9105)
    set_enum("GL_TEXTURE_BINDING_3D", 0x806A)
    set_enum("GL_TEXTURE_BINDING_BUFFER", 0x8C2C)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP", 0x8514)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_ARRAY", 0x900A)
    set_enum("GL_TEXTURE_BINDING_RECTANGLE", 0x84F6)


#### GL_ARB_DRAW_BUFFERS ####
def init_gl_arb_draw_buffers():
    set_func('glDrawBuffersARB', t.void, (t.GLsizei, ct.POINTER(t.GLenum)))
    set_enum("GL_MAX_DRAW_BUFFERS_ARB", 0x8824)
    set_enum("GL_DRAW_BUFFER0_ARB", 0x8825)
    set_enum("GL_DRAW_BUFFER1_ARB", 0x8826)
    set_enum("GL_DRAW_BUFFER2_ARB", 0x8827)
    set_enum("GL_DRAW_BUFFER3_ARB", 0x8828)
    set_enum("GL_DRAW_BUFFER4_ARB", 0x8829)
    set_enum("GL_DRAW_BUFFER5_ARB", 0x882A)
    set_enum("GL_DRAW_BUFFER6_ARB", 0x882B)
    set_enum("GL_DRAW_BUFFER7_ARB", 0x882C)
    set_enum("GL_DRAW_BUFFER8_ARB", 0x882D)
    set_enum("GL_DRAW_BUFFER9_ARB", 0x882E)
    set_enum("GL_DRAW_BUFFER10_ARB", 0x882F)
    set_enum("GL_DRAW_BUFFER11_ARB", 0x8830)
    set_enum("GL_DRAW_BUFFER12_ARB", 0x8831)
    set_enum("GL_DRAW_BUFFER13_ARB", 0x8832)
    set_enum("GL_DRAW_BUFFER14_ARB", 0x8833)
    set_enum("GL_DRAW_BUFFER15_ARB", 0x8834)


#### GL_ARB_DRAW_BUFFERS_BLEND ####
def init_gl_arb_draw_buffers_blend():
    set_func('glBlendEquationiARB', t.void, (t.GLuint, t.GLenum))
    set_func('glBlendEquationSeparateiARB', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFunciARB', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFuncSeparateiARB', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))


#### GL_ARB_DRAW_ELEMENTS_BASE_VERTEX ####
def init_gl_arb_draw_elements_base_vertex():
    set_func('glDrawElementsBaseVertex', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawRangeElementsBaseVertex', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawElementsInstancedBaseVertex', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLint))
    set_func('glMultiDrawElementsBaseVertex', t.void, (t.GLenum, ct.POINTER(t.GLsizei), t.GLenum, ct.POINTER(ct.POINTER(t.void)), t.GLsizei, ct.POINTER(t.GLint)))


#### GL_ARB_DRAW_INDIRECT ####
def init_gl_arb_draw_indirect():
    set_func('glDrawArraysIndirect', t.void, (t.GLenum, ct.POINTER(t.void)))
    set_func('glDrawElementsIndirect', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_enum("GL_DRAW_INDIRECT_BUFFER", 0x8F3F)
    set_enum("GL_DRAW_INDIRECT_BUFFER_BINDING", 0x8F43)


#### GL_ARB_DRAW_INSTANCED ####
def init_gl_arb_draw_instanced():
    set_func('glDrawArraysInstancedARB', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glDrawElementsInstancedARB', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei))


#### GL_ARB_ENHANCED_LAYOUTS ####
def init_gl_arb_enhanced_layouts():
    set_enum("GL_LOCATION_COMPONENT", 0x934A)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER", 0x8C8E)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_INDEX", 0x934B)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE", 0x934C)


#### GL_ARB_EXPLICIT_UNIFORM_LOCATION ####
def init_gl_arb_explicit_uniform_location():
    set_enum("GL_MAX_UNIFORM_LOCATIONS", 0x826E)


#### GL_ARB_FRAGMENT_PROGRAM ####
def init_gl_arb_fragment_program():
    set_func('glProgramStringARB', t.void, (t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glBindProgramARB', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteProgramsARB', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenProgramsARB', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramEnvParameter4dARB', t.void, (t.GLenum, t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramEnvParameter4dvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glProgramEnvParameter4fARB', t.void, (t.GLenum, t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramEnvParameter4fvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glProgramLocalParameter4dARB', t.void, (t.GLenum, t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramLocalParameter4dvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glProgramLocalParameter4fARB', t.void, (t.GLenum, t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramLocalParameter4fvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetProgramEnvParameterdvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glGetProgramEnvParameterfvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetProgramLocalParameterdvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glGetProgramLocalParameterfvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetProgramivARB', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramStringARB', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glIsProgramARB', t.GLboolean, (t.GLuint,))
    set_enum("GL_FRAGMENT_PROGRAM_ARB", 0x8804)
    set_enum("GL_PROGRAM_FORMAT_ASCII_ARB", 0x8875)
    set_enum("GL_PROGRAM_LENGTH_ARB", 0x8627)
    set_enum("GL_PROGRAM_FORMAT_ARB", 0x8876)
    set_enum("GL_PROGRAM_BINDING_ARB", 0x8677)
    set_enum("GL_PROGRAM_INSTRUCTIONS_ARB", 0x88A0)
    set_enum("GL_MAX_PROGRAM_INSTRUCTIONS_ARB", 0x88A1)
    set_enum("GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB", 0x88A2)
    set_enum("GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB", 0x88A3)
    set_enum("GL_PROGRAM_TEMPORARIES_ARB", 0x88A4)
    set_enum("GL_MAX_PROGRAM_TEMPORARIES_ARB", 0x88A5)
    set_enum("GL_PROGRAM_NATIVE_TEMPORARIES_ARB", 0x88A6)
    set_enum("GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB", 0x88A7)
    set_enum("GL_PROGRAM_PARAMETERS_ARB", 0x88A8)
    set_enum("GL_MAX_PROGRAM_PARAMETERS_ARB", 0x88A9)
    set_enum("GL_PROGRAM_NATIVE_PARAMETERS_ARB", 0x88AA)
    set_enum("GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB", 0x88AB)
    set_enum("GL_PROGRAM_ATTRIBS_ARB", 0x88AC)
    set_enum("GL_MAX_PROGRAM_ATTRIBS_ARB", 0x88AD)
    set_enum("GL_PROGRAM_NATIVE_ATTRIBS_ARB", 0x88AE)
    set_enum("GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB", 0x88AF)
    set_enum("GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB", 0x88B4)
    set_enum("GL_MAX_PROGRAM_ENV_PARAMETERS_ARB", 0x88B5)
    set_enum("GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB", 0x88B6)
    set_enum("GL_PROGRAM_ALU_INSTRUCTIONS_ARB", 0x8805)
    set_enum("GL_PROGRAM_TEX_INSTRUCTIONS_ARB", 0x8806)
    set_enum("GL_PROGRAM_TEX_INDIRECTIONS_ARB", 0x8807)
    set_enum("GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB", 0x8808)
    set_enum("GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB", 0x8809)
    set_enum("GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB", 0x880A)
    set_enum("GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB", 0x880B)
    set_enum("GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB", 0x880C)
    set_enum("GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB", 0x880D)
    set_enum("GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB", 0x880E)
    set_enum("GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB", 0x880F)
    set_enum("GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB", 0x8810)
    set_enum("GL_PROGRAM_STRING_ARB", 0x8628)
    set_enum("GL_PROGRAM_ERROR_POSITION_ARB", 0x864B)
    set_enum("GL_CURRENT_MATRIX_ARB", 0x8641)
    set_enum("GL_TRANSPOSE_CURRENT_MATRIX_ARB", 0x88B7)
    set_enum("GL_CURRENT_MATRIX_STACK_DEPTH_ARB", 0x8640)
    set_enum("GL_MAX_PROGRAM_MATRICES_ARB", 0x862F)
    set_enum("GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB", 0x862E)
    set_enum("GL_MAX_TEXTURE_COORDS_ARB", 0x8871)
    set_enum("GL_MAX_TEXTURE_IMAGE_UNITS_ARB", 0x8872)
    set_enum("GL_PROGRAM_ERROR_STRING_ARB", 0x8874)
    set_enum("GL_MATRIX0_ARB", 0x88C0)
    set_enum("GL_MATRIX1_ARB", 0x88C1)
    set_enum("GL_MATRIX2_ARB", 0x88C2)
    set_enum("GL_MATRIX3_ARB", 0x88C3)
    set_enum("GL_MATRIX4_ARB", 0x88C4)
    set_enum("GL_MATRIX5_ARB", 0x88C5)
    set_enum("GL_MATRIX6_ARB", 0x88C6)
    set_enum("GL_MATRIX7_ARB", 0x88C7)
    set_enum("GL_MATRIX8_ARB", 0x88C8)
    set_enum("GL_MATRIX9_ARB", 0x88C9)
    set_enum("GL_MATRIX10_ARB", 0x88CA)
    set_enum("GL_MATRIX11_ARB", 0x88CB)
    set_enum("GL_MATRIX12_ARB", 0x88CC)
    set_enum("GL_MATRIX13_ARB", 0x88CD)
    set_enum("GL_MATRIX14_ARB", 0x88CE)
    set_enum("GL_MATRIX15_ARB", 0x88CF)
    set_enum("GL_MATRIX16_ARB", 0x88D0)
    set_enum("GL_MATRIX17_ARB", 0x88D1)
    set_enum("GL_MATRIX18_ARB", 0x88D2)
    set_enum("GL_MATRIX19_ARB", 0x88D3)
    set_enum("GL_MATRIX20_ARB", 0x88D4)
    set_enum("GL_MATRIX21_ARB", 0x88D5)
    set_enum("GL_MATRIX22_ARB", 0x88D6)
    set_enum("GL_MATRIX23_ARB", 0x88D7)
    set_enum("GL_MATRIX24_ARB", 0x88D8)
    set_enum("GL_MATRIX25_ARB", 0x88D9)
    set_enum("GL_MATRIX26_ARB", 0x88DA)
    set_enum("GL_MATRIX27_ARB", 0x88DB)
    set_enum("GL_MATRIX28_ARB", 0x88DC)
    set_enum("GL_MATRIX29_ARB", 0x88DD)
    set_enum("GL_MATRIX30_ARB", 0x88DE)
    set_enum("GL_MATRIX31_ARB", 0x88DF)


#### GL_ARB_FRAGMENT_SHADER ####
def init_gl_arb_fragment_shader():
    set_enum("GL_FRAGMENT_SHADER_ARB", 0x8B30)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB", 0x8B49)
    set_enum("GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB", 0x8B8B)


#### GL_ARB_FRAMEBUFFER_NO_ATTACHMENTS ####
def init_gl_arb_framebuffer_no_attachments():
    set_func('glFramebufferParameteri', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glGetFramebufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_FRAMEBUFFER_DEFAULT_WIDTH", 0x9310)
    set_enum("GL_FRAMEBUFFER_DEFAULT_HEIGHT", 0x9311)
    set_enum("GL_FRAMEBUFFER_DEFAULT_LAYERS", 0x9312)
    set_enum("GL_FRAMEBUFFER_DEFAULT_SAMPLES", 0x9313)
    set_enum("GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS", 0x9314)
    set_enum("GL_MAX_FRAMEBUFFER_WIDTH", 0x9315)
    set_enum("GL_MAX_FRAMEBUFFER_HEIGHT", 0x9316)
    set_enum("GL_MAX_FRAMEBUFFER_LAYERS", 0x9317)
    set_enum("GL_MAX_FRAMEBUFFER_SAMPLES", 0x9318)


#### GL_ARB_FRAMEBUFFER_OBJECT ####
def init_gl_arb_framebuffer_object():
    set_func('glIsRenderbuffer', t.GLboolean, (t.GLuint,))
    set_func('glBindRenderbuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenRenderbuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glRenderbufferStorage', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glGetRenderbufferParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glIsFramebuffer', t.GLboolean, (t.GLuint,))
    set_func('glBindFramebuffer', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenFramebuffers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glCheckFramebufferStatus', t.GLenum, (t.GLenum,))
    set_func('glFramebufferTexture1D', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFramebufferTexture2D', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFramebufferTexture3D', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glFramebufferRenderbuffer', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint))
    set_func('glGetFramebufferAttachmentParameteriv', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGenerateMipmap', t.void, (t.GLenum,))
    set_func('glBlitFramebuffer', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLbitfield, t.GLenum))
    set_func('glRenderbufferStorageMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glFramebufferTextureLayer', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_enum("GL_INVALID_FRAMEBUFFER_OPERATION", 0x0506)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING", 0x8210)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE", 0x8211)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE", 0x8212)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE", 0x8213)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE", 0x8214)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE", 0x8215)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE", 0x8216)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE", 0x8217)
    set_enum("GL_FRAMEBUFFER_DEFAULT", 0x8218)
    set_enum("GL_FRAMEBUFFER_UNDEFINED", 0x8219)
    set_enum("GL_DEPTH_STENCIL_ATTACHMENT", 0x821A)
    set_enum("GL_MAX_RENDERBUFFER_SIZE", 0x84E8)
    set_enum("GL_DEPTH_STENCIL", 0x84F9)
    set_enum("GL_UNSIGNED_INT_24_8", 0x84FA)
    set_enum("GL_DEPTH24_STENCIL8", 0x88F0)
    set_enum("GL_TEXTURE_STENCIL_SIZE", 0x88F1)
    set_enum("GL_UNSIGNED_NORMALIZED", 0x8C17)
    set_enum("GL_FRAMEBUFFER_BINDING", 0x8CA6)
    set_enum("GL_DRAW_FRAMEBUFFER_BINDING", 0x8CA6)
    set_enum("GL_RENDERBUFFER_BINDING", 0x8CA7)
    set_enum("GL_READ_FRAMEBUFFER", 0x8CA8)
    set_enum("GL_DRAW_FRAMEBUFFER", 0x8CA9)
    set_enum("GL_READ_FRAMEBUFFER_BINDING", 0x8CAA)
    set_enum("GL_RENDERBUFFER_SAMPLES", 0x8CAB)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", 0x8CD0)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", 0x8CD1)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", 0x8CD2)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", 0x8CD3)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER", 0x8CD4)
    set_enum("GL_FRAMEBUFFER_COMPLETE", 0x8CD5)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT", 0x8CD6)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", 0x8CD7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER", 0x8CDB)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER", 0x8CDC)
    set_enum("GL_FRAMEBUFFER_UNSUPPORTED", 0x8CDD)
    set_enum("GL_MAX_COLOR_ATTACHMENTS", 0x8CDF)
    set_enum("GL_COLOR_ATTACHMENT0", 0x8CE0)
    set_enum("GL_COLOR_ATTACHMENT1", 0x8CE1)
    set_enum("GL_COLOR_ATTACHMENT2", 0x8CE2)
    set_enum("GL_COLOR_ATTACHMENT3", 0x8CE3)
    set_enum("GL_COLOR_ATTACHMENT4", 0x8CE4)
    set_enum("GL_COLOR_ATTACHMENT5", 0x8CE5)
    set_enum("GL_COLOR_ATTACHMENT6", 0x8CE6)
    set_enum("GL_COLOR_ATTACHMENT7", 0x8CE7)
    set_enum("GL_COLOR_ATTACHMENT8", 0x8CE8)
    set_enum("GL_COLOR_ATTACHMENT9", 0x8CE9)
    set_enum("GL_COLOR_ATTACHMENT10", 0x8CEA)
    set_enum("GL_COLOR_ATTACHMENT11", 0x8CEB)
    set_enum("GL_COLOR_ATTACHMENT12", 0x8CEC)
    set_enum("GL_COLOR_ATTACHMENT13", 0x8CED)
    set_enum("GL_COLOR_ATTACHMENT14", 0x8CEE)
    set_enum("GL_COLOR_ATTACHMENT15", 0x8CEF)
    set_enum("GL_DEPTH_ATTACHMENT", 0x8D00)
    set_enum("GL_STENCIL_ATTACHMENT", 0x8D20)
    set_enum("GL_FRAMEBUFFER", 0x8D40)
    set_enum("GL_RENDERBUFFER", 0x8D41)
    set_enum("GL_RENDERBUFFER_WIDTH", 0x8D42)
    set_enum("GL_RENDERBUFFER_HEIGHT", 0x8D43)
    set_enum("GL_RENDERBUFFER_INTERNAL_FORMAT", 0x8D44)
    set_enum("GL_STENCIL_INDEX1", 0x8D46)
    set_enum("GL_STENCIL_INDEX4", 0x8D47)
    set_enum("GL_STENCIL_INDEX8", 0x8D48)
    set_enum("GL_STENCIL_INDEX16", 0x8D49)
    set_enum("GL_RENDERBUFFER_RED_SIZE", 0x8D50)
    set_enum("GL_RENDERBUFFER_GREEN_SIZE", 0x8D51)
    set_enum("GL_RENDERBUFFER_BLUE_SIZE", 0x8D52)
    set_enum("GL_RENDERBUFFER_ALPHA_SIZE", 0x8D53)
    set_enum("GL_RENDERBUFFER_DEPTH_SIZE", 0x8D54)
    set_enum("GL_RENDERBUFFER_STENCIL_SIZE", 0x8D55)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE", 0x8D56)
    set_enum("GL_MAX_SAMPLES", 0x8D57)
    set_enum("GL_INDEX", 0x8222)


#### GL_ARB_FRAMEBUFFER_SRGB ####
def init_gl_arb_framebuffer_srgb():
    set_enum("GL_FRAMEBUFFER_SRGB", 0x8DB9)


#### GL_ARB_GEOMETRY_SHADER4 ####
def init_gl_arb_geometry_shader4():
    set_func('glProgramParameteriARB', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glFramebufferTextureARB', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFramebufferTextureLayerARB', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glFramebufferTextureFaceARB', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLenum))
    set_enum("GL_LINES_ADJACENCY_ARB", 0x000A)
    set_enum("GL_LINE_STRIP_ADJACENCY_ARB", 0x000B)
    set_enum("GL_TRIANGLES_ADJACENCY_ARB", 0x000C)
    set_enum("GL_TRIANGLE_STRIP_ADJACENCY_ARB", 0x000D)
    set_enum("GL_PROGRAM_POINT_SIZE_ARB", 0x8642)
    set_enum("GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB", 0x8C29)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB", 0x8DA7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB", 0x8DA8)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB", 0x8DA9)
    set_enum("GL_GEOMETRY_SHADER_ARB", 0x8DD9)
    set_enum("GL_GEOMETRY_VERTICES_OUT_ARB", 0x8DDA)
    set_enum("GL_GEOMETRY_INPUT_TYPE_ARB", 0x8DDB)
    set_enum("GL_GEOMETRY_OUTPUT_TYPE_ARB", 0x8DDC)
    set_enum("GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB", 0x8DDD)
    set_enum("GL_MAX_VERTEX_VARYING_COMPONENTS_ARB", 0x8DDE)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB", 0x8DDF)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB", 0x8DE0)
    set_enum("GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB", 0x8DE1)
    set_enum("GL_MAX_VARYING_COMPONENTS", 0x8B4B)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER", 0x8CD4)


#### GL_ARB_GET_PROGRAM_BINARY ####
def init_gl_arb_get_program_binary():
    set_func('glGetProgramBinary', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLenum), ct.POINTER(t.void)))
    set_func('glProgramBinary', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glProgramParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_enum("GL_PROGRAM_BINARY_RETRIEVABLE_HINT", 0x8257)
    set_enum("GL_PROGRAM_BINARY_LENGTH", 0x8741)
    set_enum("GL_NUM_PROGRAM_BINARY_FORMATS", 0x87FE)
    set_enum("GL_PROGRAM_BINARY_FORMATS", 0x87FF)


#### GL_ARB_GET_TEXTURE_SUB_IMAGE ####
def init_gl_arb_get_texture_sub_image():
    set_func('glGetTextureSubImage', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetCompressedTextureSubImage', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLsizei, ct.POINTER(t.void)))


#### GL_ARB_GPU_SHADER5 ####
def init_gl_arb_gpu_shader5():
    set_enum("GL_GEOMETRY_SHADER_INVOCATIONS", 0x887F)
    set_enum("GL_MAX_GEOMETRY_SHADER_INVOCATIONS", 0x8E5A)
    set_enum("GL_MIN_FRAGMENT_INTERPOLATION_OFFSET", 0x8E5B)
    set_enum("GL_MAX_FRAGMENT_INTERPOLATION_OFFSET", 0x8E5C)
    set_enum("GL_FRAGMENT_INTERPOLATION_OFFSET_BITS", 0x8E5D)
    set_enum("GL_MAX_VERTEX_STREAMS", 0x8E71)


#### GL_ARB_GPU_SHADER_FP64 ####
def init_gl_arb_gpu_shader_fp64():
    set_func('glUniform1d', t.void, (t.GLint, t.GLdouble))
    set_func('glUniform2d', t.void, (t.GLint, t.GLdouble, t.GLdouble))
    set_func('glUniform3d', t.void, (t.GLint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glUniform4d', t.void, (t.GLint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glUniform1dv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glUniform2dv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glUniform3dv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glUniform4dv', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix2dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix3dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix4dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix2x3dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix2x4dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix3x2dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix3x4dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix4x2dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glUniformMatrix4x3dv', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glGetUniformdv', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLdouble)))
    set_enum("GL_DOUBLE", 0x140A)
    set_enum("GL_DOUBLE_VEC2", 0x8FFC)
    set_enum("GL_DOUBLE_VEC3", 0x8FFD)
    set_enum("GL_DOUBLE_VEC4", 0x8FFE)
    set_enum("GL_DOUBLE_MAT2", 0x8F46)
    set_enum("GL_DOUBLE_MAT3", 0x8F47)
    set_enum("GL_DOUBLE_MAT4", 0x8F48)
    set_enum("GL_DOUBLE_MAT2x3", 0x8F49)
    set_enum("GL_DOUBLE_MAT2x4", 0x8F4A)
    set_enum("GL_DOUBLE_MAT3x2", 0x8F4B)
    set_enum("GL_DOUBLE_MAT3x4", 0x8F4C)
    set_enum("GL_DOUBLE_MAT4x2", 0x8F4D)
    set_enum("GL_DOUBLE_MAT4x3", 0x8F4E)


#### GL_ARB_GPU_SHADER_INT64 ####
def init_gl_arb_gpu_shader_int64():
    set_func('glUniform1i64ARB', t.void, (t.GLint, t.GLint64))
    set_func('glUniform2i64ARB', t.void, (t.GLint, t.GLint64, t.GLint64))
    set_func('glUniform3i64ARB', t.void, (t.GLint, t.GLint64, t.GLint64, t.GLint64))
    set_func('glUniform4i64ARB', t.void, (t.GLint, t.GLint64, t.GLint64, t.GLint64, t.GLint64))
    set_func('glUniform1i64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glUniform2i64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glUniform3i64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glUniform4i64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glUniform1ui64ARB', t.void, (t.GLint, t.GLuint64))
    set_func('glUniform2ui64ARB', t.void, (t.GLint, t.GLuint64, t.GLuint64))
    set_func('glUniform3ui64ARB', t.void, (t.GLint, t.GLuint64, t.GLuint64, t.GLuint64))
    set_func('glUniform4ui64ARB', t.void, (t.GLint, t.GLuint64, t.GLuint64, t.GLuint64, t.GLuint64))
    set_func('glUniform1ui64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glUniform2ui64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glUniform3ui64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glUniform4ui64vARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glGetUniformi64vARB', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLint64)))
    set_func('glGetUniformui64vARB', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLuint64)))
    set_func('glGetnUniformi64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glGetnUniformui64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glProgramUniform1i64ARB', t.void, (t.GLuint, t.GLint, t.GLint64))
    set_func('glProgramUniform2i64ARB', t.void, (t.GLuint, t.GLint, t.GLint64, t.GLint64))
    set_func('glProgramUniform3i64ARB', t.void, (t.GLuint, t.GLint, t.GLint64, t.GLint64, t.GLint64))
    set_func('glProgramUniform4i64ARB', t.void, (t.GLuint, t.GLint, t.GLint64, t.GLint64, t.GLint64, t.GLint64))
    set_func('glProgramUniform1i64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glProgramUniform2i64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glProgramUniform3i64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glProgramUniform4i64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64)))
    set_func('glProgramUniform1ui64ARB', t.void, (t.GLuint, t.GLint, t.GLuint64))
    set_func('glProgramUniform2ui64ARB', t.void, (t.GLuint, t.GLint, t.GLuint64, t.GLuint64))
    set_func('glProgramUniform3ui64ARB', t.void, (t.GLuint, t.GLint, t.GLuint64, t.GLuint64, t.GLuint64))
    set_func('glProgramUniform4ui64ARB', t.void, (t.GLuint, t.GLint, t.GLuint64, t.GLuint64, t.GLuint64, t.GLuint64))
    set_func('glProgramUniform1ui64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glProgramUniform2ui64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glProgramUniform3ui64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glProgramUniform4ui64vARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_enum("GL_INT64_ARB", 0x140E)
    set_enum("GL_UNSIGNED_INT64_ARB", 0x140F)
    set_enum("GL_INT64_VEC2_ARB", 0x8FE9)
    set_enum("GL_INT64_VEC3_ARB", 0x8FEA)
    set_enum("GL_INT64_VEC4_ARB", 0x8FEB)
    set_enum("GL_UNSIGNED_INT64_VEC2_ARB", 0x8FF5)
    set_enum("GL_UNSIGNED_INT64_VEC3_ARB", 0x8FF6)
    set_enum("GL_UNSIGNED_INT64_VEC4_ARB", 0x8FF7)


#### GL_ARB_HALF_FLOAT_PIXEL ####
def init_gl_arb_half_float_pixel():
    set_enum("GL_HALF_FLOAT_ARB", 0x140B)


#### GL_ARB_HALF_FLOAT_VERTEX ####
def init_gl_arb_half_float_vertex():
    set_enum("GL_HALF_FLOAT", 0x140B)


#### GL_ARB_IMAGING ####
def init_gl_arb_imaging():
    set_func('glBlendColor', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glBlendEquation', t.void, (t.GLenum,))
    set_func('glColorTable', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glColorTableParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glColorTableParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCopyColorTable', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei))
    set_func('glGetColorTable', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetColorTableParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetColorTableParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glColorSubTable', t.void, (t.GLenum, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyColorSubTable', t.void, (t.GLenum, t.GLsizei, t.GLint, t.GLint, t.GLsizei))
    set_func('glConvolutionFilter1D', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glConvolutionFilter2D', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glConvolutionParameterf', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glConvolutionParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glConvolutionParameteri', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glConvolutionParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCopyConvolutionFilter1D', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei))
    set_func('glCopyConvolutionFilter2D', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glGetConvolutionFilter', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetConvolutionParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetConvolutionParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSeparableFilter', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void), ct.POINTER(t.void), ct.POINTER(t.void)))
    set_func('glSeparableFilter2D', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void), ct.POINTER(t.void)))
    set_func('glGetHistogram', t.void, (t.GLenum, t.GLboolean, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetHistogramParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetHistogramParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMinmax', t.void, (t.GLenum, t.GLboolean, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetMinmaxParameterfv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMinmaxParameteriv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glHistogram', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLboolean))
    set_func('glMinmax', t.void, (t.GLenum, t.GLenum, t.GLboolean))
    set_func('glResetHistogram', t.void, (t.GLenum,))
    set_func('glResetMinmax', t.void, (t.GLenum,))
    set_enum("GL_CONSTANT_COLOR", 0x8001)
    set_enum("GL_ONE_MINUS_CONSTANT_COLOR", 0x8002)
    set_enum("GL_CONSTANT_ALPHA", 0x8003)
    set_enum("GL_ONE_MINUS_CONSTANT_ALPHA", 0x8004)
    set_enum("GL_BLEND_COLOR", 0x8005)
    set_enum("GL_FUNC_ADD", 0x8006)
    set_enum("GL_MIN", 0x8007)
    set_enum("GL_MAX", 0x8008)
    set_enum("GL_BLEND_EQUATION", 0x8009)
    set_enum("GL_FUNC_SUBTRACT", 0x800A)
    set_enum("GL_FUNC_REVERSE_SUBTRACT", 0x800B)
    set_enum("GL_CONVOLUTION_1D", 0x8010)
    set_enum("GL_CONVOLUTION_2D", 0x8011)
    set_enum("GL_SEPARABLE_2D", 0x8012)
    set_enum("GL_CONVOLUTION_BORDER_MODE", 0x8013)
    set_enum("GL_CONVOLUTION_FILTER_SCALE", 0x8014)
    set_enum("GL_CONVOLUTION_FILTER_BIAS", 0x8015)
    set_enum("GL_REDUCE", 0x8016)
    set_enum("GL_CONVOLUTION_FORMAT", 0x8017)
    set_enum("GL_CONVOLUTION_WIDTH", 0x8018)
    set_enum("GL_CONVOLUTION_HEIGHT", 0x8019)
    set_enum("GL_MAX_CONVOLUTION_WIDTH", 0x801A)
    set_enum("GL_MAX_CONVOLUTION_HEIGHT", 0x801B)
    set_enum("GL_POST_CONVOLUTION_RED_SCALE", 0x801C)
    set_enum("GL_POST_CONVOLUTION_GREEN_SCALE", 0x801D)
    set_enum("GL_POST_CONVOLUTION_BLUE_SCALE", 0x801E)
    set_enum("GL_POST_CONVOLUTION_ALPHA_SCALE", 0x801F)
    set_enum("GL_POST_CONVOLUTION_RED_BIAS", 0x8020)
    set_enum("GL_POST_CONVOLUTION_GREEN_BIAS", 0x8021)
    set_enum("GL_POST_CONVOLUTION_BLUE_BIAS", 0x8022)
    set_enum("GL_POST_CONVOLUTION_ALPHA_BIAS", 0x8023)
    set_enum("GL_HISTOGRAM", 0x8024)
    set_enum("GL_PROXY_HISTOGRAM", 0x8025)
    set_enum("GL_HISTOGRAM_WIDTH", 0x8026)
    set_enum("GL_HISTOGRAM_FORMAT", 0x8027)
    set_enum("GL_HISTOGRAM_RED_SIZE", 0x8028)
    set_enum("GL_HISTOGRAM_GREEN_SIZE", 0x8029)
    set_enum("GL_HISTOGRAM_BLUE_SIZE", 0x802A)
    set_enum("GL_HISTOGRAM_ALPHA_SIZE", 0x802B)
    set_enum("GL_HISTOGRAM_LUMINANCE_SIZE", 0x802C)
    set_enum("GL_HISTOGRAM_SINK", 0x802D)
    set_enum("GL_MINMAX", 0x802E)
    set_enum("GL_MINMAX_FORMAT", 0x802F)
    set_enum("GL_MINMAX_SINK", 0x8030)
    set_enum("GL_TABLE_TOO_LARGE", 0x8031)
    set_enum("GL_COLOR_MATRIX", 0x80B1)
    set_enum("GL_COLOR_MATRIX_STACK_DEPTH", 0x80B2)
    set_enum("GL_MAX_COLOR_MATRIX_STACK_DEPTH", 0x80B3)
    set_enum("GL_POST_COLOR_MATRIX_RED_SCALE", 0x80B4)
    set_enum("GL_POST_COLOR_MATRIX_GREEN_SCALE", 0x80B5)
    set_enum("GL_POST_COLOR_MATRIX_BLUE_SCALE", 0x80B6)
    set_enum("GL_POST_COLOR_MATRIX_ALPHA_SCALE", 0x80B7)
    set_enum("GL_POST_COLOR_MATRIX_RED_BIAS", 0x80B8)
    set_enum("GL_POST_COLOR_MATRIX_GREEN_BIAS", 0x80B9)
    set_enum("GL_POST_COLOR_MATRIX_BLUE_BIAS", 0x80BA)
    set_enum("GL_POST_COLOR_MATRIX_ALPHA_BIAS", 0x80BB)
    set_enum("GL_COLOR_TABLE", 0x80D0)
    set_enum("GL_POST_CONVOLUTION_COLOR_TABLE", 0x80D1)
    set_enum("GL_POST_COLOR_MATRIX_COLOR_TABLE", 0x80D2)
    set_enum("GL_PROXY_COLOR_TABLE", 0x80D3)
    set_enum("GL_PROXY_POST_CONVOLUTION_COLOR_TABLE", 0x80D4)
    set_enum("GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE", 0x80D5)
    set_enum("GL_COLOR_TABLE_SCALE", 0x80D6)
    set_enum("GL_COLOR_TABLE_BIAS", 0x80D7)
    set_enum("GL_COLOR_TABLE_FORMAT", 0x80D8)
    set_enum("GL_COLOR_TABLE_WIDTH", 0x80D9)
    set_enum("GL_COLOR_TABLE_RED_SIZE", 0x80DA)
    set_enum("GL_COLOR_TABLE_GREEN_SIZE", 0x80DB)
    set_enum("GL_COLOR_TABLE_BLUE_SIZE", 0x80DC)
    set_enum("GL_COLOR_TABLE_ALPHA_SIZE", 0x80DD)
    set_enum("GL_COLOR_TABLE_LUMINANCE_SIZE", 0x80DE)
    set_enum("GL_COLOR_TABLE_INTENSITY_SIZE", 0x80DF)
    set_enum("GL_CONSTANT_BORDER", 0x8151)
    set_enum("GL_REPLICATE_BORDER", 0x8153)
    set_enum("GL_CONVOLUTION_BORDER_COLOR", 0x8154)


#### GL_ARB_INDIRECT_PARAMETERS ####
def init_gl_arb_indirect_parameters():
    set_func('glMultiDrawArraysIndirectCountARB', t.void, (t.GLenum, t.GLintptr, t.GLintptr, t.GLsizei, t.GLsizei))
    set_func('glMultiDrawElementsIndirectCountARB', t.void, (t.GLenum, t.GLenum, t.GLintptr, t.GLintptr, t.GLsizei, t.GLsizei))
    set_enum("GL_PARAMETER_BUFFER_ARB", 0x80EE)
    set_enum("GL_PARAMETER_BUFFER_BINDING_ARB", 0x80EF)


#### GL_ARB_INSTANCED_ARRAYS ####
def init_gl_arb_instanced_arrays():
    set_func('glVertexAttribDivisorARB', t.void, (t.GLuint, t.GLuint))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB", 0x88FE)


#### GL_ARB_INTERNALFORMAT_QUERY ####
def init_gl_arb_internalformat_query():
    set_func('glGetInternalformativ', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLint)))
    set_enum("GL_NUM_SAMPLE_COUNTS", 0x9380)


#### GL_ARB_INTERNALFORMAT_QUERY2 ####
def init_gl_arb_internalformat_query2():
    set_func('glGetInternalformati64v', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLint64)))
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_TYPE", 0x90C7)
    set_enum("GL_NUM_SAMPLE_COUNTS", 0x9380)
    set_enum("GL_RENDERBUFFER", 0x8D41)
    set_enum("GL_SAMPLES", 0x80A9)
    set_enum("GL_TEXTURE_1D", 0x0DE0)
    set_enum("GL_TEXTURE_1D_ARRAY", 0x8C18)
    set_enum("GL_TEXTURE_2D", 0x0DE1)
    set_enum("GL_TEXTURE_2D_ARRAY", 0x8C1A)
    set_enum("GL_TEXTURE_3D", 0x806F)
    set_enum("GL_TEXTURE_CUBE_MAP", 0x8513)
    set_enum("GL_TEXTURE_CUBE_MAP_ARRAY", 0x9009)
    set_enum("GL_TEXTURE_RECTANGLE", 0x84F5)
    set_enum("GL_TEXTURE_BUFFER", 0x8C2A)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE", 0x9100)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE_ARRAY", 0x9102)
    set_enum("GL_TEXTURE_COMPRESSED", 0x86A1)
    set_enum("GL_INTERNALFORMAT_SUPPORTED", 0x826F)
    set_enum("GL_INTERNALFORMAT_PREFERRED", 0x8270)
    set_enum("GL_INTERNALFORMAT_RED_SIZE", 0x8271)
    set_enum("GL_INTERNALFORMAT_GREEN_SIZE", 0x8272)
    set_enum("GL_INTERNALFORMAT_BLUE_SIZE", 0x8273)
    set_enum("GL_INTERNALFORMAT_ALPHA_SIZE", 0x8274)
    set_enum("GL_INTERNALFORMAT_DEPTH_SIZE", 0x8275)
    set_enum("GL_INTERNALFORMAT_STENCIL_SIZE", 0x8276)
    set_enum("GL_INTERNALFORMAT_SHARED_SIZE", 0x8277)
    set_enum("GL_INTERNALFORMAT_RED_TYPE", 0x8278)
    set_enum("GL_INTERNALFORMAT_GREEN_TYPE", 0x8279)
    set_enum("GL_INTERNALFORMAT_BLUE_TYPE", 0x827A)
    set_enum("GL_INTERNALFORMAT_ALPHA_TYPE", 0x827B)
    set_enum("GL_INTERNALFORMAT_DEPTH_TYPE", 0x827C)
    set_enum("GL_INTERNALFORMAT_STENCIL_TYPE", 0x827D)
    set_enum("GL_MAX_WIDTH", 0x827E)
    set_enum("GL_MAX_HEIGHT", 0x827F)
    set_enum("GL_MAX_DEPTH", 0x8280)
    set_enum("GL_MAX_LAYERS", 0x8281)
    set_enum("GL_MAX_COMBINED_DIMENSIONS", 0x8282)
    set_enum("GL_COLOR_COMPONENTS", 0x8283)
    set_enum("GL_DEPTH_COMPONENTS", 0x8284)
    set_enum("GL_STENCIL_COMPONENTS", 0x8285)
    set_enum("GL_COLOR_RENDERABLE", 0x8286)
    set_enum("GL_DEPTH_RENDERABLE", 0x8287)
    set_enum("GL_STENCIL_RENDERABLE", 0x8288)
    set_enum("GL_FRAMEBUFFER_RENDERABLE", 0x8289)
    set_enum("GL_FRAMEBUFFER_RENDERABLE_LAYERED", 0x828A)
    set_enum("GL_FRAMEBUFFER_BLEND", 0x828B)
    set_enum("GL_READ_PIXELS", 0x828C)
    set_enum("GL_READ_PIXELS_FORMAT", 0x828D)
    set_enum("GL_READ_PIXELS_TYPE", 0x828E)
    set_enum("GL_TEXTURE_IMAGE_FORMAT", 0x828F)
    set_enum("GL_TEXTURE_IMAGE_TYPE", 0x8290)
    set_enum("GL_GET_TEXTURE_IMAGE_FORMAT", 0x8291)
    set_enum("GL_GET_TEXTURE_IMAGE_TYPE", 0x8292)
    set_enum("GL_MIPMAP", 0x8293)
    set_enum("GL_MANUAL_GENERATE_MIPMAP", 0x8294)
    set_enum("GL_AUTO_GENERATE_MIPMAP", 0x8295)
    set_enum("GL_COLOR_ENCODING", 0x8296)
    set_enum("GL_SRGB_READ", 0x8297)
    set_enum("GL_SRGB_WRITE", 0x8298)
    set_enum("GL_SRGB_DECODE_ARB", 0x8299)
    set_enum("GL_FILTER", 0x829A)
    set_enum("GL_VERTEX_TEXTURE", 0x829B)
    set_enum("GL_TESS_CONTROL_TEXTURE", 0x829C)
    set_enum("GL_TESS_EVALUATION_TEXTURE", 0x829D)
    set_enum("GL_GEOMETRY_TEXTURE", 0x829E)
    set_enum("GL_FRAGMENT_TEXTURE", 0x829F)
    set_enum("GL_COMPUTE_TEXTURE", 0x82A0)
    set_enum("GL_TEXTURE_SHADOW", 0x82A1)
    set_enum("GL_TEXTURE_GATHER", 0x82A2)
    set_enum("GL_TEXTURE_GATHER_SHADOW", 0x82A3)
    set_enum("GL_SHADER_IMAGE_LOAD", 0x82A4)
    set_enum("GL_SHADER_IMAGE_STORE", 0x82A5)
    set_enum("GL_SHADER_IMAGE_ATOMIC", 0x82A6)
    set_enum("GL_IMAGE_TEXEL_SIZE", 0x82A7)
    set_enum("GL_IMAGE_COMPATIBILITY_CLASS", 0x82A8)
    set_enum("GL_IMAGE_PIXEL_FORMAT", 0x82A9)
    set_enum("GL_IMAGE_PIXEL_TYPE", 0x82AA)
    set_enum("GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST", 0x82AC)
    set_enum("GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST", 0x82AD)
    set_enum("GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE", 0x82AE)
    set_enum("GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE", 0x82AF)
    set_enum("GL_TEXTURE_COMPRESSED_BLOCK_WIDTH", 0x82B1)
    set_enum("GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT", 0x82B2)
    set_enum("GL_TEXTURE_COMPRESSED_BLOCK_SIZE", 0x82B3)
    set_enum("GL_CLEAR_BUFFER", 0x82B4)
    set_enum("GL_TEXTURE_VIEW", 0x82B5)
    set_enum("GL_VIEW_COMPATIBILITY_CLASS", 0x82B6)
    set_enum("GL_FULL_SUPPORT", 0x82B7)
    set_enum("GL_CAVEAT_SUPPORT", 0x82B8)
    set_enum("GL_IMAGE_CLASS_4_X_32", 0x82B9)
    set_enum("GL_IMAGE_CLASS_2_X_32", 0x82BA)
    set_enum("GL_IMAGE_CLASS_1_X_32", 0x82BB)
    set_enum("GL_IMAGE_CLASS_4_X_16", 0x82BC)
    set_enum("GL_IMAGE_CLASS_2_X_16", 0x82BD)
    set_enum("GL_IMAGE_CLASS_1_X_16", 0x82BE)
    set_enum("GL_IMAGE_CLASS_4_X_8", 0x82BF)
    set_enum("GL_IMAGE_CLASS_2_X_8", 0x82C0)
    set_enum("GL_IMAGE_CLASS_1_X_8", 0x82C1)
    set_enum("GL_IMAGE_CLASS_11_11_10", 0x82C2)
    set_enum("GL_IMAGE_CLASS_10_10_10_2", 0x82C3)
    set_enum("GL_VIEW_CLASS_128_BITS", 0x82C4)
    set_enum("GL_VIEW_CLASS_96_BITS", 0x82C5)
    set_enum("GL_VIEW_CLASS_64_BITS", 0x82C6)
    set_enum("GL_VIEW_CLASS_48_BITS", 0x82C7)
    set_enum("GL_VIEW_CLASS_32_BITS", 0x82C8)
    set_enum("GL_VIEW_CLASS_24_BITS", 0x82C9)
    set_enum("GL_VIEW_CLASS_16_BITS", 0x82CA)
    set_enum("GL_VIEW_CLASS_8_BITS", 0x82CB)
    set_enum("GL_VIEW_CLASS_S3TC_DXT1_RGB", 0x82CC)
    set_enum("GL_VIEW_CLASS_S3TC_DXT1_RGBA", 0x82CD)
    set_enum("GL_VIEW_CLASS_S3TC_DXT3_RGBA", 0x82CE)
    set_enum("GL_VIEW_CLASS_S3TC_DXT5_RGBA", 0x82CF)
    set_enum("GL_VIEW_CLASS_RGTC1_RED", 0x82D0)
    set_enum("GL_VIEW_CLASS_RGTC2_RG", 0x82D1)
    set_enum("GL_VIEW_CLASS_BPTC_UNORM", 0x82D2)
    set_enum("GL_VIEW_CLASS_BPTC_FLOAT", 0x82D3)


#### GL_ARB_INVALIDATE_SUBDATA ####
def init_gl_arb_invalidate_subdata():
    set_func('glInvalidateTexSubImage', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glInvalidateTexImage', t.void, (t.GLuint, t.GLint))
    set_func('glInvalidateBufferSubData', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glInvalidateBufferData', t.void, (t.GLuint,))
    set_func('glInvalidateFramebuffer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glInvalidateSubFramebuffer', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLenum), t.GLint, t.GLint, t.GLsizei, t.GLsizei))


#### GL_ARB_MAP_BUFFER_ALIGNMENT ####
def init_gl_arb_map_buffer_alignment():
    set_enum("GL_MIN_MAP_BUFFER_ALIGNMENT", 0x90BC)


#### GL_ARB_MAP_BUFFER_RANGE ####
def init_gl_arb_map_buffer_range():
    set_func('glMapBufferRange', ct.POINTER(t.void), (t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLbitfield))
    set_func('glFlushMappedBufferRange', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr))
    set_enum("GL_MAP_READ_BIT", 0x0001)
    set_enum("GL_MAP_WRITE_BIT", 0x0002)
    set_enum("GL_MAP_INVALIDATE_RANGE_BIT", 0x0004)
    set_enum("GL_MAP_INVALIDATE_BUFFER_BIT", 0x0008)
    set_enum("GL_MAP_FLUSH_EXPLICIT_BIT", 0x0010)
    set_enum("GL_MAP_UNSYNCHRONIZED_BIT", 0x0020)


#### GL_ARB_MATRIX_PALETTE ####
def init_gl_arb_matrix_palette():
    set_func('glCurrentPaletteMatrixARB', t.void, (t.GLint,))
    set_func('glMatrixIndexubvARB', t.void, (t.GLint, ct.POINTER(t.GLubyte)))
    set_func('glMatrixIndexusvARB', t.void, (t.GLint, ct.POINTER(t.GLushort)))
    set_func('glMatrixIndexuivARB', t.void, (t.GLint, ct.POINTER(t.GLuint)))
    set_func('glMatrixIndexPointerARB', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_MATRIX_PALETTE_ARB", 0x8840)
    set_enum("GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB", 0x8841)
    set_enum("GL_MAX_PALETTE_MATRICES_ARB", 0x8842)
    set_enum("GL_CURRENT_PALETTE_MATRIX_ARB", 0x8843)
    set_enum("GL_MATRIX_INDEX_ARRAY_ARB", 0x8844)
    set_enum("GL_CURRENT_MATRIX_INDEX_ARB", 0x8845)
    set_enum("GL_MATRIX_INDEX_ARRAY_SIZE_ARB", 0x8846)
    set_enum("GL_MATRIX_INDEX_ARRAY_TYPE_ARB", 0x8847)
    set_enum("GL_MATRIX_INDEX_ARRAY_STRIDE_ARB", 0x8848)
    set_enum("GL_MATRIX_INDEX_ARRAY_POINTER_ARB", 0x8849)


#### GL_ARB_MULTI_BIND ####
def init_gl_arb_multi_bind():
    set_func('glBindBuffersBase', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glBindBuffersRange', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLintptr), ct.POINTER(t.GLsizeiptr)))
    set_func('glBindTextures', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glBindSamplers', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glBindImageTextures', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glBindVertexBuffers', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLintptr), ct.POINTER(t.GLsizei)))


#### GL_ARB_MULTI_DRAW_INDIRECT ####
def init_gl_arb_multi_draw_indirect():
    set_func('glMultiDrawArraysIndirect', t.void, (t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei))
    set_func('glMultiDrawElementsIndirect', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei))


#### GL_ARB_MULTISAMPLE ####
def init_gl_arb_multisample():
    set_func('glSampleCoverageARB', t.void, (t.GLfloat, t.GLboolean))
    set_enum("GL_MULTISAMPLE_ARB", 0x809D)
    set_enum("GL_SAMPLE_ALPHA_TO_COVERAGE_ARB", 0x809E)
    set_enum("GL_SAMPLE_ALPHA_TO_ONE_ARB", 0x809F)
    set_enum("GL_SAMPLE_COVERAGE_ARB", 0x80A0)
    set_enum("GL_SAMPLE_BUFFERS_ARB", 0x80A8)
    set_enum("GL_SAMPLES_ARB", 0x80A9)
    set_enum("GL_SAMPLE_COVERAGE_VALUE_ARB", 0x80AA)
    set_enum("GL_SAMPLE_COVERAGE_INVERT_ARB", 0x80AB)
    set_enum("GL_MULTISAMPLE_BIT_ARB", 0x20000000)


#### GL_ARB_MULTITEXTURE ####
def init_gl_arb_multitexture():
    set_func('glActiveTextureARB', t.void, (t.GLenum,))
    set_func('glClientActiveTextureARB', t.void, (t.GLenum,))
    set_func('glMultiTexCoord1dARB', t.void, (t.GLenum, t.GLdouble))
    set_func('glMultiTexCoord1dvARB', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexCoord1fARB', t.void, (t.GLenum, t.GLfloat))
    set_func('glMultiTexCoord1fvARB', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexCoord1iARB', t.void, (t.GLenum, t.GLint))
    set_func('glMultiTexCoord1ivARB', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexCoord1sARB', t.void, (t.GLenum, t.GLshort))
    set_func('glMultiTexCoord1svARB', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glMultiTexCoord2dARB', t.void, (t.GLenum, t.GLdouble, t.GLdouble))
    set_func('glMultiTexCoord2dvARB', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexCoord2fARB', t.void, (t.GLenum, t.GLfloat, t.GLfloat))
    set_func('glMultiTexCoord2fvARB', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexCoord2iARB', t.void, (t.GLenum, t.GLint, t.GLint))
    set_func('glMultiTexCoord2ivARB', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexCoord2sARB', t.void, (t.GLenum, t.GLshort, t.GLshort))
    set_func('glMultiTexCoord2svARB', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glMultiTexCoord3dARB', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMultiTexCoord3dvARB', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexCoord3fARB', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glMultiTexCoord3fvARB', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexCoord3iARB', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint))
    set_func('glMultiTexCoord3ivARB', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexCoord3sARB', t.void, (t.GLenum, t.GLshort, t.GLshort, t.GLshort))
    set_func('glMultiTexCoord3svARB', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glMultiTexCoord4dARB', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMultiTexCoord4dvARB', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexCoord4fARB', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glMultiTexCoord4fvARB', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexCoord4iARB', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glMultiTexCoord4ivARB', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexCoord4sARB', t.void, (t.GLenum, t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glMultiTexCoord4svARB', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_enum("GL_TEXTURE0_ARB", 0x84C0)
    set_enum("GL_TEXTURE1_ARB", 0x84C1)
    set_enum("GL_TEXTURE2_ARB", 0x84C2)
    set_enum("GL_TEXTURE3_ARB", 0x84C3)
    set_enum("GL_TEXTURE4_ARB", 0x84C4)
    set_enum("GL_TEXTURE5_ARB", 0x84C5)
    set_enum("GL_TEXTURE6_ARB", 0x84C6)
    set_enum("GL_TEXTURE7_ARB", 0x84C7)
    set_enum("GL_TEXTURE8_ARB", 0x84C8)
    set_enum("GL_TEXTURE9_ARB", 0x84C9)
    set_enum("GL_TEXTURE10_ARB", 0x84CA)
    set_enum("GL_TEXTURE11_ARB", 0x84CB)
    set_enum("GL_TEXTURE12_ARB", 0x84CC)
    set_enum("GL_TEXTURE13_ARB", 0x84CD)
    set_enum("GL_TEXTURE14_ARB", 0x84CE)
    set_enum("GL_TEXTURE15_ARB", 0x84CF)
    set_enum("GL_TEXTURE16_ARB", 0x84D0)
    set_enum("GL_TEXTURE17_ARB", 0x84D1)
    set_enum("GL_TEXTURE18_ARB", 0x84D2)
    set_enum("GL_TEXTURE19_ARB", 0x84D3)
    set_enum("GL_TEXTURE20_ARB", 0x84D4)
    set_enum("GL_TEXTURE21_ARB", 0x84D5)
    set_enum("GL_TEXTURE22_ARB", 0x84D6)
    set_enum("GL_TEXTURE23_ARB", 0x84D7)
    set_enum("GL_TEXTURE24_ARB", 0x84D8)
    set_enum("GL_TEXTURE25_ARB", 0x84D9)
    set_enum("GL_TEXTURE26_ARB", 0x84DA)
    set_enum("GL_TEXTURE27_ARB", 0x84DB)
    set_enum("GL_TEXTURE28_ARB", 0x84DC)
    set_enum("GL_TEXTURE29_ARB", 0x84DD)
    set_enum("GL_TEXTURE30_ARB", 0x84DE)
    set_enum("GL_TEXTURE31_ARB", 0x84DF)
    set_enum("GL_ACTIVE_TEXTURE_ARB", 0x84E0)
    set_enum("GL_CLIENT_ACTIVE_TEXTURE_ARB", 0x84E1)
    set_enum("GL_MAX_TEXTURE_UNITS_ARB", 0x84E2)


#### GL_ARB_OCCLUSION_QUERY ####
def init_gl_arb_occlusion_query():
    set_func('glGenQueriesARB', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteQueriesARB', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsQueryARB', t.GLboolean, (t.GLuint,))
    set_func('glBeginQueryARB', t.void, (t.GLenum, t.GLuint))
    set_func('glEndQueryARB', t.void, (t.GLenum,))
    set_func('glGetQueryivARB', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetQueryObjectivARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetQueryObjectuivARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_enum("GL_QUERY_COUNTER_BITS_ARB", 0x8864)
    set_enum("GL_CURRENT_QUERY_ARB", 0x8865)
    set_enum("GL_QUERY_RESULT_ARB", 0x8866)
    set_enum("GL_QUERY_RESULT_AVAILABLE_ARB", 0x8867)
    set_enum("GL_SAMPLES_PASSED_ARB", 0x8914)


#### GL_ARB_OCCLUSION_QUERY2 ####
def init_gl_arb_occlusion_query2():
    set_enum("GL_ANY_SAMPLES_PASSED", 0x8C2F)


#### GL_ARB_PARALLEL_SHADER_COMPILE ####
def init_gl_arb_parallel_shader_compile():
    set_func('glMaxShaderCompilerThreadsARB', t.void, (t.GLuint,))
    set_enum("GL_MAX_SHADER_COMPILER_THREADS_ARB", 0x91B0)
    set_enum("GL_COMPLETION_STATUS_ARB", 0x91B1)


#### GL_ARB_PIPELINE_STATISTICS_QUERY ####
def init_gl_arb_pipeline_statistics_query():
    set_enum("GL_VERTICES_SUBMITTED_ARB", 0x82EE)
    set_enum("GL_PRIMITIVES_SUBMITTED_ARB", 0x82EF)
    set_enum("GL_VERTEX_SHADER_INVOCATIONS_ARB", 0x82F0)
    set_enum("GL_TESS_CONTROL_SHADER_PATCHES_ARB", 0x82F1)
    set_enum("GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB", 0x82F2)
    set_enum("GL_GEOMETRY_SHADER_INVOCATIONS", 0x887F)
    set_enum("GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB", 0x82F3)
    set_enum("GL_FRAGMENT_SHADER_INVOCATIONS_ARB", 0x82F4)
    set_enum("GL_COMPUTE_SHADER_INVOCATIONS_ARB", 0x82F5)
    set_enum("GL_CLIPPING_INPUT_PRIMITIVES_ARB", 0x82F6)
    set_enum("GL_CLIPPING_OUTPUT_PRIMITIVES_ARB", 0x82F7)


#### GL_ARB_PIXEL_BUFFER_OBJECT ####
def init_gl_arb_pixel_buffer_object():
    set_enum("GL_PIXEL_PACK_BUFFER_ARB", 0x88EB)
    set_enum("GL_PIXEL_UNPACK_BUFFER_ARB", 0x88EC)
    set_enum("GL_PIXEL_PACK_BUFFER_BINDING_ARB", 0x88ED)
    set_enum("GL_PIXEL_UNPACK_BUFFER_BINDING_ARB", 0x88EF)


#### GL_ARB_POINT_PARAMETERS ####
def init_gl_arb_point_parameters():
    set_func('glPointParameterfARB', t.void, (t.GLenum, t.GLfloat))
    set_func('glPointParameterfvARB', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_POINT_SIZE_MIN_ARB", 0x8126)
    set_enum("GL_POINT_SIZE_MAX_ARB", 0x8127)
    set_enum("GL_POINT_FADE_THRESHOLD_SIZE_ARB", 0x8128)
    set_enum("GL_POINT_DISTANCE_ATTENUATION_ARB", 0x8129)


#### GL_ARB_POINT_SPRITE ####
def init_gl_arb_point_sprite():
    set_enum("GL_POINT_SPRITE_ARB", 0x8861)
    set_enum("GL_COORD_REPLACE_ARB", 0x8862)


#### GL_ARB_PROGRAM_INTERFACE_QUERY ####
def init_gl_arb_program_interface_query():
    set_func('glGetProgramInterfaceiv', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramResourceIndex', t.GLuint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceName', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceiv', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint)))
    set_func('glGetProgramResourceLocation', t.GLint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceLocationIndex', t.GLint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_enum("GL_UNIFORM", 0x92E1)
    set_enum("GL_UNIFORM_BLOCK", 0x92E2)
    set_enum("GL_PROGRAM_INPUT", 0x92E3)
    set_enum("GL_PROGRAM_OUTPUT", 0x92E4)
    set_enum("GL_BUFFER_VARIABLE", 0x92E5)
    set_enum("GL_SHADER_STORAGE_BLOCK", 0x92E6)
    set_enum("GL_ATOMIC_COUNTER_BUFFER", 0x92C0)
    set_enum("GL_VERTEX_SUBROUTINE", 0x92E8)
    set_enum("GL_TESS_CONTROL_SUBROUTINE", 0x92E9)
    set_enum("GL_TESS_EVALUATION_SUBROUTINE", 0x92EA)
    set_enum("GL_GEOMETRY_SUBROUTINE", 0x92EB)
    set_enum("GL_FRAGMENT_SUBROUTINE", 0x92EC)
    set_enum("GL_COMPUTE_SUBROUTINE", 0x92ED)
    set_enum("GL_VERTEX_SUBROUTINE_UNIFORM", 0x92EE)
    set_enum("GL_TESS_CONTROL_SUBROUTINE_UNIFORM", 0x92EF)
    set_enum("GL_TESS_EVALUATION_SUBROUTINE_UNIFORM", 0x92F0)
    set_enum("GL_GEOMETRY_SUBROUTINE_UNIFORM", 0x92F1)
    set_enum("GL_FRAGMENT_SUBROUTINE_UNIFORM", 0x92F2)
    set_enum("GL_COMPUTE_SUBROUTINE_UNIFORM", 0x92F3)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYING", 0x92F4)
    set_enum("GL_ACTIVE_RESOURCES", 0x92F5)
    set_enum("GL_MAX_NAME_LENGTH", 0x92F6)
    set_enum("GL_MAX_NUM_ACTIVE_VARIABLES", 0x92F7)
    set_enum("GL_MAX_NUM_COMPATIBLE_SUBROUTINES", 0x92F8)
    set_enum("GL_NAME_LENGTH", 0x92F9)
    set_enum("GL_TYPE", 0x92FA)
    set_enum("GL_ARRAY_SIZE", 0x92FB)
    set_enum("GL_OFFSET", 0x92FC)
    set_enum("GL_BLOCK_INDEX", 0x92FD)
    set_enum("GL_ARRAY_STRIDE", 0x92FE)
    set_enum("GL_MATRIX_STRIDE", 0x92FF)
    set_enum("GL_IS_ROW_MAJOR", 0x9300)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_INDEX", 0x9301)
    set_enum("GL_BUFFER_BINDING", 0x9302)
    set_enum("GL_BUFFER_DATA_SIZE", 0x9303)
    set_enum("GL_NUM_ACTIVE_VARIABLES", 0x9304)
    set_enum("GL_ACTIVE_VARIABLES", 0x9305)
    set_enum("GL_REFERENCED_BY_VERTEX_SHADER", 0x9306)
    set_enum("GL_REFERENCED_BY_TESS_CONTROL_SHADER", 0x9307)
    set_enum("GL_REFERENCED_BY_TESS_EVALUATION_SHADER", 0x9308)
    set_enum("GL_REFERENCED_BY_GEOMETRY_SHADER", 0x9309)
    set_enum("GL_REFERENCED_BY_FRAGMENT_SHADER", 0x930A)
    set_enum("GL_REFERENCED_BY_COMPUTE_SHADER", 0x930B)
    set_enum("GL_TOP_LEVEL_ARRAY_SIZE", 0x930C)
    set_enum("GL_TOP_LEVEL_ARRAY_STRIDE", 0x930D)
    set_enum("GL_LOCATION", 0x930E)
    set_enum("GL_LOCATION_INDEX", 0x930F)
    set_enum("GL_IS_PER_PATCH", 0x92E7)
    set_enum("GL_NUM_COMPATIBLE_SUBROUTINES", 0x8E4A)
    set_enum("GL_COMPATIBLE_SUBROUTINES", 0x8E4B)


#### GL_ARB_PROVOKING_VERTEX ####
def init_gl_arb_provoking_vertex():
    set_func('glProvokingVertex', t.void, (t.GLenum,))
    set_enum("GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION", 0x8E4C)
    set_enum("GL_FIRST_VERTEX_CONVENTION", 0x8E4D)
    set_enum("GL_LAST_VERTEX_CONVENTION", 0x8E4E)
    set_enum("GL_PROVOKING_VERTEX", 0x8E4F)


#### GL_ARB_QUERY_BUFFER_OBJECT ####
def init_gl_arb_query_buffer_object():
    set_enum("GL_QUERY_BUFFER", 0x9192)
    set_enum("GL_QUERY_BUFFER_BARRIER_BIT", 0x00008000)
    set_enum("GL_QUERY_BUFFER_BINDING", 0x9193)
    set_enum("GL_QUERY_RESULT_NO_WAIT", 0x9194)


#### GL_ARB_ROBUSTNESS ####
def init_gl_arb_robustness():
    set_func('glGetGraphicsResetStatusARB', t.GLenum, ())
    set_func('glGetnTexImageARB', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glReadnPixelsARB', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnCompressedTexImageARB', t.void, (t.GLenum, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnUniformfvARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnUniformivARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glGetnUniformuivARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetnUniformdvARB', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glGetnMapdvARB', t.void, (t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glGetnMapfvARB', t.void, (t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnMapivARB', t.void, (t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glGetnPixelMapfvARB', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnPixelMapuivARB', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetnPixelMapusvARB', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLushort)))
    set_func('glGetnPolygonStippleARB', t.void, (t.GLsizei, ct.POINTER(t.GLubyte)))
    set_func('glGetnColorTableARB', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnConvolutionFilterARB', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnSeparableFilterARB', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.void), ct.POINTER(t.void)))
    set_func('glGetnHistogramARB', t.void, (t.GLenum, t.GLboolean, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnMinmaxARB', t.void, (t.GLenum, t.GLboolean, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB", 0x00000004)
    set_enum("GL_LOSE_CONTEXT_ON_RESET_ARB", 0x8252)
    set_enum("GL_GUILTY_CONTEXT_RESET_ARB", 0x8253)
    set_enum("GL_INNOCENT_CONTEXT_RESET_ARB", 0x8254)
    set_enum("GL_UNKNOWN_CONTEXT_RESET_ARB", 0x8255)
    set_enum("GL_RESET_NOTIFICATION_STRATEGY_ARB", 0x8256)
    set_enum("GL_NO_RESET_NOTIFICATION_ARB", 0x8261)


#### GL_ARB_SAMPLE_LOCATIONS ####
def init_gl_arb_sample_locations():
    set_func('glFramebufferSampleLocationsfvARB', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glNamedFramebufferSampleLocationsfvARB', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glEvaluateDepthValuesARB', t.void, ())
    set_enum("GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB", 0x933D)
    set_enum("GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB", 0x933E)
    set_enum("GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB", 0x933F)
    set_enum("GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB", 0x9340)
    set_enum("GL_SAMPLE_LOCATION_ARB", 0x8E50)
    set_enum("GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB", 0x9341)
    set_enum("GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB", 0x9342)
    set_enum("GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB", 0x9343)


#### GL_ARB_SAMPLE_SHADING ####
def init_gl_arb_sample_shading():
    set_func('glMinSampleShadingARB', t.void, (t.GLfloat,))
    set_enum("GL_SAMPLE_SHADING_ARB", 0x8C36)
    set_enum("GL_MIN_SAMPLE_SHADING_VALUE_ARB", 0x8C37)


#### GL_ARB_SAMPLER_OBJECTS ####
def init_gl_arb_sampler_objects():
    set_func('glGenSamplers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteSamplers', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsSampler', t.GLboolean, (t.GLuint,))
    set_func('glBindSampler', t.void, (t.GLuint, t.GLuint))
    set_func('glSamplerParameteri', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glSamplerParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glSamplerParameterf', t.void, (t.GLuint, t.GLenum, t.GLfloat))
    set_func('glSamplerParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glSamplerParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glSamplerParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetSamplerParameteriv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSamplerParameterIiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSamplerParameterfv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetSamplerParameterIuiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_enum("GL_SAMPLER_BINDING", 0x8919)


#### GL_ARB_SEAMLESS_CUBE_MAP ####
def init_gl_arb_seamless_cube_map():
    set_enum("GL_TEXTURE_CUBE_MAP_SEAMLESS", 0x884F)


#### GL_ARB_SEAMLESS_CUBEMAP_PER_TEXTURE ####
def init_gl_arb_seamless_cubemap_per_texture():
    set_enum("GL_TEXTURE_CUBE_MAP_SEAMLESS", 0x884F)


#### GL_ARB_SEPARATE_SHADER_OBJECTS ####
def init_gl_arb_separate_shader_objects():
    set_func('glUseProgramStages', t.void, (t.GLuint, t.GLbitfield, t.GLuint))
    set_func('glActiveShaderProgram', t.void, (t.GLuint, t.GLuint))
    set_func('glCreateShaderProgramv', t.GLuint, (t.GLenum, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar))))
    set_func('glBindProgramPipeline', t.void, (t.GLuint,))
    set_func('glDeleteProgramPipelines', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenProgramPipelines', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsProgramPipeline', t.GLboolean, (t.GLuint,))
    set_func('glGetProgramPipelineiv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glProgramUniform1i', t.void, (t.GLuint, t.GLint, t.GLint))
    set_func('glProgramUniform1iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform1f', t.void, (t.GLuint, t.GLint, t.GLfloat))
    set_func('glProgramUniform1fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform1d', t.void, (t.GLuint, t.GLint, t.GLdouble))
    set_func('glProgramUniform1dv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform1ui', t.void, (t.GLuint, t.GLint, t.GLuint))
    set_func('glProgramUniform1uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform2i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform2iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform2f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform2d', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform2dv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform2ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint))
    set_func('glProgramUniform2uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform3i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform3iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform3f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform3d', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform3dv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform3ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform3uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform4i', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform4iv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform4f', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform4d', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform4dv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform4ui', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform4uiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniformMatrix2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix2x3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x2fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x4fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x3fv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x3dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3x2dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix2x4dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4x2dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3x4dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4x3dv', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glValidateProgramPipeline', t.void, (t.GLuint,))
    set_func('glGetProgramPipelineInfoLog', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_enum("GL_VERTEX_SHADER_BIT", 0x00000001)
    set_enum("GL_FRAGMENT_SHADER_BIT", 0x00000002)
    set_enum("GL_GEOMETRY_SHADER_BIT", 0x00000004)
    set_enum("GL_TESS_CONTROL_SHADER_BIT", 0x00000008)
    set_enum("GL_TESS_EVALUATION_SHADER_BIT", 0x00000010)
    set_enum("GL_ALL_SHADER_BITS", 0xFFFFFFFF)
    set_enum("GL_PROGRAM_SEPARABLE", 0x8258)
    set_enum("GL_ACTIVE_PROGRAM", 0x8259)
    set_enum("GL_PROGRAM_PIPELINE_BINDING", 0x825A)


#### GL_ARB_SHADER_ATOMIC_COUNTERS ####
def init_gl_arb_shader_atomic_counters():
    set_func('glGetActiveAtomicCounterBufferiv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_ATOMIC_COUNTER_BUFFER", 0x92C0)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_BINDING", 0x92C1)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_START", 0x92C2)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_SIZE", 0x92C3)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE", 0x92C4)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS", 0x92C5)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES", 0x92C6)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER", 0x92C7)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER", 0x92C8)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER", 0x92C9)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER", 0x92CA)
    set_enum("GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER", 0x92CB)
    set_enum("GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS", 0x92CC)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS", 0x92CD)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS", 0x92CE)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS", 0x92CF)
    set_enum("GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS", 0x92D0)
    set_enum("GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS", 0x92D1)
    set_enum("GL_MAX_VERTEX_ATOMIC_COUNTERS", 0x92D2)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS", 0x92D3)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS", 0x92D4)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTERS", 0x92D5)
    set_enum("GL_MAX_FRAGMENT_ATOMIC_COUNTERS", 0x92D6)
    set_enum("GL_MAX_COMBINED_ATOMIC_COUNTERS", 0x92D7)
    set_enum("GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE", 0x92D8)
    set_enum("GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS", 0x92DC)
    set_enum("GL_ACTIVE_ATOMIC_COUNTER_BUFFERS", 0x92D9)
    set_enum("GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX", 0x92DA)
    set_enum("GL_UNSIGNED_INT_ATOMIC_COUNTER", 0x92DB)


#### GL_ARB_SHADER_IMAGE_LOAD_STORE ####
def init_gl_arb_shader_image_load_store():
    set_func('glBindImageTexture', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLboolean, t.GLint, t.GLenum, t.GLenum))
    set_func('glMemoryBarrier', t.void, (t.GLbitfield,))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT", 0x00000001)
    set_enum("GL_ELEMENT_ARRAY_BARRIER_BIT", 0x00000002)
    set_enum("GL_UNIFORM_BARRIER_BIT", 0x00000004)
    set_enum("GL_TEXTURE_FETCH_BARRIER_BIT", 0x00000008)
    set_enum("GL_SHADER_IMAGE_ACCESS_BARRIER_BIT", 0x00000020)
    set_enum("GL_COMMAND_BARRIER_BIT", 0x00000040)
    set_enum("GL_PIXEL_BUFFER_BARRIER_BIT", 0x00000080)
    set_enum("GL_TEXTURE_UPDATE_BARRIER_BIT", 0x00000100)
    set_enum("GL_BUFFER_UPDATE_BARRIER_BIT", 0x00000200)
    set_enum("GL_FRAMEBUFFER_BARRIER_BIT", 0x00000400)
    set_enum("GL_TRANSFORM_FEEDBACK_BARRIER_BIT", 0x00000800)
    set_enum("GL_ATOMIC_COUNTER_BARRIER_BIT", 0x00001000)
    set_enum("GL_ALL_BARRIER_BITS", 0xFFFFFFFF)
    set_enum("GL_MAX_IMAGE_UNITS", 0x8F38)
    set_enum("GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS", 0x8F39)
    set_enum("GL_IMAGE_BINDING_NAME", 0x8F3A)
    set_enum("GL_IMAGE_BINDING_LEVEL", 0x8F3B)
    set_enum("GL_IMAGE_BINDING_LAYERED", 0x8F3C)
    set_enum("GL_IMAGE_BINDING_LAYER", 0x8F3D)
    set_enum("GL_IMAGE_BINDING_ACCESS", 0x8F3E)
    set_enum("GL_IMAGE_1D", 0x904C)
    set_enum("GL_IMAGE_2D", 0x904D)
    set_enum("GL_IMAGE_3D", 0x904E)
    set_enum("GL_IMAGE_2D_RECT", 0x904F)
    set_enum("GL_IMAGE_CUBE", 0x9050)
    set_enum("GL_IMAGE_BUFFER", 0x9051)
    set_enum("GL_IMAGE_1D_ARRAY", 0x9052)
    set_enum("GL_IMAGE_2D_ARRAY", 0x9053)
    set_enum("GL_IMAGE_CUBE_MAP_ARRAY", 0x9054)
    set_enum("GL_IMAGE_2D_MULTISAMPLE", 0x9055)
    set_enum("GL_IMAGE_2D_MULTISAMPLE_ARRAY", 0x9056)
    set_enum("GL_INT_IMAGE_1D", 0x9057)
    set_enum("GL_INT_IMAGE_2D", 0x9058)
    set_enum("GL_INT_IMAGE_3D", 0x9059)
    set_enum("GL_INT_IMAGE_2D_RECT", 0x905A)
    set_enum("GL_INT_IMAGE_CUBE", 0x905B)
    set_enum("GL_INT_IMAGE_BUFFER", 0x905C)
    set_enum("GL_INT_IMAGE_1D_ARRAY", 0x905D)
    set_enum("GL_INT_IMAGE_2D_ARRAY", 0x905E)
    set_enum("GL_INT_IMAGE_CUBE_MAP_ARRAY", 0x905F)
    set_enum("GL_INT_IMAGE_2D_MULTISAMPLE", 0x9060)
    set_enum("GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY", 0x9061)
    set_enum("GL_UNSIGNED_INT_IMAGE_1D", 0x9062)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D", 0x9063)
    set_enum("GL_UNSIGNED_INT_IMAGE_3D", 0x9064)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_RECT", 0x9065)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE", 0x9066)
    set_enum("GL_UNSIGNED_INT_IMAGE_BUFFER", 0x9067)
    set_enum("GL_UNSIGNED_INT_IMAGE_1D_ARRAY", 0x9068)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_ARRAY", 0x9069)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY", 0x906A)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE", 0x906B)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY", 0x906C)
    set_enum("GL_MAX_IMAGE_SAMPLES", 0x906D)
    set_enum("GL_IMAGE_BINDING_FORMAT", 0x906E)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_TYPE", 0x90C7)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE", 0x90C8)
    set_enum("GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS", 0x90C9)
    set_enum("GL_MAX_VERTEX_IMAGE_UNIFORMS", 0x90CA)
    set_enum("GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS", 0x90CB)
    set_enum("GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS", 0x90CC)
    set_enum("GL_MAX_GEOMETRY_IMAGE_UNIFORMS", 0x90CD)
    set_enum("GL_MAX_FRAGMENT_IMAGE_UNIFORMS", 0x90CE)
    set_enum("GL_MAX_COMBINED_IMAGE_UNIFORMS", 0x90CF)


#### GL_ARB_SHADER_OBJECTS ####
def init_gl_arb_shader_objects():
    set_func('glDeleteObjectARB', t.void, (t.GLhandleARB,))
    set_func('glGetHandleARB', t.GLhandleARB, (t.GLenum,))
    set_func('glDetachObjectARB', t.void, (t.GLhandleARB, t.GLhandleARB))
    set_func('glCreateShaderObjectARB', t.GLhandleARB, (t.GLenum,))
    set_func('glShaderSourceARB', t.void, (t.GLhandleARB, t.GLsizei, ct.POINTER(ct.POINTER(t.GLcharARB)), ct.POINTER(t.GLint)))
    set_func('glCompileShaderARB', t.void, (t.GLhandleARB,))
    set_func('glCreateProgramObjectARB', t.GLhandleARB, ())
    set_func('glAttachObjectARB', t.void, (t.GLhandleARB, t.GLhandleARB))
    set_func('glLinkProgramARB', t.void, (t.GLhandleARB,))
    set_func('glUseProgramObjectARB', t.void, (t.GLhandleARB,))
    set_func('glValidateProgramARB', t.void, (t.GLhandleARB,))
    set_func('glUniform1fARB', t.void, (t.GLint, t.GLfloat))
    set_func('glUniform2fARB', t.void, (t.GLint, t.GLfloat, t.GLfloat))
    set_func('glUniform3fARB', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glUniform4fARB', t.void, (t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glUniform1iARB', t.void, (t.GLint, t.GLint))
    set_func('glUniform2iARB', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glUniform3iARB', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glUniform4iARB', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glUniform1fvARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform2fvARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform3fvARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform4fvARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glUniform1ivARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform2ivARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform3ivARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniform4ivARB', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glUniformMatrix2fvARB', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3fvARB', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4fvARB', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glGetObjectParameterfvARB', t.void, (t.GLhandleARB, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetObjectParameterivARB', t.void, (t.GLhandleARB, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetInfoLogARB', t.void, (t.GLhandleARB, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLcharARB)))
    set_func('glGetAttachedObjectsARB', t.void, (t.GLhandleARB, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLhandleARB)))
    set_func('glGetUniformLocationARB', t.GLint, (t.GLhandleARB, ct.POINTER(t.GLcharARB)))
    set_func('glGetActiveUniformARB', t.void, (t.GLhandleARB, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint), ct.POINTER(t.GLenum), ct.POINTER(t.GLcharARB)))
    set_func('glGetUniformfvARB', t.void, (t.GLhandleARB, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glGetUniformivARB', t.void, (t.GLhandleARB, t.GLint, ct.POINTER(t.GLint)))
    set_func('glGetShaderSourceARB', t.void, (t.GLhandleARB, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLcharARB)))
    set_enum("GL_PROGRAM_OBJECT_ARB", 0x8B40)
    set_enum("GL_SHADER_OBJECT_ARB", 0x8B48)
    set_enum("GL_OBJECT_TYPE_ARB", 0x8B4E)
    set_enum("GL_OBJECT_SUBTYPE_ARB", 0x8B4F)
    set_enum("GL_FLOAT_VEC2_ARB", 0x8B50)
    set_enum("GL_FLOAT_VEC3_ARB", 0x8B51)
    set_enum("GL_FLOAT_VEC4_ARB", 0x8B52)
    set_enum("GL_INT_VEC2_ARB", 0x8B53)
    set_enum("GL_INT_VEC3_ARB", 0x8B54)
    set_enum("GL_INT_VEC4_ARB", 0x8B55)
    set_enum("GL_BOOL_ARB", 0x8B56)
    set_enum("GL_BOOL_VEC2_ARB", 0x8B57)
    set_enum("GL_BOOL_VEC3_ARB", 0x8B58)
    set_enum("GL_BOOL_VEC4_ARB", 0x8B59)
    set_enum("GL_FLOAT_MAT2_ARB", 0x8B5A)
    set_enum("GL_FLOAT_MAT3_ARB", 0x8B5B)
    set_enum("GL_FLOAT_MAT4_ARB", 0x8B5C)
    set_enum("GL_SAMPLER_1D_ARB", 0x8B5D)
    set_enum("GL_SAMPLER_2D_ARB", 0x8B5E)
    set_enum("GL_SAMPLER_3D_ARB", 0x8B5F)
    set_enum("GL_SAMPLER_CUBE_ARB", 0x8B60)
    set_enum("GL_SAMPLER_1D_SHADOW_ARB", 0x8B61)
    set_enum("GL_SAMPLER_2D_SHADOW_ARB", 0x8B62)
    set_enum("GL_SAMPLER_2D_RECT_ARB", 0x8B63)
    set_enum("GL_SAMPLER_2D_RECT_SHADOW_ARB", 0x8B64)
    set_enum("GL_OBJECT_DELETE_STATUS_ARB", 0x8B80)
    set_enum("GL_OBJECT_COMPILE_STATUS_ARB", 0x8B81)
    set_enum("GL_OBJECT_LINK_STATUS_ARB", 0x8B82)
    set_enum("GL_OBJECT_VALIDATE_STATUS_ARB", 0x8B83)
    set_enum("GL_OBJECT_INFO_LOG_LENGTH_ARB", 0x8B84)
    set_enum("GL_OBJECT_ATTACHED_OBJECTS_ARB", 0x8B85)
    set_enum("GL_OBJECT_ACTIVE_UNIFORMS_ARB", 0x8B86)
    set_enum("GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB", 0x8B87)
    set_enum("GL_OBJECT_SHADER_SOURCE_LENGTH_ARB", 0x8B88)


#### GL_ARB_SHADER_STORAGE_BUFFER_OBJECT ####
def init_gl_arb_shader_storage_buffer_object():
    set_func('glShaderStorageBlockBinding', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_enum("GL_SHADER_STORAGE_BUFFER", 0x90D2)
    set_enum("GL_SHADER_STORAGE_BUFFER_BINDING", 0x90D3)
    set_enum("GL_SHADER_STORAGE_BUFFER_START", 0x90D4)
    set_enum("GL_SHADER_STORAGE_BUFFER_SIZE", 0x90D5)
    set_enum("GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS", 0x90D6)
    set_enum("GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS", 0x90D7)
    set_enum("GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS", 0x90D8)
    set_enum("GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS", 0x90D9)
    set_enum("GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS", 0x90DA)
    set_enum("GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS", 0x90DB)
    set_enum("GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS", 0x90DC)
    set_enum("GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS", 0x90DD)
    set_enum("GL_MAX_SHADER_STORAGE_BLOCK_SIZE", 0x90DE)
    set_enum("GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT", 0x90DF)
    set_enum("GL_SHADER_STORAGE_BARRIER_BIT", 0x00002000)
    set_enum("GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES", 0x8F39)
    set_enum("GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS", 0x8F39)


#### GL_ARB_SHADER_SUBROUTINE ####
def init_gl_arb_shader_subroutine():
    set_func('glGetSubroutineUniformLocation', t.GLint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetSubroutineIndex', t.GLuint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetActiveSubroutineUniformiv', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetActiveSubroutineUniformName', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetActiveSubroutineName', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glUniformSubroutinesuiv', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetUniformSubroutineuiv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glGetProgramStageiv', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_ACTIVE_SUBROUTINES", 0x8DE5)
    set_enum("GL_ACTIVE_SUBROUTINE_UNIFORMS", 0x8DE6)
    set_enum("GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS", 0x8E47)
    set_enum("GL_ACTIVE_SUBROUTINE_MAX_LENGTH", 0x8E48)
    set_enum("GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH", 0x8E49)
    set_enum("GL_MAX_SUBROUTINES", 0x8DE7)
    set_enum("GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS", 0x8DE8)
    set_enum("GL_NUM_COMPATIBLE_SUBROUTINES", 0x8E4A)
    set_enum("GL_COMPATIBLE_SUBROUTINES", 0x8E4B)
    set_enum("GL_UNIFORM_SIZE", 0x8A38)
    set_enum("GL_UNIFORM_NAME_LENGTH", 0x8A39)


#### GL_ARB_SHADING_LANGUAGE_100 ####
def init_gl_arb_shading_language_100():
    set_enum("GL_SHADING_LANGUAGE_VERSION_ARB", 0x8B8C)


#### GL_ARB_SHADING_LANGUAGE_INCLUDE ####
def init_gl_arb_shading_language_include():
    set_func('glNamedStringARB', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLchar), t.GLint, ct.POINTER(t.GLchar)))
    set_func('glDeleteNamedStringARB', t.void, (t.GLint, ct.POINTER(t.GLchar)))
    set_func('glCompileShaderIncludeARB', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), ct.POINTER(t.GLint)))
    set_func('glIsNamedStringARB', t.GLboolean, (t.GLint, ct.POINTER(t.GLchar)))
    set_func('glGetNamedStringARB', t.void, (t.GLint, ct.POINTER(t.GLchar), t.GLsizei, ct.POINTER(t.GLint), ct.POINTER(t.GLchar)))
    set_func('glGetNamedStringivARB', t.void, (t.GLint, ct.POINTER(t.GLchar), t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_SHADER_INCLUDE_ARB", 0x8DAE)
    set_enum("GL_NAMED_STRING_LENGTH_ARB", 0x8DE9)
    set_enum("GL_NAMED_STRING_TYPE_ARB", 0x8DEA)


#### GL_ARB_SHADOW ####
def init_gl_arb_shadow():
    set_enum("GL_TEXTURE_COMPARE_MODE_ARB", 0x884C)
    set_enum("GL_TEXTURE_COMPARE_FUNC_ARB", 0x884D)
    set_enum("GL_COMPARE_R_TO_TEXTURE_ARB", 0x884E)


#### GL_ARB_SHADOW_AMBIENT ####
def init_gl_arb_shadow_ambient():
    set_enum("GL_TEXTURE_COMPARE_FAIL_VALUE_ARB", 0x80BF)


#### GL_ARB_SPARSE_BUFFER ####
def init_gl_arb_sparse_buffer():
    set_func('glBufferPageCommitmentARB', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLboolean))
    set_func('glNamedBufferPageCommitmentEXT', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr, t.GLboolean))
    set_func('glNamedBufferPageCommitmentARB', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr, t.GLboolean))
    set_enum("GL_SPARSE_STORAGE_BIT_ARB", 0x0400)
    set_enum("GL_SPARSE_BUFFER_PAGE_SIZE_ARB", 0x82F8)


#### GL_ARB_SPARSE_TEXTURE ####
def init_gl_arb_sparse_texture():
    set_func('glTexPageCommitmentARB', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_enum("GL_TEXTURE_SPARSE_ARB", 0x91A6)
    set_enum("GL_VIRTUAL_PAGE_SIZE_INDEX_ARB", 0x91A7)
    set_enum("GL_NUM_SPARSE_LEVELS_ARB", 0x91AA)
    set_enum("GL_NUM_VIRTUAL_PAGE_SIZES_ARB", 0x91A8)
    set_enum("GL_VIRTUAL_PAGE_SIZE_X_ARB", 0x9195)
    set_enum("GL_VIRTUAL_PAGE_SIZE_Y_ARB", 0x9196)
    set_enum("GL_VIRTUAL_PAGE_SIZE_Z_ARB", 0x9197)
    set_enum("GL_MAX_SPARSE_TEXTURE_SIZE_ARB", 0x9198)
    set_enum("GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB", 0x9199)
    set_enum("GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB", 0x919A)
    set_enum("GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB", 0x91A9)


#### GL_ARB_STENCIL_TEXTURING ####
def init_gl_arb_stencil_texturing():
    set_enum("GL_DEPTH_STENCIL_TEXTURE_MODE", 0x90EA)


#### GL_ARB_SYNC ####
def init_gl_arb_sync():
    set_func('glFenceSync', t.GLsync, (t.GLenum, t.GLbitfield))
    set_func('glIsSync', t.GLboolean, (t.GLsync,))
    set_func('glDeleteSync', t.void, (t.GLsync,))
    set_func('glClientWaitSync', t.GLenum, (t.GLsync, t.GLbitfield, t.GLuint64))
    set_func('glWaitSync', t.void, (t.GLsync, t.GLbitfield, t.GLuint64))
    set_func('glGetInteger64v', t.void, (t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetSynciv', t.void, (t.GLsync, t.GLenum, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint)))
    set_enum("GL_MAX_SERVER_WAIT_TIMEOUT", 0x9111)
    set_enum("GL_OBJECT_TYPE", 0x9112)
    set_enum("GL_SYNC_CONDITION", 0x9113)
    set_enum("GL_SYNC_STATUS", 0x9114)
    set_enum("GL_SYNC_FLAGS", 0x9115)
    set_enum("GL_SYNC_FENCE", 0x9116)
    set_enum("GL_SYNC_GPU_COMMANDS_COMPLETE", 0x9117)
    set_enum("GL_UNSIGNALED", 0x9118)
    set_enum("GL_SIGNALED", 0x9119)
    set_enum("GL_ALREADY_SIGNALED", 0x911A)
    set_enum("GL_TIMEOUT_EXPIRED", 0x911B)
    set_enum("GL_CONDITION_SATISFIED", 0x911C)
    set_enum("GL_WAIT_FAILED", 0x911D)
    set_enum("GL_SYNC_FLUSH_COMMANDS_BIT", 0x00000001)
    set_enum("GL_TIMEOUT_IGNORED", 0xFFFFFFFFFFFFFFFF)


#### GL_ARB_TESSELLATION_SHADER ####
def init_gl_arb_tessellation_shader():
    set_func('glPatchParameteri', t.void, (t.GLenum, t.GLint))
    set_func('glPatchParameterfv', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_PATCHES", 0x000E)
    set_enum("GL_PATCH_VERTICES", 0x8E72)
    set_enum("GL_PATCH_DEFAULT_INNER_LEVEL", 0x8E73)
    set_enum("GL_PATCH_DEFAULT_OUTER_LEVEL", 0x8E74)
    set_enum("GL_TESS_CONTROL_OUTPUT_VERTICES", 0x8E75)
    set_enum("GL_TESS_GEN_MODE", 0x8E76)
    set_enum("GL_TESS_GEN_SPACING", 0x8E77)
    set_enum("GL_TESS_GEN_VERTEX_ORDER", 0x8E78)
    set_enum("GL_TESS_GEN_POINT_MODE", 0x8E79)
    set_enum("GL_TRIANGLES", 0x0004)
    set_enum("GL_ISOLINES", 0x8E7A)
    set_enum("GL_QUADS", 0x0007)
    set_enum("GL_EQUAL", 0x0202)
    set_enum("GL_FRACTIONAL_ODD", 0x8E7B)
    set_enum("GL_FRACTIONAL_EVEN", 0x8E7C)
    set_enum("GL_CCW", 0x0901)
    set_enum("GL_CW", 0x0900)
    set_enum("GL_MAX_PATCH_VERTICES", 0x8E7D)
    set_enum("GL_MAX_TESS_GEN_LEVEL", 0x8E7E)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS", 0x8E7F)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS", 0x8E80)
    set_enum("GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS", 0x8E81)
    set_enum("GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS", 0x8E82)
    set_enum("GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS", 0x8E83)
    set_enum("GL_MAX_TESS_PATCH_COMPONENTS", 0x8E84)
    set_enum("GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS", 0x8E85)
    set_enum("GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS", 0x8E86)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS", 0x8E89)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS", 0x8E8A)
    set_enum("GL_MAX_TESS_CONTROL_INPUT_COMPONENTS", 0x886C)
    set_enum("GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS", 0x886D)
    set_enum("GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS", 0x8E1E)
    set_enum("GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS", 0x8E1F)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER", 0x84F0)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER", 0x84F1)
    set_enum("GL_TESS_EVALUATION_SHADER", 0x8E87)
    set_enum("GL_TESS_CONTROL_SHADER", 0x8E88)


#### GL_ARB_TEXTURE_BARRIER ####
def init_gl_arb_texture_barrier():
    set_func('glTextureBarrier', t.void, ())


#### GL_ARB_TEXTURE_BORDER_CLAMP ####
def init_gl_arb_texture_border_clamp():
    set_enum("GL_CLAMP_TO_BORDER_ARB", 0x812D)


#### GL_ARB_TEXTURE_BUFFER_OBJECT ####
def init_gl_arb_texture_buffer_object():
    set_func('glTexBufferARB', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_enum("GL_TEXTURE_BUFFER_ARB", 0x8C2A)
    set_enum("GL_MAX_TEXTURE_BUFFER_SIZE_ARB", 0x8C2B)
    set_enum("GL_TEXTURE_BINDING_BUFFER_ARB", 0x8C2C)
    set_enum("GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB", 0x8C2D)
    set_enum("GL_TEXTURE_BUFFER_FORMAT_ARB", 0x8C2E)


#### GL_ARB_TEXTURE_BUFFER_OBJECT_RGB32 ####
def init_gl_arb_texture_buffer_object_rgb32():
    set_enum("GL_RGB32F", 0x8815)
    set_enum("GL_RGB32UI", 0x8D71)
    set_enum("GL_RGB32I", 0x8D83)


#### GL_ARB_TEXTURE_BUFFER_RANGE ####
def init_gl_arb_texture_buffer_range():
    set_func('glTexBufferRange', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_enum("GL_TEXTURE_BUFFER_OFFSET", 0x919D)
    set_enum("GL_TEXTURE_BUFFER_SIZE", 0x919E)
    set_enum("GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT", 0x919F)


#### GL_ARB_TEXTURE_COMPRESSION ####
def init_gl_arb_texture_compression():
    set_func('glCompressedTexImage3DARB', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexImage2DARB', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexImage1DARB', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage3DARB', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage2DARB', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage1DARB', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetCompressedTexImageARB', t.void, (t.GLenum, t.GLint, ct.POINTER(t.void)))
    set_enum("GL_COMPRESSED_ALPHA_ARB", 0x84E9)
    set_enum("GL_COMPRESSED_LUMINANCE_ARB", 0x84EA)
    set_enum("GL_COMPRESSED_LUMINANCE_ALPHA_ARB", 0x84EB)
    set_enum("GL_COMPRESSED_INTENSITY_ARB", 0x84EC)
    set_enum("GL_COMPRESSED_RGB_ARB", 0x84ED)
    set_enum("GL_COMPRESSED_RGBA_ARB", 0x84EE)
    set_enum("GL_TEXTURE_COMPRESSION_HINT_ARB", 0x84EF)
    set_enum("GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB", 0x86A0)
    set_enum("GL_TEXTURE_COMPRESSED_ARB", 0x86A1)
    set_enum("GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB", 0x86A2)
    set_enum("GL_COMPRESSED_TEXTURE_FORMATS_ARB", 0x86A3)


#### GL_ARB_TEXTURE_COMPRESSION_BPTC ####
def init_gl_arb_texture_compression_bptc():
    set_enum("GL_COMPRESSED_RGBA_BPTC_UNORM_ARB", 0x8E8C)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB", 0x8E8D)
    set_enum("GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB", 0x8E8E)
    set_enum("GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB", 0x8E8F)


#### GL_ARB_TEXTURE_COMPRESSION_RGTC ####
def init_gl_arb_texture_compression_rgtc():
    set_enum("GL_COMPRESSED_RED_RGTC1", 0x8DBB)
    set_enum("GL_COMPRESSED_SIGNED_RED_RGTC1", 0x8DBC)
    set_enum("GL_COMPRESSED_RG_RGTC2", 0x8DBD)
    set_enum("GL_COMPRESSED_SIGNED_RG_RGTC2", 0x8DBE)


#### GL_ARB_TEXTURE_CUBE_MAP ####
def init_gl_arb_texture_cube_map():
    set_enum("GL_NORMAL_MAP_ARB", 0x8511)
    set_enum("GL_REFLECTION_MAP_ARB", 0x8512)
    set_enum("GL_TEXTURE_CUBE_MAP_ARB", 0x8513)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_ARB", 0x8514)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB", 0x8515)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB", 0x8516)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB", 0x8517)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB", 0x8518)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB", 0x8519)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB", 0x851A)
    set_enum("GL_PROXY_TEXTURE_CUBE_MAP_ARB", 0x851B)
    set_enum("GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB", 0x851C)


#### GL_ARB_TEXTURE_CUBE_MAP_ARRAY ####
def init_gl_arb_texture_cube_map_array():
    set_enum("GL_TEXTURE_CUBE_MAP_ARRAY_ARB", 0x9009)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB", 0x900A)
    set_enum("GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB", 0x900B)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY_ARB", 0x900C)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB", 0x900D)
    set_enum("GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB", 0x900E)
    set_enum("GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB", 0x900F)


#### GL_ARB_TEXTURE_ENV_COMBINE ####
def init_gl_arb_texture_env_combine():
    set_enum("GL_COMBINE_ARB", 0x8570)
    set_enum("GL_COMBINE_RGB_ARB", 0x8571)
    set_enum("GL_COMBINE_ALPHA_ARB", 0x8572)
    set_enum("GL_SOURCE0_RGB_ARB", 0x8580)
    set_enum("GL_SOURCE1_RGB_ARB", 0x8581)
    set_enum("GL_SOURCE2_RGB_ARB", 0x8582)
    set_enum("GL_SOURCE0_ALPHA_ARB", 0x8588)
    set_enum("GL_SOURCE1_ALPHA_ARB", 0x8589)
    set_enum("GL_SOURCE2_ALPHA_ARB", 0x858A)
    set_enum("GL_OPERAND0_RGB_ARB", 0x8590)
    set_enum("GL_OPERAND1_RGB_ARB", 0x8591)
    set_enum("GL_OPERAND2_RGB_ARB", 0x8592)
    set_enum("GL_OPERAND0_ALPHA_ARB", 0x8598)
    set_enum("GL_OPERAND1_ALPHA_ARB", 0x8599)
    set_enum("GL_OPERAND2_ALPHA_ARB", 0x859A)
    set_enum("GL_RGB_SCALE_ARB", 0x8573)
    set_enum("GL_ADD_SIGNED_ARB", 0x8574)
    set_enum("GL_INTERPOLATE_ARB", 0x8575)
    set_enum("GL_SUBTRACT_ARB", 0x84E7)
    set_enum("GL_CONSTANT_ARB", 0x8576)
    set_enum("GL_PRIMARY_COLOR_ARB", 0x8577)
    set_enum("GL_PREVIOUS_ARB", 0x8578)


#### GL_ARB_TEXTURE_ENV_DOT3 ####
def init_gl_arb_texture_env_dot3():
    set_enum("GL_DOT3_RGB_ARB", 0x86AE)
    set_enum("GL_DOT3_RGBA_ARB", 0x86AF)


#### GL_ARB_TEXTURE_FILTER_MINMAX ####
def init_gl_arb_texture_filter_minmax():
    set_enum("GL_TEXTURE_REDUCTION_MODE_ARB", 0x9366)
    set_enum("GL_WEIGHTED_AVERAGE_ARB", 0x9367)


#### GL_ARB_TEXTURE_FLOAT ####
def init_gl_arb_texture_float():
    set_enum("GL_TEXTURE_RED_TYPE_ARB", 0x8C10)
    set_enum("GL_TEXTURE_GREEN_TYPE_ARB", 0x8C11)
    set_enum("GL_TEXTURE_BLUE_TYPE_ARB", 0x8C12)
    set_enum("GL_TEXTURE_ALPHA_TYPE_ARB", 0x8C13)
    set_enum("GL_TEXTURE_LUMINANCE_TYPE_ARB", 0x8C14)
    set_enum("GL_TEXTURE_INTENSITY_TYPE_ARB", 0x8C15)
    set_enum("GL_TEXTURE_DEPTH_TYPE_ARB", 0x8C16)
    set_enum("GL_UNSIGNED_NORMALIZED_ARB", 0x8C17)
    set_enum("GL_RGBA32F_ARB", 0x8814)
    set_enum("GL_RGB32F_ARB", 0x8815)
    set_enum("GL_ALPHA32F_ARB", 0x8816)
    set_enum("GL_INTENSITY32F_ARB", 0x8817)
    set_enum("GL_LUMINANCE32F_ARB", 0x8818)
    set_enum("GL_LUMINANCE_ALPHA32F_ARB", 0x8819)
    set_enum("GL_RGBA16F_ARB", 0x881A)
    set_enum("GL_RGB16F_ARB", 0x881B)
    set_enum("GL_ALPHA16F_ARB", 0x881C)
    set_enum("GL_INTENSITY16F_ARB", 0x881D)
    set_enum("GL_LUMINANCE16F_ARB", 0x881E)
    set_enum("GL_LUMINANCE_ALPHA16F_ARB", 0x881F)


#### GL_ARB_TEXTURE_GATHER ####
def init_gl_arb_texture_gather():
    set_enum("GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB", 0x8E5E)
    set_enum("GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB", 0x8E5F)
    set_enum("GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB", 0x8F9F)


#### GL_ARB_TEXTURE_MIRROR_CLAMP_TO_EDGE ####
def init_gl_arb_texture_mirror_clamp_to_edge():
    set_enum("GL_MIRROR_CLAMP_TO_EDGE", 0x8743)


#### GL_ARB_TEXTURE_MIRRORED_REPEAT ####
def init_gl_arb_texture_mirrored_repeat():
    set_enum("GL_MIRRORED_REPEAT_ARB", 0x8370)


#### GL_ARB_TEXTURE_MULTISAMPLE ####
def init_gl_arb_texture_multisample():
    set_func('glTexImage2DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTexImage3DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glGetMultisamplefv', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glSampleMaski', t.void, (t.GLuint, t.GLbitfield))
    set_enum("GL_SAMPLE_POSITION", 0x8E50)
    set_enum("GL_SAMPLE_MASK", 0x8E51)
    set_enum("GL_SAMPLE_MASK_VALUE", 0x8E52)
    set_enum("GL_MAX_SAMPLE_MASK_WORDS", 0x8E59)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE", 0x9100)
    set_enum("GL_PROXY_TEXTURE_2D_MULTISAMPLE", 0x9101)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE_ARRAY", 0x9102)
    set_enum("GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY", 0x9103)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE", 0x9104)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY", 0x9105)
    set_enum("GL_TEXTURE_SAMPLES", 0x9106)
    set_enum("GL_TEXTURE_FIXED_SAMPLE_LOCATIONS", 0x9107)
    set_enum("GL_SAMPLER_2D_MULTISAMPLE", 0x9108)
    set_enum("GL_INT_SAMPLER_2D_MULTISAMPLE", 0x9109)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE", 0x910A)
    set_enum("GL_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910B)
    set_enum("GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910C)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY", 0x910D)
    set_enum("GL_MAX_COLOR_TEXTURE_SAMPLES", 0x910E)
    set_enum("GL_MAX_DEPTH_TEXTURE_SAMPLES", 0x910F)
    set_enum("GL_MAX_INTEGER_SAMPLES", 0x9110)


#### GL_ARB_TEXTURE_RECTANGLE ####
def init_gl_arb_texture_rectangle():
    set_enum("GL_TEXTURE_RECTANGLE_ARB", 0x84F5)
    set_enum("GL_TEXTURE_BINDING_RECTANGLE_ARB", 0x84F6)
    set_enum("GL_PROXY_TEXTURE_RECTANGLE_ARB", 0x84F7)
    set_enum("GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB", 0x84F8)


#### GL_ARB_TEXTURE_RG ####
def init_gl_arb_texture_rg():
    set_enum("GL_RG", 0x8227)
    set_enum("GL_RG_INTEGER", 0x8228)
    set_enum("GL_R8", 0x8229)
    set_enum("GL_R16", 0x822A)
    set_enum("GL_RG8", 0x822B)
    set_enum("GL_RG16", 0x822C)
    set_enum("GL_R16F", 0x822D)
    set_enum("GL_R32F", 0x822E)
    set_enum("GL_RG16F", 0x822F)
    set_enum("GL_RG32F", 0x8230)
    set_enum("GL_R8I", 0x8231)
    set_enum("GL_R8UI", 0x8232)
    set_enum("GL_R16I", 0x8233)
    set_enum("GL_R16UI", 0x8234)
    set_enum("GL_R32I", 0x8235)
    set_enum("GL_R32UI", 0x8236)
    set_enum("GL_RG8I", 0x8237)
    set_enum("GL_RG8UI", 0x8238)
    set_enum("GL_RG16I", 0x8239)
    set_enum("GL_RG16UI", 0x823A)
    set_enum("GL_RG32I", 0x823B)
    set_enum("GL_RG32UI", 0x823C)


#### GL_ARB_TEXTURE_RGB10_A2UI ####
def init_gl_arb_texture_rgb10_a2ui():
    set_enum("GL_RGB10_A2UI", 0x906F)


#### GL_ARB_TEXTURE_STENCIL8 ####
def init_gl_arb_texture_stencil8():
    set_enum("GL_STENCIL_INDEX", 0x1901)
    set_enum("GL_STENCIL_INDEX8", 0x8D48)


#### GL_ARB_TEXTURE_STORAGE ####
def init_gl_arb_texture_storage():
    set_func('glTexStorage1D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei))
    set_func('glTexStorage2D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTexStorage3D', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei))
    set_enum("GL_TEXTURE_IMMUTABLE_FORMAT", 0x912F)


#### GL_ARB_TEXTURE_STORAGE_MULTISAMPLE ####
def init_gl_arb_texture_storage_multisample():
    set_func('glTexStorage2DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTexStorage3DMultisample', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))


#### GL_ARB_TEXTURE_SWIZZLE ####
def init_gl_arb_texture_swizzle():
    set_enum("GL_TEXTURE_SWIZZLE_R", 0x8E42)
    set_enum("GL_TEXTURE_SWIZZLE_G", 0x8E43)
    set_enum("GL_TEXTURE_SWIZZLE_B", 0x8E44)
    set_enum("GL_TEXTURE_SWIZZLE_A", 0x8E45)
    set_enum("GL_TEXTURE_SWIZZLE_RGBA", 0x8E46)


#### GL_ARB_TEXTURE_VIEW ####
def init_gl_arb_texture_view():
    set_func('glTextureView', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_enum("GL_TEXTURE_VIEW_MIN_LEVEL", 0x82DB)
    set_enum("GL_TEXTURE_VIEW_NUM_LEVELS", 0x82DC)
    set_enum("GL_TEXTURE_VIEW_MIN_LAYER", 0x82DD)
    set_enum("GL_TEXTURE_VIEW_NUM_LAYERS", 0x82DE)
    set_enum("GL_TEXTURE_IMMUTABLE_LEVELS", 0x82DF)


#### GL_ARB_TIMER_QUERY ####
def init_gl_arb_timer_query():
    set_func('glQueryCounter', t.void, (t.GLuint, t.GLenum))
    set_func('glGetQueryObjecti64v', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetQueryObjectui64v', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint64)))
    set_enum("GL_TIME_ELAPSED", 0x88BF)
    set_enum("GL_TIMESTAMP", 0x8E28)


#### GL_ARB_TRANSFORM_FEEDBACK2 ####
def init_gl_arb_transform_feedback2():
    set_func('glBindTransformFeedback', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteTransformFeedbacks', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTransformFeedbacks', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsTransformFeedback', t.GLboolean, (t.GLuint,))
    set_func('glPauseTransformFeedback', t.void, ())
    set_func('glResumeTransformFeedback', t.void, ())
    set_func('glDrawTransformFeedback', t.void, (t.GLenum, t.GLuint))
    set_enum("GL_TRANSFORM_FEEDBACK", 0x8E22)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED", 0x8E23)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE", 0x8E24)
    set_enum("GL_TRANSFORM_FEEDBACK_BINDING", 0x8E25)


#### GL_ARB_TRANSFORM_FEEDBACK3 ####
def init_gl_arb_transform_feedback3():
    set_func('glDrawTransformFeedbackStream', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glBeginQueryIndexed', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glEndQueryIndexed', t.void, (t.GLenum, t.GLuint))
    set_func('glGetQueryIndexediv', t.void, (t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_BUFFERS", 0x8E70)
    set_enum("GL_MAX_VERTEX_STREAMS", 0x8E71)


#### GL_ARB_TRANSFORM_FEEDBACK_INSTANCED ####
def init_gl_arb_transform_feedback_instanced():
    set_func('glDrawTransformFeedbackInstanced', t.void, (t.GLenum, t.GLuint, t.GLsizei))
    set_func('glDrawTransformFeedbackStreamInstanced', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei))


#### GL_ARB_TRANSFORM_FEEDBACK_OVERFLOW_QUERY ####
def init_gl_arb_transform_feedback_overflow_query():
    set_enum("GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB", 0x82EC)
    set_enum("GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB", 0x82ED)


#### GL_ARB_TRANSPOSE_MATRIX ####
def init_gl_arb_transpose_matrix():
    set_func('glLoadTransposeMatrixfARB', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glLoadTransposeMatrixdARB', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glMultTransposeMatrixfARB', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glMultTransposeMatrixdARB', t.void, (ct.POINTER(t.GLdouble),))
    set_enum("GL_TRANSPOSE_MODELVIEW_MATRIX_ARB", 0x84E3)
    set_enum("GL_TRANSPOSE_PROJECTION_MATRIX_ARB", 0x84E4)
    set_enum("GL_TRANSPOSE_TEXTURE_MATRIX_ARB", 0x84E5)
    set_enum("GL_TRANSPOSE_COLOR_MATRIX_ARB", 0x84E6)


#### GL_ARB_UNIFORM_BUFFER_OBJECT ####
def init_gl_arb_uniform_buffer_object():
    set_func('glGetUniformIndices', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), ct.POINTER(t.GLuint)))
    set_func('glGetActiveUniformsiv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetActiveUniformName', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetUniformBlockIndex', t.GLuint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetActiveUniformBlockiv', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetActiveUniformBlockName', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glUniformBlockBinding', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glBindBufferRange', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glBindBufferBase', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glGetIntegeri_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_enum("GL_UNIFORM_BUFFER", 0x8A11)
    set_enum("GL_UNIFORM_BUFFER_BINDING", 0x8A28)
    set_enum("GL_UNIFORM_BUFFER_START", 0x8A29)
    set_enum("GL_UNIFORM_BUFFER_SIZE", 0x8A2A)
    set_enum("GL_MAX_VERTEX_UNIFORM_BLOCKS", 0x8A2B)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_BLOCKS", 0x8A2C)
    set_enum("GL_MAX_FRAGMENT_UNIFORM_BLOCKS", 0x8A2D)
    set_enum("GL_MAX_COMBINED_UNIFORM_BLOCKS", 0x8A2E)
    set_enum("GL_MAX_UNIFORM_BUFFER_BINDINGS", 0x8A2F)
    set_enum("GL_MAX_UNIFORM_BLOCK_SIZE", 0x8A30)
    set_enum("GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS", 0x8A31)
    set_enum("GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS", 0x8A32)
    set_enum("GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS", 0x8A33)
    set_enum("GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT", 0x8A34)
    set_enum("GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH", 0x8A35)
    set_enum("GL_ACTIVE_UNIFORM_BLOCKS", 0x8A36)
    set_enum("GL_UNIFORM_TYPE", 0x8A37)
    set_enum("GL_UNIFORM_SIZE", 0x8A38)
    set_enum("GL_UNIFORM_NAME_LENGTH", 0x8A39)
    set_enum("GL_UNIFORM_BLOCK_INDEX", 0x8A3A)
    set_enum("GL_UNIFORM_OFFSET", 0x8A3B)
    set_enum("GL_UNIFORM_ARRAY_STRIDE", 0x8A3C)
    set_enum("GL_UNIFORM_MATRIX_STRIDE", 0x8A3D)
    set_enum("GL_UNIFORM_IS_ROW_MAJOR", 0x8A3E)
    set_enum("GL_UNIFORM_BLOCK_BINDING", 0x8A3F)
    set_enum("GL_UNIFORM_BLOCK_DATA_SIZE", 0x8A40)
    set_enum("GL_UNIFORM_BLOCK_NAME_LENGTH", 0x8A41)
    set_enum("GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS", 0x8A42)
    set_enum("GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES", 0x8A43)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER", 0x8A44)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER", 0x8A45)
    set_enum("GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER", 0x8A46)
    set_enum("GL_INVALID_INDEX", 0xFFFFFFFF)


#### GL_ARB_VERTEX_ARRAY_BGRA ####
def init_gl_arb_vertex_array_bgra():
    set_enum("GL_BGRA", 0x80E1)


#### GL_ARB_VERTEX_ARRAY_OBJECT ####
def init_gl_arb_vertex_array_object():
    set_func('glBindVertexArray', t.void, (t.GLuint,))
    set_func('glDeleteVertexArrays', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenVertexArrays', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsVertexArray', t.GLboolean, (t.GLuint,))
    set_enum("GL_VERTEX_ARRAY_BINDING", 0x85B5)


#### GL_ARB_VERTEX_ATTRIB_64BIT ####
def init_gl_arb_vertex_attrib_64bit():
    set_func('glVertexAttribL1d', t.void, (t.GLuint, t.GLdouble))
    set_func('glVertexAttribL2d', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL3d', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL4d', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL1dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL2dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL3dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL4dv', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribLPointer', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetVertexAttribLdv', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_enum("GL_RGB32I", 0x8D83)
    set_enum("GL_DOUBLE_VEC2", 0x8FFC)
    set_enum("GL_DOUBLE_VEC3", 0x8FFD)
    set_enum("GL_DOUBLE_VEC4", 0x8FFE)
    set_enum("GL_DOUBLE_MAT2", 0x8F46)
    set_enum("GL_DOUBLE_MAT3", 0x8F47)
    set_enum("GL_DOUBLE_MAT4", 0x8F48)
    set_enum("GL_DOUBLE_MAT2x3", 0x8F49)
    set_enum("GL_DOUBLE_MAT2x4", 0x8F4A)
    set_enum("GL_DOUBLE_MAT3x2", 0x8F4B)
    set_enum("GL_DOUBLE_MAT3x4", 0x8F4C)
    set_enum("GL_DOUBLE_MAT4x2", 0x8F4D)
    set_enum("GL_DOUBLE_MAT4x3", 0x8F4E)


#### GL_ARB_VERTEX_ATTRIB_BINDING ####
def init_gl_arb_vertex_attrib_binding():
    set_func('glBindVertexBuffer', t.void, (t.GLuint, t.GLuint, t.GLintptr, t.GLsizei))
    set_func('glVertexAttribFormat', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribIFormat', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexAttribLFormat', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexAttribBinding', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexBindingDivisor', t.void, (t.GLuint, t.GLuint))
    set_enum("GL_VERTEX_ATTRIB_BINDING", 0x82D4)
    set_enum("GL_VERTEX_ATTRIB_RELATIVE_OFFSET", 0x82D5)
    set_enum("GL_VERTEX_BINDING_DIVISOR", 0x82D6)
    set_enum("GL_VERTEX_BINDING_OFFSET", 0x82D7)
    set_enum("GL_VERTEX_BINDING_STRIDE", 0x82D8)
    set_enum("GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET", 0x82D9)
    set_enum("GL_MAX_VERTEX_ATTRIB_BINDINGS", 0x82DA)


#### GL_ARB_VERTEX_BLEND ####
def init_gl_arb_vertex_blend():
    set_func('glWeightbvARB', t.void, (t.GLint, ct.POINTER(t.GLbyte)))
    set_func('glWeightsvARB', t.void, (t.GLint, ct.POINTER(t.GLshort)))
    set_func('glWeightivARB', t.void, (t.GLint, ct.POINTER(t.GLint)))
    set_func('glWeightfvARB', t.void, (t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glWeightdvARB', t.void, (t.GLint, ct.POINTER(t.GLdouble)))
    set_func('glWeightubvARB', t.void, (t.GLint, ct.POINTER(t.GLubyte)))
    set_func('glWeightusvARB', t.void, (t.GLint, ct.POINTER(t.GLushort)))
    set_func('glWeightuivARB', t.void, (t.GLint, ct.POINTER(t.GLuint)))
    set_func('glWeightPointerARB', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glVertexBlendARB', t.void, (t.GLint,))
    set_enum("GL_MAX_VERTEX_UNITS_ARB", 0x86A4)
    set_enum("GL_ACTIVE_VERTEX_UNITS_ARB", 0x86A5)
    set_enum("GL_WEIGHT_SUM_UNITY_ARB", 0x86A6)
    set_enum("GL_VERTEX_BLEND_ARB", 0x86A7)
    set_enum("GL_CURRENT_WEIGHT_ARB", 0x86A8)
    set_enum("GL_WEIGHT_ARRAY_TYPE_ARB", 0x86A9)
    set_enum("GL_WEIGHT_ARRAY_STRIDE_ARB", 0x86AA)
    set_enum("GL_WEIGHT_ARRAY_SIZE_ARB", 0x86AB)
    set_enum("GL_WEIGHT_ARRAY_POINTER_ARB", 0x86AC)
    set_enum("GL_WEIGHT_ARRAY_ARB", 0x86AD)
    set_enum("GL_MODELVIEW0_ARB", 0x1700)
    set_enum("GL_MODELVIEW1_ARB", 0x850A)
    set_enum("GL_MODELVIEW2_ARB", 0x8722)
    set_enum("GL_MODELVIEW3_ARB", 0x8723)
    set_enum("GL_MODELVIEW4_ARB", 0x8724)
    set_enum("GL_MODELVIEW5_ARB", 0x8725)
    set_enum("GL_MODELVIEW6_ARB", 0x8726)
    set_enum("GL_MODELVIEW7_ARB", 0x8727)
    set_enum("GL_MODELVIEW8_ARB", 0x8728)
    set_enum("GL_MODELVIEW9_ARB", 0x8729)
    set_enum("GL_MODELVIEW10_ARB", 0x872A)
    set_enum("GL_MODELVIEW11_ARB", 0x872B)
    set_enum("GL_MODELVIEW12_ARB", 0x872C)
    set_enum("GL_MODELVIEW13_ARB", 0x872D)
    set_enum("GL_MODELVIEW14_ARB", 0x872E)
    set_enum("GL_MODELVIEW15_ARB", 0x872F)
    set_enum("GL_MODELVIEW16_ARB", 0x8730)
    set_enum("GL_MODELVIEW17_ARB", 0x8731)
    set_enum("GL_MODELVIEW18_ARB", 0x8732)
    set_enum("GL_MODELVIEW19_ARB", 0x8733)
    set_enum("GL_MODELVIEW20_ARB", 0x8734)
    set_enum("GL_MODELVIEW21_ARB", 0x8735)
    set_enum("GL_MODELVIEW22_ARB", 0x8736)
    set_enum("GL_MODELVIEW23_ARB", 0x8737)
    set_enum("GL_MODELVIEW24_ARB", 0x8738)
    set_enum("GL_MODELVIEW25_ARB", 0x8739)
    set_enum("GL_MODELVIEW26_ARB", 0x873A)
    set_enum("GL_MODELVIEW27_ARB", 0x873B)
    set_enum("GL_MODELVIEW28_ARB", 0x873C)
    set_enum("GL_MODELVIEW29_ARB", 0x873D)
    set_enum("GL_MODELVIEW30_ARB", 0x873E)
    set_enum("GL_MODELVIEW31_ARB", 0x873F)


#### GL_ARB_VERTEX_BUFFER_OBJECT ####
def init_gl_arb_vertex_buffer_object():
    set_func('glBindBufferARB', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteBuffersARB', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenBuffersARB', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsBufferARB', t.GLboolean, (t.GLuint,))
    set_func('glBufferDataARB', t.void, (t.GLenum, t.GLsizeiptrARB, ct.POINTER(t.void), t.GLenum))
    set_func('glBufferSubDataARB', t.void, (t.GLenum, t.GLintptrARB, t.GLsizeiptrARB, ct.POINTER(t.void)))
    set_func('glGetBufferSubDataARB', t.void, (t.GLenum, t.GLintptrARB, t.GLsizeiptrARB, ct.POINTER(t.void)))
    set_func('glMapBufferARB', ct.POINTER(t.void), (t.GLenum, t.GLenum))
    set_func('glUnmapBufferARB', t.GLboolean, (t.GLenum,))
    set_func('glGetBufferParameterivARB', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetBufferPointervARB', t.void, (t.GLenum, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_BUFFER_SIZE_ARB", 0x8764)
    set_enum("GL_BUFFER_USAGE_ARB", 0x8765)
    set_enum("GL_ARRAY_BUFFER_ARB", 0x8892)
    set_enum("GL_ELEMENT_ARRAY_BUFFER_ARB", 0x8893)
    set_enum("GL_ARRAY_BUFFER_BINDING_ARB", 0x8894)
    set_enum("GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB", 0x8895)
    set_enum("GL_VERTEX_ARRAY_BUFFER_BINDING_ARB", 0x8896)
    set_enum("GL_NORMAL_ARRAY_BUFFER_BINDING_ARB", 0x8897)
    set_enum("GL_COLOR_ARRAY_BUFFER_BINDING_ARB", 0x8898)
    set_enum("GL_INDEX_ARRAY_BUFFER_BINDING_ARB", 0x8899)
    set_enum("GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB", 0x889A)
    set_enum("GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB", 0x889B)
    set_enum("GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB", 0x889C)
    set_enum("GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB", 0x889D)
    set_enum("GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB", 0x889E)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB", 0x889F)
    set_enum("GL_READ_ONLY_ARB", 0x88B8)
    set_enum("GL_WRITE_ONLY_ARB", 0x88B9)
    set_enum("GL_READ_WRITE_ARB", 0x88BA)
    set_enum("GL_BUFFER_ACCESS_ARB", 0x88BB)
    set_enum("GL_BUFFER_MAPPED_ARB", 0x88BC)
    set_enum("GL_BUFFER_MAP_POINTER_ARB", 0x88BD)
    set_enum("GL_STREAM_DRAW_ARB", 0x88E0)
    set_enum("GL_STREAM_READ_ARB", 0x88E1)
    set_enum("GL_STREAM_COPY_ARB", 0x88E2)
    set_enum("GL_STATIC_DRAW_ARB", 0x88E4)
    set_enum("GL_STATIC_READ_ARB", 0x88E5)
    set_enum("GL_STATIC_COPY_ARB", 0x88E6)
    set_enum("GL_DYNAMIC_DRAW_ARB", 0x88E8)
    set_enum("GL_DYNAMIC_READ_ARB", 0x88E9)
    set_enum("GL_DYNAMIC_COPY_ARB", 0x88EA)


#### GL_ARB_VERTEX_PROGRAM ####
def init_gl_arb_vertex_program():
    set_func('glVertexAttrib1dARB', t.void, (t.GLuint, t.GLdouble))
    set_func('glVertexAttrib1dvARB', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib1fARB', t.void, (t.GLuint, t.GLfloat))
    set_func('glVertexAttrib1fvARB', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib1sARB', t.void, (t.GLuint, t.GLshort))
    set_func('glVertexAttrib1svARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib2dARB', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib2dvARB', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib2fARB', t.void, (t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib2fvARB', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib2sARB', t.void, (t.GLuint, t.GLshort, t.GLshort))
    set_func('glVertexAttrib2svARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib3dARB', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib3dvARB', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib3fARB', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib3fvARB', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib3sARB', t.void, (t.GLuint, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexAttrib3svARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4NbvARB', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVertexAttrib4NivARB', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttrib4NsvARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4NubARB', t.void, (t.GLuint, t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glVertexAttrib4NubvARB', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttrib4NuivARB', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttrib4NusvARB', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glVertexAttrib4bvARB', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVertexAttrib4dARB', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib4dvARB', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib4fARB', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib4fvARB', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib4ivARB', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttrib4sARB', t.void, (t.GLuint, t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexAttrib4svARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4ubvARB', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttrib4uivARB', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttrib4usvARB', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glVertexAttribPointerARB', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLsizei, ct.POINTER(t.void)))
    set_func('glEnableVertexAttribArrayARB', t.void, (t.GLuint,))
    set_func('glDisableVertexAttribArrayARB', t.void, (t.GLuint,))
    set_func('glProgramStringARB', t.void, (t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glBindProgramARB', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteProgramsARB', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenProgramsARB', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramEnvParameter4dARB', t.void, (t.GLenum, t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramEnvParameter4dvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glProgramEnvParameter4fARB', t.void, (t.GLenum, t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramEnvParameter4fvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glProgramLocalParameter4dARB', t.void, (t.GLenum, t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramLocalParameter4dvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glProgramLocalParameter4fARB', t.void, (t.GLenum, t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramLocalParameter4fvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetProgramEnvParameterdvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glGetProgramEnvParameterfvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetProgramLocalParameterdvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glGetProgramLocalParameterfvARB', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetProgramivARB', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramStringARB', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetVertexAttribdvARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetVertexAttribfvARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVertexAttribivARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribPointervARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glIsProgramARB', t.GLboolean, (t.GLuint,))
    set_enum("GL_COLOR_SUM_ARB", 0x8458)
    set_enum("GL_VERTEX_PROGRAM_ARB", 0x8620)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB", 0x8622)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB", 0x8623)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB", 0x8624)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB", 0x8625)
    set_enum("GL_CURRENT_VERTEX_ATTRIB_ARB", 0x8626)
    set_enum("GL_PROGRAM_LENGTH_ARB", 0x8627)
    set_enum("GL_PROGRAM_STRING_ARB", 0x8628)
    set_enum("GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB", 0x862E)
    set_enum("GL_MAX_PROGRAM_MATRICES_ARB", 0x862F)
    set_enum("GL_CURRENT_MATRIX_STACK_DEPTH_ARB", 0x8640)
    set_enum("GL_CURRENT_MATRIX_ARB", 0x8641)
    set_enum("GL_VERTEX_PROGRAM_POINT_SIZE_ARB", 0x8642)
    set_enum("GL_VERTEX_PROGRAM_TWO_SIDE_ARB", 0x8643)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB", 0x8645)
    set_enum("GL_PROGRAM_ERROR_POSITION_ARB", 0x864B)
    set_enum("GL_PROGRAM_BINDING_ARB", 0x8677)
    set_enum("GL_MAX_VERTEX_ATTRIBS_ARB", 0x8869)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB", 0x886A)
    set_enum("GL_PROGRAM_ERROR_STRING_ARB", 0x8874)
    set_enum("GL_PROGRAM_FORMAT_ASCII_ARB", 0x8875)
    set_enum("GL_PROGRAM_FORMAT_ARB", 0x8876)
    set_enum("GL_PROGRAM_INSTRUCTIONS_ARB", 0x88A0)
    set_enum("GL_MAX_PROGRAM_INSTRUCTIONS_ARB", 0x88A1)
    set_enum("GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB", 0x88A2)
    set_enum("GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB", 0x88A3)
    set_enum("GL_PROGRAM_TEMPORARIES_ARB", 0x88A4)
    set_enum("GL_MAX_PROGRAM_TEMPORARIES_ARB", 0x88A5)
    set_enum("GL_PROGRAM_NATIVE_TEMPORARIES_ARB", 0x88A6)
    set_enum("GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB", 0x88A7)
    set_enum("GL_PROGRAM_PARAMETERS_ARB", 0x88A8)
    set_enum("GL_MAX_PROGRAM_PARAMETERS_ARB", 0x88A9)
    set_enum("GL_PROGRAM_NATIVE_PARAMETERS_ARB", 0x88AA)
    set_enum("GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB", 0x88AB)
    set_enum("GL_PROGRAM_ATTRIBS_ARB", 0x88AC)
    set_enum("GL_MAX_PROGRAM_ATTRIBS_ARB", 0x88AD)
    set_enum("GL_PROGRAM_NATIVE_ATTRIBS_ARB", 0x88AE)
    set_enum("GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB", 0x88AF)
    set_enum("GL_PROGRAM_ADDRESS_REGISTERS_ARB", 0x88B0)
    set_enum("GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB", 0x88B1)
    set_enum("GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB", 0x88B2)
    set_enum("GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB", 0x88B3)
    set_enum("GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB", 0x88B4)
    set_enum("GL_MAX_PROGRAM_ENV_PARAMETERS_ARB", 0x88B5)
    set_enum("GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB", 0x88B6)
    set_enum("GL_TRANSPOSE_CURRENT_MATRIX_ARB", 0x88B7)
    set_enum("GL_MATRIX0_ARB", 0x88C0)
    set_enum("GL_MATRIX1_ARB", 0x88C1)
    set_enum("GL_MATRIX2_ARB", 0x88C2)
    set_enum("GL_MATRIX3_ARB", 0x88C3)
    set_enum("GL_MATRIX4_ARB", 0x88C4)
    set_enum("GL_MATRIX5_ARB", 0x88C5)
    set_enum("GL_MATRIX6_ARB", 0x88C6)
    set_enum("GL_MATRIX7_ARB", 0x88C7)
    set_enum("GL_MATRIX8_ARB", 0x88C8)
    set_enum("GL_MATRIX9_ARB", 0x88C9)
    set_enum("GL_MATRIX10_ARB", 0x88CA)
    set_enum("GL_MATRIX11_ARB", 0x88CB)
    set_enum("GL_MATRIX12_ARB", 0x88CC)
    set_enum("GL_MATRIX13_ARB", 0x88CD)
    set_enum("GL_MATRIX14_ARB", 0x88CE)
    set_enum("GL_MATRIX15_ARB", 0x88CF)
    set_enum("GL_MATRIX16_ARB", 0x88D0)
    set_enum("GL_MATRIX17_ARB", 0x88D1)
    set_enum("GL_MATRIX18_ARB", 0x88D2)
    set_enum("GL_MATRIX19_ARB", 0x88D3)
    set_enum("GL_MATRIX20_ARB", 0x88D4)
    set_enum("GL_MATRIX21_ARB", 0x88D5)
    set_enum("GL_MATRIX22_ARB", 0x88D6)
    set_enum("GL_MATRIX23_ARB", 0x88D7)
    set_enum("GL_MATRIX24_ARB", 0x88D8)
    set_enum("GL_MATRIX25_ARB", 0x88D9)
    set_enum("GL_MATRIX26_ARB", 0x88DA)
    set_enum("GL_MATRIX27_ARB", 0x88DB)
    set_enum("GL_MATRIX28_ARB", 0x88DC)
    set_enum("GL_MATRIX29_ARB", 0x88DD)
    set_enum("GL_MATRIX30_ARB", 0x88DE)
    set_enum("GL_MATRIX31_ARB", 0x88DF)


#### GL_ARB_VERTEX_SHADER ####
def init_gl_arb_vertex_shader():
    set_func('glVertexAttrib1fARB', t.void, (t.GLuint, t.GLfloat))
    set_func('glVertexAttrib1sARB', t.void, (t.GLuint, t.GLshort))
    set_func('glVertexAttrib1dARB', t.void, (t.GLuint, t.GLdouble))
    set_func('glVertexAttrib2fARB', t.void, (t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib2sARB', t.void, (t.GLuint, t.GLshort, t.GLshort))
    set_func('glVertexAttrib2dARB', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib3fARB', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib3sARB', t.void, (t.GLuint, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexAttrib3dARB', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib4fARB', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib4sARB', t.void, (t.GLuint, t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexAttrib4dARB', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib4NubARB', t.void, (t.GLuint, t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glVertexAttrib1fvARB', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib1svARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib1dvARB', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib2fvARB', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib2svARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib2dvARB', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib3fvARB', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib3svARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib3dvARB', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib4fvARB', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib4svARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4dvARB', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib4ivARB', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttrib4bvARB', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVertexAttrib4ubvARB', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttrib4usvARB', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glVertexAttrib4uivARB', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttrib4NbvARB', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVertexAttrib4NsvARB', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4NivARB', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttrib4NubvARB', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttrib4NusvARB', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glVertexAttrib4NuivARB', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribPointerARB', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLsizei, ct.POINTER(t.void)))
    set_func('glEnableVertexAttribArrayARB', t.void, (t.GLuint,))
    set_func('glDisableVertexAttribArrayARB', t.void, (t.GLuint,))
    set_func('glBindAttribLocationARB', t.void, (t.GLhandleARB, t.GLuint, ct.POINTER(t.GLcharARB)))
    set_func('glGetActiveAttribARB', t.void, (t.GLhandleARB, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint), ct.POINTER(t.GLenum), ct.POINTER(t.GLcharARB)))
    set_func('glGetAttribLocationARB', t.GLint, (t.GLhandleARB, ct.POINTER(t.GLcharARB)))
    set_func('glGetVertexAttribdvARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetVertexAttribfvARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVertexAttribivARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribPointervARB', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_VERTEX_SHADER_ARB", 0x8B31)
    set_enum("GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB", 0x8B4A)
    set_enum("GL_MAX_VARYING_FLOATS_ARB", 0x8B4B)
    set_enum("GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB", 0x8B4C)
    set_enum("GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB", 0x8B4D)
    set_enum("GL_OBJECT_ACTIVE_ATTRIBUTES_ARB", 0x8B89)
    set_enum("GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB", 0x8B8A)
    set_enum("GL_MAX_VERTEX_ATTRIBS_ARB", 0x8869)
    set_enum("GL_MAX_TEXTURE_IMAGE_UNITS_ARB", 0x8872)
    set_enum("GL_MAX_TEXTURE_COORDS_ARB", 0x8871)
    set_enum("GL_VERTEX_PROGRAM_POINT_SIZE_ARB", 0x8642)
    set_enum("GL_VERTEX_PROGRAM_TWO_SIDE_ARB", 0x8643)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB", 0x8622)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB", 0x8623)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB", 0x8624)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB", 0x8625)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB", 0x886A)
    set_enum("GL_CURRENT_VERTEX_ATTRIB_ARB", 0x8626)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB", 0x8645)
    set_enum("GL_FLOAT", 0x1406)
    set_enum("GL_FLOAT_VEC2_ARB", 0x8B50)
    set_enum("GL_FLOAT_VEC3_ARB", 0x8B51)
    set_enum("GL_FLOAT_VEC4_ARB", 0x8B52)
    set_enum("GL_FLOAT_MAT2_ARB", 0x8B5A)
    set_enum("GL_FLOAT_MAT3_ARB", 0x8B5B)
    set_enum("GL_FLOAT_MAT4_ARB", 0x8B5C)


#### GL_ARB_VERTEX_TYPE_10F_11F_11F_REV ####
def init_gl_arb_vertex_type_10f_11f_11f_rev():
    set_enum("GL_UNSIGNED_INT_10F_11F_11F_REV", 0x8C3B)


#### GL_ARB_VERTEX_TYPE_2_10_10_10_REV ####
def init_gl_arb_vertex_type_2_10_10_10_rev():
    set_func('glVertexAttribP1ui', t.void, (t.GLuint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribP1uiv', t.void, (t.GLuint, t.GLenum, t.GLboolean, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribP2ui', t.void, (t.GLuint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribP2uiv', t.void, (t.GLuint, t.GLenum, t.GLboolean, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribP3ui', t.void, (t.GLuint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribP3uiv', t.void, (t.GLuint, t.GLenum, t.GLboolean, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribP4ui', t.void, (t.GLuint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexAttribP4uiv', t.void, (t.GLuint, t.GLenum, t.GLboolean, ct.POINTER(t.GLuint)))
    set_func('glVertexP2ui', t.void, (t.GLenum, t.GLuint))
    set_func('glVertexP2uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glVertexP3ui', t.void, (t.GLenum, t.GLuint))
    set_func('glVertexP3uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glVertexP4ui', t.void, (t.GLenum, t.GLuint))
    set_func('glVertexP4uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glTexCoordP1ui', t.void, (t.GLenum, t.GLuint))
    set_func('glTexCoordP1uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glTexCoordP2ui', t.void, (t.GLenum, t.GLuint))
    set_func('glTexCoordP2uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glTexCoordP3ui', t.void, (t.GLenum, t.GLuint))
    set_func('glTexCoordP3uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glTexCoordP4ui', t.void, (t.GLenum, t.GLuint))
    set_func('glTexCoordP4uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glMultiTexCoordP1ui', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glMultiTexCoordP1uiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glMultiTexCoordP2ui', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glMultiTexCoordP2uiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glMultiTexCoordP3ui', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glMultiTexCoordP3uiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glMultiTexCoordP4ui', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glMultiTexCoordP4uiv', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glNormalP3ui', t.void, (t.GLenum, t.GLuint))
    set_func('glNormalP3uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glColorP3ui', t.void, (t.GLenum, t.GLuint))
    set_func('glColorP3uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glColorP4ui', t.void, (t.GLenum, t.GLuint))
    set_func('glColorP4uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glSecondaryColorP3ui', t.void, (t.GLenum, t.GLuint))
    set_func('glSecondaryColorP3uiv', t.void, (t.GLenum, ct.POINTER(t.GLuint)))
    set_enum("GL_UNSIGNED_INT_2_10_10_10_REV", 0x8368)
    set_enum("GL_INT_2_10_10_10_REV", 0x8D9F)


#### GL_ARB_VIEWPORT_ARRAY ####
def init_gl_arb_viewport_array():
    set_func('glViewportArrayv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glViewportIndexedf', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glViewportIndexedfv', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glScissorArrayv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glScissorIndexed', t.void, (t.GLuint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glScissorIndexedv', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glDepthRangeArrayv', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glDepthRangeIndexed', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glGetFloati_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetDoublei_v', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_enum("GL_SCISSOR_BOX", 0x0C10)
    set_enum("GL_VIEWPORT", 0x0BA2)
    set_enum("GL_DEPTH_RANGE", 0x0B70)
    set_enum("GL_SCISSOR_TEST", 0x0C11)
    set_enum("GL_MAX_VIEWPORTS", 0x825B)
    set_enum("GL_VIEWPORT_SUBPIXEL_BITS", 0x825C)
    set_enum("GL_VIEWPORT_BOUNDS_RANGE", 0x825D)
    set_enum("GL_LAYER_PROVOKING_VERTEX", 0x825E)
    set_enum("GL_VIEWPORT_INDEX_PROVOKING_VERTEX", 0x825F)
    set_enum("GL_UNDEFINED_VERTEX", 0x8260)
    set_enum("GL_FIRST_VERTEX_CONVENTION", 0x8E4D)
    set_enum("GL_LAST_VERTEX_CONVENTION", 0x8E4E)
    set_enum("GL_PROVOKING_VERTEX", 0x8E4F)


#### GL_ARB_WINDOW_POS ####
def init_gl_arb_window_pos():
    set_func('glWindowPos2dARB', t.void, (t.GLdouble, t.GLdouble))
    set_func('glWindowPos2dvARB', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glWindowPos2fARB', t.void, (t.GLfloat, t.GLfloat))
    set_func('glWindowPos2fvARB', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glWindowPos2iARB', t.void, (t.GLint, t.GLint))
    set_func('glWindowPos2ivARB', t.void, (ct.POINTER(t.GLint),))
    set_func('glWindowPos2sARB', t.void, (t.GLshort, t.GLshort))
    set_func('glWindowPos2svARB', t.void, (ct.POINTER(t.GLshort),))
    set_func('glWindowPos3dARB', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glWindowPos3dvARB', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glWindowPos3fARB', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glWindowPos3fvARB', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glWindowPos3iARB', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glWindowPos3ivARB', t.void, (ct.POINTER(t.GLint),))
    set_func('glWindowPos3sARB', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glWindowPos3svARB', t.void, (ct.POINTER(t.GLshort),))


#### GL_ARM_MALI_PROGRAM_BINARY ####
def init_gl_arm_mali_program_binary():
    set_enum("GL_MALI_PROGRAM_BINARY_ARM", 0x8F61)


#### GL_ARM_MALI_SHADER_BINARY ####
def init_gl_arm_mali_shader_binary():
    set_enum("GL_MALI_SHADER_BINARY_ARM", 0x8F60)


#### GL_ARM_SHADER_FRAMEBUFFER_FETCH ####
def init_gl_arm_shader_framebuffer_fetch():
    set_enum("GL_FETCH_PER_SAMPLE_ARM", 0x8F65)
    set_enum("GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM", 0x8F66)


#### GL_ATI_DRAW_BUFFERS ####
def init_gl_ati_draw_buffers():
    set_func('glDrawBuffersATI', t.void, (t.GLsizei, ct.POINTER(t.GLenum)))
    set_enum("GL_MAX_DRAW_BUFFERS_ATI", 0x8824)
    set_enum("GL_DRAW_BUFFER0_ATI", 0x8825)
    set_enum("GL_DRAW_BUFFER1_ATI", 0x8826)
    set_enum("GL_DRAW_BUFFER2_ATI", 0x8827)
    set_enum("GL_DRAW_BUFFER3_ATI", 0x8828)
    set_enum("GL_DRAW_BUFFER4_ATI", 0x8829)
    set_enum("GL_DRAW_BUFFER5_ATI", 0x882A)
    set_enum("GL_DRAW_BUFFER6_ATI", 0x882B)
    set_enum("GL_DRAW_BUFFER7_ATI", 0x882C)
    set_enum("GL_DRAW_BUFFER8_ATI", 0x882D)
    set_enum("GL_DRAW_BUFFER9_ATI", 0x882E)
    set_enum("GL_DRAW_BUFFER10_ATI", 0x882F)
    set_enum("GL_DRAW_BUFFER11_ATI", 0x8830)
    set_enum("GL_DRAW_BUFFER12_ATI", 0x8831)
    set_enum("GL_DRAW_BUFFER13_ATI", 0x8832)
    set_enum("GL_DRAW_BUFFER14_ATI", 0x8833)
    set_enum("GL_DRAW_BUFFER15_ATI", 0x8834)


#### GL_ATI_ELEMENT_ARRAY ####
def init_gl_ati_element_array():
    set_func('glElementPointerATI', t.void, (t.GLenum, ct.POINTER(t.void)))
    set_func('glDrawElementArrayATI', t.void, (t.GLenum, t.GLsizei))
    set_func('glDrawRangeElementArrayATI', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei))
    set_enum("GL_ELEMENT_ARRAY_ATI", 0x8768)
    set_enum("GL_ELEMENT_ARRAY_TYPE_ATI", 0x8769)
    set_enum("GL_ELEMENT_ARRAY_POINTER_ATI", 0x876A)


#### GL_ATI_ENVMAP_BUMPMAP ####
def init_gl_ati_envmap_bumpmap():
    set_func('glTexBumpParameterivATI', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexBumpParameterfvATI', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTexBumpParameterivATI', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexBumpParameterfvATI', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_BUMP_ROT_MATRIX_ATI", 0x8775)
    set_enum("GL_BUMP_ROT_MATRIX_SIZE_ATI", 0x8776)
    set_enum("GL_BUMP_NUM_TEX_UNITS_ATI", 0x8777)
    set_enum("GL_BUMP_TEX_UNITS_ATI", 0x8778)
    set_enum("GL_DUDV_ATI", 0x8779)
    set_enum("GL_DU8DV8_ATI", 0x877A)
    set_enum("GL_BUMP_ENVMAP_ATI", 0x877B)
    set_enum("GL_BUMP_TARGET_ATI", 0x877C)


#### GL_ATI_FRAGMENT_SHADER ####
def init_gl_ati_fragment_shader():
    set_func('glGenFragmentShadersATI', t.GLuint, (t.GLuint,))
    set_func('glBindFragmentShaderATI', t.void, (t.GLuint,))
    set_func('glDeleteFragmentShaderATI', t.void, (t.GLuint,))
    set_func('glBeginFragmentShaderATI', t.void, ())
    set_func('glEndFragmentShaderATI', t.void, ())
    set_func('glPassTexCoordATI', t.void, (t.GLuint, t.GLuint, t.GLenum))
    set_func('glSampleMapATI', t.void, (t.GLuint, t.GLuint, t.GLenum))
    set_func('glColorFragmentOp1ATI', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glColorFragmentOp2ATI', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glColorFragmentOp3ATI', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glAlphaFragmentOp1ATI', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glAlphaFragmentOp2ATI', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glAlphaFragmentOp3ATI', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glSetFragmentShaderConstantATI', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_enum("GL_FRAGMENT_SHADER_ATI", 0x8920)
    set_enum("GL_REG_0_ATI", 0x8921)
    set_enum("GL_REG_1_ATI", 0x8922)
    set_enum("GL_REG_2_ATI", 0x8923)
    set_enum("GL_REG_3_ATI", 0x8924)
    set_enum("GL_REG_4_ATI", 0x8925)
    set_enum("GL_REG_5_ATI", 0x8926)
    set_enum("GL_REG_6_ATI", 0x8927)
    set_enum("GL_REG_7_ATI", 0x8928)
    set_enum("GL_REG_8_ATI", 0x8929)
    set_enum("GL_REG_9_ATI", 0x892A)
    set_enum("GL_REG_10_ATI", 0x892B)
    set_enum("GL_REG_11_ATI", 0x892C)
    set_enum("GL_REG_12_ATI", 0x892D)
    set_enum("GL_REG_13_ATI", 0x892E)
    set_enum("GL_REG_14_ATI", 0x892F)
    set_enum("GL_REG_15_ATI", 0x8930)
    set_enum("GL_REG_16_ATI", 0x8931)
    set_enum("GL_REG_17_ATI", 0x8932)
    set_enum("GL_REG_18_ATI", 0x8933)
    set_enum("GL_REG_19_ATI", 0x8934)
    set_enum("GL_REG_20_ATI", 0x8935)
    set_enum("GL_REG_21_ATI", 0x8936)
    set_enum("GL_REG_22_ATI", 0x8937)
    set_enum("GL_REG_23_ATI", 0x8938)
    set_enum("GL_REG_24_ATI", 0x8939)
    set_enum("GL_REG_25_ATI", 0x893A)
    set_enum("GL_REG_26_ATI", 0x893B)
    set_enum("GL_REG_27_ATI", 0x893C)
    set_enum("GL_REG_28_ATI", 0x893D)
    set_enum("GL_REG_29_ATI", 0x893E)
    set_enum("GL_REG_30_ATI", 0x893F)
    set_enum("GL_REG_31_ATI", 0x8940)
    set_enum("GL_CON_0_ATI", 0x8941)
    set_enum("GL_CON_1_ATI", 0x8942)
    set_enum("GL_CON_2_ATI", 0x8943)
    set_enum("GL_CON_3_ATI", 0x8944)
    set_enum("GL_CON_4_ATI", 0x8945)
    set_enum("GL_CON_5_ATI", 0x8946)
    set_enum("GL_CON_6_ATI", 0x8947)
    set_enum("GL_CON_7_ATI", 0x8948)
    set_enum("GL_CON_8_ATI", 0x8949)
    set_enum("GL_CON_9_ATI", 0x894A)
    set_enum("GL_CON_10_ATI", 0x894B)
    set_enum("GL_CON_11_ATI", 0x894C)
    set_enum("GL_CON_12_ATI", 0x894D)
    set_enum("GL_CON_13_ATI", 0x894E)
    set_enum("GL_CON_14_ATI", 0x894F)
    set_enum("GL_CON_15_ATI", 0x8950)
    set_enum("GL_CON_16_ATI", 0x8951)
    set_enum("GL_CON_17_ATI", 0x8952)
    set_enum("GL_CON_18_ATI", 0x8953)
    set_enum("GL_CON_19_ATI", 0x8954)
    set_enum("GL_CON_20_ATI", 0x8955)
    set_enum("GL_CON_21_ATI", 0x8956)
    set_enum("GL_CON_22_ATI", 0x8957)
    set_enum("GL_CON_23_ATI", 0x8958)
    set_enum("GL_CON_24_ATI", 0x8959)
    set_enum("GL_CON_25_ATI", 0x895A)
    set_enum("GL_CON_26_ATI", 0x895B)
    set_enum("GL_CON_27_ATI", 0x895C)
    set_enum("GL_CON_28_ATI", 0x895D)
    set_enum("GL_CON_29_ATI", 0x895E)
    set_enum("GL_CON_30_ATI", 0x895F)
    set_enum("GL_CON_31_ATI", 0x8960)
    set_enum("GL_MOV_ATI", 0x8961)
    set_enum("GL_ADD_ATI", 0x8963)
    set_enum("GL_MUL_ATI", 0x8964)
    set_enum("GL_SUB_ATI", 0x8965)
    set_enum("GL_DOT3_ATI", 0x8966)
    set_enum("GL_DOT4_ATI", 0x8967)
    set_enum("GL_MAD_ATI", 0x8968)
    set_enum("GL_LERP_ATI", 0x8969)
    set_enum("GL_CND_ATI", 0x896A)
    set_enum("GL_CND0_ATI", 0x896B)
    set_enum("GL_DOT2_ADD_ATI", 0x896C)
    set_enum("GL_SECONDARY_INTERPOLATOR_ATI", 0x896D)
    set_enum("GL_NUM_FRAGMENT_REGISTERS_ATI", 0x896E)
    set_enum("GL_NUM_FRAGMENT_CONSTANTS_ATI", 0x896F)
    set_enum("GL_NUM_PASSES_ATI", 0x8970)
    set_enum("GL_NUM_INSTRUCTIONS_PER_PASS_ATI", 0x8971)
    set_enum("GL_NUM_INSTRUCTIONS_TOTAL_ATI", 0x8972)
    set_enum("GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI", 0x8973)
    set_enum("GL_NUM_LOOPBACK_COMPONENTS_ATI", 0x8974)
    set_enum("GL_COLOR_ALPHA_PAIRING_ATI", 0x8975)
    set_enum("GL_SWIZZLE_STR_ATI", 0x8976)
    set_enum("GL_SWIZZLE_STQ_ATI", 0x8977)
    set_enum("GL_SWIZZLE_STR_DR_ATI", 0x8978)
    set_enum("GL_SWIZZLE_STQ_DQ_ATI", 0x8979)
    set_enum("GL_SWIZZLE_STRQ_ATI", 0x897A)
    set_enum("GL_SWIZZLE_STRQ_DQ_ATI", 0x897B)
    set_enum("GL_RED_BIT_ATI", 0x00000001)
    set_enum("GL_GREEN_BIT_ATI", 0x00000002)
    set_enum("GL_BLUE_BIT_ATI", 0x00000004)
    set_enum("GL_2X_BIT_ATI", 0x00000001)
    set_enum("GL_4X_BIT_ATI", 0x00000002)
    set_enum("GL_8X_BIT_ATI", 0x00000004)
    set_enum("GL_HALF_BIT_ATI", 0x00000008)
    set_enum("GL_QUARTER_BIT_ATI", 0x00000010)
    set_enum("GL_EIGHTH_BIT_ATI", 0x00000020)
    set_enum("GL_SATURATE_BIT_ATI", 0x00000040)
    set_enum("GL_COMP_BIT_ATI", 0x00000002)
    set_enum("GL_NEGATE_BIT_ATI", 0x00000004)
    set_enum("GL_BIAS_BIT_ATI", 0x00000008)


#### GL_ATI_MAP_OBJECT_BUFFER ####
def init_gl_ati_map_object_buffer():
    set_func('glMapObjectBufferATI', ct.POINTER(t.void), (t.GLuint,))
    set_func('glUnmapObjectBufferATI', t.void, (t.GLuint,))


#### GL_ATI_MEMINFO ####
def init_gl_ati_meminfo():
    set_enum("GL_VBO_FREE_MEMORY_ATI", 0x87FB)
    set_enum("GL_TEXTURE_FREE_MEMORY_ATI", 0x87FC)
    set_enum("GL_RENDERBUFFER_FREE_MEMORY_ATI", 0x87FD)


#### GL_ATI_PIXEL_FORMAT_FLOAT ####
def init_gl_ati_pixel_format_float():
    set_enum("GL_RGBA_FLOAT_MODE_ATI", 0x8820)
    set_enum("GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI", 0x8835)


#### GL_ATI_PN_TRIANGLES ####
def init_gl_ati_pn_triangles():
    set_func('glPNTrianglesiATI', t.void, (t.GLenum, t.GLint))
    set_func('glPNTrianglesfATI', t.void, (t.GLenum, t.GLfloat))
    set_enum("GL_PN_TRIANGLES_ATI", 0x87F0)
    set_enum("GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI", 0x87F1)
    set_enum("GL_PN_TRIANGLES_POINT_MODE_ATI", 0x87F2)
    set_enum("GL_PN_TRIANGLES_NORMAL_MODE_ATI", 0x87F3)
    set_enum("GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI", 0x87F4)
    set_enum("GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI", 0x87F5)
    set_enum("GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI", 0x87F6)
    set_enum("GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI", 0x87F7)
    set_enum("GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI", 0x87F8)


#### GL_ATI_SEPARATE_STENCIL ####
def init_gl_ati_separate_stencil():
    set_func('glStencilOpSeparateATI', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glStencilFuncSeparateATI', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLuint))
    set_enum("GL_STENCIL_BACK_FUNC_ATI", 0x8800)
    set_enum("GL_STENCIL_BACK_FAIL_ATI", 0x8801)
    set_enum("GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI", 0x8802)
    set_enum("GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI", 0x8803)


#### GL_ATI_TEXT_FRAGMENT_SHADER ####
def init_gl_ati_text_fragment_shader():
    set_enum("GL_TEXT_FRAGMENT_SHADER_ATI", 0x8200)


#### GL_ATI_TEXTURE_ENV_COMBINE3 ####
def init_gl_ati_texture_env_combine3():
    set_enum("GL_MODULATE_ADD_ATI", 0x8744)
    set_enum("GL_MODULATE_SIGNED_ADD_ATI", 0x8745)
    set_enum("GL_MODULATE_SUBTRACT_ATI", 0x8746)


#### GL_ATI_TEXTURE_FLOAT ####
def init_gl_ati_texture_float():
    set_enum("GL_RGBA_FLOAT32_ATI", 0x8814)
    set_enum("GL_RGB_FLOAT32_ATI", 0x8815)
    set_enum("GL_ALPHA_FLOAT32_ATI", 0x8816)
    set_enum("GL_INTENSITY_FLOAT32_ATI", 0x8817)
    set_enum("GL_LUMINANCE_FLOAT32_ATI", 0x8818)
    set_enum("GL_LUMINANCE_ALPHA_FLOAT32_ATI", 0x8819)
    set_enum("GL_RGBA_FLOAT16_ATI", 0x881A)
    set_enum("GL_RGB_FLOAT16_ATI", 0x881B)
    set_enum("GL_ALPHA_FLOAT16_ATI", 0x881C)
    set_enum("GL_INTENSITY_FLOAT16_ATI", 0x881D)
    set_enum("GL_LUMINANCE_FLOAT16_ATI", 0x881E)
    set_enum("GL_LUMINANCE_ALPHA_FLOAT16_ATI", 0x881F)


#### GL_ATI_TEXTURE_MIRROR_ONCE ####
def init_gl_ati_texture_mirror_once():
    set_enum("GL_MIRROR_CLAMP_ATI", 0x8742)
    set_enum("GL_MIRROR_CLAMP_TO_EDGE_ATI", 0x8743)


#### GL_ATI_VERTEX_ARRAY_OBJECT ####
def init_gl_ati_vertex_array_object():
    set_func('glNewObjectBufferATI', t.GLuint, (t.GLsizei, ct.POINTER(t.void), t.GLenum))
    set_func('glIsObjectBufferATI', t.GLboolean, (t.GLuint,))
    set_func('glUpdateObjectBufferATI', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.void), t.GLenum))
    set_func('glGetObjectBufferfvATI', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetObjectBufferivATI', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glFreeObjectBufferATI', t.void, (t.GLuint,))
    set_func('glArrayObjectATI', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLuint, t.GLuint))
    set_func('glGetArrayObjectfvATI', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetArrayObjectivATI', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glVariantArrayObjectATI', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLuint, t.GLuint))
    set_func('glGetVariantArrayObjectfvATI', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVariantArrayObjectivATI', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_STATIC_ATI", 0x8760)
    set_enum("GL_DYNAMIC_ATI", 0x8761)
    set_enum("GL_PRESERVE_ATI", 0x8762)
    set_enum("GL_DISCARD_ATI", 0x8763)
    set_enum("GL_OBJECT_BUFFER_SIZE_ATI", 0x8764)
    set_enum("GL_OBJECT_BUFFER_USAGE_ATI", 0x8765)
    set_enum("GL_ARRAY_OBJECT_BUFFER_ATI", 0x8766)
    set_enum("GL_ARRAY_OBJECT_OFFSET_ATI", 0x8767)


#### GL_ATI_VERTEX_ATTRIB_ARRAY_OBJECT ####
def init_gl_ati_vertex_attrib_array_object():
    set_func('glVertexAttribArrayObjectATI', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLsizei, t.GLuint, t.GLuint))
    set_func('glGetVertexAttribArrayObjectfvATI', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVertexAttribArrayObjectivATI', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))


#### GL_ATI_VERTEX_STREAMS ####
def init_gl_ati_vertex_streams():
    set_func('glVertexStream1sATI', t.void, (t.GLenum, t.GLshort))
    set_func('glVertexStream1svATI', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glVertexStream1iATI', t.void, (t.GLenum, t.GLint))
    set_func('glVertexStream1ivATI', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glVertexStream1fATI', t.void, (t.GLenum, t.GLfloat))
    set_func('glVertexStream1fvATI', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glVertexStream1dATI', t.void, (t.GLenum, t.GLdouble))
    set_func('glVertexStream1dvATI', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glVertexStream2sATI', t.void, (t.GLenum, t.GLshort, t.GLshort))
    set_func('glVertexStream2svATI', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glVertexStream2iATI', t.void, (t.GLenum, t.GLint, t.GLint))
    set_func('glVertexStream2ivATI', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glVertexStream2fATI', t.void, (t.GLenum, t.GLfloat, t.GLfloat))
    set_func('glVertexStream2fvATI', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glVertexStream2dATI', t.void, (t.GLenum, t.GLdouble, t.GLdouble))
    set_func('glVertexStream2dvATI', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glVertexStream3sATI', t.void, (t.GLenum, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexStream3svATI', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glVertexStream3iATI', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint))
    set_func('glVertexStream3ivATI', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glVertexStream3fATI', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexStream3fvATI', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glVertexStream3dATI', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexStream3dvATI', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glVertexStream4sATI', t.void, (t.GLenum, t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexStream4svATI', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glVertexStream4iATI', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glVertexStream4ivATI', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glVertexStream4fATI', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexStream4fvATI', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glVertexStream4dATI', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexStream4dvATI', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glNormalStream3bATI', t.void, (t.GLenum, t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glNormalStream3bvATI', t.void, (t.GLenum, ct.POINTER(t.GLbyte)))
    set_func('glNormalStream3sATI', t.void, (t.GLenum, t.GLshort, t.GLshort, t.GLshort))
    set_func('glNormalStream3svATI', t.void, (t.GLenum, ct.POINTER(t.GLshort)))
    set_func('glNormalStream3iATI', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint))
    set_func('glNormalStream3ivATI', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glNormalStream3fATI', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glNormalStream3fvATI', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glNormalStream3dATI', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glNormalStream3dvATI', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glClientActiveVertexStreamATI', t.void, (t.GLenum,))
    set_func('glVertexBlendEnviATI', t.void, (t.GLenum, t.GLint))
    set_func('glVertexBlendEnvfATI', t.void, (t.GLenum, t.GLfloat))
    set_enum("GL_MAX_VERTEX_STREAMS_ATI", 0x876B)
    set_enum("GL_VERTEX_STREAM0_ATI", 0x876C)
    set_enum("GL_VERTEX_STREAM1_ATI", 0x876D)
    set_enum("GL_VERTEX_STREAM2_ATI", 0x876E)
    set_enum("GL_VERTEX_STREAM3_ATI", 0x876F)
    set_enum("GL_VERTEX_STREAM4_ATI", 0x8770)
    set_enum("GL_VERTEX_STREAM5_ATI", 0x8771)
    set_enum("GL_VERTEX_STREAM6_ATI", 0x8772)
    set_enum("GL_VERTEX_STREAM7_ATI", 0x8773)
    set_enum("GL_VERTEX_SOURCE_ATI", 0x8774)


#### GL_DMP_PROGRAM_BINARY ####
def init_gl_dmp_program_binary():
    set_enum("GL_SMAPHS30_PROGRAM_BINARY_DMP", 0x9251)
    set_enum("GL_SMAPHS_PROGRAM_BINARY_DMP", 0x9252)
    set_enum("GL_DMP_PROGRAM_BINARY_DMP", 0x9253)


#### GL_DMP_SHADER_BINARY ####
def init_gl_dmp_shader_binary():
    set_enum("GL_SHADER_BINARY_DMP", 0x9250)


#### GL_EXT_422_PIXELS ####
def init_gl_ext_422_pixels():
    set_enum("GL_422_EXT", 0x80CC)
    set_enum("GL_422_REV_EXT", 0x80CD)
    set_enum("GL_422_AVERAGE_EXT", 0x80CE)
    set_enum("GL_422_REV_AVERAGE_EXT", 0x80CF)


#### GL_EXT_YUV_TARGET ####
def init_gl_ext_yuv_target():
    set_enum("GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT", 0x8BE7)
    set_enum("GL_TEXTURE_EXTERNAL_OES", 0x8D65)
    set_enum("GL_TEXTURE_BINDING_EXTERNAL_OES", 0x8D67)
    set_enum("GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES", 0x8D68)


#### GL_EXT_ABGR ####
def init_gl_ext_abgr():
    set_enum("GL_ABGR_EXT", 0x8000)


#### GL_EXT_BASE_INSTANCE ####
def init_gl_ext_base_instance():
    set_func('glDrawArraysInstancedBaseInstanceEXT', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei, t.GLuint))
    set_func('glDrawElementsInstancedBaseInstanceEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLuint))
    set_func('glDrawElementsInstancedBaseVertexBaseInstanceEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLint, t.GLuint))


#### GL_EXT_BGRA ####
def init_gl_ext_bgra():
    set_enum("GL_BGR_EXT", 0x80E0)
    set_enum("GL_BGRA_EXT", 0x80E1)


#### GL_EXT_BINDABLE_UNIFORM ####
def init_gl_ext_bindable_uniform():
    set_func('glUniformBufferEXT', t.void, (t.GLuint, t.GLint, t.GLuint))
    set_func('glGetUniformBufferSizeEXT', t.GLint, (t.GLuint, t.GLint))
    set_func('glGetUniformOffsetEXT', t.GLintptr, (t.GLuint, t.GLint))
    set_enum("GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT", 0x8DE2)
    set_enum("GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT", 0x8DE3)
    set_enum("GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT", 0x8DE4)
    set_enum("GL_MAX_BINDABLE_UNIFORM_SIZE_EXT", 0x8DED)
    set_enum("GL_UNIFORM_BUFFER_EXT", 0x8DEE)
    set_enum("GL_UNIFORM_BUFFER_BINDING_EXT", 0x8DEF)


#### GL_EXT_BLEND_COLOR ####
def init_gl_ext_blend_color():
    set_func('glBlendColorEXT', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_enum("GL_CONSTANT_COLOR_EXT", 0x8001)
    set_enum("GL_ONE_MINUS_CONSTANT_COLOR_EXT", 0x8002)
    set_enum("GL_CONSTANT_ALPHA_EXT", 0x8003)
    set_enum("GL_ONE_MINUS_CONSTANT_ALPHA_EXT", 0x8004)
    set_enum("GL_BLEND_COLOR_EXT", 0x8005)


#### GL_EXT_BLEND_EQUATION_SEPARATE ####
def init_gl_ext_blend_equation_separate():
    set_func('glBlendEquationSeparateEXT', t.void, (t.GLenum, t.GLenum))
    set_enum("GL_BLEND_EQUATION_RGB_EXT", 0x8009)
    set_enum("GL_BLEND_EQUATION_ALPHA_EXT", 0x883D)


#### GL_EXT_BLEND_FUNC_EXTENDED ####
def init_gl_ext_blend_func_extended():
    set_func('glBindFragDataLocationIndexedEXT', t.void, (t.GLuint, t.GLuint, t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glBindFragDataLocationEXT', t.void, (t.GLuint, t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetProgramResourceLocationIndexEXT', t.GLint, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glGetFragDataIndexEXT', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_enum("GL_SRC1_COLOR_EXT", 0x88F9)
    set_enum("GL_SRC1_ALPHA_EXT", 0x8589)
    set_enum("GL_ONE_MINUS_SRC1_COLOR_EXT", 0x88FA)
    set_enum("GL_ONE_MINUS_SRC1_ALPHA_EXT", 0x88FB)
    set_enum("GL_SRC_ALPHA_SATURATE_EXT", 0x0308)
    set_enum("GL_LOCATION_INDEX_EXT", 0x930F)
    set_enum("GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT", 0x88FC)


#### GL_EXT_BLEND_FUNC_SEPARATE ####
def init_gl_ext_blend_func_separate():
    set_func('glBlendFuncSeparateEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_enum("GL_BLEND_DST_RGB_EXT", 0x80C8)
    set_enum("GL_BLEND_SRC_RGB_EXT", 0x80C9)
    set_enum("GL_BLEND_DST_ALPHA_EXT", 0x80CA)
    set_enum("GL_BLEND_SRC_ALPHA_EXT", 0x80CB)


#### GL_EXT_BLEND_MINMAX ####
def init_gl_ext_blend_minmax():
    set_func('glBlendEquationEXT', t.void, (t.GLenum,))
    set_enum("GL_MIN_EXT", 0x8007)
    set_enum("GL_MAX_EXT", 0x8008)
    set_enum("GL_FUNC_ADD_EXT", 0x8006)
    set_enum("GL_BLEND_EQUATION_EXT", 0x8009)


#### GL_EXT_BLEND_SUBTRACT ####
def init_gl_ext_blend_subtract():
    set_enum("GL_FUNC_SUBTRACT_EXT", 0x800A)
    set_enum("GL_FUNC_REVERSE_SUBTRACT_EXT", 0x800B)


#### GL_EXT_BUFFER_STORAGE ####
def init_gl_ext_buffer_storage():
    set_func('glBufferStorageEXT', t.void, (t.GLenum, t.GLsizeiptr, ct.POINTER(t.void), t.GLbitfield))
    set_enum("GL_MAP_READ_BIT", 0x0001)
    set_enum("GL_MAP_WRITE_BIT", 0x0002)
    set_enum("GL_MAP_PERSISTENT_BIT_EXT", 0x0040)
    set_enum("GL_MAP_COHERENT_BIT_EXT", 0x0080)
    set_enum("GL_DYNAMIC_STORAGE_BIT_EXT", 0x0100)
    set_enum("GL_CLIENT_STORAGE_BIT_EXT", 0x0200)
    set_enum("GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT", 0x00004000)
    set_enum("GL_BUFFER_IMMUTABLE_STORAGE_EXT", 0x821F)
    set_enum("GL_BUFFER_STORAGE_FLAGS_EXT", 0x8220)


#### GL_EXT_CLIP_CULL_DISTANCE ####
def init_gl_ext_clip_cull_distance():
    set_enum("GL_MAX_CLIP_DISTANCES_EXT", 0x0D32)
    set_enum("GL_MAX_CULL_DISTANCES_EXT", 0x82F9)
    set_enum("GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT", 0x82FA)
    set_enum("GL_CLIP_DISTANCE0_EXT", 0x3000)
    set_enum("GL_CLIP_DISTANCE1_EXT", 0x3001)
    set_enum("GL_CLIP_DISTANCE2_EXT", 0x3002)
    set_enum("GL_CLIP_DISTANCE3_EXT", 0x3003)
    set_enum("GL_CLIP_DISTANCE4_EXT", 0x3004)
    set_enum("GL_CLIP_DISTANCE5_EXT", 0x3005)
    set_enum("GL_CLIP_DISTANCE6_EXT", 0x3006)
    set_enum("GL_CLIP_DISTANCE7_EXT", 0x3007)


#### GL_EXT_CLIP_VOLUME_HINT ####
def init_gl_ext_clip_volume_hint():
    set_enum("GL_CLIP_VOLUME_CLIPPING_HINT_EXT", 0x80F0)


#### GL_EXT_CMYKA ####
def init_gl_ext_cmyka():
    set_enum("GL_CMYK_EXT", 0x800C)
    set_enum("GL_CMYKA_EXT", 0x800D)
    set_enum("GL_PACK_CMYK_HINT_EXT", 0x800E)
    set_enum("GL_UNPACK_CMYK_HINT_EXT", 0x800F)


#### GL_EXT_COLOR_BUFFER_HALF_FLOAT ####
def init_gl_ext_color_buffer_half_float():
    set_enum("GL_RGBA16F_EXT", 0x881A)
    set_enum("GL_RGB16F_EXT", 0x881B)
    set_enum("GL_RG16F_EXT", 0x822F)
    set_enum("GL_R16F_EXT", 0x822D)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT", 0x8211)
    set_enum("GL_UNSIGNED_NORMALIZED_EXT", 0x8C17)


#### GL_EXT_COLOR_SUBTABLE ####
def init_gl_ext_color_subtable():
    set_func('glColorSubTableEXT', t.void, (t.GLenum, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyColorSubTableEXT', t.void, (t.GLenum, t.GLsizei, t.GLint, t.GLint, t.GLsizei))


#### GL_EXT_COMPILED_VERTEX_ARRAY ####
def init_gl_ext_compiled_vertex_array():
    set_func('glLockArraysEXT', t.void, (t.GLint, t.GLsizei))
    set_func('glUnlockArraysEXT', t.void, ())
    set_enum("GL_ARRAY_ELEMENT_LOCK_FIRST_EXT", 0x81A8)
    set_enum("GL_ARRAY_ELEMENT_LOCK_COUNT_EXT", 0x81A9)


#### GL_EXT_CONVOLUTION ####
def init_gl_ext_convolution():
    set_func('glConvolutionFilter1DEXT', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glConvolutionFilter2DEXT', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glConvolutionParameterfEXT', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glConvolutionParameterfvEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glConvolutionParameteriEXT', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glConvolutionParameterivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCopyConvolutionFilter1DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei))
    set_func('glCopyConvolutionFilter2DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glGetConvolutionFilterEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetConvolutionParameterfvEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetConvolutionParameterivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSeparableFilterEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void), ct.POINTER(t.void), ct.POINTER(t.void)))
    set_func('glSeparableFilter2DEXT', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void), ct.POINTER(t.void)))
    set_enum("GL_CONVOLUTION_1D_EXT", 0x8010)
    set_enum("GL_CONVOLUTION_2D_EXT", 0x8011)
    set_enum("GL_SEPARABLE_2D_EXT", 0x8012)
    set_enum("GL_CONVOLUTION_BORDER_MODE_EXT", 0x8013)
    set_enum("GL_CONVOLUTION_FILTER_SCALE_EXT", 0x8014)
    set_enum("GL_CONVOLUTION_FILTER_BIAS_EXT", 0x8015)
    set_enum("GL_REDUCE_EXT", 0x8016)
    set_enum("GL_CONVOLUTION_FORMAT_EXT", 0x8017)
    set_enum("GL_CONVOLUTION_WIDTH_EXT", 0x8018)
    set_enum("GL_CONVOLUTION_HEIGHT_EXT", 0x8019)
    set_enum("GL_MAX_CONVOLUTION_WIDTH_EXT", 0x801A)
    set_enum("GL_MAX_CONVOLUTION_HEIGHT_EXT", 0x801B)
    set_enum("GL_POST_CONVOLUTION_RED_SCALE_EXT", 0x801C)
    set_enum("GL_POST_CONVOLUTION_GREEN_SCALE_EXT", 0x801D)
    set_enum("GL_POST_CONVOLUTION_BLUE_SCALE_EXT", 0x801E)
    set_enum("GL_POST_CONVOLUTION_ALPHA_SCALE_EXT", 0x801F)
    set_enum("GL_POST_CONVOLUTION_RED_BIAS_EXT", 0x8020)
    set_enum("GL_POST_CONVOLUTION_GREEN_BIAS_EXT", 0x8021)
    set_enum("GL_POST_CONVOLUTION_BLUE_BIAS_EXT", 0x8022)
    set_enum("GL_POST_CONVOLUTION_ALPHA_BIAS_EXT", 0x8023)


#### GL_EXT_COORDINATE_FRAME ####
def init_gl_ext_coordinate_frame():
    set_func('glTangent3bEXT', t.void, (t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glTangent3bvEXT', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glTangent3dEXT', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glTangent3dvEXT', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glTangent3fEXT', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTangent3fvEXT', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glTangent3iEXT', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glTangent3ivEXT', t.void, (ct.POINTER(t.GLint),))
    set_func('glTangent3sEXT', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glTangent3svEXT', t.void, (ct.POINTER(t.GLshort),))
    set_func('glBinormal3bEXT', t.void, (t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glBinormal3bvEXT', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glBinormal3dEXT', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glBinormal3dvEXT', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glBinormal3fEXT', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glBinormal3fvEXT', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glBinormal3iEXT', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glBinormal3ivEXT', t.void, (ct.POINTER(t.GLint),))
    set_func('glBinormal3sEXT', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glBinormal3svEXT', t.void, (ct.POINTER(t.GLshort),))
    set_func('glTangentPointerEXT', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glBinormalPointerEXT', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_TANGENT_ARRAY_EXT", 0x8439)
    set_enum("GL_BINORMAL_ARRAY_EXT", 0x843A)
    set_enum("GL_CURRENT_TANGENT_EXT", 0x843B)
    set_enum("GL_CURRENT_BINORMAL_EXT", 0x843C)
    set_enum("GL_TANGENT_ARRAY_TYPE_EXT", 0x843E)
    set_enum("GL_TANGENT_ARRAY_STRIDE_EXT", 0x843F)
    set_enum("GL_BINORMAL_ARRAY_TYPE_EXT", 0x8440)
    set_enum("GL_BINORMAL_ARRAY_STRIDE_EXT", 0x8441)
    set_enum("GL_TANGENT_ARRAY_POINTER_EXT", 0x8442)
    set_enum("GL_BINORMAL_ARRAY_POINTER_EXT", 0x8443)
    set_enum("GL_MAP1_TANGENT_EXT", 0x8444)
    set_enum("GL_MAP2_TANGENT_EXT", 0x8445)
    set_enum("GL_MAP1_BINORMAL_EXT", 0x8446)
    set_enum("GL_MAP2_BINORMAL_EXT", 0x8447)


#### GL_EXT_COPY_IMAGE ####
def init_gl_ext_copy_image():
    set_func('glCopyImageSubDataEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei))


#### GL_EXT_COPY_TEXTURE ####
def init_gl_ext_copy_texture():
    set_func('glCopyTexImage1DEXT', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLint))
    set_func('glCopyTexImage2DEXT', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint))
    set_func('glCopyTexSubImage1DEXT', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei))
    set_func('glCopyTexSubImage2DEXT', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glCopyTexSubImage3DEXT', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))


#### GL_EXT_CULL_VERTEX ####
def init_gl_ext_cull_vertex():
    set_func('glCullParameterdvEXT', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glCullParameterfvEXT', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_CULL_VERTEX_EXT", 0x81AA)
    set_enum("GL_CULL_VERTEX_EYE_POSITION_EXT", 0x81AB)
    set_enum("GL_CULL_VERTEX_OBJECT_POSITION_EXT", 0x81AC)


#### GL_EXT_DEBUG_LABEL ####
def init_gl_ext_debug_label():
    set_func('glLabelObjectEXT', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectLabelEXT', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_enum("GL_PROGRAM_PIPELINE_OBJECT_EXT", 0x8A4F)
    set_enum("GL_PROGRAM_OBJECT_EXT", 0x8B40)
    set_enum("GL_SHADER_OBJECT_EXT", 0x8B48)
    set_enum("GL_BUFFER_OBJECT_EXT", 0x9151)
    set_enum("GL_QUERY_OBJECT_EXT", 0x9153)
    set_enum("GL_VERTEX_ARRAY_OBJECT_EXT", 0x9154)
    set_enum("GL_SAMPLER", 0x82E6)
    set_enum("GL_TRANSFORM_FEEDBACK", 0x8E22)


#### GL_EXT_DEBUG_MARKER ####
def init_gl_ext_debug_marker():
    set_func('glInsertEventMarkerEXT', t.void, (t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glPushGroupMarkerEXT', t.void, (t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glPopGroupMarkerEXT', t.void, ())


#### GL_EXT_DEPTH_BOUNDS_TEST ####
def init_gl_ext_depth_bounds_test():
    set_func('glDepthBoundsEXT', t.void, (t.GLclampd, t.GLclampd))
    set_enum("GL_DEPTH_BOUNDS_TEST_EXT", 0x8890)
    set_enum("GL_DEPTH_BOUNDS_EXT", 0x8891)


#### GL_EXT_DIRECT_STATE_ACCESS ####
def init_gl_ext_direct_state_access():
    set_func('glMatrixLoadfEXT', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixLoaddEXT', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMatrixMultfEXT', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixMultdEXT', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMatrixLoadIdentityEXT', t.void, (t.GLenum,))
    set_func('glMatrixRotatefEXT', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glMatrixRotatedEXT', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMatrixScalefEXT', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glMatrixScaledEXT', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMatrixTranslatefEXT', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glMatrixTranslatedEXT', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMatrixFrustumEXT', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMatrixOrthoEXT', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glMatrixPopEXT', t.void, (t.GLenum,))
    set_func('glMatrixPushEXT', t.void, (t.GLenum,))
    set_func('glClientAttribDefaultEXT', t.void, (t.GLbitfield,))
    set_func('glPushClientAttribDefaultEXT', t.void, (t.GLbitfield,))
    set_func('glTextureParameterfEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLfloat))
    set_func('glTextureParameterfvEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTextureParameteriEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLint))
    set_func('glTextureParameterivEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTextureImage1DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTextureImage2DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTextureSubImage1DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTextureSubImage2DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyTextureImage1DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLint))
    set_func('glCopyTextureImage2DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint))
    set_func('glCopyTextureSubImage1DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei))
    set_func('glCopyTextureSubImage2DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glGetTextureImageEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetTextureParameterfvEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTextureParameterivEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTextureLevelParameterfvEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTextureLevelParameterivEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTextureImage3DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTextureSubImage3DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyTextureSubImage3DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glBindMultiTextureEXT', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glMultiTexCoordPointerEXT', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glMultiTexEnvfEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLfloat))
    set_func('glMultiTexEnvfvEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexEnviEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLint))
    set_func('glMultiTexEnvivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexGendEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLdouble))
    set_func('glMultiTexGendvEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMultiTexGenfEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLfloat))
    set_func('glMultiTexGenfvEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexGeniEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLint))
    set_func('glMultiTexGenivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMultiTexEnvfvEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMultiTexEnvivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMultiTexGendvEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetMultiTexGenfvEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMultiTexGenivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexParameteriEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLint))
    set_func('glMultiTexParameterivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexParameterfEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLfloat))
    set_func('glMultiTexParameterfvEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMultiTexImage1DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glMultiTexImage2DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glMultiTexSubImage1DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glMultiTexSubImage2DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyMultiTexImage1DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLint))
    set_func('glCopyMultiTexImage2DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLint))
    set_func('glCopyMultiTexSubImage1DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei))
    set_func('glCopyMultiTexSubImage2DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glGetMultiTexImageEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetMultiTexParameterfvEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMultiTexParameterivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMultiTexLevelParameterfvEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMultiTexLevelParameterivEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexImage3DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glMultiTexSubImage3DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyMultiTexSubImage3DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glEnableClientStateIndexedEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glDisableClientStateIndexedEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glGetFloatIndexedvEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetDoubleIndexedvEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glGetPointerIndexedvEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(ct.POINTER(t.void))))
    set_func('glEnableIndexedEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glDisableIndexedEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glIsEnabledIndexedEXT', t.GLboolean, (t.GLenum, t.GLuint))
    set_func('glGetIntegerIndexedvEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glGetBooleanIndexedvEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLboolean)))
    set_func('glCompressedTextureImage3DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureImage2DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureImage1DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage3DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage2DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTextureSubImage1DEXT', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetCompressedTextureImageEXT', t.void, (t.GLuint, t.GLenum, t.GLint, ct.POINTER(t.void)))
    set_func('glCompressedMultiTexImage3DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedMultiTexImage2DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedMultiTexImage1DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedMultiTexSubImage3DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedMultiTexSubImage2DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedMultiTexSubImage1DEXT', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetCompressedMultiTexImageEXT', t.void, (t.GLenum, t.GLenum, t.GLint, ct.POINTER(t.void)))
    set_func('glMatrixLoadTransposefEXT', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixLoadTransposedEXT', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glMatrixMultTransposefEXT', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixMultTransposedEXT', t.void, (t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glNamedBufferDataEXT', t.void, (t.GLuint, t.GLsizeiptr, ct.POINTER(t.void), t.GLenum))
    set_func('glNamedBufferSubDataEXT', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glMapNamedBufferEXT', ct.POINTER(t.void), (t.GLuint, t.GLenum))
    set_func('glUnmapNamedBufferEXT', t.GLboolean, (t.GLuint,))
    set_func('glGetNamedBufferParameterivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetNamedBufferPointervEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glGetNamedBufferSubDataEXT', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr, ct.POINTER(t.void)))
    set_func('glProgramUniform1fEXT', t.void, (t.GLuint, t.GLint, t.GLfloat))
    set_func('glProgramUniform2fEXT', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform3fEXT', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform4fEXT', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform1iEXT', t.void, (t.GLuint, t.GLint, t.GLint))
    set_func('glProgramUniform2iEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform3iEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform4iEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform1fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform2fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform3fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform4fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform1ivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform2ivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform3ivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform4ivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniformMatrix2fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x3fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x2fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x4fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x2fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x4fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x3fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glTextureBufferEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLuint))
    set_func('glMultiTexBufferEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint))
    set_func('glTextureParameterIivEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTextureParameterIuivEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetTextureParameterIivEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTextureParameterIuivEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glMultiTexParameterIivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMultiTexParameterIuivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetMultiTexParameterIivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMultiTexParameterIuivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform1uiEXT', t.void, (t.GLuint, t.GLint, t.GLuint))
    set_func('glProgramUniform2uiEXT', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint))
    set_func('glProgramUniform3uiEXT', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform4uiEXT', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform1uivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform2uivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform3uivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform4uivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glNamedProgramLocalParameters4fvEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glNamedProgramLocalParameterI4iEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glNamedProgramLocalParameterI4ivEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glNamedProgramLocalParametersI4ivEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glNamedProgramLocalParameterI4uiEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glNamedProgramLocalParameterI4uivEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glNamedProgramLocalParametersI4uivEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetNamedProgramLocalParameterIivEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glGetNamedProgramLocalParameterIuivEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glEnableClientStateiEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glDisableClientStateiEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glGetFloati_vEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetDoublei_vEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glGetPointeri_vEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(ct.POINTER(t.void))))
    set_func('glNamedProgramStringEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glNamedProgramLocalParameter4dEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glNamedProgramLocalParameter4dvEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glNamedProgramLocalParameter4fEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glNamedProgramLocalParameter4fvEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetNamedProgramLocalParameterdvEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glGetNamedProgramLocalParameterfvEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetNamedProgramivEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetNamedProgramStringEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glNamedRenderbufferStorageEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glGetNamedRenderbufferParameterivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glNamedRenderbufferStorageMultisampleEXT', t.void, (t.GLuint, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glNamedRenderbufferStorageMultisampleCoverageEXT', t.void, (t.GLuint, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glCheckNamedFramebufferStatusEXT', t.GLenum, (t.GLuint, t.GLenum))
    set_func('glNamedFramebufferTexture1DEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glNamedFramebufferTexture2DEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glNamedFramebufferTexture3DEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glNamedFramebufferRenderbufferEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLuint))
    set_func('glGetNamedFramebufferAttachmentParameterivEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGenerateTextureMipmapEXT', t.void, (t.GLuint, t.GLenum))
    set_func('glGenerateMultiTexMipmapEXT', t.void, (t.GLenum, t.GLenum))
    set_func('glFramebufferDrawBufferEXT', t.void, (t.GLuint, t.GLenum))
    set_func('glFramebufferDrawBuffersEXT', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum)))
    set_func('glFramebufferReadBufferEXT', t.void, (t.GLuint, t.GLenum))
    set_func('glGetFramebufferParameterivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glNamedCopyBufferSubDataEXT', t.void, (t.GLuint, t.GLuint, t.GLintptr, t.GLintptr, t.GLsizeiptr))
    set_func('glNamedFramebufferTextureEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLint))
    set_func('glNamedFramebufferTextureLayerEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glNamedFramebufferTextureFaceEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLint, t.GLenum))
    set_func('glTextureRenderbufferEXT', t.void, (t.GLuint, t.GLenum, t.GLuint))
    set_func('glMultiTexRenderbufferEXT', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glVertexArrayVertexOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayColorOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayEdgeFlagOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayIndexOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayNormalOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayTexCoordOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayMultiTexCoordOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayFogCoordOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glVertexArraySecondaryColorOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayVertexAttribOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLsizei, t.GLintptr))
    set_func('glVertexArrayVertexAttribIOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glEnableVertexArrayEXT', t.void, (t.GLuint, t.GLenum))
    set_func('glDisableVertexArrayEXT', t.void, (t.GLuint, t.GLenum))
    set_func('glEnableVertexArrayAttribEXT', t.void, (t.GLuint, t.GLuint))
    set_func('glDisableVertexArrayAttribEXT', t.void, (t.GLuint, t.GLuint))
    set_func('glGetVertexArrayIntegervEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexArrayPointervEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glGetVertexArrayIntegeri_vEXT', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexArrayPointeri_vEXT', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glMapNamedBufferRangeEXT', ct.POINTER(t.void), (t.GLuint, t.GLintptr, t.GLsizeiptr, t.GLbitfield))
    set_func('glFlushMappedNamedBufferRangeEXT', t.void, (t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glNamedBufferStorageEXT', t.void, (t.GLuint, t.GLsizeiptr, ct.POINTER(t.void), t.GLbitfield))
    set_func('glClearNamedBufferDataEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glClearNamedBufferSubDataEXT', t.void, (t.GLuint, t.GLenum, t.GLsizeiptr, t.GLsizeiptr, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glNamedFramebufferParameteriEXT', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glGetNamedFramebufferParameterivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glProgramUniform1dEXT', t.void, (t.GLuint, t.GLint, t.GLdouble))
    set_func('glProgramUniform2dEXT', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform3dEXT', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform4dEXT', t.void, (t.GLuint, t.GLint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramUniform1dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform2dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform3dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniform4dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix2dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix2x3dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix2x4dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3x2dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix3x4dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4x2dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glProgramUniformMatrix4x3dvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLdouble)))
    set_func('glTextureBufferRangeEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glTextureStorage1DEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei))
    set_func('glTextureStorage2DEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTextureStorage3DEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glTextureStorage2DMultisampleEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureStorage3DMultisampleEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glVertexArrayBindVertexBufferEXT', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLintptr, t.GLsizei))
    set_func('glVertexArrayVertexAttribFormatEXT', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLuint))
    set_func('glVertexArrayVertexAttribIFormatEXT', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexArrayVertexAttribLFormatEXT', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLuint))
    set_func('glVertexArrayVertexAttribBindingEXT', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexArrayVertexBindingDivisorEXT', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexArrayVertexAttribLOffsetEXT', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLint, t.GLenum, t.GLsizei, t.GLintptr))
    set_func('glTexturePageCommitmentEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glVertexArrayVertexAttribDivisorEXT', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_enum("GL_PROGRAM_MATRIX_EXT", 0x8E2D)
    set_enum("GL_TRANSPOSE_PROGRAM_MATRIX_EXT", 0x8E2E)
    set_enum("GL_PROGRAM_MATRIX_STACK_DEPTH_EXT", 0x8E2F)


#### GL_EXT_DISCARD_FRAMEBUFFER ####
def init_gl_ext_discard_framebuffer():
    set_func('glDiscardFramebufferEXT', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLenum)))
    set_enum("GL_COLOR_EXT", 0x1800)
    set_enum("GL_DEPTH_EXT", 0x1801)
    set_enum("GL_STENCIL_EXT", 0x1802)


#### GL_EXT_DISJOINT_TIMER_QUERY ####
def init_gl_ext_disjoint_timer_query():
    set_func('glGenQueriesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteQueriesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsQueryEXT', t.GLboolean, (t.GLuint,))
    set_func('glBeginQueryEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glEndQueryEXT', t.void, (t.GLenum,))
    set_func('glQueryCounterEXT', t.void, (t.GLuint, t.GLenum))
    set_func('glGetQueryivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetQueryObjectivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetQueryObjectuivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetQueryObjecti64vEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetQueryObjectui64vEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint64)))
    set_enum("GL_QUERY_COUNTER_BITS_EXT", 0x8864)
    set_enum("GL_CURRENT_QUERY_EXT", 0x8865)
    set_enum("GL_QUERY_RESULT_EXT", 0x8866)
    set_enum("GL_QUERY_RESULT_AVAILABLE_EXT", 0x8867)
    set_enum("GL_TIME_ELAPSED_EXT", 0x88BF)
    set_enum("GL_TIMESTAMP_EXT", 0x8E28)
    set_enum("GL_GPU_DISJOINT_EXT", 0x8FBB)


#### GL_EXT_DRAW_BUFFERS ####
def init_gl_ext_draw_buffers():
    set_func('glDrawBuffersEXT', t.void, (t.GLsizei, ct.POINTER(t.GLenum)))
    set_enum("GL_MAX_COLOR_ATTACHMENTS_EXT", 0x8CDF)
    set_enum("GL_MAX_DRAW_BUFFERS_EXT", 0x8824)
    set_enum("GL_DRAW_BUFFER0_EXT", 0x8825)
    set_enum("GL_DRAW_BUFFER1_EXT", 0x8826)
    set_enum("GL_DRAW_BUFFER2_EXT", 0x8827)
    set_enum("GL_DRAW_BUFFER3_EXT", 0x8828)
    set_enum("GL_DRAW_BUFFER4_EXT", 0x8829)
    set_enum("GL_DRAW_BUFFER5_EXT", 0x882A)
    set_enum("GL_DRAW_BUFFER6_EXT", 0x882B)
    set_enum("GL_DRAW_BUFFER7_EXT", 0x882C)
    set_enum("GL_DRAW_BUFFER8_EXT", 0x882D)
    set_enum("GL_DRAW_BUFFER9_EXT", 0x882E)
    set_enum("GL_DRAW_BUFFER10_EXT", 0x882F)
    set_enum("GL_DRAW_BUFFER11_EXT", 0x8830)
    set_enum("GL_DRAW_BUFFER12_EXT", 0x8831)
    set_enum("GL_DRAW_BUFFER13_EXT", 0x8832)
    set_enum("GL_DRAW_BUFFER14_EXT", 0x8833)
    set_enum("GL_DRAW_BUFFER15_EXT", 0x8834)
    set_enum("GL_COLOR_ATTACHMENT0_EXT", 0x8CE0)
    set_enum("GL_COLOR_ATTACHMENT1_EXT", 0x8CE1)
    set_enum("GL_COLOR_ATTACHMENT2_EXT", 0x8CE2)
    set_enum("GL_COLOR_ATTACHMENT3_EXT", 0x8CE3)
    set_enum("GL_COLOR_ATTACHMENT4_EXT", 0x8CE4)
    set_enum("GL_COLOR_ATTACHMENT5_EXT", 0x8CE5)
    set_enum("GL_COLOR_ATTACHMENT6_EXT", 0x8CE6)
    set_enum("GL_COLOR_ATTACHMENT7_EXT", 0x8CE7)
    set_enum("GL_COLOR_ATTACHMENT8_EXT", 0x8CE8)
    set_enum("GL_COLOR_ATTACHMENT9_EXT", 0x8CE9)
    set_enum("GL_COLOR_ATTACHMENT10_EXT", 0x8CEA)
    set_enum("GL_COLOR_ATTACHMENT11_EXT", 0x8CEB)
    set_enum("GL_COLOR_ATTACHMENT12_EXT", 0x8CEC)
    set_enum("GL_COLOR_ATTACHMENT13_EXT", 0x8CED)
    set_enum("GL_COLOR_ATTACHMENT14_EXT", 0x8CEE)
    set_enum("GL_COLOR_ATTACHMENT15_EXT", 0x8CEF)


#### GL_EXT_DRAW_BUFFERS2 ####
def init_gl_ext_draw_buffers2():
    set_func('glColorMaskIndexedEXT', t.void, (t.GLuint, t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glGetBooleanIndexedvEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLboolean)))
    set_func('glGetIntegerIndexedvEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glEnableIndexedEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glDisableIndexedEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glIsEnabledIndexedEXT', t.GLboolean, (t.GLenum, t.GLuint))


#### GL_EXT_DRAW_BUFFERS_INDEXED ####
def init_gl_ext_draw_buffers_indexed():
    set_func('glEnableiEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glDisableiEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glBlendEquationiEXT', t.void, (t.GLuint, t.GLenum))
    set_func('glBlendEquationSeparateiEXT', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFunciEXT', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFuncSeparateiEXT', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glColorMaskiEXT', t.void, (t.GLuint, t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glIsEnablediEXT', t.GLboolean, (t.GLenum, t.GLuint))
    set_enum("GL_BLEND_EQUATION_RGB", 0x8009)
    set_enum("GL_BLEND_EQUATION_ALPHA", 0x883D)
    set_enum("GL_BLEND_SRC_RGB", 0x80C9)
    set_enum("GL_BLEND_SRC_ALPHA", 0x80CB)
    set_enum("GL_BLEND_DST_RGB", 0x80C8)
    set_enum("GL_BLEND_DST_ALPHA", 0x80CA)
    set_enum("GL_COLOR_WRITEMASK", 0x0C23)
    set_enum("GL_BLEND", 0x0BE2)
    set_enum("GL_FUNC_ADD", 0x8006)
    set_enum("GL_FUNC_SUBTRACT", 0x800A)
    set_enum("GL_FUNC_REVERSE_SUBTRACT", 0x800B)
    set_enum("GL_MIN", 0x8007)
    set_enum("GL_MAX", 0x8008)
    set_enum("GL_ZERO", 0)
    set_enum("GL_ONE", 1)
    set_enum("GL_SRC_COLOR", 0x0300)
    set_enum("GL_ONE_MINUS_SRC_COLOR", 0x0301)
    set_enum("GL_DST_COLOR", 0x0306)
    set_enum("GL_ONE_MINUS_DST_COLOR", 0x0307)
    set_enum("GL_SRC_ALPHA", 0x0302)
    set_enum("GL_ONE_MINUS_SRC_ALPHA", 0x0303)
    set_enum("GL_DST_ALPHA", 0x0304)
    set_enum("GL_ONE_MINUS_DST_ALPHA", 0x0305)
    set_enum("GL_CONSTANT_COLOR", 0x8001)
    set_enum("GL_ONE_MINUS_CONSTANT_COLOR", 0x8002)
    set_enum("GL_CONSTANT_ALPHA", 0x8003)
    set_enum("GL_ONE_MINUS_CONSTANT_ALPHA", 0x8004)
    set_enum("GL_SRC_ALPHA_SATURATE", 0x0308)


#### GL_EXT_DRAW_ELEMENTS_BASE_VERTEX ####
def init_gl_ext_draw_elements_base_vertex():
    set_func('glDrawElementsBaseVertexEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawRangeElementsBaseVertexEXT', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawElementsInstancedBaseVertexEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLint))
    set_func('glMultiDrawElementsBaseVertexEXT', t.void, (t.GLenum, ct.POINTER(t.GLsizei), t.GLenum, ct.POINTER(ct.POINTER(t.void)), t.GLsizei, ct.POINTER(t.GLint)))


#### GL_EXT_DRAW_INSTANCED ####
def init_gl_ext_draw_instanced():
    set_func('glDrawArraysInstancedEXT', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glDrawElementsInstancedEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei))


#### GL_EXT_DRAW_RANGE_ELEMENTS ####
def init_gl_ext_draw_range_elements():
    set_func('glDrawRangeElementsEXT', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_enum("GL_MAX_ELEMENTS_VERTICES_EXT", 0x80E8)
    set_enum("GL_MAX_ELEMENTS_INDICES_EXT", 0x80E9)


#### GL_EXT_FOG_COORD ####
def init_gl_ext_fog_coord():
    set_func('glFogCoordfEXT', t.void, (t.GLfloat,))
    set_func('glFogCoordfvEXT', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glFogCoorddEXT', t.void, (t.GLdouble,))
    set_func('glFogCoorddvEXT', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glFogCoordPointerEXT', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_FOG_COORDINATE_SOURCE_EXT", 0x8450)
    set_enum("GL_FOG_COORDINATE_EXT", 0x8451)
    set_enum("GL_FRAGMENT_DEPTH_EXT", 0x8452)
    set_enum("GL_CURRENT_FOG_COORDINATE_EXT", 0x8453)
    set_enum("GL_FOG_COORDINATE_ARRAY_TYPE_EXT", 0x8454)
    set_enum("GL_FOG_COORDINATE_ARRAY_STRIDE_EXT", 0x8455)
    set_enum("GL_FOG_COORDINATE_ARRAY_POINTER_EXT", 0x8456)
    set_enum("GL_FOG_COORDINATE_ARRAY_EXT", 0x8457)


#### GL_EXT_FRAMEBUFFER_BLIT ####
def init_gl_ext_framebuffer_blit():
    set_func('glBlitFramebufferEXT', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLbitfield, t.GLenum))
    set_enum("GL_READ_FRAMEBUFFER_EXT", 0x8CA8)
    set_enum("GL_DRAW_FRAMEBUFFER_EXT", 0x8CA9)
    set_enum("GL_DRAW_FRAMEBUFFER_BINDING_EXT", 0x8CA6)
    set_enum("GL_READ_FRAMEBUFFER_BINDING_EXT", 0x8CAA)


#### GL_EXT_FRAMEBUFFER_MULTISAMPLE ####
def init_gl_ext_framebuffer_multisample():
    set_func('glRenderbufferStorageMultisampleEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_enum("GL_RENDERBUFFER_SAMPLES_EXT", 0x8CAB)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT", 0x8D56)
    set_enum("GL_MAX_SAMPLES_EXT", 0x8D57)


#### GL_EXT_FRAMEBUFFER_MULTISAMPLE_BLIT_SCALED ####
def init_gl_ext_framebuffer_multisample_blit_scaled():
    set_enum("GL_SCALED_RESOLVE_FASTEST_EXT", 0x90BA)
    set_enum("GL_SCALED_RESOLVE_NICEST_EXT", 0x90BB)


#### GL_EXT_FRAMEBUFFER_OBJECT ####
def init_gl_ext_framebuffer_object():
    set_func('glIsRenderbufferEXT', t.GLboolean, (t.GLuint,))
    set_func('glBindRenderbufferEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteRenderbuffersEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenRenderbuffersEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glRenderbufferStorageEXT', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glGetRenderbufferParameterivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glIsFramebufferEXT', t.GLboolean, (t.GLuint,))
    set_func('glBindFramebufferEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteFramebuffersEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenFramebuffersEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glCheckFramebufferStatusEXT', t.GLenum, (t.GLenum,))
    set_func('glFramebufferTexture1DEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFramebufferTexture2DEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFramebufferTexture3DEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glFramebufferRenderbufferEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint))
    set_func('glGetFramebufferAttachmentParameterivEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGenerateMipmapEXT', t.void, (t.GLenum,))
    set_enum("GL_INVALID_FRAMEBUFFER_OPERATION_EXT", 0x0506)
    set_enum("GL_MAX_RENDERBUFFER_SIZE_EXT", 0x84E8)
    set_enum("GL_FRAMEBUFFER_BINDING_EXT", 0x8CA6)
    set_enum("GL_RENDERBUFFER_BINDING_EXT", 0x8CA7)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT", 0x8CD0)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT", 0x8CD1)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT", 0x8CD2)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT", 0x8CD3)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT", 0x8CD4)
    set_enum("GL_FRAMEBUFFER_COMPLETE_EXT", 0x8CD5)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT", 0x8CD6)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT", 0x8CD7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT", 0x8CD9)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT", 0x8CDA)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT", 0x8CDB)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT", 0x8CDC)
    set_enum("GL_FRAMEBUFFER_UNSUPPORTED_EXT", 0x8CDD)
    set_enum("GL_MAX_COLOR_ATTACHMENTS_EXT", 0x8CDF)
    set_enum("GL_COLOR_ATTACHMENT0_EXT", 0x8CE0)
    set_enum("GL_COLOR_ATTACHMENT1_EXT", 0x8CE1)
    set_enum("GL_COLOR_ATTACHMENT2_EXT", 0x8CE2)
    set_enum("GL_COLOR_ATTACHMENT3_EXT", 0x8CE3)
    set_enum("GL_COLOR_ATTACHMENT4_EXT", 0x8CE4)
    set_enum("GL_COLOR_ATTACHMENT5_EXT", 0x8CE5)
    set_enum("GL_COLOR_ATTACHMENT6_EXT", 0x8CE6)
    set_enum("GL_COLOR_ATTACHMENT7_EXT", 0x8CE7)
    set_enum("GL_COLOR_ATTACHMENT8_EXT", 0x8CE8)
    set_enum("GL_COLOR_ATTACHMENT9_EXT", 0x8CE9)
    set_enum("GL_COLOR_ATTACHMENT10_EXT", 0x8CEA)
    set_enum("GL_COLOR_ATTACHMENT11_EXT", 0x8CEB)
    set_enum("GL_COLOR_ATTACHMENT12_EXT", 0x8CEC)
    set_enum("GL_COLOR_ATTACHMENT13_EXT", 0x8CED)
    set_enum("GL_COLOR_ATTACHMENT14_EXT", 0x8CEE)
    set_enum("GL_COLOR_ATTACHMENT15_EXT", 0x8CEF)
    set_enum("GL_DEPTH_ATTACHMENT_EXT", 0x8D00)
    set_enum("GL_STENCIL_ATTACHMENT_EXT", 0x8D20)
    set_enum("GL_FRAMEBUFFER_EXT", 0x8D40)
    set_enum("GL_RENDERBUFFER_EXT", 0x8D41)
    set_enum("GL_RENDERBUFFER_WIDTH_EXT", 0x8D42)
    set_enum("GL_RENDERBUFFER_HEIGHT_EXT", 0x8D43)
    set_enum("GL_RENDERBUFFER_INTERNAL_FORMAT_EXT", 0x8D44)
    set_enum("GL_STENCIL_INDEX1_EXT", 0x8D46)
    set_enum("GL_STENCIL_INDEX4_EXT", 0x8D47)
    set_enum("GL_STENCIL_INDEX8_EXT", 0x8D48)
    set_enum("GL_STENCIL_INDEX16_EXT", 0x8D49)
    set_enum("GL_RENDERBUFFER_RED_SIZE_EXT", 0x8D50)
    set_enum("GL_RENDERBUFFER_GREEN_SIZE_EXT", 0x8D51)
    set_enum("GL_RENDERBUFFER_BLUE_SIZE_EXT", 0x8D52)
    set_enum("GL_RENDERBUFFER_ALPHA_SIZE_EXT", 0x8D53)
    set_enum("GL_RENDERBUFFER_DEPTH_SIZE_EXT", 0x8D54)
    set_enum("GL_RENDERBUFFER_STENCIL_SIZE_EXT", 0x8D55)


#### GL_EXT_FRAMEBUFFER_SRGB ####
def init_gl_ext_framebuffer_srgb():
    set_enum("GL_FRAMEBUFFER_SRGB_EXT", 0x8DB9)
    set_enum("GL_FRAMEBUFFER_SRGB_CAPABLE_EXT", 0x8DBA)


#### GL_EXT_GEOMETRY_SHADER ####
def init_gl_ext_geometry_shader():
    set_func('glFramebufferTextureEXT', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_enum("GL_GEOMETRY_SHADER_EXT", 0x8DD9)
    set_enum("GL_GEOMETRY_SHADER_BIT_EXT", 0x00000004)
    set_enum("GL_GEOMETRY_LINKED_VERTICES_OUT_EXT", 0x8916)
    set_enum("GL_GEOMETRY_LINKED_INPUT_TYPE_EXT", 0x8917)
    set_enum("GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT", 0x8918)
    set_enum("GL_GEOMETRY_SHADER_INVOCATIONS_EXT", 0x887F)
    set_enum("GL_LAYER_PROVOKING_VERTEX_EXT", 0x825E)
    set_enum("GL_LINES_ADJACENCY_EXT", 0x000A)
    set_enum("GL_LINE_STRIP_ADJACENCY_EXT", 0x000B)
    set_enum("GL_TRIANGLES_ADJACENCY_EXT", 0x000C)
    set_enum("GL_TRIANGLE_STRIP_ADJACENCY_EXT", 0x000D)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT", 0x8DDF)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT", 0x8A2C)
    set_enum("GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT", 0x8A32)
    set_enum("GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT", 0x9123)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT", 0x9124)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT", 0x8DE0)
    set_enum("GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT", 0x8DE1)
    set_enum("GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT", 0x8E5A)
    set_enum("GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT", 0x8C29)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT", 0x92CF)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT", 0x92D5)
    set_enum("GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT", 0x90CD)
    set_enum("GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT", 0x90D7)
    set_enum("GL_FIRST_VERTEX_CONVENTION_EXT", 0x8E4D)
    set_enum("GL_LAST_VERTEX_CONVENTION_EXT", 0x8E4E)
    set_enum("GL_UNDEFINED_VERTEX_EXT", 0x8260)
    set_enum("GL_PRIMITIVES_GENERATED_EXT", 0x8C87)
    set_enum("GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT", 0x9312)
    set_enum("GL_MAX_FRAMEBUFFER_LAYERS_EXT", 0x9317)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT", 0x8DA8)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT", 0x8DA7)
    set_enum("GL_REFERENCED_BY_GEOMETRY_SHADER_EXT", 0x9309)


#### GL_EXT_GEOMETRY_SHADER4 ####
def init_gl_ext_geometry_shader4():
    set_func('glProgramParameteriEXT', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_enum("GL_GEOMETRY_SHADER_EXT", 0x8DD9)
    set_enum("GL_GEOMETRY_VERTICES_OUT_EXT", 0x8DDA)
    set_enum("GL_GEOMETRY_INPUT_TYPE_EXT", 0x8DDB)
    set_enum("GL_GEOMETRY_OUTPUT_TYPE_EXT", 0x8DDC)
    set_enum("GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT", 0x8C29)
    set_enum("GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT", 0x8DDD)
    set_enum("GL_MAX_VERTEX_VARYING_COMPONENTS_EXT", 0x8DDE)
    set_enum("GL_MAX_VARYING_COMPONENTS_EXT", 0x8B4B)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT", 0x8DDF)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT", 0x8DE0)
    set_enum("GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT", 0x8DE1)
    set_enum("GL_LINES_ADJACENCY_EXT", 0x000A)
    set_enum("GL_LINE_STRIP_ADJACENCY_EXT", 0x000B)
    set_enum("GL_TRIANGLES_ADJACENCY_EXT", 0x000C)
    set_enum("GL_TRIANGLE_STRIP_ADJACENCY_EXT", 0x000D)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT", 0x8DA8)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT", 0x8DA9)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT", 0x8DA7)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT", 0x8CD4)
    set_enum("GL_PROGRAM_POINT_SIZE_EXT", 0x8642)


#### GL_EXT_GPU_PROGRAM_PARAMETERS ####
def init_gl_ext_gpu_program_parameters():
    set_func('glProgramEnvParameters4fvEXT', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramLocalParameters4fvEXT', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))


#### GL_EXT_GPU_SHADER4 ####
def init_gl_ext_gpu_shader4():
    set_func('glGetUniformuivEXT', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLuint)))
    set_func('glBindFragDataLocationEXT', t.void, (t.GLuint, t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetFragDataLocationEXT', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glUniform1uiEXT', t.void, (t.GLint, t.GLuint))
    set_func('glUniform2uiEXT', t.void, (t.GLint, t.GLuint, t.GLuint))
    set_func('glUniform3uiEXT', t.void, (t.GLint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glUniform4uiEXT', t.void, (t.GLint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glUniform1uivEXT', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform2uivEXT', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform3uivEXT', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glUniform4uivEXT', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT", 0x88FD)
    set_enum("GL_SAMPLER_1D_ARRAY_EXT", 0x8DC0)
    set_enum("GL_SAMPLER_2D_ARRAY_EXT", 0x8DC1)
    set_enum("GL_SAMPLER_BUFFER_EXT", 0x8DC2)
    set_enum("GL_SAMPLER_1D_ARRAY_SHADOW_EXT", 0x8DC3)
    set_enum("GL_SAMPLER_2D_ARRAY_SHADOW_EXT", 0x8DC4)
    set_enum("GL_SAMPLER_CUBE_SHADOW_EXT", 0x8DC5)
    set_enum("GL_UNSIGNED_INT_VEC2_EXT", 0x8DC6)
    set_enum("GL_UNSIGNED_INT_VEC3_EXT", 0x8DC7)
    set_enum("GL_UNSIGNED_INT_VEC4_EXT", 0x8DC8)
    set_enum("GL_INT_SAMPLER_1D_EXT", 0x8DC9)
    set_enum("GL_INT_SAMPLER_2D_EXT", 0x8DCA)
    set_enum("GL_INT_SAMPLER_3D_EXT", 0x8DCB)
    set_enum("GL_INT_SAMPLER_CUBE_EXT", 0x8DCC)
    set_enum("GL_INT_SAMPLER_2D_RECT_EXT", 0x8DCD)
    set_enum("GL_INT_SAMPLER_1D_ARRAY_EXT", 0x8DCE)
    set_enum("GL_INT_SAMPLER_2D_ARRAY_EXT", 0x8DCF)
    set_enum("GL_INT_SAMPLER_BUFFER_EXT", 0x8DD0)
    set_enum("GL_UNSIGNED_INT_SAMPLER_1D_EXT", 0x8DD1)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_EXT", 0x8DD2)
    set_enum("GL_UNSIGNED_INT_SAMPLER_3D_EXT", 0x8DD3)
    set_enum("GL_UNSIGNED_INT_SAMPLER_CUBE_EXT", 0x8DD4)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT", 0x8DD5)
    set_enum("GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT", 0x8DD6)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT", 0x8DD7)
    set_enum("GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT", 0x8DD8)
    set_enum("GL_MIN_PROGRAM_TEXEL_OFFSET_EXT", 0x8904)
    set_enum("GL_MAX_PROGRAM_TEXEL_OFFSET_EXT", 0x8905)


#### GL_EXT_HISTOGRAM ####
def init_gl_ext_histogram():
    set_func('glGetHistogramEXT', t.void, (t.GLenum, t.GLboolean, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetHistogramParameterfvEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetHistogramParameterivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMinmaxEXT', t.void, (t.GLenum, t.GLboolean, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetMinmaxParameterfvEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMinmaxParameterivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glHistogramEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLboolean))
    set_func('glMinmaxEXT', t.void, (t.GLenum, t.GLenum, t.GLboolean))
    set_func('glResetHistogramEXT', t.void, (t.GLenum,))
    set_func('glResetMinmaxEXT', t.void, (t.GLenum,))
    set_enum("GL_HISTOGRAM_EXT", 0x8024)
    set_enum("GL_PROXY_HISTOGRAM_EXT", 0x8025)
    set_enum("GL_HISTOGRAM_WIDTH_EXT", 0x8026)
    set_enum("GL_HISTOGRAM_FORMAT_EXT", 0x8027)
    set_enum("GL_HISTOGRAM_RED_SIZE_EXT", 0x8028)
    set_enum("GL_HISTOGRAM_GREEN_SIZE_EXT", 0x8029)
    set_enum("GL_HISTOGRAM_BLUE_SIZE_EXT", 0x802A)
    set_enum("GL_HISTOGRAM_ALPHA_SIZE_EXT", 0x802B)
    set_enum("GL_HISTOGRAM_LUMINANCE_SIZE_EXT", 0x802C)
    set_enum("GL_HISTOGRAM_SINK_EXT", 0x802D)
    set_enum("GL_MINMAX_EXT", 0x802E)
    set_enum("GL_MINMAX_FORMAT_EXT", 0x802F)
    set_enum("GL_MINMAX_SINK_EXT", 0x8030)
    set_enum("GL_TABLE_TOO_LARGE_EXT", 0x8031)


#### GL_EXT_INDEX_ARRAY_FORMATS ####
def init_gl_ext_index_array_formats():
    set_enum("GL_IUI_V2F_EXT", 0x81AD)
    set_enum("GL_IUI_V3F_EXT", 0x81AE)
    set_enum("GL_IUI_N3F_V2F_EXT", 0x81AF)
    set_enum("GL_IUI_N3F_V3F_EXT", 0x81B0)
    set_enum("GL_T2F_IUI_V2F_EXT", 0x81B1)
    set_enum("GL_T2F_IUI_V3F_EXT", 0x81B2)
    set_enum("GL_T2F_IUI_N3F_V2F_EXT", 0x81B3)
    set_enum("GL_T2F_IUI_N3F_V3F_EXT", 0x81B4)


#### GL_EXT_INDEX_FUNC ####
def init_gl_ext_index_func():
    set_func('glIndexFuncEXT', t.void, (t.GLenum, t.GLclampf))
    set_enum("GL_INDEX_TEST_EXT", 0x81B5)
    set_enum("GL_INDEX_TEST_FUNC_EXT", 0x81B6)
    set_enum("GL_INDEX_TEST_REF_EXT", 0x81B7)


#### GL_EXT_INDEX_MATERIAL ####
def init_gl_ext_index_material():
    set_func('glIndexMaterialEXT', t.void, (t.GLenum, t.GLenum))
    set_enum("GL_INDEX_MATERIAL_EXT", 0x81B8)
    set_enum("GL_INDEX_MATERIAL_PARAMETER_EXT", 0x81B9)
    set_enum("GL_INDEX_MATERIAL_FACE_EXT", 0x81BA)


#### GL_EXT_INSTANCED_ARRAYS ####
def init_gl_ext_instanced_arrays():
    set_func('glDrawArraysInstancedEXT', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glDrawElementsInstancedEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei))
    set_func('glVertexAttribDivisorEXT', t.void, (t.GLuint, t.GLuint))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT", 0x88FE)


#### GL_EXT_LIGHT_TEXTURE ####
def init_gl_ext_light_texture():
    set_func('glApplyTextureEXT', t.void, (t.GLenum,))
    set_func('glTextureLightEXT', t.void, (t.GLenum,))
    set_func('glTextureMaterialEXT', t.void, (t.GLenum, t.GLenum))
    set_enum("GL_FRAGMENT_MATERIAL_EXT", 0x8349)
    set_enum("GL_FRAGMENT_NORMAL_EXT", 0x834A)
    set_enum("GL_FRAGMENT_COLOR_EXT", 0x834C)
    set_enum("GL_ATTENUATION_EXT", 0x834D)
    set_enum("GL_SHADOW_ATTENUATION_EXT", 0x834E)
    set_enum("GL_TEXTURE_APPLICATION_MODE_EXT", 0x834F)
    set_enum("GL_TEXTURE_LIGHT_EXT", 0x8350)
    set_enum("GL_TEXTURE_MATERIAL_FACE_EXT", 0x8351)
    set_enum("GL_TEXTURE_MATERIAL_PARAMETER_EXT", 0x8352)
    set_enum("GL_FRAGMENT_DEPTH_EXT", 0x8452)


#### GL_EXT_MAP_BUFFER_RANGE ####
def init_gl_ext_map_buffer_range():
    set_func('glMapBufferRangeEXT', ct.POINTER(t.void), (t.GLenum, t.GLintptr, t.GLsizeiptr, t.GLbitfield))
    set_func('glFlushMappedBufferRangeEXT', t.void, (t.GLenum, t.GLintptr, t.GLsizeiptr))
    set_enum("GL_MAP_READ_BIT_EXT", 0x0001)
    set_enum("GL_MAP_WRITE_BIT_EXT", 0x0002)
    set_enum("GL_MAP_INVALIDATE_RANGE_BIT_EXT", 0x0004)
    set_enum("GL_MAP_INVALIDATE_BUFFER_BIT_EXT", 0x0008)
    set_enum("GL_MAP_FLUSH_EXPLICIT_BIT_EXT", 0x0010)
    set_enum("GL_MAP_UNSYNCHRONIZED_BIT_EXT", 0x0020)


#### GL_EXT_MULTI_DRAW_ARRAYS ####
def init_gl_ext_multi_draw_arrays():
    set_func('glMultiDrawArraysEXT', t.void, (t.GLenum, ct.POINTER(t.GLint), ct.POINTER(t.GLsizei), t.GLsizei))
    set_func('glMultiDrawElementsEXT', t.void, (t.GLenum, ct.POINTER(t.GLsizei), t.GLenum, ct.POINTER(ct.POINTER(t.void)), t.GLsizei))


#### GL_EXT_MULTI_DRAW_INDIRECT ####
def init_gl_ext_multi_draw_indirect():
    set_func('glMultiDrawArraysIndirectEXT', t.void, (t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei))
    set_func('glMultiDrawElementsIndirectEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei))


#### GL_EXT_MULTISAMPLE ####
def init_gl_ext_multisample():
    set_func('glSampleMaskEXT', t.void, (t.GLclampf, t.GLboolean))
    set_func('glSamplePatternEXT', t.void, (t.GLenum,))
    set_enum("GL_MULTISAMPLE_EXT", 0x809D)
    set_enum("GL_SAMPLE_ALPHA_TO_MASK_EXT", 0x809E)
    set_enum("GL_SAMPLE_ALPHA_TO_ONE_EXT", 0x809F)
    set_enum("GL_SAMPLE_MASK_EXT", 0x80A0)
    set_enum("GL_1PASS_EXT", 0x80A1)
    set_enum("GL_2PASS_0_EXT", 0x80A2)
    set_enum("GL_2PASS_1_EXT", 0x80A3)
    set_enum("GL_4PASS_0_EXT", 0x80A4)
    set_enum("GL_4PASS_1_EXT", 0x80A5)
    set_enum("GL_4PASS_2_EXT", 0x80A6)
    set_enum("GL_4PASS_3_EXT", 0x80A7)
    set_enum("GL_SAMPLE_BUFFERS_EXT", 0x80A8)
    set_enum("GL_SAMPLES_EXT", 0x80A9)
    set_enum("GL_SAMPLE_MASK_VALUE_EXT", 0x80AA)
    set_enum("GL_SAMPLE_MASK_INVERT_EXT", 0x80AB)
    set_enum("GL_SAMPLE_PATTERN_EXT", 0x80AC)
    set_enum("GL_MULTISAMPLE_BIT_EXT", 0x20000000)


#### GL_EXT_MULTISAMPLED_COMPATIBILITY ####
def init_gl_ext_multisampled_compatibility():
    set_enum("GL_MULTISAMPLE_EXT", 0x809D)
    set_enum("GL_SAMPLE_ALPHA_TO_ONE_EXT", 0x809F)


#### GL_EXT_MULTISAMPLED_RENDER_TO_TEXTURE ####
def init_gl_ext_multisampled_render_to_texture():
    set_func('glRenderbufferStorageMultisampleEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glFramebufferTexture2DMultisampleEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLsizei))
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT", 0x8D6C)
    set_enum("GL_RENDERBUFFER_SAMPLES_EXT", 0x8CAB)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT", 0x8D56)
    set_enum("GL_MAX_SAMPLES_EXT", 0x8D57)


#### GL_EXT_MULTIVIEW_DRAW_BUFFERS ####
def init_gl_ext_multiview_draw_buffers():
    set_func('glReadBufferIndexedEXT', t.void, (t.GLenum, t.GLint))
    set_func('glDrawBuffersIndexedEXT', t.void, (t.GLint, ct.POINTER(t.GLenum), ct.POINTER(t.GLint)))
    set_func('glGetIntegeri_vEXT', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_enum("GL_COLOR_ATTACHMENT_EXT", 0x90F0)
    set_enum("GL_MULTIVIEW_EXT", 0x90F1)
    set_enum("GL_DRAW_BUFFER_EXT", 0x0C01)
    set_enum("GL_READ_BUFFER_EXT", 0x0C02)
    set_enum("GL_MAX_MULTIVIEW_BUFFERS_EXT", 0x90F2)


#### GL_EXT_OCCLUSION_QUERY_BOOLEAN ####
def init_gl_ext_occlusion_query_boolean():
    set_func('glGenQueriesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteQueriesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsQueryEXT', t.GLboolean, (t.GLuint,))
    set_func('glBeginQueryEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glEndQueryEXT', t.void, (t.GLenum,))
    set_func('glGetQueryivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetQueryObjectuivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_enum("GL_ANY_SAMPLES_PASSED_EXT", 0x8C2F)
    set_enum("GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT", 0x8D6A)
    set_enum("GL_CURRENT_QUERY_EXT", 0x8865)
    set_enum("GL_QUERY_RESULT_EXT", 0x8866)
    set_enum("GL_QUERY_RESULT_AVAILABLE_EXT", 0x8867)


#### GL_EXT_PACKED_DEPTH_STENCIL ####
def init_gl_ext_packed_depth_stencil():
    set_enum("GL_DEPTH_STENCIL_EXT", 0x84F9)
    set_enum("GL_UNSIGNED_INT_24_8_EXT", 0x84FA)
    set_enum("GL_DEPTH24_STENCIL8_EXT", 0x88F0)
    set_enum("GL_TEXTURE_STENCIL_SIZE_EXT", 0x88F1)


#### GL_EXT_PACKED_FLOAT ####
def init_gl_ext_packed_float():
    set_enum("GL_R11F_G11F_B10F_EXT", 0x8C3A)
    set_enum("GL_UNSIGNED_INT_10F_11F_11F_REV_EXT", 0x8C3B)
    set_enum("GL_RGBA_SIGNED_COMPONENTS_EXT", 0x8C3C)


#### GL_EXT_PACKED_PIXELS ####
def init_gl_ext_packed_pixels():
    set_enum("GL_UNSIGNED_BYTE_3_3_2_EXT", 0x8032)
    set_enum("GL_UNSIGNED_SHORT_4_4_4_4_EXT", 0x8033)
    set_enum("GL_UNSIGNED_SHORT_5_5_5_1_EXT", 0x8034)
    set_enum("GL_UNSIGNED_INT_8_8_8_8_EXT", 0x8035)
    set_enum("GL_UNSIGNED_INT_10_10_10_2_EXT", 0x8036)


#### GL_EXT_PALETTED_TEXTURE ####
def init_gl_ext_paletted_texture():
    set_func('glColorTableEXT', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetColorTableEXT', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetColorTableParameterivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetColorTableParameterfvEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_COLOR_INDEX1_EXT", 0x80E2)
    set_enum("GL_COLOR_INDEX2_EXT", 0x80E3)
    set_enum("GL_COLOR_INDEX4_EXT", 0x80E4)
    set_enum("GL_COLOR_INDEX8_EXT", 0x80E5)
    set_enum("GL_COLOR_INDEX12_EXT", 0x80E6)
    set_enum("GL_COLOR_INDEX16_EXT", 0x80E7)
    set_enum("GL_TEXTURE_INDEX_SIZE_EXT", 0x80ED)


#### GL_EXT_PIXEL_BUFFER_OBJECT ####
def init_gl_ext_pixel_buffer_object():
    set_enum("GL_PIXEL_PACK_BUFFER_EXT", 0x88EB)
    set_enum("GL_PIXEL_UNPACK_BUFFER_EXT", 0x88EC)
    set_enum("GL_PIXEL_PACK_BUFFER_BINDING_EXT", 0x88ED)
    set_enum("GL_PIXEL_UNPACK_BUFFER_BINDING_EXT", 0x88EF)


#### GL_EXT_PIXEL_TRANSFORM ####
def init_gl_ext_pixel_transform():
    set_func('glPixelTransformParameteriEXT', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glPixelTransformParameterfEXT', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glPixelTransformParameterivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glPixelTransformParameterfvEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetPixelTransformParameterivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetPixelTransformParameterfvEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_PIXEL_TRANSFORM_2D_EXT", 0x8330)
    set_enum("GL_PIXEL_MAG_FILTER_EXT", 0x8331)
    set_enum("GL_PIXEL_MIN_FILTER_EXT", 0x8332)
    set_enum("GL_PIXEL_CUBIC_WEIGHT_EXT", 0x8333)
    set_enum("GL_CUBIC_EXT", 0x8334)
    set_enum("GL_AVERAGE_EXT", 0x8335)
    set_enum("GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT", 0x8336)
    set_enum("GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT", 0x8337)
    set_enum("GL_PIXEL_TRANSFORM_2D_MATRIX_EXT", 0x8338)


#### GL_EXT_POINT_PARAMETERS ####
def init_gl_ext_point_parameters():
    set_func('glPointParameterfEXT', t.void, (t.GLenum, t.GLfloat))
    set_func('glPointParameterfvEXT', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_POINT_SIZE_MIN_EXT", 0x8126)
    set_enum("GL_POINT_SIZE_MAX_EXT", 0x8127)
    set_enum("GL_POINT_FADE_THRESHOLD_SIZE_EXT", 0x8128)
    set_enum("GL_DISTANCE_ATTENUATION_EXT", 0x8129)


#### GL_EXT_POLYGON_OFFSET ####
def init_gl_ext_polygon_offset():
    set_func('glPolygonOffsetEXT', t.void, (t.GLfloat, t.GLfloat))
    set_enum("GL_POLYGON_OFFSET_EXT", 0x8037)
    set_enum("GL_POLYGON_OFFSET_FACTOR_EXT", 0x8038)
    set_enum("GL_POLYGON_OFFSET_BIAS_EXT", 0x8039)


#### GL_EXT_POLYGON_OFFSET_CLAMP ####
def init_gl_ext_polygon_offset_clamp():
    set_func('glPolygonOffsetClampEXT', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_enum("GL_POLYGON_OFFSET_CLAMP_EXT", 0x8E1B)


#### GL_EXT_PRIMITIVE_BOUNDING_BOX ####
def init_gl_ext_primitive_bounding_box():
    set_func('glPrimitiveBoundingBoxEXT', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_enum("GL_PRIMITIVE_BOUNDING_BOX_EXT", 0x92BE)


#### GL_EXT_PROTECTED_TEXTURES ####
def init_gl_ext_protected_textures():
    set_enum("GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT", 0x00000010)
    set_enum("GL_TEXTURE_PROTECTED_EXT", 0x8BFA)


#### GL_EXT_PROVOKING_VERTEX ####
def init_gl_ext_provoking_vertex():
    set_func('glProvokingVertexEXT', t.void, (t.GLenum,))
    set_enum("GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT", 0x8E4C)
    set_enum("GL_FIRST_VERTEX_CONVENTION_EXT", 0x8E4D)
    set_enum("GL_LAST_VERTEX_CONVENTION_EXT", 0x8E4E)
    set_enum("GL_PROVOKING_VERTEX_EXT", 0x8E4F)


#### GL_EXT_PVRTC_SRGB ####
def init_gl_ext_pvrtc_srgb():
    set_enum("GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT", 0x8A54)
    set_enum("GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT", 0x8A55)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT", 0x8A56)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT", 0x8A57)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG", 0x93F0)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG", 0x93F1)


#### GL_EXT_RASTER_MULTISAMPLE ####
def init_gl_ext_raster_multisample():
    set_func('glRasterSamplesEXT', t.void, (t.GLuint, t.GLboolean))
    set_enum("GL_RASTER_MULTISAMPLE_EXT", 0x9327)
    set_enum("GL_RASTER_SAMPLES_EXT", 0x9328)
    set_enum("GL_MAX_RASTER_SAMPLES_EXT", 0x9329)
    set_enum("GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT", 0x932A)
    set_enum("GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT", 0x932B)
    set_enum("GL_EFFECTIVE_RASTER_SAMPLES_EXT", 0x932C)


#### GL_EXT_READ_FORMAT_BGRA ####
def init_gl_ext_read_format_bgra():
    set_enum("GL_BGRA_EXT", 0x80E1)
    set_enum("GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT", 0x8365)
    set_enum("GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT", 0x8366)


#### GL_EXT_RENDER_SNORM ####
def init_gl_ext_render_snorm():
    set_enum("GL_BYTE", 0x1400)
    set_enum("GL_SHORT", 0x1402)
    set_enum("GL_R8_SNORM", 0x8F94)
    set_enum("GL_RG8_SNORM", 0x8F95)
    set_enum("GL_RGBA8_SNORM", 0x8F97)
    set_enum("GL_R16_SNORM_EXT", 0x8F98)
    set_enum("GL_RG16_SNORM_EXT", 0x8F99)
    set_enum("GL_RGBA16_SNORM_EXT", 0x8F9B)


#### GL_EXT_RESCALE_NORMAL ####
def init_gl_ext_rescale_normal():
    set_enum("GL_RESCALE_NORMAL_EXT", 0x803A)


#### GL_EXT_ROBUSTNESS ####
def init_gl_ext_robustness():
    set_func('glGetGraphicsResetStatusEXT', t.GLenum, ())
    set_func('glReadnPixelsEXT', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnUniformfvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnUniformivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_GUILTY_CONTEXT_RESET_EXT", 0x8253)
    set_enum("GL_INNOCENT_CONTEXT_RESET_EXT", 0x8254)
    set_enum("GL_UNKNOWN_CONTEXT_RESET_EXT", 0x8255)
    set_enum("GL_CONTEXT_ROBUST_ACCESS_EXT", 0x90F3)
    set_enum("GL_RESET_NOTIFICATION_STRATEGY_EXT", 0x8256)
    set_enum("GL_LOSE_CONTEXT_ON_RESET_EXT", 0x8252)
    set_enum("GL_NO_RESET_NOTIFICATION_EXT", 0x8261)


#### GL_EXT_SRGB ####
def init_gl_ext_srgb():
    set_enum("GL_SRGB_EXT", 0x8C40)
    set_enum("GL_SRGB_ALPHA_EXT", 0x8C42)
    set_enum("GL_SRGB8_ALPHA8_EXT", 0x8C43)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT", 0x8210)


#### GL_EXT_SRGB_WRITE_CONTROL ####
def init_gl_ext_srgb_write_control():
    set_enum("GL_FRAMEBUFFER_SRGB_EXT", 0x8DB9)


#### GL_EXT_SECONDARY_COLOR ####
def init_gl_ext_secondary_color():
    set_func('glSecondaryColor3bEXT', t.void, (t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glSecondaryColor3bvEXT', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glSecondaryColor3dEXT', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glSecondaryColor3dvEXT', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glSecondaryColor3fEXT', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glSecondaryColor3fvEXT', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glSecondaryColor3iEXT', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glSecondaryColor3ivEXT', t.void, (ct.POINTER(t.GLint),))
    set_func('glSecondaryColor3sEXT', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glSecondaryColor3svEXT', t.void, (ct.POINTER(t.GLshort),))
    set_func('glSecondaryColor3ubEXT', t.void, (t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glSecondaryColor3ubvEXT', t.void, (ct.POINTER(t.GLubyte),))
    set_func('glSecondaryColor3uiEXT', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glSecondaryColor3uivEXT', t.void, (ct.POINTER(t.GLuint),))
    set_func('glSecondaryColor3usEXT', t.void, (t.GLushort, t.GLushort, t.GLushort))
    set_func('glSecondaryColor3usvEXT', t.void, (ct.POINTER(t.GLushort),))
    set_func('glSecondaryColorPointerEXT', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_COLOR_SUM_EXT", 0x8458)
    set_enum("GL_CURRENT_SECONDARY_COLOR_EXT", 0x8459)
    set_enum("GL_SECONDARY_COLOR_ARRAY_SIZE_EXT", 0x845A)
    set_enum("GL_SECONDARY_COLOR_ARRAY_TYPE_EXT", 0x845B)
    set_enum("GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT", 0x845C)
    set_enum("GL_SECONDARY_COLOR_ARRAY_POINTER_EXT", 0x845D)
    set_enum("GL_SECONDARY_COLOR_ARRAY_EXT", 0x845E)


#### GL_EXT_SEPARATE_SHADER_OBJECTS ####
def init_gl_ext_separate_shader_objects():
    set_func('glUseShaderProgramEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glActiveProgramEXT', t.void, (t.GLuint,))
    set_func('glCreateShaderProgramEXT', t.GLuint, (t.GLenum, ct.POINTER(t.GLchar)))
    set_func('glActiveShaderProgramEXT', t.void, (t.GLuint, t.GLuint))
    set_func('glBindProgramPipelineEXT', t.void, (t.GLuint,))
    set_func('glCreateShaderProgramvEXT', t.GLuint, (t.GLenum, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar))))
    set_func('glDeleteProgramPipelinesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenProgramPipelinesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetProgramPipelineInfoLogEXT', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetProgramPipelineivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glIsProgramPipelineEXT', t.GLboolean, (t.GLuint,))
    set_func('glProgramParameteriEXT', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glProgramUniform1fEXT', t.void, (t.GLuint, t.GLint, t.GLfloat))
    set_func('glProgramUniform1fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform1iEXT', t.void, (t.GLuint, t.GLint, t.GLint))
    set_func('glProgramUniform1ivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform2fEXT', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform2fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform2iEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform2ivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform3fEXT', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform3fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform3iEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform3ivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniform4fEXT', t.void, (t.GLuint, t.GLint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramUniform4fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniform4iEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramUniform4ivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramUniformMatrix2fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUseProgramStagesEXT', t.void, (t.GLuint, t.GLbitfield, t.GLuint))
    set_func('glValidateProgramPipelineEXT', t.void, (t.GLuint,))
    set_func('glProgramUniform1uiEXT', t.void, (t.GLuint, t.GLint, t.GLuint))
    set_func('glProgramUniform2uiEXT', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint))
    set_func('glProgramUniform3uiEXT', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform4uiEXT', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramUniform1uivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform2uivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform3uivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniform4uivEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramUniformMatrix2x3fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x2fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix2x4fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x2fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix3x4fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glProgramUniformMatrix4x3fvEXT', t.void, (t.GLuint, t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_enum("GL_ACTIVE_PROGRAM_EXT", 0x8B8D)
    set_enum("GL_VERTEX_SHADER_BIT_EXT", 0x00000001)
    set_enum("GL_FRAGMENT_SHADER_BIT_EXT", 0x00000002)
    set_enum("GL_ALL_SHADER_BITS_EXT", 0xFFFFFFFF)
    set_enum("GL_PROGRAM_SEPARABLE_EXT", 0x8258)
    set_enum("GL_PROGRAM_PIPELINE_BINDING_EXT", 0x825A)


#### GL_EXT_SEPARATE_SPECULAR_COLOR ####
def init_gl_ext_separate_specular_color():
    set_enum("GL_LIGHT_MODEL_COLOR_CONTROL_EXT", 0x81F8)
    set_enum("GL_SINGLE_COLOR_EXT", 0x81F9)
    set_enum("GL_SEPARATE_SPECULAR_COLOR_EXT", 0x81FA)


#### GL_EXT_SHADER_FRAMEBUFFER_FETCH ####
def init_gl_ext_shader_framebuffer_fetch():
    set_enum("GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT", 0x8A52)


#### GL_EXT_SHADER_IMAGE_LOAD_STORE ####
def init_gl_ext_shader_image_load_store():
    set_func('glBindImageTextureEXT', t.void, (t.GLuint, t.GLuint, t.GLint, t.GLboolean, t.GLint, t.GLenum, t.GLint))
    set_func('glMemoryBarrierEXT', t.void, (t.GLbitfield,))
    set_enum("GL_MAX_IMAGE_UNITS_EXT", 0x8F38)
    set_enum("GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT", 0x8F39)
    set_enum("GL_IMAGE_BINDING_NAME_EXT", 0x8F3A)
    set_enum("GL_IMAGE_BINDING_LEVEL_EXT", 0x8F3B)
    set_enum("GL_IMAGE_BINDING_LAYERED_EXT", 0x8F3C)
    set_enum("GL_IMAGE_BINDING_LAYER_EXT", 0x8F3D)
    set_enum("GL_IMAGE_BINDING_ACCESS_EXT", 0x8F3E)
    set_enum("GL_IMAGE_1D_EXT", 0x904C)
    set_enum("GL_IMAGE_2D_EXT", 0x904D)
    set_enum("GL_IMAGE_3D_EXT", 0x904E)
    set_enum("GL_IMAGE_2D_RECT_EXT", 0x904F)
    set_enum("GL_IMAGE_CUBE_EXT", 0x9050)
    set_enum("GL_IMAGE_BUFFER_EXT", 0x9051)
    set_enum("GL_IMAGE_1D_ARRAY_EXT", 0x9052)
    set_enum("GL_IMAGE_2D_ARRAY_EXT", 0x9053)
    set_enum("GL_IMAGE_CUBE_MAP_ARRAY_EXT", 0x9054)
    set_enum("GL_IMAGE_2D_MULTISAMPLE_EXT", 0x9055)
    set_enum("GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT", 0x9056)
    set_enum("GL_INT_IMAGE_1D_EXT", 0x9057)
    set_enum("GL_INT_IMAGE_2D_EXT", 0x9058)
    set_enum("GL_INT_IMAGE_3D_EXT", 0x9059)
    set_enum("GL_INT_IMAGE_2D_RECT_EXT", 0x905A)
    set_enum("GL_INT_IMAGE_CUBE_EXT", 0x905B)
    set_enum("GL_INT_IMAGE_BUFFER_EXT", 0x905C)
    set_enum("GL_INT_IMAGE_1D_ARRAY_EXT", 0x905D)
    set_enum("GL_INT_IMAGE_2D_ARRAY_EXT", 0x905E)
    set_enum("GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT", 0x905F)
    set_enum("GL_INT_IMAGE_2D_MULTISAMPLE_EXT", 0x9060)
    set_enum("GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT", 0x9061)
    set_enum("GL_UNSIGNED_INT_IMAGE_1D_EXT", 0x9062)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_EXT", 0x9063)
    set_enum("GL_UNSIGNED_INT_IMAGE_3D_EXT", 0x9064)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT", 0x9065)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE_EXT", 0x9066)
    set_enum("GL_UNSIGNED_INT_IMAGE_BUFFER_EXT", 0x9067)
    set_enum("GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT", 0x9068)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT", 0x9069)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT", 0x906A)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT", 0x906B)
    set_enum("GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT", 0x906C)
    set_enum("GL_MAX_IMAGE_SAMPLES_EXT", 0x906D)
    set_enum("GL_IMAGE_BINDING_FORMAT_EXT", 0x906E)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT", 0x00000001)
    set_enum("GL_ELEMENT_ARRAY_BARRIER_BIT_EXT", 0x00000002)
    set_enum("GL_UNIFORM_BARRIER_BIT_EXT", 0x00000004)
    set_enum("GL_TEXTURE_FETCH_BARRIER_BIT_EXT", 0x00000008)
    set_enum("GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT", 0x00000020)
    set_enum("GL_COMMAND_BARRIER_BIT_EXT", 0x00000040)
    set_enum("GL_PIXEL_BUFFER_BARRIER_BIT_EXT", 0x00000080)
    set_enum("GL_TEXTURE_UPDATE_BARRIER_BIT_EXT", 0x00000100)
    set_enum("GL_BUFFER_UPDATE_BARRIER_BIT_EXT", 0x00000200)
    set_enum("GL_FRAMEBUFFER_BARRIER_BIT_EXT", 0x00000400)
    set_enum("GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT", 0x00000800)
    set_enum("GL_ATOMIC_COUNTER_BARRIER_BIT_EXT", 0x00001000)
    set_enum("GL_ALL_BARRIER_BITS_EXT", 0xFFFFFFFF)


#### GL_EXT_SHADER_PIXEL_LOCAL_STORAGE ####
def init_gl_ext_shader_pixel_local_storage():
    set_enum("GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT", 0x8F63)
    set_enum("GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT", 0x8F67)
    set_enum("GL_SHADER_PIXEL_LOCAL_STORAGE_EXT", 0x8F64)


#### GL_EXT_SHADER_PIXEL_LOCAL_STORAGE2 ####
def init_gl_ext_shader_pixel_local_storage2():
    set_func('glFramebufferPixelLocalStorageSizeEXT', t.void, (t.GLuint, t.GLsizei))
    set_func('glGetFramebufferPixelLocalStorageSizeEXT', t.GLsizei, (t.GLuint,))
    set_func('glClearPixelLocalStorageuiEXT', t.void, (t.GLsizei, t.GLsizei, ct.POINTER(t.GLuint)))
    set_enum("GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT", 0x9650)
    set_enum("GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT", 0x9651)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT", 0x9652)


#### GL_EXT_SHADOW_SAMPLERS ####
def init_gl_ext_shadow_samplers():
    set_enum("GL_TEXTURE_COMPARE_MODE_EXT", 0x884C)
    set_enum("GL_TEXTURE_COMPARE_FUNC_EXT", 0x884D)
    set_enum("GL_COMPARE_REF_TO_TEXTURE_EXT", 0x884E)
    set_enum("GL_SAMPLER_2D_SHADOW_EXT", 0x8B62)


#### GL_EXT_SHARED_TEXTURE_PALETTE ####
def init_gl_ext_shared_texture_palette():
    set_enum("GL_SHARED_TEXTURE_PALETTE_EXT", 0x81FB)


#### GL_EXT_SPARSE_TEXTURE ####
def init_gl_ext_sparse_texture():
    set_func('glTexPageCommitmentEXT', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_enum("GL_TEXTURE_SPARSE_EXT", 0x91A6)
    set_enum("GL_VIRTUAL_PAGE_SIZE_INDEX_EXT", 0x91A7)
    set_enum("GL_NUM_SPARSE_LEVELS_EXT", 0x91AA)
    set_enum("GL_NUM_VIRTUAL_PAGE_SIZES_EXT", 0x91A8)
    set_enum("GL_VIRTUAL_PAGE_SIZE_X_EXT", 0x9195)
    set_enum("GL_VIRTUAL_PAGE_SIZE_Y_EXT", 0x9196)
    set_enum("GL_VIRTUAL_PAGE_SIZE_Z_EXT", 0x9197)
    set_enum("GL_TEXTURE_2D", 0x0DE1)
    set_enum("GL_TEXTURE_2D_ARRAY", 0x8C1A)
    set_enum("GL_TEXTURE_CUBE_MAP", 0x8513)
    set_enum("GL_TEXTURE_CUBE_MAP_ARRAY_OES", 0x9009)
    set_enum("GL_TEXTURE_3D", 0x806F)
    set_enum("GL_MAX_SPARSE_TEXTURE_SIZE_EXT", 0x9198)
    set_enum("GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT", 0x9199)
    set_enum("GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT", 0x919A)
    set_enum("GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT", 0x91A9)


#### GL_EXT_STENCIL_CLEAR_TAG ####
def init_gl_ext_stencil_clear_tag():
    set_func('glStencilClearTagEXT', t.void, (t.GLsizei, t.GLuint))
    set_enum("GL_STENCIL_TAG_BITS_EXT", 0x88F2)
    set_enum("GL_STENCIL_CLEAR_TAG_VALUE_EXT", 0x88F3)


#### GL_EXT_STENCIL_TWO_SIDE ####
def init_gl_ext_stencil_two_side():
    set_func('glActiveStencilFaceEXT', t.void, (t.GLenum,))
    set_enum("GL_STENCIL_TEST_TWO_SIDE_EXT", 0x8910)
    set_enum("GL_ACTIVE_STENCIL_FACE_EXT", 0x8911)


#### GL_EXT_STENCIL_WRAP ####
def init_gl_ext_stencil_wrap():
    set_enum("GL_INCR_WRAP_EXT", 0x8507)
    set_enum("GL_DECR_WRAP_EXT", 0x8508)


#### GL_EXT_SUBTEXTURE ####
def init_gl_ext_subtexture():
    set_func('glTexSubImage1DEXT', t.void, (t.GLenum, t.GLint, t.GLint, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexSubImage2DEXT', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))


#### GL_EXT_TESSELLATION_SHADER ####
def init_gl_ext_tessellation_shader():
    set_func('glPatchParameteriEXT', t.void, (t.GLenum, t.GLint))
    set_enum("GL_PATCHES_EXT", 0x000E)
    set_enum("GL_PATCH_VERTICES_EXT", 0x8E72)
    set_enum("GL_TESS_CONTROL_OUTPUT_VERTICES_EXT", 0x8E75)
    set_enum("GL_TESS_GEN_MODE_EXT", 0x8E76)
    set_enum("GL_TESS_GEN_SPACING_EXT", 0x8E77)
    set_enum("GL_TESS_GEN_VERTEX_ORDER_EXT", 0x8E78)
    set_enum("GL_TESS_GEN_POINT_MODE_EXT", 0x8E79)
    set_enum("GL_TRIANGLES", 0x0004)
    set_enum("GL_ISOLINES_EXT", 0x8E7A)
    set_enum("GL_QUADS_EXT", 0x0007)
    set_enum("GL_EQUAL", 0x0202)
    set_enum("GL_FRACTIONAL_ODD_EXT", 0x8E7B)
    set_enum("GL_FRACTIONAL_EVEN_EXT", 0x8E7C)
    set_enum("GL_CCW", 0x0901)
    set_enum("GL_CW", 0x0900)
    set_enum("GL_MAX_PATCH_VERTICES_EXT", 0x8E7D)
    set_enum("GL_MAX_TESS_GEN_LEVEL_EXT", 0x8E7E)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT", 0x8E7F)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT", 0x8E80)
    set_enum("GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT", 0x8E81)
    set_enum("GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT", 0x8E82)
    set_enum("GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT", 0x8E83)
    set_enum("GL_MAX_TESS_PATCH_COMPONENTS_EXT", 0x8E84)
    set_enum("GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT", 0x8E85)
    set_enum("GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT", 0x8E86)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT", 0x8E89)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT", 0x8E8A)
    set_enum("GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT", 0x886C)
    set_enum("GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT", 0x886D)
    set_enum("GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT", 0x8E1E)
    set_enum("GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT", 0x8E1F)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT", 0x92CD)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT", 0x92CE)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT", 0x92D3)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT", 0x92D4)
    set_enum("GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT", 0x90CB)
    set_enum("GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT", 0x90CC)
    set_enum("GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT", 0x90D8)
    set_enum("GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT", 0x90D9)
    set_enum("GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED", 0x8221)
    set_enum("GL_IS_PER_PATCH_EXT", 0x92E7)
    set_enum("GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT", 0x9307)
    set_enum("GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT", 0x9308)
    set_enum("GL_TESS_CONTROL_SHADER_EXT", 0x8E88)
    set_enum("GL_TESS_EVALUATION_SHADER_EXT", 0x8E87)
    set_enum("GL_TESS_CONTROL_SHADER_BIT_EXT", 0x00000008)
    set_enum("GL_TESS_EVALUATION_SHADER_BIT_EXT", 0x00000010)


#### GL_EXT_TEXTURE ####
def init_gl_ext_texture():
    set_enum("GL_ALPHA4_EXT", 0x803B)
    set_enum("GL_ALPHA8_EXT", 0x803C)
    set_enum("GL_ALPHA12_EXT", 0x803D)
    set_enum("GL_ALPHA16_EXT", 0x803E)
    set_enum("GL_LUMINANCE4_EXT", 0x803F)
    set_enum("GL_LUMINANCE8_EXT", 0x8040)
    set_enum("GL_LUMINANCE12_EXT", 0x8041)
    set_enum("GL_LUMINANCE16_EXT", 0x8042)
    set_enum("GL_LUMINANCE4_ALPHA4_EXT", 0x8043)
    set_enum("GL_LUMINANCE6_ALPHA2_EXT", 0x8044)
    set_enum("GL_LUMINANCE8_ALPHA8_EXT", 0x8045)
    set_enum("GL_LUMINANCE12_ALPHA4_EXT", 0x8046)
    set_enum("GL_LUMINANCE12_ALPHA12_EXT", 0x8047)
    set_enum("GL_LUMINANCE16_ALPHA16_EXT", 0x8048)
    set_enum("GL_INTENSITY_EXT", 0x8049)
    set_enum("GL_INTENSITY4_EXT", 0x804A)
    set_enum("GL_INTENSITY8_EXT", 0x804B)
    set_enum("GL_INTENSITY12_EXT", 0x804C)
    set_enum("GL_INTENSITY16_EXT", 0x804D)
    set_enum("GL_RGB2_EXT", 0x804E)
    set_enum("GL_RGB4_EXT", 0x804F)
    set_enum("GL_RGB5_EXT", 0x8050)
    set_enum("GL_RGB8_EXT", 0x8051)
    set_enum("GL_RGB10_EXT", 0x8052)
    set_enum("GL_RGB12_EXT", 0x8053)
    set_enum("GL_RGB16_EXT", 0x8054)
    set_enum("GL_RGBA2_EXT", 0x8055)
    set_enum("GL_RGBA4_EXT", 0x8056)
    set_enum("GL_RGB5_A1_EXT", 0x8057)
    set_enum("GL_RGBA8_EXT", 0x8058)
    set_enum("GL_RGB10_A2_EXT", 0x8059)
    set_enum("GL_RGBA12_EXT", 0x805A)
    set_enum("GL_RGBA16_EXT", 0x805B)
    set_enum("GL_TEXTURE_RED_SIZE_EXT", 0x805C)
    set_enum("GL_TEXTURE_GREEN_SIZE_EXT", 0x805D)
    set_enum("GL_TEXTURE_BLUE_SIZE_EXT", 0x805E)
    set_enum("GL_TEXTURE_ALPHA_SIZE_EXT", 0x805F)
    set_enum("GL_TEXTURE_LUMINANCE_SIZE_EXT", 0x8060)
    set_enum("GL_TEXTURE_INTENSITY_SIZE_EXT", 0x8061)
    set_enum("GL_REPLACE_EXT", 0x8062)
    set_enum("GL_PROXY_TEXTURE_1D_EXT", 0x8063)
    set_enum("GL_PROXY_TEXTURE_2D_EXT", 0x8064)
    set_enum("GL_TEXTURE_TOO_LARGE_EXT", 0x8065)


#### GL_EXT_TEXTURE3D ####
def init_gl_ext_texture3d():
    set_func('glTexImage3DEXT', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexSubImage3DEXT', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_enum("GL_PACK_SKIP_IMAGES_EXT", 0x806B)
    set_enum("GL_PACK_IMAGE_HEIGHT_EXT", 0x806C)
    set_enum("GL_UNPACK_SKIP_IMAGES_EXT", 0x806D)
    set_enum("GL_UNPACK_IMAGE_HEIGHT_EXT", 0x806E)
    set_enum("GL_TEXTURE_3D_EXT", 0x806F)
    set_enum("GL_PROXY_TEXTURE_3D_EXT", 0x8070)
    set_enum("GL_TEXTURE_DEPTH_EXT", 0x8071)
    set_enum("GL_TEXTURE_WRAP_R_EXT", 0x8072)
    set_enum("GL_MAX_3D_TEXTURE_SIZE_EXT", 0x8073)


#### GL_EXT_TEXTURE_ARRAY ####
def init_gl_ext_texture_array():
    set_func('glFramebufferTextureLayerEXT', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_enum("GL_TEXTURE_1D_ARRAY_EXT", 0x8C18)
    set_enum("GL_PROXY_TEXTURE_1D_ARRAY_EXT", 0x8C19)
    set_enum("GL_TEXTURE_2D_ARRAY_EXT", 0x8C1A)
    set_enum("GL_PROXY_TEXTURE_2D_ARRAY_EXT", 0x8C1B)
    set_enum("GL_TEXTURE_BINDING_1D_ARRAY_EXT", 0x8C1C)
    set_enum("GL_TEXTURE_BINDING_2D_ARRAY_EXT", 0x8C1D)
    set_enum("GL_MAX_ARRAY_TEXTURE_LAYERS_EXT", 0x88FF)
    set_enum("GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT", 0x884E)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT", 0x8CD4)


#### GL_EXT_TEXTURE_BORDER_CLAMP ####
def init_gl_ext_texture_border_clamp():
    set_func('glTexParameterIivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexParameterIuivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetTexParameterIivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexParameterIuivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glSamplerParameterIivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glSamplerParameterIuivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetSamplerParameterIivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSamplerParameterIuivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_enum("GL_TEXTURE_BORDER_COLOR_EXT", 0x1004)
    set_enum("GL_CLAMP_TO_BORDER_EXT", 0x812D)


#### GL_EXT_TEXTURE_BUFFER ####
def init_gl_ext_texture_buffer():
    set_func('glTexBufferEXT', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glTexBufferRangeEXT', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_enum("GL_TEXTURE_BUFFER_EXT", 0x8C2A)
    set_enum("GL_TEXTURE_BUFFER_BINDING_EXT", 0x8C2A)
    set_enum("GL_MAX_TEXTURE_BUFFER_SIZE_EXT", 0x8C2B)
    set_enum("GL_TEXTURE_BINDING_BUFFER_EXT", 0x8C2C)
    set_enum("GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT", 0x8C2D)
    set_enum("GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT", 0x919F)
    set_enum("GL_SAMPLER_BUFFER_EXT", 0x8DC2)
    set_enum("GL_INT_SAMPLER_BUFFER_EXT", 0x8DD0)
    set_enum("GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT", 0x8DD8)
    set_enum("GL_IMAGE_BUFFER_EXT", 0x9051)
    set_enum("GL_INT_IMAGE_BUFFER_EXT", 0x905C)
    set_enum("GL_UNSIGNED_INT_IMAGE_BUFFER_EXT", 0x9067)
    set_enum("GL_TEXTURE_BUFFER_OFFSET_EXT", 0x919D)
    set_enum("GL_TEXTURE_BUFFER_SIZE_EXT", 0x919E)


#### GL_EXT_TEXTURE_BUFFER_OBJECT ####
def init_gl_ext_texture_buffer_object():
    set_func('glTexBufferEXT', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_enum("GL_TEXTURE_BUFFER_EXT", 0x8C2A)
    set_enum("GL_MAX_TEXTURE_BUFFER_SIZE_EXT", 0x8C2B)
    set_enum("GL_TEXTURE_BINDING_BUFFER_EXT", 0x8C2C)
    set_enum("GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT", 0x8C2D)
    set_enum("GL_TEXTURE_BUFFER_FORMAT_EXT", 0x8C2E)


#### GL_EXT_TEXTURE_COMPRESSION_DXT1 ####
def init_gl_ext_texture_compression_dxt1():
    set_enum("GL_COMPRESSED_RGB_S3TC_DXT1_EXT", 0x83F0)
    set_enum("GL_COMPRESSED_RGBA_S3TC_DXT1_EXT", 0x83F1)


#### GL_EXT_TEXTURE_COMPRESSION_LATC ####
def init_gl_ext_texture_compression_latc():
    set_enum("GL_COMPRESSED_LUMINANCE_LATC1_EXT", 0x8C70)
    set_enum("GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT", 0x8C71)
    set_enum("GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT", 0x8C72)
    set_enum("GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT", 0x8C73)


#### GL_EXT_TEXTURE_COMPRESSION_RGTC ####
def init_gl_ext_texture_compression_rgtc():
    set_enum("GL_COMPRESSED_RED_RGTC1_EXT", 0x8DBB)
    set_enum("GL_COMPRESSED_SIGNED_RED_RGTC1_EXT", 0x8DBC)
    set_enum("GL_COMPRESSED_RED_GREEN_RGTC2_EXT", 0x8DBD)
    set_enum("GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT", 0x8DBE)


#### GL_EXT_TEXTURE_COMPRESSION_S3TC ####
def init_gl_ext_texture_compression_s3tc():
    set_enum("GL_COMPRESSED_RGB_S3TC_DXT1_EXT", 0x83F0)
    set_enum("GL_COMPRESSED_RGBA_S3TC_DXT1_EXT", 0x83F1)
    set_enum("GL_COMPRESSED_RGBA_S3TC_DXT3_EXT", 0x83F2)
    set_enum("GL_COMPRESSED_RGBA_S3TC_DXT5_EXT", 0x83F3)


#### GL_EXT_TEXTURE_CUBE_MAP ####
def init_gl_ext_texture_cube_map():
    set_enum("GL_NORMAL_MAP_EXT", 0x8511)
    set_enum("GL_REFLECTION_MAP_EXT", 0x8512)
    set_enum("GL_TEXTURE_CUBE_MAP_EXT", 0x8513)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_EXT", 0x8514)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT", 0x8515)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT", 0x8516)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT", 0x8517)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT", 0x8518)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT", 0x8519)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT", 0x851A)
    set_enum("GL_PROXY_TEXTURE_CUBE_MAP_EXT", 0x851B)
    set_enum("GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT", 0x851C)


#### GL_EXT_TEXTURE_CUBE_MAP_ARRAY ####
def init_gl_ext_texture_cube_map_array():
    set_enum("GL_TEXTURE_CUBE_MAP_ARRAY_EXT", 0x9009)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT", 0x900A)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY_EXT", 0x900C)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT", 0x900D)
    set_enum("GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT", 0x900E)
    set_enum("GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT", 0x900F)
    set_enum("GL_IMAGE_CUBE_MAP_ARRAY_EXT", 0x9054)
    set_enum("GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT", 0x905F)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT", 0x906A)


#### GL_EXT_TEXTURE_ENV_COMBINE ####
def init_gl_ext_texture_env_combine():
    set_enum("GL_COMBINE_EXT", 0x8570)
    set_enum("GL_COMBINE_RGB_EXT", 0x8571)
    set_enum("GL_COMBINE_ALPHA_EXT", 0x8572)
    set_enum("GL_RGB_SCALE_EXT", 0x8573)
    set_enum("GL_ADD_SIGNED_EXT", 0x8574)
    set_enum("GL_INTERPOLATE_EXT", 0x8575)
    set_enum("GL_CONSTANT_EXT", 0x8576)
    set_enum("GL_PRIMARY_COLOR_EXT", 0x8577)
    set_enum("GL_PREVIOUS_EXT", 0x8578)
    set_enum("GL_SOURCE0_RGB_EXT", 0x8580)
    set_enum("GL_SOURCE1_RGB_EXT", 0x8581)
    set_enum("GL_SOURCE2_RGB_EXT", 0x8582)
    set_enum("GL_SOURCE0_ALPHA_EXT", 0x8588)
    set_enum("GL_SOURCE1_ALPHA_EXT", 0x8589)
    set_enum("GL_SOURCE2_ALPHA_EXT", 0x858A)
    set_enum("GL_OPERAND0_RGB_EXT", 0x8590)
    set_enum("GL_OPERAND1_RGB_EXT", 0x8591)
    set_enum("GL_OPERAND2_RGB_EXT", 0x8592)
    set_enum("GL_OPERAND0_ALPHA_EXT", 0x8598)
    set_enum("GL_OPERAND1_ALPHA_EXT", 0x8599)
    set_enum("GL_OPERAND2_ALPHA_EXT", 0x859A)


#### GL_EXT_TEXTURE_ENV_DOT3 ####
def init_gl_ext_texture_env_dot3():
    set_enum("GL_DOT3_RGB_EXT", 0x8740)
    set_enum("GL_DOT3_RGBA_EXT", 0x8741)


#### GL_EXT_TEXTURE_FILTER_ANISOTROPIC ####
def init_gl_ext_texture_filter_anisotropic():
    set_enum("GL_TEXTURE_MAX_ANISOTROPY_EXT", 0x84FE)
    set_enum("GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT", 0x84FF)


#### GL_EXT_TEXTURE_FILTER_MINMAX ####
def init_gl_ext_texture_filter_minmax():
    set_func('glRasterSamplesEXT', t.void, (t.GLuint, t.GLboolean))
    set_enum("GL_RASTER_MULTISAMPLE_EXT", 0x9327)
    set_enum("GL_RASTER_SAMPLES_EXT", 0x9328)
    set_enum("GL_MAX_RASTER_SAMPLES_EXT", 0x9329)
    set_enum("GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT", 0x932A)
    set_enum("GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT", 0x932B)
    set_enum("GL_EFFECTIVE_RASTER_SAMPLES_EXT", 0x932C)


#### GL_EXT_TEXTURE_FORMAT_BGRA8888 ####
def init_gl_ext_texture_format_bgra8888():
    set_enum("GL_BGRA_EXT", 0x80E1)


#### GL_EXT_TEXTURE_INTEGER ####
def init_gl_ext_texture_integer():
    set_func('glTexParameterIivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexParameterIuivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetTexParameterIivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexParameterIuivEXT', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glClearColorIiEXT', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glClearColorIuiEXT', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_enum("GL_RGBA32UI_EXT", 0x8D70)
    set_enum("GL_RGB32UI_EXT", 0x8D71)
    set_enum("GL_ALPHA32UI_EXT", 0x8D72)
    set_enum("GL_INTENSITY32UI_EXT", 0x8D73)
    set_enum("GL_LUMINANCE32UI_EXT", 0x8D74)
    set_enum("GL_LUMINANCE_ALPHA32UI_EXT", 0x8D75)
    set_enum("GL_RGBA16UI_EXT", 0x8D76)
    set_enum("GL_RGB16UI_EXT", 0x8D77)
    set_enum("GL_ALPHA16UI_EXT", 0x8D78)
    set_enum("GL_INTENSITY16UI_EXT", 0x8D79)
    set_enum("GL_LUMINANCE16UI_EXT", 0x8D7A)
    set_enum("GL_LUMINANCE_ALPHA16UI_EXT", 0x8D7B)
    set_enum("GL_RGBA8UI_EXT", 0x8D7C)
    set_enum("GL_RGB8UI_EXT", 0x8D7D)
    set_enum("GL_ALPHA8UI_EXT", 0x8D7E)
    set_enum("GL_INTENSITY8UI_EXT", 0x8D7F)
    set_enum("GL_LUMINANCE8UI_EXT", 0x8D80)
    set_enum("GL_LUMINANCE_ALPHA8UI_EXT", 0x8D81)
    set_enum("GL_RGBA32I_EXT", 0x8D82)
    set_enum("GL_RGB32I_EXT", 0x8D83)
    set_enum("GL_ALPHA32I_EXT", 0x8D84)
    set_enum("GL_INTENSITY32I_EXT", 0x8D85)
    set_enum("GL_LUMINANCE32I_EXT", 0x8D86)
    set_enum("GL_LUMINANCE_ALPHA32I_EXT", 0x8D87)
    set_enum("GL_RGBA16I_EXT", 0x8D88)
    set_enum("GL_RGB16I_EXT", 0x8D89)
    set_enum("GL_ALPHA16I_EXT", 0x8D8A)
    set_enum("GL_INTENSITY16I_EXT", 0x8D8B)
    set_enum("GL_LUMINANCE16I_EXT", 0x8D8C)
    set_enum("GL_LUMINANCE_ALPHA16I_EXT", 0x8D8D)
    set_enum("GL_RGBA8I_EXT", 0x8D8E)
    set_enum("GL_RGB8I_EXT", 0x8D8F)
    set_enum("GL_ALPHA8I_EXT", 0x8D90)
    set_enum("GL_INTENSITY8I_EXT", 0x8D91)
    set_enum("GL_LUMINANCE8I_EXT", 0x8D92)
    set_enum("GL_LUMINANCE_ALPHA8I_EXT", 0x8D93)
    set_enum("GL_RED_INTEGER_EXT", 0x8D94)
    set_enum("GL_GREEN_INTEGER_EXT", 0x8D95)
    set_enum("GL_BLUE_INTEGER_EXT", 0x8D96)
    set_enum("GL_ALPHA_INTEGER_EXT", 0x8D97)
    set_enum("GL_RGB_INTEGER_EXT", 0x8D98)
    set_enum("GL_RGBA_INTEGER_EXT", 0x8D99)
    set_enum("GL_BGR_INTEGER_EXT", 0x8D9A)
    set_enum("GL_BGRA_INTEGER_EXT", 0x8D9B)
    set_enum("GL_LUMINANCE_INTEGER_EXT", 0x8D9C)
    set_enum("GL_LUMINANCE_ALPHA_INTEGER_EXT", 0x8D9D)
    set_enum("GL_RGBA_INTEGER_MODE_EXT", 0x8D9E)


#### GL_EXT_TEXTURE_LOD_BIAS ####
def init_gl_ext_texture_lod_bias():
    set_enum("GL_MAX_TEXTURE_LOD_BIAS_EXT", 0x84FD)
    set_enum("GL_TEXTURE_FILTER_CONTROL_EXT", 0x8500)
    set_enum("GL_TEXTURE_LOD_BIAS_EXT", 0x8501)


#### GL_EXT_TEXTURE_MIRROR_CLAMP ####
def init_gl_ext_texture_mirror_clamp():
    set_enum("GL_MIRROR_CLAMP_EXT", 0x8742)
    set_enum("GL_MIRROR_CLAMP_TO_EDGE_EXT", 0x8743)
    set_enum("GL_MIRROR_CLAMP_TO_BORDER_EXT", 0x8912)


#### GL_EXT_TEXTURE_NORM16 ####
def init_gl_ext_texture_norm16():
    set_enum("GL_R16_EXT", 0x822A)
    set_enum("GL_RG16_EXT", 0x822C)
    set_enum("GL_RGBA16_EXT", 0x805B)
    set_enum("GL_RGB16_EXT", 0x8054)
    set_enum("GL_R16_SNORM_EXT", 0x8F98)
    set_enum("GL_RG16_SNORM_EXT", 0x8F99)
    set_enum("GL_RGB16_SNORM_EXT", 0x8F9A)
    set_enum("GL_RGBA16_SNORM_EXT", 0x8F9B)


#### GL_EXT_TEXTURE_OBJECT ####
def init_gl_ext_texture_object():
    set_func('glAreTexturesResidentEXT', t.GLboolean, (t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLboolean)))
    set_func('glBindTextureEXT', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteTexturesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTexturesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsTextureEXT', t.GLboolean, (t.GLuint,))
    set_func('glPrioritizeTexturesEXT', t.void, (t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLclampf)))
    set_enum("GL_TEXTURE_PRIORITY_EXT", 0x8066)
    set_enum("GL_TEXTURE_RESIDENT_EXT", 0x8067)
    set_enum("GL_TEXTURE_1D_BINDING_EXT", 0x8068)
    set_enum("GL_TEXTURE_2D_BINDING_EXT", 0x8069)
    set_enum("GL_TEXTURE_3D_BINDING_EXT", 0x806A)


#### GL_EXT_TEXTURE_PERTURB_NORMAL ####
def init_gl_ext_texture_perturb_normal():
    set_func('glTextureNormalEXT', t.void, (t.GLenum,))
    set_enum("GL_PERTURB_EXT", 0x85AE)
    set_enum("GL_TEXTURE_NORMAL_EXT", 0x85AF)


#### GL_EXT_TEXTURE_RG ####
def init_gl_ext_texture_rg():
    set_enum("GL_RED_EXT", 0x1903)
    set_enum("GL_RG_EXT", 0x8227)
    set_enum("GL_R8_EXT", 0x8229)
    set_enum("GL_RG8_EXT", 0x822B)


#### GL_EXT_TEXTURE_SRGB ####
def init_gl_ext_texture_srgb():
    set_enum("GL_SRGB_EXT", 0x8C40)
    set_enum("GL_SRGB8_EXT", 0x8C41)
    set_enum("GL_SRGB_ALPHA_EXT", 0x8C42)
    set_enum("GL_SRGB8_ALPHA8_EXT", 0x8C43)
    set_enum("GL_SLUMINANCE_ALPHA_EXT", 0x8C44)
    set_enum("GL_SLUMINANCE8_ALPHA8_EXT", 0x8C45)
    set_enum("GL_SLUMINANCE_EXT", 0x8C46)
    set_enum("GL_SLUMINANCE8_EXT", 0x8C47)
    set_enum("GL_COMPRESSED_SRGB_EXT", 0x8C48)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_EXT", 0x8C49)
    set_enum("GL_COMPRESSED_SLUMINANCE_EXT", 0x8C4A)
    set_enum("GL_COMPRESSED_SLUMINANCE_ALPHA_EXT", 0x8C4B)
    set_enum("GL_COMPRESSED_SRGB_S3TC_DXT1_EXT", 0x8C4C)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT", 0x8C4D)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT", 0x8C4E)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT", 0x8C4F)


#### GL_EXT_TEXTURE_SRGB_R8 ####
def init_gl_ext_texture_srgb_r8():
    set_enum("GL_SR8_EXT", 0x8FBD)


#### GL_EXT_TEXTURE_SRGB_RG8 ####
def init_gl_ext_texture_srgb_rg8():
    set_enum("GL_SRG8_EXT", 0x8FBE)


#### GL_EXT_TEXTURE_SRGB_DECODE ####
def init_gl_ext_texture_srgb_decode():
    set_enum("GL_TEXTURE_SRGB_DECODE_EXT", 0x8A48)
    set_enum("GL_DECODE_EXT", 0x8A49)
    set_enum("GL_SKIP_DECODE_EXT", 0x8A4A)


#### GL_EXT_TEXTURE_SHARED_EXPONENT ####
def init_gl_ext_texture_shared_exponent():
    set_enum("GL_RGB9_E5_EXT", 0x8C3D)
    set_enum("GL_UNSIGNED_INT_5_9_9_9_REV_EXT", 0x8C3E)
    set_enum("GL_TEXTURE_SHARED_SIZE_EXT", 0x8C3F)


#### GL_EXT_TEXTURE_SNORM ####
def init_gl_ext_texture_snorm():
    set_enum("GL_ALPHA_SNORM", 0x9010)
    set_enum("GL_LUMINANCE_SNORM", 0x9011)
    set_enum("GL_LUMINANCE_ALPHA_SNORM", 0x9012)
    set_enum("GL_INTENSITY_SNORM", 0x9013)
    set_enum("GL_ALPHA8_SNORM", 0x9014)
    set_enum("GL_LUMINANCE8_SNORM", 0x9015)
    set_enum("GL_LUMINANCE8_ALPHA8_SNORM", 0x9016)
    set_enum("GL_INTENSITY8_SNORM", 0x9017)
    set_enum("GL_ALPHA16_SNORM", 0x9018)
    set_enum("GL_LUMINANCE16_SNORM", 0x9019)
    set_enum("GL_LUMINANCE16_ALPHA16_SNORM", 0x901A)
    set_enum("GL_INTENSITY16_SNORM", 0x901B)
    set_enum("GL_RED_SNORM", 0x8F90)
    set_enum("GL_RG_SNORM", 0x8F91)
    set_enum("GL_RGB_SNORM", 0x8F92)
    set_enum("GL_RGBA_SNORM", 0x8F93)
    set_enum("GL_R8_SNORM", 0x8F94)
    set_enum("GL_RG8_SNORM", 0x8F95)
    set_enum("GL_RGB8_SNORM", 0x8F96)
    set_enum("GL_RGBA8_SNORM", 0x8F97)
    set_enum("GL_R16_SNORM", 0x8F98)
    set_enum("GL_RG16_SNORM", 0x8F99)
    set_enum("GL_RGB16_SNORM", 0x8F9A)
    set_enum("GL_RGBA16_SNORM", 0x8F9B)
    set_enum("GL_SIGNED_NORMALIZED", 0x8F9C)


#### GL_EXT_TEXTURE_STORAGE ####
def init_gl_ext_texture_storage():
    set_func('glTexStorage1DEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei))
    set_func('glTexStorage2DEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTexStorage3DEXT', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei))
    set_func('glTextureStorage1DEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei))
    set_func('glTextureStorage2DEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glTextureStorage3DEXT', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei))
    set_enum("GL_TEXTURE_IMMUTABLE_FORMAT_EXT", 0x912F)
    set_enum("GL_ALPHA8_EXT", 0x803C)
    set_enum("GL_LUMINANCE8_EXT", 0x8040)
    set_enum("GL_LUMINANCE8_ALPHA8_EXT", 0x8045)
    set_enum("GL_RGBA32F_EXT", 0x8814)
    set_enum("GL_RGB32F_EXT", 0x8815)
    set_enum("GL_ALPHA32F_EXT", 0x8816)
    set_enum("GL_LUMINANCE32F_EXT", 0x8818)
    set_enum("GL_LUMINANCE_ALPHA32F_EXT", 0x8819)
    set_enum("GL_RGBA16F_EXT", 0x881A)
    set_enum("GL_RGB16F_EXT", 0x881B)
    set_enum("GL_ALPHA16F_EXT", 0x881C)
    set_enum("GL_LUMINANCE16F_EXT", 0x881E)
    set_enum("GL_LUMINANCE_ALPHA16F_EXT", 0x881F)
    set_enum("GL_RGB10_A2_EXT", 0x8059)
    set_enum("GL_RGB10_EXT", 0x8052)
    set_enum("GL_BGRA8_EXT", 0x93A1)
    set_enum("GL_R8_EXT", 0x8229)
    set_enum("GL_RG8_EXT", 0x822B)
    set_enum("GL_R32F_EXT", 0x822E)
    set_enum("GL_RG32F_EXT", 0x8230)
    set_enum("GL_R16F_EXT", 0x822D)
    set_enum("GL_RG16F_EXT", 0x822F)


#### GL_EXT_TEXTURE_SWIZZLE ####
def init_gl_ext_texture_swizzle():
    set_enum("GL_TEXTURE_SWIZZLE_R_EXT", 0x8E42)
    set_enum("GL_TEXTURE_SWIZZLE_G_EXT", 0x8E43)
    set_enum("GL_TEXTURE_SWIZZLE_B_EXT", 0x8E44)
    set_enum("GL_TEXTURE_SWIZZLE_A_EXT", 0x8E45)
    set_enum("GL_TEXTURE_SWIZZLE_RGBA_EXT", 0x8E46)


#### GL_EXT_TEXTURE_TYPE_2_10_10_10_REV ####
def init_gl_ext_texture_type_2_10_10_10_rev():
    set_enum("GL_UNSIGNED_INT_2_10_10_10_REV_EXT", 0x8368)


#### GL_EXT_TEXTURE_VIEW ####
def init_gl_ext_texture_view():
    set_func('glTextureViewEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_enum("GL_TEXTURE_VIEW_MIN_LEVEL_EXT", 0x82DB)
    set_enum("GL_TEXTURE_VIEW_NUM_LEVELS_EXT", 0x82DC)
    set_enum("GL_TEXTURE_VIEW_MIN_LAYER_EXT", 0x82DD)
    set_enum("GL_TEXTURE_VIEW_NUM_LAYERS_EXT", 0x82DE)
    set_enum("GL_TEXTURE_IMMUTABLE_LEVELS", 0x82DF)


#### GL_EXT_TIMER_QUERY ####
def init_gl_ext_timer_query():
    set_func('glGetQueryObjecti64vEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint64)))
    set_func('glGetQueryObjectui64vEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint64)))
    set_enum("GL_TIME_ELAPSED_EXT", 0x88BF)


#### GL_EXT_TRANSFORM_FEEDBACK ####
def init_gl_ext_transform_feedback():
    set_func('glBeginTransformFeedbackEXT', t.void, (t.GLenum,))
    set_func('glEndTransformFeedbackEXT', t.void, ())
    set_func('glBindBufferRangeEXT', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glBindBufferOffsetEXT', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLintptr))
    set_func('glBindBufferBaseEXT', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glTransformFeedbackVaryingsEXT', t.void, (t.GLuint, t.GLsizei, ct.POINTER(ct.POINTER(t.GLchar)), t.GLenum))
    set_func('glGetTransformFeedbackVaryingEXT', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLsizei), ct.POINTER(t.GLenum), ct.POINTER(t.GLchar)))
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_EXT", 0x8C8E)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT", 0x8C84)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT", 0x8C85)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT", 0x8C8F)
    set_enum("GL_INTERLEAVED_ATTRIBS_EXT", 0x8C8C)
    set_enum("GL_SEPARATE_ATTRIBS_EXT", 0x8C8D)
    set_enum("GL_PRIMITIVES_GENERATED_EXT", 0x8C87)
    set_enum("GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT", 0x8C88)
    set_enum("GL_RASTERIZER_DISCARD_EXT", 0x8C89)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT", 0x8C8A)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT", 0x8C8B)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT", 0x8C80)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYINGS_EXT", 0x8C83)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT", 0x8C7F)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT", 0x8C76)


#### GL_EXT_UNPACK_SUBIMAGE ####
def init_gl_ext_unpack_subimage():
    set_enum("GL_UNPACK_ROW_LENGTH_EXT", 0x0CF2)
    set_enum("GL_UNPACK_SKIP_ROWS_EXT", 0x0CF3)
    set_enum("GL_UNPACK_SKIP_PIXELS_EXT", 0x0CF4)


#### GL_EXT_VERTEX_ARRAY ####
def init_gl_ext_vertex_array():
    set_func('glArrayElementEXT', t.void, (t.GLint,))
    set_func('glColorPointerEXT', t.void, (t.GLint, t.GLenum, t.GLsizei, t.GLsizei, ct.POINTER(t.void)))
    set_func('glDrawArraysEXT', t.void, (t.GLenum, t.GLint, t.GLsizei))
    set_func('glEdgeFlagPointerEXT', t.void, (t.GLsizei, t.GLsizei, ct.POINTER(t.GLboolean)))
    set_func('glGetPointervEXT', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glIndexPointerEXT', t.void, (t.GLenum, t.GLsizei, t.GLsizei, ct.POINTER(t.void)))
    set_func('glNormalPointerEXT', t.void, (t.GLenum, t.GLsizei, t.GLsizei, ct.POINTER(t.void)))
    set_func('glTexCoordPointerEXT', t.void, (t.GLint, t.GLenum, t.GLsizei, t.GLsizei, ct.POINTER(t.void)))
    set_func('glVertexPointerEXT', t.void, (t.GLint, t.GLenum, t.GLsizei, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_VERTEX_ARRAY_EXT", 0x8074)
    set_enum("GL_NORMAL_ARRAY_EXT", 0x8075)
    set_enum("GL_COLOR_ARRAY_EXT", 0x8076)
    set_enum("GL_INDEX_ARRAY_EXT", 0x8077)
    set_enum("GL_TEXTURE_COORD_ARRAY_EXT", 0x8078)
    set_enum("GL_EDGE_FLAG_ARRAY_EXT", 0x8079)
    set_enum("GL_VERTEX_ARRAY_SIZE_EXT", 0x807A)
    set_enum("GL_VERTEX_ARRAY_TYPE_EXT", 0x807B)
    set_enum("GL_VERTEX_ARRAY_STRIDE_EXT", 0x807C)
    set_enum("GL_VERTEX_ARRAY_COUNT_EXT", 0x807D)
    set_enum("GL_NORMAL_ARRAY_TYPE_EXT", 0x807E)
    set_enum("GL_NORMAL_ARRAY_STRIDE_EXT", 0x807F)
    set_enum("GL_NORMAL_ARRAY_COUNT_EXT", 0x8080)
    set_enum("GL_COLOR_ARRAY_SIZE_EXT", 0x8081)
    set_enum("GL_COLOR_ARRAY_TYPE_EXT", 0x8082)
    set_enum("GL_COLOR_ARRAY_STRIDE_EXT", 0x8083)
    set_enum("GL_COLOR_ARRAY_COUNT_EXT", 0x8084)
    set_enum("GL_INDEX_ARRAY_TYPE_EXT", 0x8085)
    set_enum("GL_INDEX_ARRAY_STRIDE_EXT", 0x8086)
    set_enum("GL_INDEX_ARRAY_COUNT_EXT", 0x8087)
    set_enum("GL_TEXTURE_COORD_ARRAY_SIZE_EXT", 0x8088)
    set_enum("GL_TEXTURE_COORD_ARRAY_TYPE_EXT", 0x8089)
    set_enum("GL_TEXTURE_COORD_ARRAY_STRIDE_EXT", 0x808A)
    set_enum("GL_TEXTURE_COORD_ARRAY_COUNT_EXT", 0x808B)
    set_enum("GL_EDGE_FLAG_ARRAY_STRIDE_EXT", 0x808C)
    set_enum("GL_EDGE_FLAG_ARRAY_COUNT_EXT", 0x808D)
    set_enum("GL_VERTEX_ARRAY_POINTER_EXT", 0x808E)
    set_enum("GL_NORMAL_ARRAY_POINTER_EXT", 0x808F)
    set_enum("GL_COLOR_ARRAY_POINTER_EXT", 0x8090)
    set_enum("GL_INDEX_ARRAY_POINTER_EXT", 0x8091)
    set_enum("GL_TEXTURE_COORD_ARRAY_POINTER_EXT", 0x8092)
    set_enum("GL_EDGE_FLAG_ARRAY_POINTER_EXT", 0x8093)


#### GL_EXT_VERTEX_ARRAY_BGRA ####
def init_gl_ext_vertex_array_bgra():
    set_enum("GL_BGRA", 0x80E1)


#### GL_EXT_VERTEX_ATTRIB_64BIT ####
def init_gl_ext_vertex_attrib_64bit():
    set_func('glVertexAttribL1dEXT', t.void, (t.GLuint, t.GLdouble))
    set_func('glVertexAttribL2dEXT', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL3dEXT', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL4dEXT', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttribL1dvEXT', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL2dvEXT', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL3dvEXT', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribL4dvEXT', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribLPointerEXT', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetVertexAttribLdvEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_enum("GL_DOUBLE", 0x140A)
    set_enum("GL_DOUBLE_VEC2_EXT", 0x8FFC)
    set_enum("GL_DOUBLE_VEC3_EXT", 0x8FFD)
    set_enum("GL_DOUBLE_VEC4_EXT", 0x8FFE)
    set_enum("GL_DOUBLE_MAT2_EXT", 0x8F46)
    set_enum("GL_DOUBLE_MAT3_EXT", 0x8F47)
    set_enum("GL_DOUBLE_MAT4_EXT", 0x8F48)
    set_enum("GL_DOUBLE_MAT2x3_EXT", 0x8F49)
    set_enum("GL_DOUBLE_MAT2x4_EXT", 0x8F4A)
    set_enum("GL_DOUBLE_MAT3x2_EXT", 0x8F4B)
    set_enum("GL_DOUBLE_MAT3x4_EXT", 0x8F4C)
    set_enum("GL_DOUBLE_MAT4x2_EXT", 0x8F4D)
    set_enum("GL_DOUBLE_MAT4x3_EXT", 0x8F4E)


#### GL_EXT_VERTEX_SHADER ####
def init_gl_ext_vertex_shader():
    set_func('glBeginVertexShaderEXT', t.void, ())
    set_func('glEndVertexShaderEXT', t.void, ())
    set_func('glBindVertexShaderEXT', t.void, (t.GLuint,))
    set_func('glGenVertexShadersEXT', t.GLuint, (t.GLuint,))
    set_func('glDeleteVertexShaderEXT', t.void, (t.GLuint,))
    set_func('glShaderOp1EXT', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glShaderOp2EXT', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint))
    set_func('glShaderOp3EXT', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glSwizzleEXT', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glWriteMaskEXT', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glInsertComponentEXT', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glExtractComponentEXT', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glGenSymbolsEXT', t.GLuint, (t.GLenum, t.GLenum, t.GLenum, t.GLuint))
    set_func('glSetInvariantEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void)))
    set_func('glSetLocalConstantEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void)))
    set_func('glVariantbvEXT', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVariantsvEXT', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVariantivEXT', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVariantfvEXT', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVariantdvEXT', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVariantubvEXT', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVariantusvEXT', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glVariantuivEXT', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVariantPointerEXT', t.void, (t.GLuint, t.GLenum, t.GLuint, ct.POINTER(t.void)))
    set_func('glEnableVariantClientStateEXT', t.void, (t.GLuint,))
    set_func('glDisableVariantClientStateEXT', t.void, (t.GLuint,))
    set_func('glBindLightParameterEXT', t.GLuint, (t.GLenum, t.GLenum))
    set_func('glBindMaterialParameterEXT', t.GLuint, (t.GLenum, t.GLenum))
    set_func('glBindTexGenParameterEXT', t.GLuint, (t.GLenum, t.GLenum, t.GLenum))
    set_func('glBindTextureUnitParameterEXT', t.GLuint, (t.GLenum, t.GLenum))
    set_func('glBindParameterEXT', t.GLuint, (t.GLenum,))
    set_func('glIsVariantEnabledEXT', t.GLboolean, (t.GLuint, t.GLenum))
    set_func('glGetVariantBooleanvEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLboolean)))
    set_func('glGetVariantIntegervEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVariantFloatvEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVariantPointervEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glGetInvariantBooleanvEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLboolean)))
    set_func('glGetInvariantIntegervEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetInvariantFloatvEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetLocalConstantBooleanvEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLboolean)))
    set_func('glGetLocalConstantIntegervEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetLocalConstantFloatvEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_VERTEX_SHADER_EXT", 0x8780)
    set_enum("GL_VERTEX_SHADER_BINDING_EXT", 0x8781)
    set_enum("GL_OP_INDEX_EXT", 0x8782)
    set_enum("GL_OP_NEGATE_EXT", 0x8783)
    set_enum("GL_OP_DOT3_EXT", 0x8784)
    set_enum("GL_OP_DOT4_EXT", 0x8785)
    set_enum("GL_OP_MUL_EXT", 0x8786)
    set_enum("GL_OP_ADD_EXT", 0x8787)
    set_enum("GL_OP_MADD_EXT", 0x8788)
    set_enum("GL_OP_FRAC_EXT", 0x8789)
    set_enum("GL_OP_MAX_EXT", 0x878A)
    set_enum("GL_OP_MIN_EXT", 0x878B)
    set_enum("GL_OP_SET_GE_EXT", 0x878C)
    set_enum("GL_OP_SET_LT_EXT", 0x878D)
    set_enum("GL_OP_CLAMP_EXT", 0x878E)
    set_enum("GL_OP_FLOOR_EXT", 0x878F)
    set_enum("GL_OP_ROUND_EXT", 0x8790)
    set_enum("GL_OP_EXP_BASE_2_EXT", 0x8791)
    set_enum("GL_OP_LOG_BASE_2_EXT", 0x8792)
    set_enum("GL_OP_POWER_EXT", 0x8793)
    set_enum("GL_OP_RECIP_EXT", 0x8794)
    set_enum("GL_OP_RECIP_SQRT_EXT", 0x8795)
    set_enum("GL_OP_SUB_EXT", 0x8796)
    set_enum("GL_OP_CROSS_PRODUCT_EXT", 0x8797)
    set_enum("GL_OP_MULTIPLY_MATRIX_EXT", 0x8798)
    set_enum("GL_OP_MOV_EXT", 0x8799)
    set_enum("GL_OUTPUT_VERTEX_EXT", 0x879A)
    set_enum("GL_OUTPUT_COLOR0_EXT", 0x879B)
    set_enum("GL_OUTPUT_COLOR1_EXT", 0x879C)
    set_enum("GL_OUTPUT_TEXTURE_COORD0_EXT", 0x879D)
    set_enum("GL_OUTPUT_TEXTURE_COORD1_EXT", 0x879E)
    set_enum("GL_OUTPUT_TEXTURE_COORD2_EXT", 0x879F)
    set_enum("GL_OUTPUT_TEXTURE_COORD3_EXT", 0x87A0)
    set_enum("GL_OUTPUT_TEXTURE_COORD4_EXT", 0x87A1)
    set_enum("GL_OUTPUT_TEXTURE_COORD5_EXT", 0x87A2)
    set_enum("GL_OUTPUT_TEXTURE_COORD6_EXT", 0x87A3)
    set_enum("GL_OUTPUT_TEXTURE_COORD7_EXT", 0x87A4)
    set_enum("GL_OUTPUT_TEXTURE_COORD8_EXT", 0x87A5)
    set_enum("GL_OUTPUT_TEXTURE_COORD9_EXT", 0x87A6)
    set_enum("GL_OUTPUT_TEXTURE_COORD10_EXT", 0x87A7)
    set_enum("GL_OUTPUT_TEXTURE_COORD11_EXT", 0x87A8)
    set_enum("GL_OUTPUT_TEXTURE_COORD12_EXT", 0x87A9)
    set_enum("GL_OUTPUT_TEXTURE_COORD13_EXT", 0x87AA)
    set_enum("GL_OUTPUT_TEXTURE_COORD14_EXT", 0x87AB)
    set_enum("GL_OUTPUT_TEXTURE_COORD15_EXT", 0x87AC)
    set_enum("GL_OUTPUT_TEXTURE_COORD16_EXT", 0x87AD)
    set_enum("GL_OUTPUT_TEXTURE_COORD17_EXT", 0x87AE)
    set_enum("GL_OUTPUT_TEXTURE_COORD18_EXT", 0x87AF)
    set_enum("GL_OUTPUT_TEXTURE_COORD19_EXT", 0x87B0)
    set_enum("GL_OUTPUT_TEXTURE_COORD20_EXT", 0x87B1)
    set_enum("GL_OUTPUT_TEXTURE_COORD21_EXT", 0x87B2)
    set_enum("GL_OUTPUT_TEXTURE_COORD22_EXT", 0x87B3)
    set_enum("GL_OUTPUT_TEXTURE_COORD23_EXT", 0x87B4)
    set_enum("GL_OUTPUT_TEXTURE_COORD24_EXT", 0x87B5)
    set_enum("GL_OUTPUT_TEXTURE_COORD25_EXT", 0x87B6)
    set_enum("GL_OUTPUT_TEXTURE_COORD26_EXT", 0x87B7)
    set_enum("GL_OUTPUT_TEXTURE_COORD27_EXT", 0x87B8)
    set_enum("GL_OUTPUT_TEXTURE_COORD28_EXT", 0x87B9)
    set_enum("GL_OUTPUT_TEXTURE_COORD29_EXT", 0x87BA)
    set_enum("GL_OUTPUT_TEXTURE_COORD30_EXT", 0x87BB)
    set_enum("GL_OUTPUT_TEXTURE_COORD31_EXT", 0x87BC)
    set_enum("GL_OUTPUT_FOG_EXT", 0x87BD)
    set_enum("GL_SCALAR_EXT", 0x87BE)
    set_enum("GL_VECTOR_EXT", 0x87BF)
    set_enum("GL_MATRIX_EXT", 0x87C0)
    set_enum("GL_VARIANT_EXT", 0x87C1)
    set_enum("GL_INVARIANT_EXT", 0x87C2)
    set_enum("GL_LOCAL_CONSTANT_EXT", 0x87C3)
    set_enum("GL_LOCAL_EXT", 0x87C4)
    set_enum("GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT", 0x87C5)
    set_enum("GL_MAX_VERTEX_SHADER_VARIANTS_EXT", 0x87C6)
    set_enum("GL_MAX_VERTEX_SHADER_INVARIANTS_EXT", 0x87C7)
    set_enum("GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT", 0x87C8)
    set_enum("GL_MAX_VERTEX_SHADER_LOCALS_EXT", 0x87C9)
    set_enum("GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT", 0x87CA)
    set_enum("GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT", 0x87CB)
    set_enum("GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT", 0x87CC)
    set_enum("GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT", 0x87CD)
    set_enum("GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT", 0x87CE)
    set_enum("GL_VERTEX_SHADER_INSTRUCTIONS_EXT", 0x87CF)
    set_enum("GL_VERTEX_SHADER_VARIANTS_EXT", 0x87D0)
    set_enum("GL_VERTEX_SHADER_INVARIANTS_EXT", 0x87D1)
    set_enum("GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT", 0x87D2)
    set_enum("GL_VERTEX_SHADER_LOCALS_EXT", 0x87D3)
    set_enum("GL_VERTEX_SHADER_OPTIMIZED_EXT", 0x87D4)
    set_enum("GL_X_EXT", 0x87D5)
    set_enum("GL_Y_EXT", 0x87D6)
    set_enum("GL_Z_EXT", 0x87D7)
    set_enum("GL_W_EXT", 0x87D8)
    set_enum("GL_NEGATIVE_X_EXT", 0x87D9)
    set_enum("GL_NEGATIVE_Y_EXT", 0x87DA)
    set_enum("GL_NEGATIVE_Z_EXT", 0x87DB)
    set_enum("GL_NEGATIVE_W_EXT", 0x87DC)
    set_enum("GL_ZERO_EXT", 0x87DD)
    set_enum("GL_ONE_EXT", 0x87DE)
    set_enum("GL_NEGATIVE_ONE_EXT", 0x87DF)
    set_enum("GL_NORMALIZED_RANGE_EXT", 0x87E0)
    set_enum("GL_FULL_RANGE_EXT", 0x87E1)
    set_enum("GL_CURRENT_VERTEX_EXT", 0x87E2)
    set_enum("GL_MVP_MATRIX_EXT", 0x87E3)
    set_enum("GL_VARIANT_VALUE_EXT", 0x87E4)
    set_enum("GL_VARIANT_DATATYPE_EXT", 0x87E5)
    set_enum("GL_VARIANT_ARRAY_STRIDE_EXT", 0x87E6)
    set_enum("GL_VARIANT_ARRAY_TYPE_EXT", 0x87E7)
    set_enum("GL_VARIANT_ARRAY_EXT", 0x87E8)
    set_enum("GL_VARIANT_ARRAY_POINTER_EXT", 0x87E9)
    set_enum("GL_INVARIANT_VALUE_EXT", 0x87EA)
    set_enum("GL_INVARIANT_DATATYPE_EXT", 0x87EB)
    set_enum("GL_LOCAL_CONSTANT_VALUE_EXT", 0x87EC)
    set_enum("GL_LOCAL_CONSTANT_DATATYPE_EXT", 0x87ED)


#### GL_EXT_VERTEX_WEIGHTING ####
def init_gl_ext_vertex_weighting():
    set_func('glVertexWeightfEXT', t.void, (t.GLfloat,))
    set_func('glVertexWeightfvEXT', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glVertexWeightPointerEXT', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_MODELVIEW0_STACK_DEPTH_EXT", 0x0BA3)
    set_enum("GL_MODELVIEW1_STACK_DEPTH_EXT", 0x8502)
    set_enum("GL_MODELVIEW0_MATRIX_EXT", 0x0BA6)
    set_enum("GL_MODELVIEW1_MATRIX_EXT", 0x8506)
    set_enum("GL_VERTEX_WEIGHTING_EXT", 0x8509)
    set_enum("GL_MODELVIEW0_EXT", 0x1700)
    set_enum("GL_MODELVIEW1_EXT", 0x850A)
    set_enum("GL_CURRENT_VERTEX_WEIGHT_EXT", 0x850B)
    set_enum("GL_VERTEX_WEIGHT_ARRAY_EXT", 0x850C)
    set_enum("GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT", 0x850D)
    set_enum("GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT", 0x850E)
    set_enum("GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT", 0x850F)
    set_enum("GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT", 0x8510)


#### GL_EXT_X11_SYNC_OBJECT ####
def init_gl_ext_x11_sync_object():
    set_func('glImportSyncEXT', t.GLsync, (t.GLenum, t.GLintptr, t.GLbitfield))
    set_enum("GL_SYNC_X11_FENCE_EXT", 0x90E1)


#### GL_FJ_SHADER_BINARY_GCCSO ####
def init_gl_fj_shader_binary_gccso():
    set_enum("GL_GCCSO_SHADER_BINARY_FJ", 0x9260)


#### GL_GREMEDY_FRAME_TERMINATOR ####
def init_gl_gremedy_frame_terminator():
    set_func('glFrameTerminatorGREMEDY', t.void, ())


#### GL_GREMEDY_STRING_MARKER ####
def init_gl_gremedy_string_marker():
    set_func('glStringMarkerGREMEDY', t.void, (t.GLsizei, ct.POINTER(t.void)))


#### GL_HP_CONVOLUTION_BORDER_MODES ####
def init_gl_hp_convolution_border_modes():
    set_enum("GL_IGNORE_BORDER_HP", 0x8150)
    set_enum("GL_CONSTANT_BORDER_HP", 0x8151)
    set_enum("GL_REPLICATE_BORDER_HP", 0x8153)
    set_enum("GL_CONVOLUTION_BORDER_COLOR_HP", 0x8154)


#### GL_HP_IMAGE_TRANSFORM ####
def init_gl_hp_image_transform():
    set_func('glImageTransformParameteriHP', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glImageTransformParameterfHP', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glImageTransformParameterivHP', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glImageTransformParameterfvHP', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetImageTransformParameterivHP', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetImageTransformParameterfvHP', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_IMAGE_SCALE_X_HP", 0x8155)
    set_enum("GL_IMAGE_SCALE_Y_HP", 0x8156)
    set_enum("GL_IMAGE_TRANSLATE_X_HP", 0x8157)
    set_enum("GL_IMAGE_TRANSLATE_Y_HP", 0x8158)
    set_enum("GL_IMAGE_ROTATE_ANGLE_HP", 0x8159)
    set_enum("GL_IMAGE_ROTATE_ORIGIN_X_HP", 0x815A)
    set_enum("GL_IMAGE_ROTATE_ORIGIN_Y_HP", 0x815B)
    set_enum("GL_IMAGE_MAG_FILTER_HP", 0x815C)
    set_enum("GL_IMAGE_MIN_FILTER_HP", 0x815D)
    set_enum("GL_IMAGE_CUBIC_WEIGHT_HP", 0x815E)
    set_enum("GL_CUBIC_HP", 0x815F)
    set_enum("GL_AVERAGE_HP", 0x8160)
    set_enum("GL_IMAGE_TRANSFORM_2D_HP", 0x8161)
    set_enum("GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP", 0x8162)
    set_enum("GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP", 0x8163)


#### GL_HP_OCCLUSION_TEST ####
def init_gl_hp_occlusion_test():
    set_enum("GL_OCCLUSION_TEST_HP", 0x8165)
    set_enum("GL_OCCLUSION_TEST_RESULT_HP", 0x8166)


#### GL_HP_TEXTURE_LIGHTING ####
def init_gl_hp_texture_lighting():
    set_enum("GL_TEXTURE_LIGHTING_MODE_HP", 0x8167)
    set_enum("GL_TEXTURE_POST_SPECULAR_HP", 0x8168)
    set_enum("GL_TEXTURE_PRE_SPECULAR_HP", 0x8169)


#### GL_IBM_CULL_VERTEX ####
def init_gl_ibm_cull_vertex():
    set_enum("GL_CULL_VERTEX_IBM", 103050)


#### GL_IBM_MULTIMODE_DRAW_ARRAYS ####
def init_gl_ibm_multimode_draw_arrays():
    set_func('glMultiModeDrawArraysIBM', t.void, (ct.POINTER(t.GLenum), ct.POINTER(t.GLint), ct.POINTER(t.GLsizei), t.GLsizei, t.GLint))
    set_func('glMultiModeDrawElementsIBM', t.void, (ct.POINTER(t.GLenum), ct.POINTER(t.GLsizei), t.GLenum, ct.POINTER(ct.POINTER(t.void)), t.GLsizei, t.GLint))


#### GL_IBM_RASTERPOS_CLIP ####
def init_gl_ibm_rasterpos_clip():
    set_enum("GL_RASTER_POSITION_UNCLIPPED_IBM", 0x19262)


#### GL_IBM_STATIC_DATA ####
def init_gl_ibm_static_data():
    set_func('glFlushStaticDataIBM', t.void, (t.GLenum,))
    set_enum("GL_ALL_STATIC_DATA_IBM", 103060)
    set_enum("GL_STATIC_VERTEX_ARRAY_IBM", 103061)


#### GL_IBM_TEXTURE_MIRRORED_REPEAT ####
def init_gl_ibm_texture_mirrored_repeat():
    set_enum("GL_MIRRORED_REPEAT_IBM", 0x8370)


#### GL_IBM_VERTEX_ARRAY_LISTS ####
def init_gl_ibm_vertex_array_lists():
    set_func('glColorPointerListIBM', t.void, (t.GLint, t.GLenum, t.GLint, ct.POINTER(ct.POINTER(t.void)), t.GLint))
    set_func('glSecondaryColorPointerListIBM', t.void, (t.GLint, t.GLenum, t.GLint, ct.POINTER(ct.POINTER(t.void)), t.GLint))
    set_func('glEdgeFlagPointerListIBM', t.void, (t.GLint, ct.POINTER(ct.POINTER(t.GLboolean)), t.GLint))
    set_func('glFogCoordPointerListIBM', t.void, (t.GLenum, t.GLint, ct.POINTER(ct.POINTER(t.void)), t.GLint))
    set_func('glIndexPointerListIBM', t.void, (t.GLenum, t.GLint, ct.POINTER(ct.POINTER(t.void)), t.GLint))
    set_func('glNormalPointerListIBM', t.void, (t.GLenum, t.GLint, ct.POINTER(ct.POINTER(t.void)), t.GLint))
    set_func('glTexCoordPointerListIBM', t.void, (t.GLint, t.GLenum, t.GLint, ct.POINTER(ct.POINTER(t.void)), t.GLint))
    set_func('glVertexPointerListIBM', t.void, (t.GLint, t.GLenum, t.GLint, ct.POINTER(ct.POINTER(t.void)), t.GLint))
    set_enum("GL_VERTEX_ARRAY_LIST_IBM", 103070)
    set_enum("GL_NORMAL_ARRAY_LIST_IBM", 103071)
    set_enum("GL_COLOR_ARRAY_LIST_IBM", 103072)
    set_enum("GL_INDEX_ARRAY_LIST_IBM", 103073)
    set_enum("GL_TEXTURE_COORD_ARRAY_LIST_IBM", 103074)
    set_enum("GL_EDGE_FLAG_ARRAY_LIST_IBM", 103075)
    set_enum("GL_FOG_COORDINATE_ARRAY_LIST_IBM", 103076)
    set_enum("GL_SECONDARY_COLOR_ARRAY_LIST_IBM", 103077)
    set_enum("GL_VERTEX_ARRAY_LIST_STRIDE_IBM", 103080)
    set_enum("GL_NORMAL_ARRAY_LIST_STRIDE_IBM", 103081)
    set_enum("GL_COLOR_ARRAY_LIST_STRIDE_IBM", 103082)
    set_enum("GL_INDEX_ARRAY_LIST_STRIDE_IBM", 103083)
    set_enum("GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM", 103084)
    set_enum("GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM", 103085)
    set_enum("GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM", 103086)
    set_enum("GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM", 103087)


#### GL_IMG_FRAMEBUFFER_DOWNSAMPLE ####
def init_gl_img_framebuffer_downsample():
    set_func('glFramebufferTexture2DDownsampleIMG', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint, t.GLint))
    set_func('glFramebufferTextureLayerDownsampleIMG', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG", 0x913C)
    set_enum("GL_NUM_DOWNSAMPLE_SCALES_IMG", 0x913D)
    set_enum("GL_DOWNSAMPLE_SCALES_IMG", 0x913E)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG", 0x913F)


#### GL_IMG_MULTISAMPLED_RENDER_TO_TEXTURE ####
def init_gl_img_multisampled_render_to_texture():
    set_func('glRenderbufferStorageMultisampleIMG', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glFramebufferTexture2DMultisampleIMG', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLsizei))
    set_enum("GL_RENDERBUFFER_SAMPLES_IMG", 0x9133)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG", 0x9134)
    set_enum("GL_MAX_SAMPLES_IMG", 0x9135)
    set_enum("GL_TEXTURE_SAMPLES_IMG", 0x9136)


#### GL_IMG_PROGRAM_BINARY ####
def init_gl_img_program_binary():
    set_enum("GL_SGX_PROGRAM_BINARY_IMG", 0x9130)


#### GL_IMG_READ_FORMAT ####
def init_gl_img_read_format():
    set_enum("GL_BGRA_IMG", 0x80E1)
    set_enum("GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG", 0x8365)


#### GL_IMG_SHADER_BINARY ####
def init_gl_img_shader_binary():
    set_enum("GL_SGX_BINARY_IMG", 0x8C0A)


#### GL_IMG_TEXTURE_COMPRESSION_PVRTC ####
def init_gl_img_texture_compression_pvrtc():
    set_enum("GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG", 0x8C00)
    set_enum("GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG", 0x8C01)
    set_enum("GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG", 0x8C02)
    set_enum("GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG", 0x8C03)


#### GL_IMG_TEXTURE_COMPRESSION_PVRTC2 ####
def init_gl_img_texture_compression_pvrtc2():
    set_enum("GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG", 0x9137)
    set_enum("GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG", 0x9138)


#### GL_IMG_TEXTURE_ENV_ENHANCED_FIXED_FUNCTION ####
def init_gl_img_texture_env_enhanced_fixed_function():
    set_enum("GL_MODULATE_COLOR_IMG", 0x8C04)
    set_enum("GL_RECIP_ADD_SIGNED_ALPHA_IMG", 0x8C05)
    set_enum("GL_TEXTURE_ALPHA_MODULATE_IMG", 0x8C06)
    set_enum("GL_FACTOR_ALPHA_MODULATE_IMG", 0x8C07)
    set_enum("GL_FRAGMENT_ALPHA_MODULATE_IMG", 0x8C08)
    set_enum("GL_ADD_BLEND_IMG", 0x8C09)
    set_enum("GL_DOT3_RGBA_IMG", 0x86AF)


#### GL_IMG_TEXTURE_FILTER_CUBIC ####
def init_gl_img_texture_filter_cubic():
    set_enum("GL_CUBIC_IMG", 0x9139)
    set_enum("GL_CUBIC_MIPMAP_NEAREST_IMG", 0x913A)
    set_enum("GL_CUBIC_MIPMAP_LINEAR_IMG", 0x913B)


#### GL_IMG_USER_CLIP_PLANE ####
def init_gl_img_user_clip_plane():
    set_func('glClipPlanefIMG', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glClipPlanexIMG', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_enum("GL_CLIP_PLANE0_IMG", 0x3000)
    set_enum("GL_CLIP_PLANE1_IMG", 0x3001)
    set_enum("GL_CLIP_PLANE2_IMG", 0x3002)
    set_enum("GL_CLIP_PLANE3_IMG", 0x3003)
    set_enum("GL_CLIP_PLANE4_IMG", 0x3004)
    set_enum("GL_CLIP_PLANE5_IMG", 0x3005)
    set_enum("GL_MAX_CLIP_PLANES_IMG", 0x0D32)


#### GL_INGR_BLEND_FUNC_SEPARATE ####
def init_gl_ingr_blend_func_separate():
    set_func('glBlendFuncSeparateINGR', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))


#### GL_INGR_COLOR_CLAMP ####
def init_gl_ingr_color_clamp():
    set_enum("GL_RED_MIN_CLAMP_INGR", 0x8560)
    set_enum("GL_GREEN_MIN_CLAMP_INGR", 0x8561)
    set_enum("GL_BLUE_MIN_CLAMP_INGR", 0x8562)
    set_enum("GL_ALPHA_MIN_CLAMP_INGR", 0x8563)
    set_enum("GL_RED_MAX_CLAMP_INGR", 0x8564)
    set_enum("GL_GREEN_MAX_CLAMP_INGR", 0x8565)
    set_enum("GL_BLUE_MAX_CLAMP_INGR", 0x8566)
    set_enum("GL_ALPHA_MAX_CLAMP_INGR", 0x8567)


#### GL_INGR_INTERLACE_READ ####
def init_gl_ingr_interlace_read():
    set_enum("GL_INTERLACE_READ_INGR", 0x8568)


#### GL_INTEL_FRAMEBUFFER_CMAA ####
def init_gl_intel_framebuffer_cmaa():
    set_func('glApplyFramebufferAttachmentCMAAINTEL', t.void, ())


#### GL_INTEL_MAP_TEXTURE ####
def init_gl_intel_map_texture():
    set_func('glSyncTextureINTEL', t.void, (t.GLuint,))
    set_func('glUnmapTexture2DINTEL', t.void, (t.GLuint, t.GLint))
    set_func('glMapTexture2DINTEL', ct.POINTER(t.void), (t.GLuint, t.GLint, t.GLbitfield, ct.POINTER(t.GLint), ct.POINTER(t.GLenum)))
    set_enum("GL_TEXTURE_MEMORY_LAYOUT_INTEL", 0x83FF)
    set_enum("GL_LAYOUT_DEFAULT_INTEL", 0)
    set_enum("GL_LAYOUT_LINEAR_INTEL", 1)
    set_enum("GL_LAYOUT_LINEAR_CPU_CACHED_INTEL", 2)


#### GL_INTEL_PARALLEL_ARRAYS ####
def init_gl_intel_parallel_arrays():
    set_func('glVertexPointervINTEL', t.void, (t.GLint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glNormalPointervINTEL', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glColorPointervINTEL', t.void, (t.GLint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glTexCoordPointervINTEL', t.void, (t.GLint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_PARALLEL_ARRAYS_INTEL", 0x83F4)
    set_enum("GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL", 0x83F5)
    set_enum("GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL", 0x83F6)
    set_enum("GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL", 0x83F7)
    set_enum("GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL", 0x83F8)


#### GL_INTEL_PERFORMANCE_QUERY ####
def init_gl_intel_performance_query():
    set_func('glBeginPerfQueryINTEL', t.void, (t.GLuint,))
    set_func('glCreatePerfQueryINTEL', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glDeletePerfQueryINTEL', t.void, (t.GLuint,))
    set_func('glEndPerfQueryINTEL', t.void, (t.GLuint,))
    set_func('glGetFirstPerfQueryIdINTEL', t.void, (ct.POINTER(t.GLuint),))
    set_func('glGetNextPerfQueryIdINTEL', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glGetPerfCounterInfoINTEL', t.void, (t.GLuint, t.GLuint, t.GLuint, ct.POINTER(t.GLchar), t.GLuint, ct.POINTER(t.GLchar), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint64)))
    set_func('glGetPerfQueryDataINTEL', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLvoid), ct.POINTER(t.GLuint)))
    set_func('glGetPerfQueryIdByNameINTEL', t.void, (ct.POINTER(t.GLchar), ct.POINTER(t.GLuint)))
    set_func('glGetPerfQueryInfoINTEL', t.void, (t.GLuint, t.GLuint, ct.POINTER(t.GLchar), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint)))
    set_enum("GL_PERFQUERY_SINGLE_CONTEXT_INTEL", 0x00000000)
    set_enum("GL_PERFQUERY_GLOBAL_CONTEXT_INTEL", 0x00000001)
    set_enum("GL_PERFQUERY_WAIT_INTEL", 0x83FB)
    set_enum("GL_PERFQUERY_FLUSH_INTEL", 0x83FA)
    set_enum("GL_PERFQUERY_DONOT_FLUSH_INTEL", 0x83F9)
    set_enum("GL_PERFQUERY_COUNTER_EVENT_INTEL", 0x94F0)
    set_enum("GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL", 0x94F1)
    set_enum("GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL", 0x94F2)
    set_enum("GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL", 0x94F3)
    set_enum("GL_PERFQUERY_COUNTER_RAW_INTEL", 0x94F4)
    set_enum("GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL", 0x94F5)
    set_enum("GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL", 0x94F8)
    set_enum("GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL", 0x94F9)
    set_enum("GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL", 0x94FA)
    set_enum("GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL", 0x94FB)
    set_enum("GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL", 0x94FC)
    set_enum("GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL", 0x94FD)
    set_enum("GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL", 0x94FE)
    set_enum("GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL", 0x94FF)
    set_enum("GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL", 0x9500)


#### GL_KHR_BLEND_EQUATION_ADVANCED ####
def init_gl_khr_blend_equation_advanced():
    set_func('glBlendBarrierKHR', t.void, ())
    set_enum("GL_MULTIPLY_KHR", 0x9294)
    set_enum("GL_SCREEN_KHR", 0x9295)
    set_enum("GL_OVERLAY_KHR", 0x9296)
    set_enum("GL_DARKEN_KHR", 0x9297)
    set_enum("GL_LIGHTEN_KHR", 0x9298)
    set_enum("GL_COLORDODGE_KHR", 0x9299)
    set_enum("GL_COLORBURN_KHR", 0x929A)
    set_enum("GL_HARDLIGHT_KHR", 0x929B)
    set_enum("GL_SOFTLIGHT_KHR", 0x929C)
    set_enum("GL_DIFFERENCE_KHR", 0x929E)
    set_enum("GL_EXCLUSION_KHR", 0x92A0)
    set_enum("GL_HSL_HUE_KHR", 0x92AD)
    set_enum("GL_HSL_SATURATION_KHR", 0x92AE)
    set_enum("GL_HSL_COLOR_KHR", 0x92AF)
    set_enum("GL_HSL_LUMINOSITY_KHR", 0x92B0)


#### GL_KHR_BLEND_EQUATION_ADVANCED_COHERENT ####
def init_gl_khr_blend_equation_advanced_coherent():
    set_enum("GL_BLEND_ADVANCED_COHERENT_KHR", 0x9285)


#### GL_KHR_CONTEXT_FLUSH_CONTROL ####
def init_gl_khr_context_flush_control():
    set_enum("GL_CONTEXT_RELEASE_BEHAVIOR", 0x82FB)
    set_enum("GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH", 0x82FC)
    set_enum("GL_NONE", 0)
    set_enum("GL_CONTEXT_RELEASE_BEHAVIOR_KHR", 0x82FB)
    set_enum("GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR", 0x82FC)


#### GL_KHR_DEBUG ####
def init_gl_khr_debug():
    set_func('glDebugMessageControl', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLuint), t.GLboolean))
    set_func('glDebugMessageInsert', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLenum, t.GLsizei, ct.POINTER(t.GLchar)))
#     set_func('glDebugMessageCallback', t.void, (t.GLDEBUGPROC, ct.POINTER(t.void)))
    set_func('glGetDebugMessageLog', t.GLuint, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), ct.POINTER(t.GLenum), ct.POINTER(t.GLuint), ct.POINTER(t.GLenum), ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glPushDebugGroup', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glPopDebugGroup', t.void, ())
    set_func('glObjectLabel', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectLabel', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glObjectPtrLabel', t.void, (ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectPtrLabel', t.void, (ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetPointerv', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glDebugMessageControlKHR', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLuint), t.GLboolean))
    set_func('glDebugMessageInsertKHR', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLenum, t.GLsizei, ct.POINTER(t.GLchar)))
#     set_func('glDebugMessageCallbackKHR', t.void, (t.GLDEBUGPROCKHR, ct.POINTER(t.void)))
    set_func('glGetDebugMessageLogKHR', t.GLuint, (t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), ct.POINTER(t.GLenum), ct.POINTER(t.GLuint), ct.POINTER(t.GLenum), ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glPushDebugGroupKHR', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glPopDebugGroupKHR', t.void, ())
    set_func('glObjectLabelKHR', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectLabelKHR', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glObjectPtrLabelKHR', t.void, (ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.GLchar)))
    set_func('glGetObjectPtrLabelKHR', t.void, (ct.POINTER(t.void), t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glGetPointervKHR', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_DEBUG_OUTPUT_SYNCHRONOUS", 0x8242)
    set_enum("GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH", 0x8243)
    set_enum("GL_DEBUG_CALLBACK_FUNCTION", 0x8244)
    set_enum("GL_DEBUG_CALLBACK_USER_PARAM", 0x8245)
    set_enum("GL_DEBUG_SOURCE_API", 0x8246)
    set_enum("GL_DEBUG_SOURCE_WINDOW_SYSTEM", 0x8247)
    set_enum("GL_DEBUG_SOURCE_SHADER_COMPILER", 0x8248)
    set_enum("GL_DEBUG_SOURCE_THIRD_PARTY", 0x8249)
    set_enum("GL_DEBUG_SOURCE_APPLICATION", 0x824A)
    set_enum("GL_DEBUG_SOURCE_OTHER", 0x824B)
    set_enum("GL_DEBUG_TYPE_ERROR", 0x824C)
    set_enum("GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR", 0x824D)
    set_enum("GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR", 0x824E)
    set_enum("GL_DEBUG_TYPE_PORTABILITY", 0x824F)
    set_enum("GL_DEBUG_TYPE_PERFORMANCE", 0x8250)
    set_enum("GL_DEBUG_TYPE_OTHER", 0x8251)
    set_enum("GL_DEBUG_TYPE_MARKER", 0x8268)
    set_enum("GL_DEBUG_TYPE_PUSH_GROUP", 0x8269)
    set_enum("GL_DEBUG_TYPE_POP_GROUP", 0x826A)
    set_enum("GL_DEBUG_SEVERITY_NOTIFICATION", 0x826B)
    set_enum("GL_MAX_DEBUG_GROUP_STACK_DEPTH", 0x826C)
    set_enum("GL_DEBUG_GROUP_STACK_DEPTH", 0x826D)
    set_enum("GL_BUFFER", 0x82E0)
    set_enum("GL_SHADER", 0x82E1)
    set_enum("GL_PROGRAM", 0x82E2)
    set_enum("GL_VERTEX_ARRAY", 0x8074)
    set_enum("GL_QUERY", 0x82E3)
    set_enum("GL_PROGRAM_PIPELINE", 0x82E4)
    set_enum("GL_SAMPLER", 0x82E6)
    set_enum("GL_MAX_LABEL_LENGTH", 0x82E8)
    set_enum("GL_MAX_DEBUG_MESSAGE_LENGTH", 0x9143)
    set_enum("GL_MAX_DEBUG_LOGGED_MESSAGES", 0x9144)
    set_enum("GL_DEBUG_LOGGED_MESSAGES", 0x9145)
    set_enum("GL_DEBUG_SEVERITY_HIGH", 0x9146)
    set_enum("GL_DEBUG_SEVERITY_MEDIUM", 0x9147)
    set_enum("GL_DEBUG_SEVERITY_LOW", 0x9148)
    set_enum("GL_DEBUG_OUTPUT", 0x92E0)
    set_enum("GL_CONTEXT_FLAG_DEBUG_BIT", 0x00000002)
    set_enum("GL_STACK_OVERFLOW", 0x0503)
    set_enum("GL_STACK_UNDERFLOW", 0x0504)
    set_enum("GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR", 0x8242)
    set_enum("GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR", 0x8243)
    set_enum("GL_DEBUG_CALLBACK_FUNCTION_KHR", 0x8244)
    set_enum("GL_DEBUG_CALLBACK_USER_PARAM_KHR", 0x8245)
    set_enum("GL_DEBUG_SOURCE_API_KHR", 0x8246)
    set_enum("GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR", 0x8247)
    set_enum("GL_DEBUG_SOURCE_SHADER_COMPILER_KHR", 0x8248)
    set_enum("GL_DEBUG_SOURCE_THIRD_PARTY_KHR", 0x8249)
    set_enum("GL_DEBUG_SOURCE_APPLICATION_KHR", 0x824A)
    set_enum("GL_DEBUG_SOURCE_OTHER_KHR", 0x824B)
    set_enum("GL_DEBUG_TYPE_ERROR_KHR", 0x824C)
    set_enum("GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR", 0x824D)
    set_enum("GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR", 0x824E)
    set_enum("GL_DEBUG_TYPE_PORTABILITY_KHR", 0x824F)
    set_enum("GL_DEBUG_TYPE_PERFORMANCE_KHR", 0x8250)
    set_enum("GL_DEBUG_TYPE_OTHER_KHR", 0x8251)
    set_enum("GL_DEBUG_TYPE_MARKER_KHR", 0x8268)
    set_enum("GL_DEBUG_TYPE_PUSH_GROUP_KHR", 0x8269)
    set_enum("GL_DEBUG_TYPE_POP_GROUP_KHR", 0x826A)
    set_enum("GL_DEBUG_SEVERITY_NOTIFICATION_KHR", 0x826B)
    set_enum("GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR", 0x826C)
    set_enum("GL_DEBUG_GROUP_STACK_DEPTH_KHR", 0x826D)
    set_enum("GL_BUFFER_KHR", 0x82E0)
    set_enum("GL_SHADER_KHR", 0x82E1)
    set_enum("GL_PROGRAM_KHR", 0x82E2)
    set_enum("GL_VERTEX_ARRAY_KHR", 0x8074)
    set_enum("GL_QUERY_KHR", 0x82E3)
    set_enum("GL_PROGRAM_PIPELINE_KHR", 0x82E4)
    set_enum("GL_SAMPLER_KHR", 0x82E6)
    set_enum("GL_MAX_LABEL_LENGTH_KHR", 0x82E8)
    set_enum("GL_MAX_DEBUG_MESSAGE_LENGTH_KHR", 0x9143)
    set_enum("GL_MAX_DEBUG_LOGGED_MESSAGES_KHR", 0x9144)
    set_enum("GL_DEBUG_LOGGED_MESSAGES_KHR", 0x9145)
    set_enum("GL_DEBUG_SEVERITY_HIGH_KHR", 0x9146)
    set_enum("GL_DEBUG_SEVERITY_MEDIUM_KHR", 0x9147)
    set_enum("GL_DEBUG_SEVERITY_LOW_KHR", 0x9148)
    set_enum("GL_DEBUG_OUTPUT_KHR", 0x92E0)
    set_enum("GL_CONTEXT_FLAG_DEBUG_BIT_KHR", 0x00000002)
    set_enum("GL_STACK_OVERFLOW_KHR", 0x0503)
    set_enum("GL_STACK_UNDERFLOW_KHR", 0x0504)
    set_enum("GL_DISPLAY_LIST", 0x82E7)


#### GL_KHR_NO_ERROR ####
def init_gl_khr_no_error():
    set_enum("GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR", 0x00000008)


#### GL_KHR_ROBUSTNESS ####
def init_gl_khr_robustness():
    set_func('glGetGraphicsResetStatus', t.GLenum, ())
    set_func('glReadnPixels', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnUniformfv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnUniformiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glGetnUniformuiv', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetGraphicsResetStatusKHR', t.GLenum, ())
    set_func('glReadnPixelsKHR', t.void, (t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetnUniformfvKHR', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetnUniformivKHR', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glGetnUniformuivKHR', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_enum("GL_NO_ERROR", 0)
    set_enum("GL_CONTEXT_ROBUST_ACCESS", 0x90F3)
    set_enum("GL_LOSE_CONTEXT_ON_RESET", 0x8252)
    set_enum("GL_GUILTY_CONTEXT_RESET", 0x8253)
    set_enum("GL_INNOCENT_CONTEXT_RESET", 0x8254)
    set_enum("GL_UNKNOWN_CONTEXT_RESET", 0x8255)
    set_enum("GL_RESET_NOTIFICATION_STRATEGY", 0x8256)
    set_enum("GL_NO_RESET_NOTIFICATION", 0x8261)
    set_enum("GL_CONTEXT_LOST", 0x0507)
    set_enum("GL_CONTEXT_ROBUST_ACCESS_KHR", 0x90F3)
    set_enum("GL_LOSE_CONTEXT_ON_RESET_KHR", 0x8252)
    set_enum("GL_GUILTY_CONTEXT_RESET_KHR", 0x8253)
    set_enum("GL_INNOCENT_CONTEXT_RESET_KHR", 0x8254)
    set_enum("GL_UNKNOWN_CONTEXT_RESET_KHR", 0x8255)
    set_enum("GL_RESET_NOTIFICATION_STRATEGY_KHR", 0x8256)
    set_enum("GL_NO_RESET_NOTIFICATION_KHR", 0x8261)
    set_enum("GL_CONTEXT_LOST_KHR", 0x0507)


#### GL_KHR_TEXTURE_COMPRESSION_ASTC_HDR ####
def init_gl_khr_texture_compression_astc_hdr():
    set_enum("GL_COMPRESSED_RGBA_ASTC_4x4_KHR", 0x93B0)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x4_KHR", 0x93B1)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x5_KHR", 0x93B2)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x5_KHR", 0x93B3)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x6_KHR", 0x93B4)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x5_KHR", 0x93B5)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x6_KHR", 0x93B6)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x8_KHR", 0x93B7)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x5_KHR", 0x93B8)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x6_KHR", 0x93B9)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x8_KHR", 0x93BA)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x10_KHR", 0x93BB)
    set_enum("GL_COMPRESSED_RGBA_ASTC_12x10_KHR", 0x93BC)
    set_enum("GL_COMPRESSED_RGBA_ASTC_12x12_KHR", 0x93BD)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR", 0x93D0)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR", 0x93D1)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR", 0x93D2)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR", 0x93D3)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR", 0x93D4)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR", 0x93D5)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR", 0x93D6)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR", 0x93D7)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR", 0x93D8)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR", 0x93D9)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR", 0x93DA)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR", 0x93DB)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR", 0x93DC)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR", 0x93DD)


#### GL_KHR_TEXTURE_COMPRESSION_ASTC_LDR ####
def init_gl_khr_texture_compression_astc_ldr():
    set_enum("GL_COMPRESSED_RGBA_ASTC_4x4_KHR", 0x93B0)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x4_KHR", 0x93B1)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x5_KHR", 0x93B2)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x5_KHR", 0x93B3)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x6_KHR", 0x93B4)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x5_KHR", 0x93B5)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x6_KHR", 0x93B6)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x8_KHR", 0x93B7)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x5_KHR", 0x93B8)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x6_KHR", 0x93B9)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x8_KHR", 0x93BA)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x10_KHR", 0x93BB)
    set_enum("GL_COMPRESSED_RGBA_ASTC_12x10_KHR", 0x93BC)
    set_enum("GL_COMPRESSED_RGBA_ASTC_12x12_KHR", 0x93BD)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR", 0x93D0)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR", 0x93D1)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR", 0x93D2)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR", 0x93D3)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR", 0x93D4)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR", 0x93D5)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR", 0x93D6)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR", 0x93D7)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR", 0x93D8)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR", 0x93D9)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR", 0x93DA)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR", 0x93DB)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR", 0x93DC)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR", 0x93DD)


#### GL_MESAX_TEXTURE_STACK ####
def init_gl_mesax_texture_stack():
    set_enum("GL_TEXTURE_1D_STACK_MESAX", 0x8759)
    set_enum("GL_TEXTURE_2D_STACK_MESAX", 0x875A)
    set_enum("GL_PROXY_TEXTURE_1D_STACK_MESAX", 0x875B)
    set_enum("GL_PROXY_TEXTURE_2D_STACK_MESAX", 0x875C)
    set_enum("GL_TEXTURE_1D_STACK_BINDING_MESAX", 0x875D)
    set_enum("GL_TEXTURE_2D_STACK_BINDING_MESAX", 0x875E)


#### GL_MESA_PACK_INVERT ####
def init_gl_mesa_pack_invert():
    set_enum("GL_PACK_INVERT_MESA", 0x8758)


#### GL_MESA_RESIZE_BUFFERS ####
def init_gl_mesa_resize_buffers():
    set_func('glResizeBuffersMESA', t.void, ())


#### GL_MESA_WINDOW_POS ####
def init_gl_mesa_window_pos():
    set_func('glWindowPos2dMESA', t.void, (t.GLdouble, t.GLdouble))
    set_func('glWindowPos2dvMESA', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glWindowPos2fMESA', t.void, (t.GLfloat, t.GLfloat))
    set_func('glWindowPos2fvMESA', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glWindowPos2iMESA', t.void, (t.GLint, t.GLint))
    set_func('glWindowPos2ivMESA', t.void, (ct.POINTER(t.GLint),))
    set_func('glWindowPos2sMESA', t.void, (t.GLshort, t.GLshort))
    set_func('glWindowPos2svMESA', t.void, (ct.POINTER(t.GLshort),))
    set_func('glWindowPos3dMESA', t.void, (t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glWindowPos3dvMESA', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glWindowPos3fMESA', t.void, (t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glWindowPos3fvMESA', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glWindowPos3iMESA', t.void, (t.GLint, t.GLint, t.GLint))
    set_func('glWindowPos3ivMESA', t.void, (ct.POINTER(t.GLint),))
    set_func('glWindowPos3sMESA', t.void, (t.GLshort, t.GLshort, t.GLshort))
    set_func('glWindowPos3svMESA', t.void, (ct.POINTER(t.GLshort),))
    set_func('glWindowPos4dMESA', t.void, (t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glWindowPos4dvMESA', t.void, (ct.POINTER(t.GLdouble),))
    set_func('glWindowPos4fMESA', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glWindowPos4fvMESA', t.void, (ct.POINTER(t.GLfloat),))
    set_func('glWindowPos4iMESA', t.void, (t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glWindowPos4ivMESA', t.void, (ct.POINTER(t.GLint),))
    set_func('glWindowPos4sMESA', t.void, (t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glWindowPos4svMESA', t.void, (ct.POINTER(t.GLshort),))


#### GL_MESA_YCBCR_TEXTURE ####
def init_gl_mesa_ycbcr_texture():
    set_enum("GL_UNSIGNED_SHORT_8_8_MESA", 0x85BA)
    set_enum("GL_UNSIGNED_SHORT_8_8_REV_MESA", 0x85BB)
    set_enum("GL_YCBCR_MESA", 0x8757)


#### GL_NVX_CONDITIONAL_RENDER ####
def init_gl_nvx_conditional_render():
    set_func('glBeginConditionalRenderNVX', t.void, (t.GLuint,))
    set_func('glEndConditionalRenderNVX', t.void, ())


#### GL_NVX_GPU_MEMORY_INFO ####
def init_gl_nvx_gpu_memory_info():
    set_enum("GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX", 0x9047)
    set_enum("GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX", 0x9048)
    set_enum("GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX", 0x9049)
    set_enum("GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX", 0x904A)
    set_enum("GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX", 0x904B)


#### GL_NV_BINDLESS_MULTI_DRAW_INDIRECT ####
def init_gl_nv_bindless_multi_draw_indirect():
    set_func('glMultiDrawArraysIndirectBindlessNV', t.void, (t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei, t.GLint))
    set_func('glMultiDrawElementsIndirectBindlessNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei, t.GLint))


#### GL_NV_BINDLESS_MULTI_DRAW_INDIRECT_COUNT ####
def init_gl_nv_bindless_multi_draw_indirect_count():
    set_func('glMultiDrawArraysIndirectBindlessCountNV', t.void, (t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei, t.GLsizei, t.GLint))
    set_func('glMultiDrawElementsIndirectBindlessCountNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLsizei, t.GLsizei, t.GLint))


#### GL_NV_BINDLESS_TEXTURE ####
def init_gl_nv_bindless_texture():
    set_func('glGetTextureHandleNV', t.GLuint64, (t.GLuint,))
    set_func('glGetTextureSamplerHandleNV', t.GLuint64, (t.GLuint, t.GLuint))
    set_func('glMakeTextureHandleResidentNV', t.void, (t.GLuint64,))
    set_func('glMakeTextureHandleNonResidentNV', t.void, (t.GLuint64,))
    set_func('glGetImageHandleNV', t.GLuint64, (t.GLuint, t.GLint, t.GLboolean, t.GLint, t.GLenum))
    set_func('glMakeImageHandleResidentNV', t.void, (t.GLuint64, t.GLenum))
    set_func('glMakeImageHandleNonResidentNV', t.void, (t.GLuint64,))
    set_func('glUniformHandleui64NV', t.void, (t.GLint, t.GLuint64))
    set_func('glUniformHandleui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glProgramUniformHandleui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64))
    set_func('glProgramUniformHandleui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64)))
    set_func('glIsTextureHandleResidentNV', t.GLboolean, (t.GLuint64,))
    set_func('glIsImageHandleResidentNV', t.GLboolean, (t.GLuint64,))


#### GL_NV_BLEND_EQUATION_ADVANCED ####
def init_gl_nv_blend_equation_advanced():
    set_func('glBlendParameteriNV', t.void, (t.GLenum, t.GLint))
    set_func('glBlendBarrierNV', t.void, ())
    set_enum("GL_BLEND_OVERLAP_NV", 0x9281)
    set_enum("GL_BLEND_PREMULTIPLIED_SRC_NV", 0x9280)
    set_enum("GL_BLUE_NV", 0x1905)
    set_enum("GL_COLORBURN_NV", 0x929A)
    set_enum("GL_COLORDODGE_NV", 0x9299)
    set_enum("GL_CONJOINT_NV", 0x9284)
    set_enum("GL_CONTRAST_NV", 0x92A1)
    set_enum("GL_DARKEN_NV", 0x9297)
    set_enum("GL_DIFFERENCE_NV", 0x929E)
    set_enum("GL_DISJOINT_NV", 0x9283)
    set_enum("GL_DST_ATOP_NV", 0x928F)
    set_enum("GL_DST_IN_NV", 0x928B)
    set_enum("GL_DST_NV", 0x9287)
    set_enum("GL_DST_OUT_NV", 0x928D)
    set_enum("GL_DST_OVER_NV", 0x9289)
    set_enum("GL_EXCLUSION_NV", 0x92A0)
    set_enum("GL_GREEN_NV", 0x1904)
    set_enum("GL_HARDLIGHT_NV", 0x929B)
    set_enum("GL_HARDMIX_NV", 0x92A9)
    set_enum("GL_HSL_COLOR_NV", 0x92AF)
    set_enum("GL_HSL_HUE_NV", 0x92AD)
    set_enum("GL_HSL_LUMINOSITY_NV", 0x92B0)
    set_enum("GL_HSL_SATURATION_NV", 0x92AE)
    set_enum("GL_INVERT", 0x150A)
    set_enum("GL_INVERT_OVG_NV", 0x92B4)
    set_enum("GL_INVERT_RGB_NV", 0x92A3)
    set_enum("GL_LIGHTEN_NV", 0x9298)
    set_enum("GL_LINEARBURN_NV", 0x92A5)
    set_enum("GL_LINEARDODGE_NV", 0x92A4)
    set_enum("GL_LINEARLIGHT_NV", 0x92A7)
    set_enum("GL_MINUS_CLAMPED_NV", 0x92B3)
    set_enum("GL_MINUS_NV", 0x929F)
    set_enum("GL_MULTIPLY_NV", 0x9294)
    set_enum("GL_OVERLAY_NV", 0x9296)
    set_enum("GL_PINLIGHT_NV", 0x92A8)
    set_enum("GL_PLUS_CLAMPED_ALPHA_NV", 0x92B2)
    set_enum("GL_PLUS_CLAMPED_NV", 0x92B1)
    set_enum("GL_PLUS_DARKER_NV", 0x9292)
    set_enum("GL_PLUS_NV", 0x9291)
    set_enum("GL_RED_NV", 0x1903)
    set_enum("GL_SCREEN_NV", 0x9295)
    set_enum("GL_SOFTLIGHT_NV", 0x929C)
    set_enum("GL_SRC_ATOP_NV", 0x928E)
    set_enum("GL_SRC_IN_NV", 0x928A)
    set_enum("GL_SRC_NV", 0x9286)
    set_enum("GL_SRC_OUT_NV", 0x928C)
    set_enum("GL_SRC_OVER_NV", 0x9288)
    set_enum("GL_UNCORRELATED_NV", 0x9282)
    set_enum("GL_VIVIDLIGHT_NV", 0x92A6)
    set_enum("GL_XOR_NV", 0x1506)
    set_enum("GL_ZERO", 0)


#### GL_NV_BLEND_EQUATION_ADVANCED_COHERENT ####
def init_gl_nv_blend_equation_advanced_coherent():
    set_enum("GL_BLEND_ADVANCED_COHERENT_NV", 0x9285)


#### GL_NV_COMMAND_LIST ####
def init_gl_nv_command_list():
    set_func('glCreateStatesNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteStatesNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsStateNV', t.GLboolean, (t.GLuint,))
    set_func('glStateCaptureNV', t.void, (t.GLuint, t.GLenum))
    set_func('glGetCommandHeaderNV', t.GLuint, (t.GLenum, t.GLuint))
    set_func('glGetStageIndexNV', t.GLushort, (t.GLenum,))
    set_func('glDrawCommandsNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLintptr), ct.POINTER(t.GLsizei), t.GLuint))
    set_func('glDrawCommandsAddressNV', t.void, (t.GLenum, ct.POINTER(t.GLuint64), ct.POINTER(t.GLsizei), t.GLuint))
    set_func('glDrawCommandsStatesNV', t.void, (t.GLuint, ct.POINTER(t.GLintptr), ct.POINTER(t.GLsizei), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), t.GLuint))
    set_func('glDrawCommandsStatesAddressNV', t.void, (ct.POINTER(t.GLuint64), ct.POINTER(t.GLsizei), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), t.GLuint))
    set_func('glCreateCommandListsNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteCommandListsNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsCommandListNV', t.GLboolean, (t.GLuint,))
    set_func('glListDrawCommandsStatesClientNV', t.void, (t.GLuint, t.GLuint, ct.POINTER(ct.POINTER(t.void)), ct.POINTER(t.GLsizei), ct.POINTER(t.GLuint), ct.POINTER(t.GLuint), t.GLuint))
    set_func('glCommandListSegmentsNV', t.void, (t.GLuint, t.GLuint))
    set_func('glCompileCommandListNV', t.void, (t.GLuint,))
    set_func('glCallCommandListNV', t.void, (t.GLuint,))
    set_enum("GL_TERMINATE_SEQUENCE_COMMAND_NV", 0x0000)
    set_enum("GL_NOP_COMMAND_NV", 0x0001)
    set_enum("GL_DRAW_ELEMENTS_COMMAND_NV", 0x0002)
    set_enum("GL_DRAW_ARRAYS_COMMAND_NV", 0x0003)
    set_enum("GL_DRAW_ELEMENTS_STRIP_COMMAND_NV", 0x0004)
    set_enum("GL_DRAW_ARRAYS_STRIP_COMMAND_NV", 0x0005)
    set_enum("GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV", 0x0006)
    set_enum("GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV", 0x0007)
    set_enum("GL_ELEMENT_ADDRESS_COMMAND_NV", 0x0008)
    set_enum("GL_ATTRIBUTE_ADDRESS_COMMAND_NV", 0x0009)
    set_enum("GL_UNIFORM_ADDRESS_COMMAND_NV", 0x000A)
    set_enum("GL_BLEND_COLOR_COMMAND_NV", 0x000B)
    set_enum("GL_STENCIL_REF_COMMAND_NV", 0x000C)
    set_enum("GL_LINE_WIDTH_COMMAND_NV", 0x000D)
    set_enum("GL_POLYGON_OFFSET_COMMAND_NV", 0x000E)
    set_enum("GL_ALPHA_REF_COMMAND_NV", 0x000F)
    set_enum("GL_VIEWPORT_COMMAND_NV", 0x0010)
    set_enum("GL_SCISSOR_COMMAND_NV", 0x0011)
    set_enum("GL_FRONT_FACE_COMMAND_NV", 0x0012)


#### GL_NV_COMPUTE_PROGRAM5 ####
def init_gl_nv_compute_program5():
    set_enum("GL_COMPUTE_PROGRAM_NV", 0x90FB)
    set_enum("GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV", 0x90FC)


#### GL_NV_CONDITIONAL_RENDER ####
def init_gl_nv_conditional_render():
    set_func('glBeginConditionalRenderNV', t.void, (t.GLuint, t.GLenum))
    set_func('glEndConditionalRenderNV', t.void, ())
    set_enum("GL_QUERY_WAIT_NV", 0x8E13)
    set_enum("GL_QUERY_NO_WAIT_NV", 0x8E14)
    set_enum("GL_QUERY_BY_REGION_WAIT_NV", 0x8E15)
    set_enum("GL_QUERY_BY_REGION_NO_WAIT_NV", 0x8E16)


#### GL_NV_CONSERVATIVE_RASTER ####
def init_gl_nv_conservative_raster():
    set_func('glSubpixelPrecisionBiasNV', t.void, (t.GLuint, t.GLuint))
    set_enum("GL_CONSERVATIVE_RASTERIZATION_NV", 0x9346)
    set_enum("GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV", 0x9347)
    set_enum("GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV", 0x9348)
    set_enum("GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV", 0x9349)


#### GL_NV_CONSERVATIVE_RASTER_DILATE ####
def init_gl_nv_conservative_raster_dilate():
    set_func('glConservativeRasterParameterfNV', t.void, (t.GLenum, t.GLfloat))
    set_enum("GL_CONSERVATIVE_RASTER_DILATE_NV", 0x9379)
    set_enum("GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV", 0x937A)
    set_enum("GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV", 0x937B)


#### GL_NV_COPY_BUFFER ####
def init_gl_nv_copy_buffer():
    set_func('glCopyBufferSubDataNV', t.void, (t.GLenum, t.GLenum, t.GLintptr, t.GLintptr, t.GLsizeiptr))
    set_enum("GL_COPY_READ_BUFFER_NV", 0x8F36)
    set_enum("GL_COPY_WRITE_BUFFER_NV", 0x8F37)


#### GL_NV_COPY_DEPTH_TO_COLOR ####
def init_gl_nv_copy_depth_to_color():
    set_enum("GL_DEPTH_STENCIL_TO_RGBA_NV", 0x886E)
    set_enum("GL_DEPTH_STENCIL_TO_BGRA_NV", 0x886F)


#### GL_NV_COPY_IMAGE ####
def init_gl_nv_copy_image():
    set_func('glCopyImageSubDataNV', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei))


#### GL_NV_COVERAGE_SAMPLE ####
def init_gl_nv_coverage_sample():
    set_func('glCoverageMaskNV', t.void, (t.GLboolean,))
    set_func('glCoverageOperationNV', t.void, (t.GLenum,))
    set_enum("GL_COVERAGE_COMPONENT_NV", 0x8ED0)
    set_enum("GL_COVERAGE_COMPONENT4_NV", 0x8ED1)
    set_enum("GL_COVERAGE_ATTACHMENT_NV", 0x8ED2)
    set_enum("GL_COVERAGE_BUFFERS_NV", 0x8ED3)
    set_enum("GL_COVERAGE_SAMPLES_NV", 0x8ED4)
    set_enum("GL_COVERAGE_ALL_FRAGMENTS_NV", 0x8ED5)
    set_enum("GL_COVERAGE_EDGE_FRAGMENTS_NV", 0x8ED6)
    set_enum("GL_COVERAGE_AUTOMATIC_NV", 0x8ED7)
    set_enum("GL_COVERAGE_BUFFER_BIT_NV", 0x00008000)


#### GL_NV_DEEP_TEXTURE3D ####
def init_gl_nv_deep_texture3d():
    set_enum("GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV", 0x90D0)
    set_enum("GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV", 0x90D1)


#### GL_NV_DEPTH_BUFFER_FLOAT ####
def init_gl_nv_depth_buffer_float():
    set_func('glDepthRangedNV', t.void, (t.GLdouble, t.GLdouble))
    set_func('glClearDepthdNV', t.void, (t.GLdouble,))
    set_func('glDepthBoundsdNV', t.void, (t.GLdouble, t.GLdouble))
    set_enum("GL_DEPTH_COMPONENT32F_NV", 0x8DAB)
    set_enum("GL_DEPTH32F_STENCIL8_NV", 0x8DAC)
    set_enum("GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV", 0x8DAD)
    set_enum("GL_DEPTH_BUFFER_FLOAT_MODE_NV", 0x8DAF)


#### GL_NV_DEPTH_CLAMP ####
def init_gl_nv_depth_clamp():
    set_enum("GL_DEPTH_CLAMP_NV", 0x864F)


#### GL_NV_DEPTH_NONLINEAR ####
def init_gl_nv_depth_nonlinear():
    set_enum("GL_DEPTH_COMPONENT16_NONLINEAR_NV", 0x8E2C)


#### GL_NV_DRAW_BUFFERS ####
def init_gl_nv_draw_buffers():
    set_func('glDrawBuffersNV', t.void, (t.GLsizei, ct.POINTER(t.GLenum)))
    set_enum("GL_MAX_DRAW_BUFFERS_NV", 0x8824)
    set_enum("GL_DRAW_BUFFER0_NV", 0x8825)
    set_enum("GL_DRAW_BUFFER1_NV", 0x8826)
    set_enum("GL_DRAW_BUFFER2_NV", 0x8827)
    set_enum("GL_DRAW_BUFFER3_NV", 0x8828)
    set_enum("GL_DRAW_BUFFER4_NV", 0x8829)
    set_enum("GL_DRAW_BUFFER5_NV", 0x882A)
    set_enum("GL_DRAW_BUFFER6_NV", 0x882B)
    set_enum("GL_DRAW_BUFFER7_NV", 0x882C)
    set_enum("GL_DRAW_BUFFER8_NV", 0x882D)
    set_enum("GL_DRAW_BUFFER9_NV", 0x882E)
    set_enum("GL_DRAW_BUFFER10_NV", 0x882F)
    set_enum("GL_DRAW_BUFFER11_NV", 0x8830)
    set_enum("GL_DRAW_BUFFER12_NV", 0x8831)
    set_enum("GL_DRAW_BUFFER13_NV", 0x8832)
    set_enum("GL_DRAW_BUFFER14_NV", 0x8833)
    set_enum("GL_DRAW_BUFFER15_NV", 0x8834)
    set_enum("GL_COLOR_ATTACHMENT0_NV", 0x8CE0)
    set_enum("GL_COLOR_ATTACHMENT1_NV", 0x8CE1)
    set_enum("GL_COLOR_ATTACHMENT2_NV", 0x8CE2)
    set_enum("GL_COLOR_ATTACHMENT3_NV", 0x8CE3)
    set_enum("GL_COLOR_ATTACHMENT4_NV", 0x8CE4)
    set_enum("GL_COLOR_ATTACHMENT5_NV", 0x8CE5)
    set_enum("GL_COLOR_ATTACHMENT6_NV", 0x8CE6)
    set_enum("GL_COLOR_ATTACHMENT7_NV", 0x8CE7)
    set_enum("GL_COLOR_ATTACHMENT8_NV", 0x8CE8)
    set_enum("GL_COLOR_ATTACHMENT9_NV", 0x8CE9)
    set_enum("GL_COLOR_ATTACHMENT10_NV", 0x8CEA)
    set_enum("GL_COLOR_ATTACHMENT11_NV", 0x8CEB)
    set_enum("GL_COLOR_ATTACHMENT12_NV", 0x8CEC)
    set_enum("GL_COLOR_ATTACHMENT13_NV", 0x8CED)
    set_enum("GL_COLOR_ATTACHMENT14_NV", 0x8CEE)
    set_enum("GL_COLOR_ATTACHMENT15_NV", 0x8CEF)


#### GL_NV_DRAW_INSTANCED ####
def init_gl_nv_draw_instanced():
    set_func('glDrawArraysInstancedNV', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glDrawElementsInstancedNV', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei))


#### GL_NV_DRAW_TEXTURE ####
def init_gl_nv_draw_texture():
    set_func('glDrawTextureNV', t.void, (t.GLuint, t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))


#### GL_NV_EVALUATORS ####
def init_gl_nv_evaluators():
    set_func('glMapControlPointsNV', t.void, (t.GLenum, t.GLuint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLint, t.GLboolean, ct.POINTER(t.void)))
    set_func('glMapParameterivNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glMapParameterfvNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMapControlPointsNV', t.void, (t.GLenum, t.GLuint, t.GLenum, t.GLsizei, t.GLsizei, t.GLboolean, ct.POINTER(t.void)))
    set_func('glGetMapParameterivNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMapParameterfvNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetMapAttribParameterivNV', t.void, (t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetMapAttribParameterfvNV', t.void, (t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glEvalMapsNV', t.void, (t.GLenum, t.GLenum))
    set_enum("GL_EVAL_2D_NV", 0x86C0)
    set_enum("GL_EVAL_TRIANGULAR_2D_NV", 0x86C1)
    set_enum("GL_MAP_TESSELLATION_NV", 0x86C2)
    set_enum("GL_MAP_ATTRIB_U_ORDER_NV", 0x86C3)
    set_enum("GL_MAP_ATTRIB_V_ORDER_NV", 0x86C4)
    set_enum("GL_EVAL_FRACTIONAL_TESSELLATION_NV", 0x86C5)
    set_enum("GL_EVAL_VERTEX_ATTRIB0_NV", 0x86C6)
    set_enum("GL_EVAL_VERTEX_ATTRIB1_NV", 0x86C7)
    set_enum("GL_EVAL_VERTEX_ATTRIB2_NV", 0x86C8)
    set_enum("GL_EVAL_VERTEX_ATTRIB3_NV", 0x86C9)
    set_enum("GL_EVAL_VERTEX_ATTRIB4_NV", 0x86CA)
    set_enum("GL_EVAL_VERTEX_ATTRIB5_NV", 0x86CB)
    set_enum("GL_EVAL_VERTEX_ATTRIB6_NV", 0x86CC)
    set_enum("GL_EVAL_VERTEX_ATTRIB7_NV", 0x86CD)
    set_enum("GL_EVAL_VERTEX_ATTRIB8_NV", 0x86CE)
    set_enum("GL_EVAL_VERTEX_ATTRIB9_NV", 0x86CF)
    set_enum("GL_EVAL_VERTEX_ATTRIB10_NV", 0x86D0)
    set_enum("GL_EVAL_VERTEX_ATTRIB11_NV", 0x86D1)
    set_enum("GL_EVAL_VERTEX_ATTRIB12_NV", 0x86D2)
    set_enum("GL_EVAL_VERTEX_ATTRIB13_NV", 0x86D3)
    set_enum("GL_EVAL_VERTEX_ATTRIB14_NV", 0x86D4)
    set_enum("GL_EVAL_VERTEX_ATTRIB15_NV", 0x86D5)
    set_enum("GL_MAX_MAP_TESSELLATION_NV", 0x86D6)
    set_enum("GL_MAX_RATIONAL_EVAL_ORDER_NV", 0x86D7)


#### GL_NV_EXPLICIT_MULTISAMPLE ####
def init_gl_nv_explicit_multisample():
    set_func('glGetMultisamplefvNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glSampleMaskIndexedNV', t.void, (t.GLuint, t.GLbitfield))
    set_func('glTexRenderbufferNV', t.void, (t.GLenum, t.GLuint))
    set_enum("GL_SAMPLE_POSITION_NV", 0x8E50)
    set_enum("GL_SAMPLE_MASK_NV", 0x8E51)
    set_enum("GL_SAMPLE_MASK_VALUE_NV", 0x8E52)
    set_enum("GL_TEXTURE_BINDING_RENDERBUFFER_NV", 0x8E53)
    set_enum("GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV", 0x8E54)
    set_enum("GL_TEXTURE_RENDERBUFFER_NV", 0x8E55)
    set_enum("GL_SAMPLER_RENDERBUFFER_NV", 0x8E56)
    set_enum("GL_INT_SAMPLER_RENDERBUFFER_NV", 0x8E57)
    set_enum("GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV", 0x8E58)
    set_enum("GL_MAX_SAMPLE_MASK_WORDS_NV", 0x8E59)


#### GL_NV_FBO_COLOR_ATTACHMENTS ####
def init_gl_nv_fbo_color_attachments():
    set_enum("GL_MAX_COLOR_ATTACHMENTS_NV", 0x8CDF)
    set_enum("GL_COLOR_ATTACHMENT0_NV", 0x8CE0)
    set_enum("GL_COLOR_ATTACHMENT1_NV", 0x8CE1)
    set_enum("GL_COLOR_ATTACHMENT2_NV", 0x8CE2)
    set_enum("GL_COLOR_ATTACHMENT3_NV", 0x8CE3)
    set_enum("GL_COLOR_ATTACHMENT4_NV", 0x8CE4)
    set_enum("GL_COLOR_ATTACHMENT5_NV", 0x8CE5)
    set_enum("GL_COLOR_ATTACHMENT6_NV", 0x8CE6)
    set_enum("GL_COLOR_ATTACHMENT7_NV", 0x8CE7)
    set_enum("GL_COLOR_ATTACHMENT8_NV", 0x8CE8)
    set_enum("GL_COLOR_ATTACHMENT9_NV", 0x8CE9)
    set_enum("GL_COLOR_ATTACHMENT10_NV", 0x8CEA)
    set_enum("GL_COLOR_ATTACHMENT11_NV", 0x8CEB)
    set_enum("GL_COLOR_ATTACHMENT12_NV", 0x8CEC)
    set_enum("GL_COLOR_ATTACHMENT13_NV", 0x8CED)
    set_enum("GL_COLOR_ATTACHMENT14_NV", 0x8CEE)
    set_enum("GL_COLOR_ATTACHMENT15_NV", 0x8CEF)


#### GL_NV_FENCE ####
def init_gl_nv_fence():
    set_func('glDeleteFencesNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenFencesNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsFenceNV', t.GLboolean, (t.GLuint,))
    set_func('glTestFenceNV', t.GLboolean, (t.GLuint,))
    set_func('glGetFenceivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glFinishFenceNV', t.void, (t.GLuint,))
    set_func('glSetFenceNV', t.void, (t.GLuint, t.GLenum))
    set_enum("GL_ALL_COMPLETED_NV", 0x84F2)
    set_enum("GL_FENCE_STATUS_NV", 0x84F3)
    set_enum("GL_FENCE_CONDITION_NV", 0x84F4)


#### GL_NV_FILL_RECTANGLE ####
def init_gl_nv_fill_rectangle():
    set_enum("GL_FILL_RECTANGLE_NV", 0x933C)


#### GL_NV_FLOAT_BUFFER ####
def init_gl_nv_float_buffer():
    set_enum("GL_FLOAT_R_NV", 0x8880)
    set_enum("GL_FLOAT_RG_NV", 0x8881)
    set_enum("GL_FLOAT_RGB_NV", 0x8882)
    set_enum("GL_FLOAT_RGBA_NV", 0x8883)
    set_enum("GL_FLOAT_R16_NV", 0x8884)
    set_enum("GL_FLOAT_R32_NV", 0x8885)
    set_enum("GL_FLOAT_RG16_NV", 0x8886)
    set_enum("GL_FLOAT_RG32_NV", 0x8887)
    set_enum("GL_FLOAT_RGB16_NV", 0x8888)
    set_enum("GL_FLOAT_RGB32_NV", 0x8889)
    set_enum("GL_FLOAT_RGBA16_NV", 0x888A)
    set_enum("GL_FLOAT_RGBA32_NV", 0x888B)
    set_enum("GL_TEXTURE_FLOAT_COMPONENTS_NV", 0x888C)
    set_enum("GL_FLOAT_CLEAR_COLOR_VALUE_NV", 0x888D)
    set_enum("GL_FLOAT_RGBA_MODE_NV", 0x888E)


#### GL_NV_FOG_DISTANCE ####
def init_gl_nv_fog_distance():
    set_enum("GL_FOG_DISTANCE_MODE_NV", 0x855A)
    set_enum("GL_EYE_RADIAL_NV", 0x855B)
    set_enum("GL_EYE_PLANE_ABSOLUTE_NV", 0x855C)
    set_enum("GL_EYE_PLANE", 0x2502)


#### GL_NV_FRAGMENT_COVERAGE_TO_COLOR ####
def init_gl_nv_fragment_coverage_to_color():
    set_func('glFragmentCoverageColorNV', t.void, (t.GLuint,))
    set_enum("GL_FRAGMENT_COVERAGE_TO_COLOR_NV", 0x92DD)
    set_enum("GL_FRAGMENT_COVERAGE_COLOR_NV", 0x92DE)


#### GL_NV_FRAGMENT_PROGRAM ####
def init_gl_nv_fragment_program():
    set_func('glProgramNamedParameter4fNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte), t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramNamedParameter4fvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte), ct.POINTER(t.GLfloat)))
    set_func('glProgramNamedParameter4dNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte), t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramNamedParameter4dvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte), ct.POINTER(t.GLdouble)))
    set_func('glGetProgramNamedParameterfvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte), ct.POINTER(t.GLfloat)))
    set_func('glGetProgramNamedParameterdvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte), ct.POINTER(t.GLdouble)))
    set_enum("GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV", 0x8868)
    set_enum("GL_FRAGMENT_PROGRAM_NV", 0x8870)
    set_enum("GL_MAX_TEXTURE_COORDS_NV", 0x8871)
    set_enum("GL_MAX_TEXTURE_IMAGE_UNITS_NV", 0x8872)
    set_enum("GL_FRAGMENT_PROGRAM_BINDING_NV", 0x8873)
    set_enum("GL_PROGRAM_ERROR_STRING_NV", 0x8874)


#### GL_NV_FRAGMENT_PROGRAM2 ####
def init_gl_nv_fragment_program2():
    set_enum("GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV", 0x88F4)
    set_enum("GL_MAX_PROGRAM_CALL_DEPTH_NV", 0x88F5)
    set_enum("GL_MAX_PROGRAM_IF_DEPTH_NV", 0x88F6)
    set_enum("GL_MAX_PROGRAM_LOOP_DEPTH_NV", 0x88F7)
    set_enum("GL_MAX_PROGRAM_LOOP_COUNT_NV", 0x88F8)


#### GL_NV_FRAMEBUFFER_BLIT ####
def init_gl_nv_framebuffer_blit():
    set_func('glBlitFramebufferNV', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLbitfield, t.GLenum))
    set_enum("GL_READ_FRAMEBUFFER_NV", 0x8CA8)
    set_enum("GL_DRAW_FRAMEBUFFER_NV", 0x8CA9)
    set_enum("GL_DRAW_FRAMEBUFFER_BINDING_NV", 0x8CA6)
    set_enum("GL_READ_FRAMEBUFFER_BINDING_NV", 0x8CAA)


#### GL_NV_FRAMEBUFFER_MIXED_SAMPLES ####
def init_gl_nv_framebuffer_mixed_samples():
    set_func('glRasterSamplesEXT', t.void, (t.GLuint, t.GLboolean))
    set_func('glCoverageModulationTableNV', t.void, (t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetCoverageModulationTableNV', t.void, (t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glCoverageModulationNV', t.void, (t.GLenum,))
    set_enum("GL_RASTER_MULTISAMPLE_EXT", 0x9327)
    set_enum("GL_COVERAGE_MODULATION_TABLE_NV", 0x9331)
    set_enum("GL_RASTER_SAMPLES_EXT", 0x9328)
    set_enum("GL_MAX_RASTER_SAMPLES_EXT", 0x9329)
    set_enum("GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT", 0x932A)
    set_enum("GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT", 0x932B)
    set_enum("GL_EFFECTIVE_RASTER_SAMPLES_EXT", 0x932C)
    set_enum("GL_COLOR_SAMPLES_NV", 0x8E20)
    set_enum("GL_DEPTH_SAMPLES_NV", 0x932D)
    set_enum("GL_STENCIL_SAMPLES_NV", 0x932E)
    set_enum("GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV", 0x932F)
    set_enum("GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV", 0x9330)
    set_enum("GL_COVERAGE_MODULATION_NV", 0x9332)
    set_enum("GL_COVERAGE_MODULATION_TABLE_SIZE_NV", 0x9333)


#### GL_NV_FRAMEBUFFER_MULTISAMPLE ####
def init_gl_nv_framebuffer_multisample():
    set_func('glRenderbufferStorageMultisampleNV', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_enum("GL_RENDERBUFFER_SAMPLES_NV", 0x8CAB)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV", 0x8D56)
    set_enum("GL_MAX_SAMPLES_NV", 0x8D57)


#### GL_NV_FRAMEBUFFER_MULTISAMPLE_COVERAGE ####
def init_gl_nv_framebuffer_multisample_coverage():
    set_func('glRenderbufferStorageMultisampleCoverageNV', t.void, (t.GLenum, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei))
    set_enum("GL_RENDERBUFFER_COVERAGE_SAMPLES_NV", 0x8CAB)
    set_enum("GL_RENDERBUFFER_COLOR_SAMPLES_NV", 0x8E10)
    set_enum("GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV", 0x8E11)
    set_enum("GL_MULTISAMPLE_COVERAGE_MODES_NV", 0x8E12)


#### GL_NV_GEOMETRY_PROGRAM4 ####
def init_gl_nv_geometry_program4():
    set_func('glProgramVertexLimitNV', t.void, (t.GLenum, t.GLint))
    set_func('glFramebufferTextureEXT', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glFramebufferTextureLayerEXT', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_func('glFramebufferTextureFaceEXT', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLenum))
    set_enum("GL_LINES_ADJACENCY_EXT", 0x000A)
    set_enum("GL_LINE_STRIP_ADJACENCY_EXT", 0x000B)
    set_enum("GL_TRIANGLES_ADJACENCY_EXT", 0x000C)
    set_enum("GL_TRIANGLE_STRIP_ADJACENCY_EXT", 0x000D)
    set_enum("GL_GEOMETRY_PROGRAM_NV", 0x8C26)
    set_enum("GL_MAX_PROGRAM_OUTPUT_VERTICES_NV", 0x8C27)
    set_enum("GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV", 0x8C28)
    set_enum("GL_GEOMETRY_VERTICES_OUT_EXT", 0x8DDA)
    set_enum("GL_GEOMETRY_INPUT_TYPE_EXT", 0x8DDB)
    set_enum("GL_GEOMETRY_OUTPUT_TYPE_EXT", 0x8DDC)
    set_enum("GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT", 0x8C29)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT", 0x8DA7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT", 0x8DA8)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT", 0x8DA9)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT", 0x8CD4)
    set_enum("GL_PROGRAM_POINT_SIZE_EXT", 0x8642)


#### GL_NV_GPU_PROGRAM4 ####
def init_gl_nv_gpu_program4():
    set_func('glProgramLocalParameterI4iNV', t.void, (t.GLenum, t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramLocalParameterI4ivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glProgramLocalParametersI4ivNV', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramLocalParameterI4uiNV', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramLocalParameterI4uivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glProgramLocalParametersI4uivNV', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glProgramEnvParameterI4iNV', t.void, (t.GLenum, t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glProgramEnvParameterI4ivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glProgramEnvParametersI4ivNV', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramEnvParameterI4uiNV', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glProgramEnvParameterI4uivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glProgramEnvParametersI4uivNV', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetProgramLocalParameterIivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glGetProgramLocalParameterIuivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glGetProgramEnvParameterIivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glGetProgramEnvParameterIuivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_enum("GL_MIN_PROGRAM_TEXEL_OFFSET_NV", 0x8904)
    set_enum("GL_MAX_PROGRAM_TEXEL_OFFSET_NV", 0x8905)
    set_enum("GL_PROGRAM_ATTRIB_COMPONENTS_NV", 0x8906)
    set_enum("GL_PROGRAM_RESULT_COMPONENTS_NV", 0x8907)
    set_enum("GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV", 0x8908)
    set_enum("GL_MAX_PROGRAM_RESULT_COMPONENTS_NV", 0x8909)
    set_enum("GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV", 0x8DA5)
    set_enum("GL_MAX_PROGRAM_GENERIC_RESULTS_NV", 0x8DA6)


#### GL_NV_GPU_PROGRAM5 ####
def init_gl_nv_gpu_program5():
    set_func('glProgramSubroutineParametersuivNV', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetProgramSubroutineParameteruivNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLuint)))
    set_enum("GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV", 0x8E5A)
    set_enum("GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV", 0x8E5B)
    set_enum("GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV", 0x8E5C)
    set_enum("GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV", 0x8E5D)
    set_enum("GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV", 0x8E5E)
    set_enum("GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV", 0x8E5F)
    set_enum("GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV", 0x8F44)
    set_enum("GL_MAX_PROGRAM_SUBROUTINE_NUM_NV", 0x8F45)


#### GL_NV_GPU_SHADER5 ####
def init_gl_nv_gpu_shader5():
    set_func('glUniform1i64NV', t.void, (t.GLint, t.GLint64EXT))
    set_func('glUniform2i64NV', t.void, (t.GLint, t.GLint64EXT, t.GLint64EXT))
    set_func('glUniform3i64NV', t.void, (t.GLint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glUniform4i64NV', t.void, (t.GLint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glUniform1i64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glUniform2i64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glUniform3i64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glUniform4i64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glUniform1ui64NV', t.void, (t.GLint, t.GLuint64EXT))
    set_func('glUniform2ui64NV', t.void, (t.GLint, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glUniform3ui64NV', t.void, (t.GLint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glUniform4ui64NV', t.void, (t.GLint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glUniform1ui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glUniform2ui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glUniform3ui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glUniform4ui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glGetUniformi64vNV', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform1i64NV', t.void, (t.GLuint, t.GLint, t.GLint64EXT))
    set_func('glProgramUniform2i64NV', t.void, (t.GLuint, t.GLint, t.GLint64EXT, t.GLint64EXT))
    set_func('glProgramUniform3i64NV', t.void, (t.GLuint, t.GLint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glProgramUniform4i64NV', t.void, (t.GLuint, t.GLint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glProgramUniform1i64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform2i64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform3i64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform4i64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLint64EXT)))
    set_func('glProgramUniform1ui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT))
    set_func('glProgramUniform2ui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glProgramUniform3ui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glProgramUniform4ui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glProgramUniform1ui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glProgramUniform2ui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glProgramUniform3ui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glProgramUniform4ui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_enum("GL_INT64_NV", 0x140E)
    set_enum("GL_UNSIGNED_INT64_NV", 0x140F)
    set_enum("GL_INT8_NV", 0x8FE0)
    set_enum("GL_INT8_VEC2_NV", 0x8FE1)
    set_enum("GL_INT8_VEC3_NV", 0x8FE2)
    set_enum("GL_INT8_VEC4_NV", 0x8FE3)
    set_enum("GL_INT16_NV", 0x8FE4)
    set_enum("GL_INT16_VEC2_NV", 0x8FE5)
    set_enum("GL_INT16_VEC3_NV", 0x8FE6)
    set_enum("GL_INT16_VEC4_NV", 0x8FE7)
    set_enum("GL_INT64_VEC2_NV", 0x8FE9)
    set_enum("GL_INT64_VEC3_NV", 0x8FEA)
    set_enum("GL_INT64_VEC4_NV", 0x8FEB)
    set_enum("GL_UNSIGNED_INT8_NV", 0x8FEC)
    set_enum("GL_UNSIGNED_INT8_VEC2_NV", 0x8FED)
    set_enum("GL_UNSIGNED_INT8_VEC3_NV", 0x8FEE)
    set_enum("GL_UNSIGNED_INT8_VEC4_NV", 0x8FEF)
    set_enum("GL_UNSIGNED_INT16_NV", 0x8FF0)
    set_enum("GL_UNSIGNED_INT16_VEC2_NV", 0x8FF1)
    set_enum("GL_UNSIGNED_INT16_VEC3_NV", 0x8FF2)
    set_enum("GL_UNSIGNED_INT16_VEC4_NV", 0x8FF3)
    set_enum("GL_UNSIGNED_INT64_VEC2_NV", 0x8FF5)
    set_enum("GL_UNSIGNED_INT64_VEC3_NV", 0x8FF6)
    set_enum("GL_UNSIGNED_INT64_VEC4_NV", 0x8FF7)
    set_enum("GL_FLOAT16_NV", 0x8FF8)
    set_enum("GL_FLOAT16_VEC2_NV", 0x8FF9)
    set_enum("GL_FLOAT16_VEC3_NV", 0x8FFA)
    set_enum("GL_FLOAT16_VEC4_NV", 0x8FFB)
    set_enum("GL_PATCHES", 0x000E)


#### GL_NV_HALF_FLOAT ####
def init_gl_nv_half_float():
    set_func('glVertex2hNV', t.void, (t.GLhalfNV, t.GLhalfNV))
    set_func('glVertex2hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glVertex3hNV', t.void, (t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glVertex3hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glVertex4hNV', t.void, (t.GLhalfNV, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glVertex4hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glNormal3hNV', t.void, (t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glNormal3hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glColor3hNV', t.void, (t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glColor3hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glColor4hNV', t.void, (t.GLhalfNV, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glColor4hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glTexCoord1hNV', t.void, (t.GLhalfNV,))
    set_func('glTexCoord1hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glTexCoord2hNV', t.void, (t.GLhalfNV, t.GLhalfNV))
    set_func('glTexCoord2hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glTexCoord3hNV', t.void, (t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glTexCoord3hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glTexCoord4hNV', t.void, (t.GLhalfNV, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glTexCoord4hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glMultiTexCoord1hNV', t.void, (t.GLenum, t.GLhalfNV))
    set_func('glMultiTexCoord1hvNV', t.void, (t.GLenum, ct.POINTER(t.GLhalfNV)))
    set_func('glMultiTexCoord2hNV', t.void, (t.GLenum, t.GLhalfNV, t.GLhalfNV))
    set_func('glMultiTexCoord2hvNV', t.void, (t.GLenum, ct.POINTER(t.GLhalfNV)))
    set_func('glMultiTexCoord3hNV', t.void, (t.GLenum, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glMultiTexCoord3hvNV', t.void, (t.GLenum, ct.POINTER(t.GLhalfNV)))
    set_func('glMultiTexCoord4hNV', t.void, (t.GLenum, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glMultiTexCoord4hvNV', t.void, (t.GLenum, ct.POINTER(t.GLhalfNV)))
    set_func('glFogCoordhNV', t.void, (t.GLhalfNV,))
    set_func('glFogCoordhvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glSecondaryColor3hNV', t.void, (t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glSecondaryColor3hvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glVertexWeighthNV', t.void, (t.GLhalfNV,))
    set_func('glVertexWeighthvNV', t.void, (ct.POINTER(t.GLhalfNV),))
    set_func('glVertexAttrib1hNV', t.void, (t.GLuint, t.GLhalfNV))
    set_func('glVertexAttrib1hvNV', t.void, (t.GLuint, ct.POINTER(t.GLhalfNV)))
    set_func('glVertexAttrib2hNV', t.void, (t.GLuint, t.GLhalfNV, t.GLhalfNV))
    set_func('glVertexAttrib2hvNV', t.void, (t.GLuint, ct.POINTER(t.GLhalfNV)))
    set_func('glVertexAttrib3hNV', t.void, (t.GLuint, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glVertexAttrib3hvNV', t.void, (t.GLuint, ct.POINTER(t.GLhalfNV)))
    set_func('glVertexAttrib4hNV', t.void, (t.GLuint, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV, t.GLhalfNV))
    set_func('glVertexAttrib4hvNV', t.void, (t.GLuint, ct.POINTER(t.GLhalfNV)))
    set_func('glVertexAttribs1hvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLhalfNV)))
    set_func('glVertexAttribs2hvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLhalfNV)))
    set_func('glVertexAttribs3hvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLhalfNV)))
    set_func('glVertexAttribs4hvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLhalfNV)))
    set_enum("GL_HALF_FLOAT_NV", 0x140B)


#### GL_NV_INSTANCED_ARRAYS ####
def init_gl_nv_instanced_arrays():
    set_func('glVertexAttribDivisorNV', t.void, (t.GLuint, t.GLuint))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV", 0x88FE)


#### GL_NV_INTERNALFORMAT_SAMPLE_QUERY ####
def init_gl_nv_internalformat_sample_query():
    set_func('glGetInternalformatSampleivNV', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.GLint)))
    set_enum("GL_RENDERBUFFER", 0x8D41)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE", 0x9100)
    set_enum("GL_TEXTURE_2D_MULTISAMPLE_ARRAY", 0x9102)
    set_enum("GL_MULTISAMPLES_NV", 0x9371)
    set_enum("GL_SUPERSAMPLE_SCALE_X_NV", 0x9372)
    set_enum("GL_SUPERSAMPLE_SCALE_Y_NV", 0x9373)
    set_enum("GL_CONFORMANT_NV", 0x9374)


#### GL_NV_LIGHT_MAX_EXPONENT ####
def init_gl_nv_light_max_exponent():
    set_enum("GL_MAX_SHININESS_NV", 0x8504)
    set_enum("GL_MAX_SPOT_EXPONENT_NV", 0x8505)


#### GL_NV_MULTISAMPLE_COVERAGE ####
def init_gl_nv_multisample_coverage():
    set_enum("GL_SAMPLES_ARB", 0x80A9)
    set_enum("GL_COLOR_SAMPLES_NV", 0x8E20)


#### GL_NV_MULTISAMPLE_FILTER_HINT ####
def init_gl_nv_multisample_filter_hint():
    set_enum("GL_MULTISAMPLE_FILTER_HINT_NV", 0x8534)


#### GL_NV_NON_SQUARE_MATRICES ####
def init_gl_nv_non_square_matrices():
    set_func('glUniformMatrix2x3fvNV', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3x2fvNV', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix2x4fvNV', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4x2fvNV', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix3x4fvNV', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_func('glUniformMatrix4x3fvNV', t.void, (t.GLint, t.GLsizei, t.GLboolean, ct.POINTER(t.GLfloat)))
    set_enum("GL_FLOAT_MAT2x3_NV", 0x8B65)
    set_enum("GL_FLOAT_MAT2x4_NV", 0x8B66)
    set_enum("GL_FLOAT_MAT3x2_NV", 0x8B67)
    set_enum("GL_FLOAT_MAT3x4_NV", 0x8B68)
    set_enum("GL_FLOAT_MAT4x2_NV", 0x8B69)
    set_enum("GL_FLOAT_MAT4x3_NV", 0x8B6A)


#### GL_NV_OCCLUSION_QUERY ####
def init_gl_nv_occlusion_query():
    set_func('glGenOcclusionQueriesNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glDeleteOcclusionQueriesNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsOcclusionQueryNV', t.GLboolean, (t.GLuint,))
    set_func('glBeginOcclusionQueryNV', t.void, (t.GLuint,))
    set_func('glEndOcclusionQueryNV', t.void, ())
    set_func('glGetOcclusionQueryivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetOcclusionQueryuivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_enum("GL_PIXEL_COUNTER_BITS_NV", 0x8864)
    set_enum("GL_CURRENT_OCCLUSION_QUERY_ID_NV", 0x8865)
    set_enum("GL_PIXEL_COUNT_NV", 0x8866)
    set_enum("GL_PIXEL_COUNT_AVAILABLE_NV", 0x8867)


#### GL_NV_PACKED_DEPTH_STENCIL ####
def init_gl_nv_packed_depth_stencil():
    set_enum("GL_DEPTH_STENCIL_NV", 0x84F9)
    set_enum("GL_UNSIGNED_INT_24_8_NV", 0x84FA)


#### GL_NV_PARAMETER_BUFFER_OBJECT ####
def init_gl_nv_parameter_buffer_object():
    set_func('glProgramBufferParametersfvNV', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glProgramBufferParametersIivNV', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glProgramBufferParametersIuivNV', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLuint)))
    set_enum("GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV", 0x8DA0)
    set_enum("GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV", 0x8DA1)
    set_enum("GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV", 0x8DA2)
    set_enum("GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV", 0x8DA3)
    set_enum("GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV", 0x8DA4)


#### GL_NV_PATH_RENDERING ####
def init_gl_nv_path_rendering():
    set_func('glGenPathsNV', t.GLuint, (t.GLsizei,))
    set_func('glDeletePathsNV', t.void, (t.GLuint, t.GLsizei))
    set_func('glIsPathNV', t.GLboolean, (t.GLuint,))
    set_func('glPathCommandsNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte), t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glPathCoordsNV', t.void, (t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glPathSubCommandsNV', t.void, (t.GLuint, t.GLsizei, t.GLsizei, t.GLsizei, ct.POINTER(t.GLubyte), t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glPathSubCoordsNV', t.void, (t.GLuint, t.GLsizei, t.GLsizei, t.GLenum, ct.POINTER(t.void)))
    set_func('glPathStringNV', t.void, (t.GLuint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glPathGlyphsNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void), t.GLbitfield, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLenum, t.GLuint, t.GLfloat))
    set_func('glPathGlyphRangeNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void), t.GLbitfield, t.GLuint, t.GLsizei, t.GLenum, t.GLuint, t.GLfloat))
    set_func('glWeightPathsNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat)))
    set_func('glCopyPathNV', t.void, (t.GLuint, t.GLuint))
    set_func('glInterpolatePathsNV', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLfloat))
    set_func('glTransformPathNV', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glPathParameterivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glPathParameteriNV', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glPathParameterfvNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glPathParameterfNV', t.void, (t.GLuint, t.GLenum, t.GLfloat))
    set_func('glPathDashArrayNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glPathStencilFuncNV', t.void, (t.GLenum, t.GLint, t.GLuint))
    set_func('glPathStencilDepthOffsetNV', t.void, (t.GLfloat, t.GLfloat))
    set_func('glStencilFillPathNV', t.void, (t.GLuint, t.GLenum, t.GLuint))
    set_func('glStencilStrokePathNV', t.void, (t.GLuint, t.GLint, t.GLuint))
    set_func('glStencilFillPathInstancedNV', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLuint, t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glStencilStrokePathInstancedNV', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLuint, t.GLint, t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glPathCoverDepthFuncNV', t.void, (t.GLenum,))
    set_func('glCoverFillPathNV', t.void, (t.GLuint, t.GLenum))
    set_func('glCoverStrokePathNV', t.void, (t.GLuint, t.GLenum))
    set_func('glCoverFillPathInstancedNV', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glCoverStrokePathInstancedNV', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetPathParameterivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetPathParameterfvNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetPathCommandsNV', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glGetPathCoordsNV', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetPathDashArrayNV', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGetPathMetricsNV', t.void, (t.GLbitfield, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetPathMetricRangeNV', t.void, (t.GLbitfield, t.GLuint, t.GLsizei, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetPathSpacingNV', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLuint, t.GLfloat, t.GLfloat, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glIsPointInFillPathNV', t.GLboolean, (t.GLuint, t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glIsPointInStrokePathNV', t.GLboolean, (t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glGetPathLengthNV', t.GLfloat, (t.GLuint, t.GLsizei, t.GLsizei))
    set_func('glPointAlongPathNV', t.GLboolean, (t.GLuint, t.GLsizei, t.GLsizei, t.GLfloat, ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glMatrixLoad3x2fNV', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixLoad3x3fNV', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixLoadTranspose3x3fNV', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixMult3x2fNV', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixMult3x3fNV', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glMatrixMultTranspose3x3fNV', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glStencilThenCoverFillPathNV', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLenum))
    set_func('glStencilThenCoverStrokePathNV', t.void, (t.GLuint, t.GLint, t.GLuint, t.GLenum))
    set_func('glStencilThenCoverFillPathInstancedNV', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLuint, t.GLenum, t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glStencilThenCoverStrokePathInstancedNV', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLuint, t.GLint, t.GLuint, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glPathGlyphIndexRangeNV', t.GLenum, (t.GLenum, ct.POINTER(t.void), t.GLbitfield, t.GLuint, t.GLfloat, t.GLuint))
    set_func('glPathGlyphIndexArrayNV', t.GLenum, (t.GLuint, t.GLenum, ct.POINTER(t.void), t.GLbitfield, t.GLuint, t.GLsizei, t.GLuint, t.GLfloat))
    set_func('glPathMemoryGlyphIndexArrayNV', t.GLenum, (t.GLuint, t.GLenum, t.GLsizeiptr, ct.POINTER(t.void), t.GLsizei, t.GLuint, t.GLsizei, t.GLuint, t.GLfloat))
    set_func('glProgramPathFragmentInputGenNV', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glGetProgramResourcefvNV', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLenum), t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLfloat)))
    set_func('glPathColorGenNV', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glPathTexGenNV', t.void, (t.GLenum, t.GLenum, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glPathFogGenNV', t.void, (t.GLenum,))
    set_func('glGetPathColorGenivNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetPathColorGenfvNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetPathTexGenivNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetPathTexGenfvNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_PATH_FORMAT_SVG_NV", 0x9070)
    set_enum("GL_PATH_FORMAT_PS_NV", 0x9071)
    set_enum("GL_STANDARD_FONT_NAME_NV", 0x9072)
    set_enum("GL_SYSTEM_FONT_NAME_NV", 0x9073)
    set_enum("GL_FILE_NAME_NV", 0x9074)
    set_enum("GL_PATH_STROKE_WIDTH_NV", 0x9075)
    set_enum("GL_PATH_END_CAPS_NV", 0x9076)
    set_enum("GL_PATH_INITIAL_END_CAP_NV", 0x9077)
    set_enum("GL_PATH_TERMINAL_END_CAP_NV", 0x9078)
    set_enum("GL_PATH_JOIN_STYLE_NV", 0x9079)
    set_enum("GL_PATH_MITER_LIMIT_NV", 0x907A)
    set_enum("GL_PATH_DASH_CAPS_NV", 0x907B)
    set_enum("GL_PATH_INITIAL_DASH_CAP_NV", 0x907C)
    set_enum("GL_PATH_TERMINAL_DASH_CAP_NV", 0x907D)
    set_enum("GL_PATH_DASH_OFFSET_NV", 0x907E)
    set_enum("GL_PATH_CLIENT_LENGTH_NV", 0x907F)
    set_enum("GL_PATH_FILL_MODE_NV", 0x9080)
    set_enum("GL_PATH_FILL_MASK_NV", 0x9081)
    set_enum("GL_PATH_FILL_COVER_MODE_NV", 0x9082)
    set_enum("GL_PATH_STROKE_COVER_MODE_NV", 0x9083)
    set_enum("GL_PATH_STROKE_MASK_NV", 0x9084)
    set_enum("GL_COUNT_UP_NV", 0x9088)
    set_enum("GL_COUNT_DOWN_NV", 0x9089)
    set_enum("GL_PATH_OBJECT_BOUNDING_BOX_NV", 0x908A)
    set_enum("GL_CONVEX_HULL_NV", 0x908B)
    set_enum("GL_BOUNDING_BOX_NV", 0x908D)
    set_enum("GL_TRANSLATE_X_NV", 0x908E)
    set_enum("GL_TRANSLATE_Y_NV", 0x908F)
    set_enum("GL_TRANSLATE_2D_NV", 0x9090)
    set_enum("GL_TRANSLATE_3D_NV", 0x9091)
    set_enum("GL_AFFINE_2D_NV", 0x9092)
    set_enum("GL_AFFINE_3D_NV", 0x9094)
    set_enum("GL_TRANSPOSE_AFFINE_2D_NV", 0x9096)
    set_enum("GL_TRANSPOSE_AFFINE_3D_NV", 0x9098)
    set_enum("GL_UTF8_NV", 0x909A)
    set_enum("GL_UTF16_NV", 0x909B)
    set_enum("GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV", 0x909C)
    set_enum("GL_PATH_COMMAND_COUNT_NV", 0x909D)
    set_enum("GL_PATH_COORD_COUNT_NV", 0x909E)
    set_enum("GL_PATH_DASH_ARRAY_COUNT_NV", 0x909F)
    set_enum("GL_PATH_COMPUTED_LENGTH_NV", 0x90A0)
    set_enum("GL_PATH_FILL_BOUNDING_BOX_NV", 0x90A1)
    set_enum("GL_PATH_STROKE_BOUNDING_BOX_NV", 0x90A2)
    set_enum("GL_SQUARE_NV", 0x90A3)
    set_enum("GL_ROUND_NV", 0x90A4)
    set_enum("GL_TRIANGULAR_NV", 0x90A5)
    set_enum("GL_BEVEL_NV", 0x90A6)
    set_enum("GL_MITER_REVERT_NV", 0x90A7)
    set_enum("GL_MITER_TRUNCATE_NV", 0x90A8)
    set_enum("GL_SKIP_MISSING_GLYPH_NV", 0x90A9)
    set_enum("GL_USE_MISSING_GLYPH_NV", 0x90AA)
    set_enum("GL_PATH_ERROR_POSITION_NV", 0x90AB)
    set_enum("GL_ACCUM_ADJACENT_PAIRS_NV", 0x90AD)
    set_enum("GL_ADJACENT_PAIRS_NV", 0x90AE)
    set_enum("GL_FIRST_TO_REST_NV", 0x90AF)
    set_enum("GL_PATH_GEN_MODE_NV", 0x90B0)
    set_enum("GL_PATH_GEN_COEFF_NV", 0x90B1)
    set_enum("GL_PATH_GEN_COMPONENTS_NV", 0x90B3)
    set_enum("GL_PATH_STENCIL_FUNC_NV", 0x90B7)
    set_enum("GL_PATH_STENCIL_REF_NV", 0x90B8)
    set_enum("GL_PATH_STENCIL_VALUE_MASK_NV", 0x90B9)
    set_enum("GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV", 0x90BD)
    set_enum("GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV", 0x90BE)
    set_enum("GL_PATH_COVER_DEPTH_FUNC_NV", 0x90BF)
    set_enum("GL_PATH_DASH_OFFSET_RESET_NV", 0x90B4)
    set_enum("GL_MOVE_TO_RESETS_NV", 0x90B5)
    set_enum("GL_MOVE_TO_CONTINUES_NV", 0x90B6)
    set_enum("GL_CLOSE_PATH_NV", 0x00)
    set_enum("GL_MOVE_TO_NV", 0x02)
    set_enum("GL_RELATIVE_MOVE_TO_NV", 0x03)
    set_enum("GL_LINE_TO_NV", 0x04)
    set_enum("GL_RELATIVE_LINE_TO_NV", 0x05)
    set_enum("GL_HORIZONTAL_LINE_TO_NV", 0x06)
    set_enum("GL_RELATIVE_HORIZONTAL_LINE_TO_NV", 0x07)
    set_enum("GL_VERTICAL_LINE_TO_NV", 0x08)
    set_enum("GL_RELATIVE_VERTICAL_LINE_TO_NV", 0x09)
    set_enum("GL_QUADRATIC_CURVE_TO_NV", 0x0A)
    set_enum("GL_RELATIVE_QUADRATIC_CURVE_TO_NV", 0x0B)
    set_enum("GL_CUBIC_CURVE_TO_NV", 0x0C)
    set_enum("GL_RELATIVE_CUBIC_CURVE_TO_NV", 0x0D)
    set_enum("GL_SMOOTH_QUADRATIC_CURVE_TO_NV", 0x0E)
    set_enum("GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV", 0x0F)
    set_enum("GL_SMOOTH_CUBIC_CURVE_TO_NV", 0x10)
    set_enum("GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV", 0x11)
    set_enum("GL_SMALL_CCW_ARC_TO_NV", 0x12)
    set_enum("GL_RELATIVE_SMALL_CCW_ARC_TO_NV", 0x13)
    set_enum("GL_SMALL_CW_ARC_TO_NV", 0x14)
    set_enum("GL_RELATIVE_SMALL_CW_ARC_TO_NV", 0x15)
    set_enum("GL_LARGE_CCW_ARC_TO_NV", 0x16)
    set_enum("GL_RELATIVE_LARGE_CCW_ARC_TO_NV", 0x17)
    set_enum("GL_LARGE_CW_ARC_TO_NV", 0x18)
    set_enum("GL_RELATIVE_LARGE_CW_ARC_TO_NV", 0x19)
    set_enum("GL_RESTART_PATH_NV", 0xF0)
    set_enum("GL_DUP_FIRST_CUBIC_CURVE_TO_NV", 0xF2)
    set_enum("GL_DUP_LAST_CUBIC_CURVE_TO_NV", 0xF4)
    set_enum("GL_RECT_NV", 0xF6)
    set_enum("GL_CIRCULAR_CCW_ARC_TO_NV", 0xF8)
    set_enum("GL_CIRCULAR_CW_ARC_TO_NV", 0xFA)
    set_enum("GL_CIRCULAR_TANGENT_ARC_TO_NV", 0xFC)
    set_enum("GL_ARC_TO_NV", 0xFE)
    set_enum("GL_RELATIVE_ARC_TO_NV", 0xFF)
    set_enum("GL_BOLD_BIT_NV", 0x01)
    set_enum("GL_ITALIC_BIT_NV", 0x02)
    set_enum("GL_GLYPH_WIDTH_BIT_NV", 0x01)
    set_enum("GL_GLYPH_HEIGHT_BIT_NV", 0x02)
    set_enum("GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV", 0x04)
    set_enum("GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV", 0x08)
    set_enum("GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV", 0x10)
    set_enum("GL_GLYPH_VERTICAL_BEARING_X_BIT_NV", 0x20)
    set_enum("GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV", 0x40)
    set_enum("GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV", 0x80)
    set_enum("GL_GLYPH_HAS_KERNING_BIT_NV", 0x100)
    set_enum("GL_FONT_X_MIN_BOUNDS_BIT_NV", 0x00010000)
    set_enum("GL_FONT_Y_MIN_BOUNDS_BIT_NV", 0x00020000)
    set_enum("GL_FONT_X_MAX_BOUNDS_BIT_NV", 0x00040000)
    set_enum("GL_FONT_Y_MAX_BOUNDS_BIT_NV", 0x00080000)
    set_enum("GL_FONT_UNITS_PER_EM_BIT_NV", 0x00100000)
    set_enum("GL_FONT_ASCENDER_BIT_NV", 0x00200000)
    set_enum("GL_FONT_DESCENDER_BIT_NV", 0x00400000)
    set_enum("GL_FONT_HEIGHT_BIT_NV", 0x00800000)
    set_enum("GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV", 0x01000000)
    set_enum("GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV", 0x02000000)
    set_enum("GL_FONT_UNDERLINE_POSITION_BIT_NV", 0x04000000)
    set_enum("GL_FONT_UNDERLINE_THICKNESS_BIT_NV", 0x08000000)
    set_enum("GL_FONT_HAS_KERNING_BIT_NV", 0x10000000)
    set_enum("GL_ROUNDED_RECT_NV", 0xE8)
    set_enum("GL_RELATIVE_ROUNDED_RECT_NV", 0xE9)
    set_enum("GL_ROUNDED_RECT2_NV", 0xEA)
    set_enum("GL_RELATIVE_ROUNDED_RECT2_NV", 0xEB)
    set_enum("GL_ROUNDED_RECT4_NV", 0xEC)
    set_enum("GL_RELATIVE_ROUNDED_RECT4_NV", 0xED)
    set_enum("GL_ROUNDED_RECT8_NV", 0xEE)
    set_enum("GL_RELATIVE_ROUNDED_RECT8_NV", 0xEF)
    set_enum("GL_RELATIVE_RECT_NV", 0xF7)
    set_enum("GL_FONT_GLYPHS_AVAILABLE_NV", 0x9368)
    set_enum("GL_FONT_TARGET_UNAVAILABLE_NV", 0x9369)
    set_enum("GL_FONT_UNAVAILABLE_NV", 0x936A)
    set_enum("GL_FONT_UNINTELLIGIBLE_NV", 0x936B)
    set_enum("GL_CONIC_CURVE_TO_NV", 0x1A)
    set_enum("GL_RELATIVE_CONIC_CURVE_TO_NV", 0x1B)
    set_enum("GL_FONT_NUM_GLYPH_INDICES_BIT_NV", 0x20000000)
    set_enum("GL_STANDARD_FONT_FORMAT_NV", 0x936C)
    set_enum("GL_2_BYTES_NV", 0x1407)
    set_enum("GL_3_BYTES_NV", 0x1408)
    set_enum("GL_4_BYTES_NV", 0x1409)
    set_enum("GL_EYE_LINEAR_NV", 0x2400)
    set_enum("GL_OBJECT_LINEAR_NV", 0x2401)
    set_enum("GL_CONSTANT_NV", 0x8576)
    set_enum("GL_PATH_FOG_GEN_MODE_NV", 0x90AC)
    set_enum("GL_PRIMARY_COLOR", 0x8577)
    set_enum("GL_PRIMARY_COLOR_NV", 0x852C)
    set_enum("GL_SECONDARY_COLOR_NV", 0x852D)
    set_enum("GL_PATH_GEN_COLOR_FORMAT_NV", 0x90B2)
    set_enum("GL_PATH_PROJECTION_NV", 0x1701)
    set_enum("GL_PATH_MODELVIEW_NV", 0x1700)
    set_enum("GL_PATH_MODELVIEW_STACK_DEPTH_NV", 0x0BA3)
    set_enum("GL_PATH_MODELVIEW_MATRIX_NV", 0x0BA6)
    set_enum("GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV", 0x0D36)
    set_enum("GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV", 0x84E3)
    set_enum("GL_PATH_PROJECTION_STACK_DEPTH_NV", 0x0BA4)
    set_enum("GL_PATH_PROJECTION_MATRIX_NV", 0x0BA7)
    set_enum("GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV", 0x0D38)
    set_enum("GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV", 0x84E4)
    set_enum("GL_FRAGMENT_INPUT_NV", 0x936D)


#### GL_NV_PATH_RENDERING_SHARED_EDGE ####
def init_gl_nv_path_rendering_shared_edge():
    set_enum("GL_SHARED_EDGE_NV", 0xC0)


#### GL_NV_PIXEL_DATA_RANGE ####
def init_gl_nv_pixel_data_range():
    set_func('glPixelDataRangeNV', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glFlushPixelDataRangeNV', t.void, (t.GLenum,))
    set_enum("GL_WRITE_PIXEL_DATA_RANGE_NV", 0x8878)
    set_enum("GL_READ_PIXEL_DATA_RANGE_NV", 0x8879)
    set_enum("GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV", 0x887A)
    set_enum("GL_READ_PIXEL_DATA_RANGE_LENGTH_NV", 0x887B)
    set_enum("GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV", 0x887C)
    set_enum("GL_READ_PIXEL_DATA_RANGE_POINTER_NV", 0x887D)


#### GL_NV_POINT_SPRITE ####
def init_gl_nv_point_sprite():
    set_func('glPointParameteriNV', t.void, (t.GLenum, t.GLint))
    set_func('glPointParameterivNV', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_POINT_SPRITE_NV", 0x8861)
    set_enum("GL_COORD_REPLACE_NV", 0x8862)
    set_enum("GL_POINT_SPRITE_R_MODE_NV", 0x8863)


#### GL_NV_POLYGON_MODE ####
def init_gl_nv_polygon_mode():
    set_func('glPolygonModeNV', t.void, (t.GLenum, t.GLenum))
    set_enum("GL_POLYGON_MODE_NV", 0x0B40)
    set_enum("GL_POLYGON_OFFSET_POINT_NV", 0x2A01)
    set_enum("GL_POLYGON_OFFSET_LINE_NV", 0x2A02)
    set_enum("GL_POINT_NV", 0x1B00)
    set_enum("GL_LINE_NV", 0x1B01)
    set_enum("GL_FILL_NV", 0x1B02)


#### GL_NV_PRESENT_VIDEO ####
def init_gl_nv_present_video():
    set_func('glPresentFrameKeyedNV', t.void, (t.GLuint, t.GLuint64EXT, t.GLuint, t.GLuint, t.GLenum, t.GLenum, t.GLuint, t.GLuint, t.GLenum, t.GLuint, t.GLuint))
    set_func('glPresentFrameDualFillNV', t.void, (t.GLuint, t.GLuint64EXT, t.GLuint, t.GLuint, t.GLenum, t.GLenum, t.GLuint, t.GLenum, t.GLuint, t.GLenum, t.GLuint, t.GLenum, t.GLuint))
    set_func('glGetVideoivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVideouivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetVideoi64vNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint64EXT)))
    set_func('glGetVideoui64vNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint64EXT)))
    set_enum("GL_FRAME_NV", 0x8E26)
    set_enum("GL_FIELDS_NV", 0x8E27)
    set_enum("GL_CURRENT_TIME_NV", 0x8E28)
    set_enum("GL_NUM_FILL_STREAMS_NV", 0x8E29)
    set_enum("GL_PRESENT_TIME_NV", 0x8E2A)
    set_enum("GL_PRESENT_DURATION_NV", 0x8E2B)


#### GL_NV_PRIMITIVE_RESTART ####
def init_gl_nv_primitive_restart():
    set_func('glPrimitiveRestartNV', t.void, ())
    set_func('glPrimitiveRestartIndexNV', t.void, (t.GLuint,))
    set_enum("GL_PRIMITIVE_RESTART_NV", 0x8558)
    set_enum("GL_PRIMITIVE_RESTART_INDEX_NV", 0x8559)


#### GL_NV_READ_BUFFER ####
def init_gl_nv_read_buffer():
    set_func('glReadBufferNV', t.void, (t.GLenum,))
    set_enum("GL_READ_BUFFER_NV", 0x0C02)


#### GL_NV_REGISTER_COMBINERS ####
def init_gl_nv_register_combiners():
    set_func('glCombinerParameterfvNV', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glCombinerParameterfNV', t.void, (t.GLenum, t.GLfloat))
    set_func('glCombinerParameterivNV', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCombinerParameteriNV', t.void, (t.GLenum, t.GLint))
    set_func('glCombinerInputNV', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glCombinerOutputNV', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum, t.GLenum, t.GLenum, t.GLenum, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glFinalCombinerInputNV', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glGetCombinerInputParameterfvNV', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetCombinerInputParameterivNV', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetCombinerOutputParameterfvNV', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetCombinerOutputParameterivNV', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetFinalCombinerInputParameterfvNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetFinalCombinerInputParameterivNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_REGISTER_COMBINERS_NV", 0x8522)
    set_enum("GL_VARIABLE_A_NV", 0x8523)
    set_enum("GL_VARIABLE_B_NV", 0x8524)
    set_enum("GL_VARIABLE_C_NV", 0x8525)
    set_enum("GL_VARIABLE_D_NV", 0x8526)
    set_enum("GL_VARIABLE_E_NV", 0x8527)
    set_enum("GL_VARIABLE_F_NV", 0x8528)
    set_enum("GL_VARIABLE_G_NV", 0x8529)
    set_enum("GL_CONSTANT_COLOR0_NV", 0x852A)
    set_enum("GL_CONSTANT_COLOR1_NV", 0x852B)
    set_enum("GL_PRIMARY_COLOR_NV", 0x852C)
    set_enum("GL_SECONDARY_COLOR_NV", 0x852D)
    set_enum("GL_SPARE0_NV", 0x852E)
    set_enum("GL_SPARE1_NV", 0x852F)
    set_enum("GL_DISCARD_NV", 0x8530)
    set_enum("GL_E_TIMES_F_NV", 0x8531)
    set_enum("GL_SPARE0_PLUS_SECONDARY_COLOR_NV", 0x8532)
    set_enum("GL_UNSIGNED_IDENTITY_NV", 0x8536)
    set_enum("GL_UNSIGNED_INVERT_NV", 0x8537)
    set_enum("GL_EXPAND_NORMAL_NV", 0x8538)
    set_enum("GL_EXPAND_NEGATE_NV", 0x8539)
    set_enum("GL_HALF_BIAS_NORMAL_NV", 0x853A)
    set_enum("GL_HALF_BIAS_NEGATE_NV", 0x853B)
    set_enum("GL_SIGNED_IDENTITY_NV", 0x853C)
    set_enum("GL_SIGNED_NEGATE_NV", 0x853D)
    set_enum("GL_SCALE_BY_TWO_NV", 0x853E)
    set_enum("GL_SCALE_BY_FOUR_NV", 0x853F)
    set_enum("GL_SCALE_BY_ONE_HALF_NV", 0x8540)
    set_enum("GL_BIAS_BY_NEGATIVE_ONE_HALF_NV", 0x8541)
    set_enum("GL_COMBINER_INPUT_NV", 0x8542)
    set_enum("GL_COMBINER_MAPPING_NV", 0x8543)
    set_enum("GL_COMBINER_COMPONENT_USAGE_NV", 0x8544)
    set_enum("GL_COMBINER_AB_DOT_PRODUCT_NV", 0x8545)
    set_enum("GL_COMBINER_CD_DOT_PRODUCT_NV", 0x8546)
    set_enum("GL_COMBINER_MUX_SUM_NV", 0x8547)
    set_enum("GL_COMBINER_SCALE_NV", 0x8548)
    set_enum("GL_COMBINER_BIAS_NV", 0x8549)
    set_enum("GL_COMBINER_AB_OUTPUT_NV", 0x854A)
    set_enum("GL_COMBINER_CD_OUTPUT_NV", 0x854B)
    set_enum("GL_COMBINER_SUM_OUTPUT_NV", 0x854C)
    set_enum("GL_MAX_GENERAL_COMBINERS_NV", 0x854D)
    set_enum("GL_NUM_GENERAL_COMBINERS_NV", 0x854E)
    set_enum("GL_COLOR_SUM_CLAMP_NV", 0x854F)
    set_enum("GL_COMBINER0_NV", 0x8550)
    set_enum("GL_COMBINER1_NV", 0x8551)
    set_enum("GL_COMBINER2_NV", 0x8552)
    set_enum("GL_COMBINER3_NV", 0x8553)
    set_enum("GL_COMBINER4_NV", 0x8554)
    set_enum("GL_COMBINER5_NV", 0x8555)
    set_enum("GL_COMBINER6_NV", 0x8556)
    set_enum("GL_COMBINER7_NV", 0x8557)
    set_enum("GL_TEXTURE0_ARB", 0x84C0)
    set_enum("GL_TEXTURE1_ARB", 0x84C1)
    set_enum("GL_ZERO", 0)
    set_enum("GL_NONE", 0)
    set_enum("GL_FOG", 0x0B60)


#### GL_NV_REGISTER_COMBINERS2 ####
def init_gl_nv_register_combiners2():
    set_func('glCombinerStageParameterfvNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetCombinerStageParameterfvNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_PER_STAGE_CONSTANTS_NV", 0x8535)


#### GL_NV_SRGB_FORMATS ####
def init_gl_nv_srgb_formats():
    set_enum("GL_SLUMINANCE_NV", 0x8C46)
    set_enum("GL_SLUMINANCE_ALPHA_NV", 0x8C44)
    set_enum("GL_SRGB8_NV", 0x8C41)
    set_enum("GL_SLUMINANCE8_NV", 0x8C47)
    set_enum("GL_SLUMINANCE8_ALPHA8_NV", 0x8C45)
    set_enum("GL_COMPRESSED_SRGB_S3TC_DXT1_NV", 0x8C4C)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV", 0x8C4D)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV", 0x8C4E)
    set_enum("GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV", 0x8C4F)
    set_enum("GL_ETC1_SRGB8_NV", 0x88EE)


#### GL_NV_SAMPLE_LOCATIONS ####
def init_gl_nv_sample_locations():
    set_func('glFramebufferSampleLocationsfvNV', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glNamedFramebufferSampleLocationsfvNV', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glResolveDepthValuesNV', t.void, ())
    set_enum("GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV", 0x933D)
    set_enum("GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV", 0x933E)
    set_enum("GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV", 0x933F)
    set_enum("GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV", 0x9340)
    set_enum("GL_SAMPLE_LOCATION_NV", 0x8E50)
    set_enum("GL_PROGRAMMABLE_SAMPLE_LOCATION_NV", 0x9341)
    set_enum("GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV", 0x9342)
    set_enum("GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV", 0x9343)


#### GL_NV_SHADER_BUFFER_LOAD ####
def init_gl_nv_shader_buffer_load():
    set_func('glMakeBufferResidentNV', t.void, (t.GLenum, t.GLenum))
    set_func('glMakeBufferNonResidentNV', t.void, (t.GLenum,))
    set_func('glIsBufferResidentNV', t.GLboolean, (t.GLenum,))
    set_func('glMakeNamedBufferResidentNV', t.void, (t.GLuint, t.GLenum))
    set_func('glMakeNamedBufferNonResidentNV', t.void, (t.GLuint,))
    set_func('glIsNamedBufferResidentNV', t.GLboolean, (t.GLuint,))
    set_func('glGetBufferParameterui64vNV', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint64EXT)))
    set_func('glGetNamedBufferParameterui64vNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint64EXT)))
    set_func('glGetIntegerui64vNV', t.void, (t.GLenum, ct.POINTER(t.GLuint64EXT)))
    set_func('glUniformui64NV', t.void, (t.GLint, t.GLuint64EXT))
    set_func('glUniformui64vNV', t.void, (t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_func('glGetUniformui64vNV', t.void, (t.GLuint, t.GLint, ct.POINTER(t.GLuint64EXT)))
    set_func('glProgramUniformui64NV', t.void, (t.GLuint, t.GLint, t.GLuint64EXT))
    set_func('glProgramUniformui64vNV', t.void, (t.GLuint, t.GLint, t.GLsizei, ct.POINTER(t.GLuint64EXT)))
    set_enum("GL_BUFFER_GPU_ADDRESS_NV", 0x8F1D)
    set_enum("GL_GPU_ADDRESS_NV", 0x8F34)
    set_enum("GL_MAX_SHADER_BUFFER_ADDRESS_NV", 0x8F35)


#### GL_NV_SHADER_BUFFER_STORE ####
def init_gl_nv_shader_buffer_store():
    set_enum("GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV", 0x00000010)
    set_enum("GL_READ_WRITE", 0x88BA)
    set_enum("GL_WRITE_ONLY", 0x88B9)


#### GL_NV_SHADER_THREAD_GROUP ####
def init_gl_nv_shader_thread_group():
    set_enum("GL_WARP_SIZE_NV", 0x9339)
    set_enum("GL_WARPS_PER_SM_NV", 0x933A)
    set_enum("GL_SM_COUNT_NV", 0x933B)


#### GL_NV_SHADOW_SAMPLERS_ARRAY ####
def init_gl_nv_shadow_samplers_array():
    set_enum("GL_SAMPLER_2D_ARRAY_SHADOW_NV", 0x8DC4)


#### GL_NV_SHADOW_SAMPLERS_CUBE ####
def init_gl_nv_shadow_samplers_cube():
    set_enum("GL_SAMPLER_CUBE_SHADOW_NV", 0x8DC5)


#### GL_NV_TESSELLATION_PROGRAM5 ####
def init_gl_nv_tessellation_program5():
    set_enum("GL_MAX_PROGRAM_PATCH_ATTRIBS_NV", 0x86D8)
    set_enum("GL_TESS_CONTROL_PROGRAM_NV", 0x891E)
    set_enum("GL_TESS_EVALUATION_PROGRAM_NV", 0x891F)
    set_enum("GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV", 0x8C74)
    set_enum("GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV", 0x8C75)


#### GL_NV_TEXGEN_EMBOSS ####
def init_gl_nv_texgen_emboss():
    set_enum("GL_EMBOSS_LIGHT_NV", 0x855D)
    set_enum("GL_EMBOSS_CONSTANT_NV", 0x855E)
    set_enum("GL_EMBOSS_MAP_NV", 0x855F)


#### GL_NV_TEXGEN_REFLECTION ####
def init_gl_nv_texgen_reflection():
    set_enum("GL_NORMAL_MAP_NV", 0x8511)
    set_enum("GL_REFLECTION_MAP_NV", 0x8512)


#### GL_NV_TEXTURE_BARRIER ####
def init_gl_nv_texture_barrier():
    set_func('glTextureBarrierNV', t.void, ())


#### GL_NV_TEXTURE_BORDER_CLAMP ####
def init_gl_nv_texture_border_clamp():
    set_enum("GL_TEXTURE_BORDER_COLOR_NV", 0x1004)
    set_enum("GL_CLAMP_TO_BORDER_NV", 0x812D)


#### GL_NV_TEXTURE_ENV_COMBINE4 ####
def init_gl_nv_texture_env_combine4():
    set_enum("GL_COMBINE4_NV", 0x8503)
    set_enum("GL_SOURCE3_RGB_NV", 0x8583)
    set_enum("GL_SOURCE3_ALPHA_NV", 0x858B)
    set_enum("GL_OPERAND3_RGB_NV", 0x8593)
    set_enum("GL_OPERAND3_ALPHA_NV", 0x859B)


#### GL_NV_TEXTURE_EXPAND_NORMAL ####
def init_gl_nv_texture_expand_normal():
    set_enum("GL_TEXTURE_UNSIGNED_REMAP_MODE_NV", 0x888F)


#### GL_NV_TEXTURE_MULTISAMPLE ####
def init_gl_nv_texture_multisample():
    set_func('glTexImage2DMultisampleCoverageNV', t.void, (t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTexImage3DMultisampleCoverageNV', t.void, (t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureImage2DMultisampleNV', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLint, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureImage3DMultisampleNV', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureImage2DMultisampleCoverageNV', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, t.GLsizei, t.GLboolean))
    set_func('glTextureImage3DMultisampleCoverageNV', t.void, (t.GLuint, t.GLenum, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_enum("GL_TEXTURE_COVERAGE_SAMPLES_NV", 0x9045)
    set_enum("GL_TEXTURE_COLOR_SAMPLES_NV", 0x9046)


#### GL_NV_TEXTURE_RECTANGLE ####
def init_gl_nv_texture_rectangle():
    set_enum("GL_TEXTURE_RECTANGLE_NV", 0x84F5)
    set_enum("GL_TEXTURE_BINDING_RECTANGLE_NV", 0x84F6)
    set_enum("GL_PROXY_TEXTURE_RECTANGLE_NV", 0x84F7)
    set_enum("GL_MAX_RECTANGLE_TEXTURE_SIZE_NV", 0x84F8)


#### GL_NV_TEXTURE_SHADER ####
def init_gl_nv_texture_shader():
    set_enum("GL_OFFSET_TEXTURE_RECTANGLE_NV", 0x864C)
    set_enum("GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV", 0x864D)
    set_enum("GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV", 0x864E)
    set_enum("GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV", 0x86D9)
    set_enum("GL_UNSIGNED_INT_S8_S8_8_8_NV", 0x86DA)
    set_enum("GL_UNSIGNED_INT_8_8_S8_S8_REV_NV", 0x86DB)
    set_enum("GL_DSDT_MAG_INTENSITY_NV", 0x86DC)
    set_enum("GL_SHADER_CONSISTENT_NV", 0x86DD)
    set_enum("GL_TEXTURE_SHADER_NV", 0x86DE)
    set_enum("GL_SHADER_OPERATION_NV", 0x86DF)
    set_enum("GL_CULL_MODES_NV", 0x86E0)
    set_enum("GL_OFFSET_TEXTURE_MATRIX_NV", 0x86E1)
    set_enum("GL_OFFSET_TEXTURE_SCALE_NV", 0x86E2)
    set_enum("GL_OFFSET_TEXTURE_BIAS_NV", 0x86E3)
    set_enum("GL_OFFSET_TEXTURE_2D_MATRIX_NV", 0x86E1)
    set_enum("GL_OFFSET_TEXTURE_2D_SCALE_NV", 0x86E2)
    set_enum("GL_OFFSET_TEXTURE_2D_BIAS_NV", 0x86E3)
    set_enum("GL_PREVIOUS_TEXTURE_INPUT_NV", 0x86E4)
    set_enum("GL_CONST_EYE_NV", 0x86E5)
    set_enum("GL_PASS_THROUGH_NV", 0x86E6)
    set_enum("GL_CULL_FRAGMENT_NV", 0x86E7)
    set_enum("GL_OFFSET_TEXTURE_2D_NV", 0x86E8)
    set_enum("GL_DEPENDENT_AR_TEXTURE_2D_NV", 0x86E9)
    set_enum("GL_DEPENDENT_GB_TEXTURE_2D_NV", 0x86EA)
    set_enum("GL_DOT_PRODUCT_NV", 0x86EC)
    set_enum("GL_DOT_PRODUCT_DEPTH_REPLACE_NV", 0x86ED)
    set_enum("GL_DOT_PRODUCT_TEXTURE_2D_NV", 0x86EE)
    set_enum("GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV", 0x86F0)
    set_enum("GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV", 0x86F1)
    set_enum("GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV", 0x86F2)
    set_enum("GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV", 0x86F3)
    set_enum("GL_HILO_NV", 0x86F4)
    set_enum("GL_DSDT_NV", 0x86F5)
    set_enum("GL_DSDT_MAG_NV", 0x86F6)
    set_enum("GL_DSDT_MAG_VIB_NV", 0x86F7)
    set_enum("GL_HILO16_NV", 0x86F8)
    set_enum("GL_SIGNED_HILO_NV", 0x86F9)
    set_enum("GL_SIGNED_HILO16_NV", 0x86FA)
    set_enum("GL_SIGNED_RGBA_NV", 0x86FB)
    set_enum("GL_SIGNED_RGBA8_NV", 0x86FC)
    set_enum("GL_SIGNED_RGB_NV", 0x86FE)
    set_enum("GL_SIGNED_RGB8_NV", 0x86FF)
    set_enum("GL_SIGNED_LUMINANCE_NV", 0x8701)
    set_enum("GL_SIGNED_LUMINANCE8_NV", 0x8702)
    set_enum("GL_SIGNED_LUMINANCE_ALPHA_NV", 0x8703)
    set_enum("GL_SIGNED_LUMINANCE8_ALPHA8_NV", 0x8704)
    set_enum("GL_SIGNED_ALPHA_NV", 0x8705)
    set_enum("GL_SIGNED_ALPHA8_NV", 0x8706)
    set_enum("GL_SIGNED_INTENSITY_NV", 0x8707)
    set_enum("GL_SIGNED_INTENSITY8_NV", 0x8708)
    set_enum("GL_DSDT8_NV", 0x8709)
    set_enum("GL_DSDT8_MAG8_NV", 0x870A)
    set_enum("GL_DSDT8_MAG8_INTENSITY8_NV", 0x870B)
    set_enum("GL_SIGNED_RGB_UNSIGNED_ALPHA_NV", 0x870C)
    set_enum("GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV", 0x870D)
    set_enum("GL_HI_SCALE_NV", 0x870E)
    set_enum("GL_LO_SCALE_NV", 0x870F)
    set_enum("GL_DS_SCALE_NV", 0x8710)
    set_enum("GL_DT_SCALE_NV", 0x8711)
    set_enum("GL_MAGNITUDE_SCALE_NV", 0x8712)
    set_enum("GL_VIBRANCE_SCALE_NV", 0x8713)
    set_enum("GL_HI_BIAS_NV", 0x8714)
    set_enum("GL_LO_BIAS_NV", 0x8715)
    set_enum("GL_DS_BIAS_NV", 0x8716)
    set_enum("GL_DT_BIAS_NV", 0x8717)
    set_enum("GL_MAGNITUDE_BIAS_NV", 0x8718)
    set_enum("GL_VIBRANCE_BIAS_NV", 0x8719)
    set_enum("GL_TEXTURE_BORDER_VALUES_NV", 0x871A)
    set_enum("GL_TEXTURE_HI_SIZE_NV", 0x871B)
    set_enum("GL_TEXTURE_LO_SIZE_NV", 0x871C)
    set_enum("GL_TEXTURE_DS_SIZE_NV", 0x871D)
    set_enum("GL_TEXTURE_DT_SIZE_NV", 0x871E)
    set_enum("GL_TEXTURE_MAG_SIZE_NV", 0x871F)


#### GL_NV_TEXTURE_SHADER2 ####
def init_gl_nv_texture_shader2():
    set_enum("GL_DOT_PRODUCT_TEXTURE_3D_NV", 0x86EF)


#### GL_NV_TEXTURE_SHADER3 ####
def init_gl_nv_texture_shader3():
    set_enum("GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV", 0x8850)
    set_enum("GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV", 0x8851)
    set_enum("GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV", 0x8852)
    set_enum("GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV", 0x8853)
    set_enum("GL_OFFSET_HILO_TEXTURE_2D_NV", 0x8854)
    set_enum("GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV", 0x8855)
    set_enum("GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV", 0x8856)
    set_enum("GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV", 0x8857)
    set_enum("GL_DEPENDENT_HILO_TEXTURE_2D_NV", 0x8858)
    set_enum("GL_DEPENDENT_RGB_TEXTURE_3D_NV", 0x8859)
    set_enum("GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV", 0x885A)
    set_enum("GL_DOT_PRODUCT_PASS_THROUGH_NV", 0x885B)
    set_enum("GL_DOT_PRODUCT_TEXTURE_1D_NV", 0x885C)
    set_enum("GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV", 0x885D)
    set_enum("GL_HILO8_NV", 0x885E)
    set_enum("GL_SIGNED_HILO8_NV", 0x885F)
    set_enum("GL_FORCE_BLUE_TO_ONE_NV", 0x8860)


#### GL_NV_TRANSFORM_FEEDBACK ####
def init_gl_nv_transform_feedback():
    set_func('glBeginTransformFeedbackNV', t.void, (t.GLenum,))
    set_func('glEndTransformFeedbackNV', t.void, ())
    set_func('glTransformFeedbackAttribsNV', t.void, (t.GLsizei, ct.POINTER(t.GLint), t.GLenum))
    set_func('glBindBufferRangeNV', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_func('glBindBufferOffsetNV', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLintptr))
    set_func('glBindBufferBaseNV', t.void, (t.GLenum, t.GLuint, t.GLuint))
    set_func('glTransformFeedbackVaryingsNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLint), t.GLenum))
    set_func('glActiveVaryingNV', t.void, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetVaryingLocationNV', t.GLint, (t.GLuint, ct.POINTER(t.GLchar)))
    set_func('glGetActiveVaryingNV', t.void, (t.GLuint, t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLsizei), ct.POINTER(t.GLenum), ct.POINTER(t.GLchar)))
    set_func('glGetTransformFeedbackVaryingNV', t.void, (t.GLuint, t.GLuint, ct.POINTER(t.GLint)))
    set_func('glTransformFeedbackStreamAttribsNV', t.void, (t.GLsizei, ct.POINTER(t.GLint), t.GLsizei, ct.POINTER(t.GLint), t.GLenum))
    set_enum("GL_BACK_PRIMARY_COLOR_NV", 0x8C77)
    set_enum("GL_BACK_SECONDARY_COLOR_NV", 0x8C78)
    set_enum("GL_TEXTURE_COORD_NV", 0x8C79)
    set_enum("GL_CLIP_DISTANCE_NV", 0x8C7A)
    set_enum("GL_VERTEX_ID_NV", 0x8C7B)
    set_enum("GL_PRIMITIVE_ID_NV", 0x8C7C)
    set_enum("GL_GENERIC_ATTRIB_NV", 0x8C7D)
    set_enum("GL_TRANSFORM_FEEDBACK_ATTRIBS_NV", 0x8C7E)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV", 0x8C7F)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV", 0x8C80)
    set_enum("GL_ACTIVE_VARYINGS_NV", 0x8C81)
    set_enum("GL_ACTIVE_VARYING_MAX_LENGTH_NV", 0x8C82)
    set_enum("GL_TRANSFORM_FEEDBACK_VARYINGS_NV", 0x8C83)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_START_NV", 0x8C84)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV", 0x8C85)
    set_enum("GL_TRANSFORM_FEEDBACK_RECORD_NV", 0x8C86)
    set_enum("GL_PRIMITIVES_GENERATED_NV", 0x8C87)
    set_enum("GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV", 0x8C88)
    set_enum("GL_RASTERIZER_DISCARD_NV", 0x8C89)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV", 0x8C8A)
    set_enum("GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV", 0x8C8B)
    set_enum("GL_INTERLEAVED_ATTRIBS_NV", 0x8C8C)
    set_enum("GL_SEPARATE_ATTRIBS_NV", 0x8C8D)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_NV", 0x8C8E)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV", 0x8C8F)
    set_enum("GL_LAYER_NV", 0x8DAA)
    set_enum("GL_NEXT_BUFFER_NV", -2)
    set_enum("GL_SKIP_COMPONENTS4_NV", -3)
    set_enum("GL_SKIP_COMPONENTS3_NV", -4)
    set_enum("GL_SKIP_COMPONENTS2_NV", -5)
    set_enum("GL_SKIP_COMPONENTS1_NV", -6)


#### GL_NV_TRANSFORM_FEEDBACK2 ####
def init_gl_nv_transform_feedback2():
    set_func('glBindTransformFeedbackNV', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteTransformFeedbacksNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenTransformFeedbacksNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsTransformFeedbackNV', t.GLboolean, (t.GLuint,))
    set_func('glPauseTransformFeedbackNV', t.void, ())
    set_func('glResumeTransformFeedbackNV', t.void, ())
    set_func('glDrawTransformFeedbackNV', t.void, (t.GLenum, t.GLuint))
    set_enum("GL_TRANSFORM_FEEDBACK_NV", 0x8E22)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV", 0x8E23)
    set_enum("GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV", 0x8E24)
    set_enum("GL_TRANSFORM_FEEDBACK_BINDING_NV", 0x8E25)


#### GL_NV_UNIFORM_BUFFER_UNIFIED_MEMORY ####
def init_gl_nv_uniform_buffer_unified_memory():
    set_enum("GL_UNIFORM_BUFFER_UNIFIED_NV", 0x936E)
    set_enum("GL_UNIFORM_BUFFER_ADDRESS_NV", 0x936F)
    set_enum("GL_UNIFORM_BUFFER_LENGTH_NV", 0x9370)


#### GL_NV_VDPAU_INTEROP ####
def init_gl_nv_vdpau_interop():
    set_func('glVDPAUInitNV', t.void, (ct.POINTER(t.void), ct.POINTER(t.void)))
    set_func('glVDPAUFiniNV', t.void, ())
    set_func('glVDPAURegisterVideoSurfaceNV', t.GLvdpauSurfaceNV, (ct.POINTER(t.void), t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glVDPAURegisterOutputSurfaceNV', t.GLvdpauSurfaceNV, (ct.POINTER(t.void), t.GLenum, t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glVDPAUIsSurfaceNV', t.GLboolean, (t.GLvdpauSurfaceNV,))
    set_func('glVDPAUUnregisterSurfaceNV', t.void, (t.GLvdpauSurfaceNV,))
    set_func('glVDPAUGetSurfaceivNV', t.void, (t.GLvdpauSurfaceNV, t.GLenum, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLint)))
    set_func('glVDPAUSurfaceAccessNV', t.void, (t.GLvdpauSurfaceNV, t.GLenum))
    set_func('glVDPAUMapSurfacesNV', t.void, (t.GLsizei, ct.POINTER(t.GLvdpauSurfaceNV)))
    set_func('glVDPAUUnmapSurfacesNV', t.void, (t.GLsizei, ct.POINTER(t.GLvdpauSurfaceNV)))
    set_enum("GL_SURFACE_STATE_NV", 0x86EB)
    set_enum("GL_SURFACE_REGISTERED_NV", 0x86FD)
    set_enum("GL_SURFACE_MAPPED_NV", 0x8700)
    set_enum("GL_WRITE_DISCARD_NV", 0x88BE)


#### GL_NV_VERTEX_ARRAY_RANGE ####
def init_gl_nv_vertex_array_range():
    set_func('glFlushVertexArrayRangeNV', t.void, ())
    set_func('glVertexArrayRangeNV', t.void, (t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_VERTEX_ARRAY_RANGE_NV", 0x851D)
    set_enum("GL_VERTEX_ARRAY_RANGE_LENGTH_NV", 0x851E)
    set_enum("GL_VERTEX_ARRAY_RANGE_VALID_NV", 0x851F)
    set_enum("GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV", 0x8520)
    set_enum("GL_VERTEX_ARRAY_RANGE_POINTER_NV", 0x8521)


#### GL_NV_VERTEX_ARRAY_RANGE2 ####
def init_gl_nv_vertex_array_range2():
    set_enum("GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV", 0x8533)


#### GL_NV_VERTEX_ATTRIB_INTEGER_64BIT ####
def init_gl_nv_vertex_attrib_integer_64bit():
    set_func('glVertexAttribL1i64NV', t.void, (t.GLuint, t.GLint64EXT))
    set_func('glVertexAttribL2i64NV', t.void, (t.GLuint, t.GLint64EXT, t.GLint64EXT))
    set_func('glVertexAttribL3i64NV', t.void, (t.GLuint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glVertexAttribL4i64NV', t.void, (t.GLuint, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT, t.GLint64EXT))
    set_func('glVertexAttribL1i64vNV', t.void, (t.GLuint, ct.POINTER(t.GLint64EXT)))
    set_func('glVertexAttribL2i64vNV', t.void, (t.GLuint, ct.POINTER(t.GLint64EXT)))
    set_func('glVertexAttribL3i64vNV', t.void, (t.GLuint, ct.POINTER(t.GLint64EXT)))
    set_func('glVertexAttribL4i64vNV', t.void, (t.GLuint, ct.POINTER(t.GLint64EXT)))
    set_func('glVertexAttribL1ui64NV', t.void, (t.GLuint, t.GLuint64EXT))
    set_func('glVertexAttribL2ui64NV', t.void, (t.GLuint, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glVertexAttribL3ui64NV', t.void, (t.GLuint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glVertexAttribL4ui64NV', t.void, (t.GLuint, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT, t.GLuint64EXT))
    set_func('glVertexAttribL1ui64vNV', t.void, (t.GLuint, ct.POINTER(t.GLuint64EXT)))
    set_func('glVertexAttribL2ui64vNV', t.void, (t.GLuint, ct.POINTER(t.GLuint64EXT)))
    set_func('glVertexAttribL3ui64vNV', t.void, (t.GLuint, ct.POINTER(t.GLuint64EXT)))
    set_func('glVertexAttribL4ui64vNV', t.void, (t.GLuint, ct.POINTER(t.GLuint64EXT)))
    set_func('glGetVertexAttribLi64vNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint64EXT)))
    set_func('glGetVertexAttribLui64vNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint64EXT)))
    set_func('glVertexAttribLFormatNV', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei))
    set_enum("GL_INT64_NV", 0x140E)
    set_enum("GL_UNSIGNED_INT64_NV", 0x140F)


#### GL_NV_VERTEX_BUFFER_UNIFIED_MEMORY ####
def init_gl_nv_vertex_buffer_unified_memory():
    set_func('glBufferAddressRangeNV', t.void, (t.GLenum, t.GLuint, t.GLuint64EXT, t.GLsizeiptr))
    set_func('glVertexFormatNV', t.void, (t.GLint, t.GLenum, t.GLsizei))
    set_func('glNormalFormatNV', t.void, (t.GLenum, t.GLsizei))
    set_func('glColorFormatNV', t.void, (t.GLint, t.GLenum, t.GLsizei))
    set_func('glIndexFormatNV', t.void, (t.GLenum, t.GLsizei))
    set_func('glTexCoordFormatNV', t.void, (t.GLint, t.GLenum, t.GLsizei))
    set_func('glEdgeFlagFormatNV', t.void, (t.GLsizei,))
    set_func('glSecondaryColorFormatNV', t.void, (t.GLint, t.GLenum, t.GLsizei))
    set_func('glFogCoordFormatNV', t.void, (t.GLenum, t.GLsizei))
    set_func('glVertexAttribFormatNV', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLboolean, t.GLsizei))
    set_func('glVertexAttribIFormatNV', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei))
    set_func('glGetIntegerui64i_vNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLuint64EXT)))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV", 0x8F1E)
    set_enum("GL_ELEMENT_ARRAY_UNIFIED_NV", 0x8F1F)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV", 0x8F20)
    set_enum("GL_VERTEX_ARRAY_ADDRESS_NV", 0x8F21)
    set_enum("GL_NORMAL_ARRAY_ADDRESS_NV", 0x8F22)
    set_enum("GL_COLOR_ARRAY_ADDRESS_NV", 0x8F23)
    set_enum("GL_INDEX_ARRAY_ADDRESS_NV", 0x8F24)
    set_enum("GL_TEXTURE_COORD_ARRAY_ADDRESS_NV", 0x8F25)
    set_enum("GL_EDGE_FLAG_ARRAY_ADDRESS_NV", 0x8F26)
    set_enum("GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV", 0x8F27)
    set_enum("GL_FOG_COORD_ARRAY_ADDRESS_NV", 0x8F28)
    set_enum("GL_ELEMENT_ARRAY_ADDRESS_NV", 0x8F29)
    set_enum("GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV", 0x8F2A)
    set_enum("GL_VERTEX_ARRAY_LENGTH_NV", 0x8F2B)
    set_enum("GL_NORMAL_ARRAY_LENGTH_NV", 0x8F2C)
    set_enum("GL_COLOR_ARRAY_LENGTH_NV", 0x8F2D)
    set_enum("GL_INDEX_ARRAY_LENGTH_NV", 0x8F2E)
    set_enum("GL_TEXTURE_COORD_ARRAY_LENGTH_NV", 0x8F2F)
    set_enum("GL_EDGE_FLAG_ARRAY_LENGTH_NV", 0x8F30)
    set_enum("GL_SECONDARY_COLOR_ARRAY_LENGTH_NV", 0x8F31)
    set_enum("GL_FOG_COORD_ARRAY_LENGTH_NV", 0x8F32)
    set_enum("GL_ELEMENT_ARRAY_LENGTH_NV", 0x8F33)
    set_enum("GL_DRAW_INDIRECT_UNIFIED_NV", 0x8F40)
    set_enum("GL_DRAW_INDIRECT_ADDRESS_NV", 0x8F41)
    set_enum("GL_DRAW_INDIRECT_LENGTH_NV", 0x8F42)


#### GL_NV_VERTEX_PROGRAM ####
def init_gl_nv_vertex_program():
    set_func('glAreProgramsResidentNV', t.GLboolean, (t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLboolean)))
    set_func('glBindProgramNV', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteProgramsNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glExecuteProgramNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glGenProgramsNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetProgramParameterdvNV', t.void, (t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetProgramParameterfvNV', t.void, (t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetProgramivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetProgramStringNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLubyte)))
    set_func('glGetTrackMatrixivNV', t.void, (t.GLenum, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribdvNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glGetVertexAttribfvNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVertexAttribivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribPointervNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_func('glIsProgramNV', t.GLboolean, (t.GLuint,))
    set_func('glLoadProgramNV', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte)))
    set_func('glProgramParameter4dNV', t.void, (t.GLenum, t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glProgramParameter4dvNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glProgramParameter4fNV', t.void, (t.GLenum, t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glProgramParameter4fvNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glProgramParameters4dvNV', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glProgramParameters4fvNV', t.void, (t.GLenum, t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glRequestResidentProgramsNV', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glTrackMatrixNV', t.void, (t.GLenum, t.GLuint, t.GLenum, t.GLenum))
    set_func('glVertexAttribPointerNV', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glVertexAttrib1dNV', t.void, (t.GLuint, t.GLdouble))
    set_func('glVertexAttrib1dvNV', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib1fNV', t.void, (t.GLuint, t.GLfloat))
    set_func('glVertexAttrib1fvNV', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib1sNV', t.void, (t.GLuint, t.GLshort))
    set_func('glVertexAttrib1svNV', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib2dNV', t.void, (t.GLuint, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib2dvNV', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib2fNV', t.void, (t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib2fvNV', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib2sNV', t.void, (t.GLuint, t.GLshort, t.GLshort))
    set_func('glVertexAttrib2svNV', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib3dNV', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib3dvNV', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib3fNV', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib3fvNV', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib3sNV', t.void, (t.GLuint, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexAttrib3svNV', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4dNV', t.void, (t.GLuint, t.GLdouble, t.GLdouble, t.GLdouble, t.GLdouble))
    set_func('glVertexAttrib4dvNV', t.void, (t.GLuint, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttrib4fNV', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glVertexAttrib4fvNV', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttrib4sNV', t.void, (t.GLuint, t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glVertexAttrib4svNV', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttrib4ubNV', t.void, (t.GLuint, t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte))
    set_func('glVertexAttrib4ubvNV', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttribs1dvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribs1fvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttribs1svNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLshort)))
    set_func('glVertexAttribs2dvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribs2fvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttribs2svNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLshort)))
    set_func('glVertexAttribs3dvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribs3fvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttribs3svNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLshort)))
    set_func('glVertexAttribs4dvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLdouble)))
    set_func('glVertexAttribs4fvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glVertexAttribs4svNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLshort)))
    set_func('glVertexAttribs4ubvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLubyte)))
    set_enum("GL_VERTEX_PROGRAM_NV", 0x8620)
    set_enum("GL_VERTEX_STATE_PROGRAM_NV", 0x8621)
    set_enum("GL_ATTRIB_ARRAY_SIZE_NV", 0x8623)
    set_enum("GL_ATTRIB_ARRAY_STRIDE_NV", 0x8624)
    set_enum("GL_ATTRIB_ARRAY_TYPE_NV", 0x8625)
    set_enum("GL_CURRENT_ATTRIB_NV", 0x8626)
    set_enum("GL_PROGRAM_LENGTH_NV", 0x8627)
    set_enum("GL_PROGRAM_STRING_NV", 0x8628)
    set_enum("GL_MODELVIEW_PROJECTION_NV", 0x8629)
    set_enum("GL_IDENTITY_NV", 0x862A)
    set_enum("GL_INVERSE_NV", 0x862B)
    set_enum("GL_TRANSPOSE_NV", 0x862C)
    set_enum("GL_INVERSE_TRANSPOSE_NV", 0x862D)
    set_enum("GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV", 0x862E)
    set_enum("GL_MAX_TRACK_MATRICES_NV", 0x862F)
    set_enum("GL_MATRIX0_NV", 0x8630)
    set_enum("GL_MATRIX1_NV", 0x8631)
    set_enum("GL_MATRIX2_NV", 0x8632)
    set_enum("GL_MATRIX3_NV", 0x8633)
    set_enum("GL_MATRIX4_NV", 0x8634)
    set_enum("GL_MATRIX5_NV", 0x8635)
    set_enum("GL_MATRIX6_NV", 0x8636)
    set_enum("GL_MATRIX7_NV", 0x8637)
    set_enum("GL_CURRENT_MATRIX_STACK_DEPTH_NV", 0x8640)
    set_enum("GL_CURRENT_MATRIX_NV", 0x8641)
    set_enum("GL_VERTEX_PROGRAM_POINT_SIZE_NV", 0x8642)
    set_enum("GL_VERTEX_PROGRAM_TWO_SIDE_NV", 0x8643)
    set_enum("GL_PROGRAM_PARAMETER_NV", 0x8644)
    set_enum("GL_ATTRIB_ARRAY_POINTER_NV", 0x8645)
    set_enum("GL_PROGRAM_TARGET_NV", 0x8646)
    set_enum("GL_PROGRAM_RESIDENT_NV", 0x8647)
    set_enum("GL_TRACK_MATRIX_NV", 0x8648)
    set_enum("GL_TRACK_MATRIX_TRANSFORM_NV", 0x8649)
    set_enum("GL_VERTEX_PROGRAM_BINDING_NV", 0x864A)
    set_enum("GL_PROGRAM_ERROR_POSITION_NV", 0x864B)
    set_enum("GL_VERTEX_ATTRIB_ARRAY0_NV", 0x8650)
    set_enum("GL_VERTEX_ATTRIB_ARRAY1_NV", 0x8651)
    set_enum("GL_VERTEX_ATTRIB_ARRAY2_NV", 0x8652)
    set_enum("GL_VERTEX_ATTRIB_ARRAY3_NV", 0x8653)
    set_enum("GL_VERTEX_ATTRIB_ARRAY4_NV", 0x8654)
    set_enum("GL_VERTEX_ATTRIB_ARRAY5_NV", 0x8655)
    set_enum("GL_VERTEX_ATTRIB_ARRAY6_NV", 0x8656)
    set_enum("GL_VERTEX_ATTRIB_ARRAY7_NV", 0x8657)
    set_enum("GL_VERTEX_ATTRIB_ARRAY8_NV", 0x8658)
    set_enum("GL_VERTEX_ATTRIB_ARRAY9_NV", 0x8659)
    set_enum("GL_VERTEX_ATTRIB_ARRAY10_NV", 0x865A)
    set_enum("GL_VERTEX_ATTRIB_ARRAY11_NV", 0x865B)
    set_enum("GL_VERTEX_ATTRIB_ARRAY12_NV", 0x865C)
    set_enum("GL_VERTEX_ATTRIB_ARRAY13_NV", 0x865D)
    set_enum("GL_VERTEX_ATTRIB_ARRAY14_NV", 0x865E)
    set_enum("GL_VERTEX_ATTRIB_ARRAY15_NV", 0x865F)
    set_enum("GL_MAP1_VERTEX_ATTRIB0_4_NV", 0x8660)
    set_enum("GL_MAP1_VERTEX_ATTRIB1_4_NV", 0x8661)
    set_enum("GL_MAP1_VERTEX_ATTRIB2_4_NV", 0x8662)
    set_enum("GL_MAP1_VERTEX_ATTRIB3_4_NV", 0x8663)
    set_enum("GL_MAP1_VERTEX_ATTRIB4_4_NV", 0x8664)
    set_enum("GL_MAP1_VERTEX_ATTRIB5_4_NV", 0x8665)
    set_enum("GL_MAP1_VERTEX_ATTRIB6_4_NV", 0x8666)
    set_enum("GL_MAP1_VERTEX_ATTRIB7_4_NV", 0x8667)
    set_enum("GL_MAP1_VERTEX_ATTRIB8_4_NV", 0x8668)
    set_enum("GL_MAP1_VERTEX_ATTRIB9_4_NV", 0x8669)
    set_enum("GL_MAP1_VERTEX_ATTRIB10_4_NV", 0x866A)
    set_enum("GL_MAP1_VERTEX_ATTRIB11_4_NV", 0x866B)
    set_enum("GL_MAP1_VERTEX_ATTRIB12_4_NV", 0x866C)
    set_enum("GL_MAP1_VERTEX_ATTRIB13_4_NV", 0x866D)
    set_enum("GL_MAP1_VERTEX_ATTRIB14_4_NV", 0x866E)
    set_enum("GL_MAP1_VERTEX_ATTRIB15_4_NV", 0x866F)
    set_enum("GL_MAP2_VERTEX_ATTRIB0_4_NV", 0x8670)
    set_enum("GL_MAP2_VERTEX_ATTRIB1_4_NV", 0x8671)
    set_enum("GL_MAP2_VERTEX_ATTRIB2_4_NV", 0x8672)
    set_enum("GL_MAP2_VERTEX_ATTRIB3_4_NV", 0x8673)
    set_enum("GL_MAP2_VERTEX_ATTRIB4_4_NV", 0x8674)
    set_enum("GL_MAP2_VERTEX_ATTRIB5_4_NV", 0x8675)
    set_enum("GL_MAP2_VERTEX_ATTRIB6_4_NV", 0x8676)
    set_enum("GL_MAP2_VERTEX_ATTRIB7_4_NV", 0x8677)
    set_enum("GL_MAP2_VERTEX_ATTRIB8_4_NV", 0x8678)
    set_enum("GL_MAP2_VERTEX_ATTRIB9_4_NV", 0x8679)
    set_enum("GL_MAP2_VERTEX_ATTRIB10_4_NV", 0x867A)
    set_enum("GL_MAP2_VERTEX_ATTRIB11_4_NV", 0x867B)
    set_enum("GL_MAP2_VERTEX_ATTRIB12_4_NV", 0x867C)
    set_enum("GL_MAP2_VERTEX_ATTRIB13_4_NV", 0x867D)
    set_enum("GL_MAP2_VERTEX_ATTRIB14_4_NV", 0x867E)
    set_enum("GL_MAP2_VERTEX_ATTRIB15_4_NV", 0x867F)


#### GL_NV_VERTEX_PROGRAM2_OPTION ####
def init_gl_nv_vertex_program2_option():
    set_enum("GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV", 0x88F4)
    set_enum("GL_MAX_PROGRAM_CALL_DEPTH_NV", 0x88F5)


#### GL_NV_VERTEX_PROGRAM3 ####
def init_gl_nv_vertex_program3():
    set_enum("GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB", 0x8B4C)


#### GL_NV_VERTEX_PROGRAM4 ####
def init_gl_nv_vertex_program4():
    set_func('glVertexAttribI1iEXT', t.void, (t.GLuint, t.GLint))
    set_func('glVertexAttribI2iEXT', t.void, (t.GLuint, t.GLint, t.GLint))
    set_func('glVertexAttribI3iEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint))
    set_func('glVertexAttribI4iEXT', t.void, (t.GLuint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glVertexAttribI1uiEXT', t.void, (t.GLuint, t.GLuint))
    set_func('glVertexAttribI2uiEXT', t.void, (t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexAttribI3uiEXT', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexAttribI4uiEXT', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_func('glVertexAttribI1ivEXT', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI2ivEXT', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI3ivEXT', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI4ivEXT', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glVertexAttribI1uivEXT', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI2uivEXT', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI3uivEXT', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI4uivEXT', t.void, (t.GLuint, ct.POINTER(t.GLuint)))
    set_func('glVertexAttribI4bvEXT', t.void, (t.GLuint, ct.POINTER(t.GLbyte)))
    set_func('glVertexAttribI4svEXT', t.void, (t.GLuint, ct.POINTER(t.GLshort)))
    set_func('glVertexAttribI4ubvEXT', t.void, (t.GLuint, ct.POINTER(t.GLubyte)))
    set_func('glVertexAttribI4usvEXT', t.void, (t.GLuint, ct.POINTER(t.GLushort)))
    set_func('glVertexAttribIPointerEXT', t.void, (t.GLuint, t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glGetVertexAttribIivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVertexAttribIuivEXT', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_enum("GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV", 0x88FD)


#### GL_NV_VIDEO_CAPTURE ####
def init_gl_nv_video_capture():
    set_func('glBeginVideoCaptureNV', t.void, (t.GLuint,))
    set_func('glBindVideoCaptureStreamBufferNV', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLintptrARB))
    set_func('glBindVideoCaptureStreamTextureNV', t.void, (t.GLuint, t.GLuint, t.GLenum, t.GLenum, t.GLuint))
    set_func('glEndVideoCaptureNV', t.void, (t.GLuint,))
    set_func('glGetVideoCaptureivNV', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVideoCaptureStreamivNV', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetVideoCaptureStreamfvNV', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetVideoCaptureStreamdvNV', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_func('glVideoCaptureNV', t.GLenum, (t.GLuint, ct.POINTER(t.GLuint), ct.POINTER(t.GLuint64EXT)))
    set_func('glVideoCaptureStreamParameterivNV', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glVideoCaptureStreamParameterfvNV', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glVideoCaptureStreamParameterdvNV', t.void, (t.GLuint, t.GLuint, t.GLenum, ct.POINTER(t.GLdouble)))
    set_enum("GL_VIDEO_BUFFER_NV", 0x9020)
    set_enum("GL_VIDEO_BUFFER_BINDING_NV", 0x9021)
    set_enum("GL_FIELD_UPPER_NV", 0x9022)
    set_enum("GL_FIELD_LOWER_NV", 0x9023)
    set_enum("GL_NUM_VIDEO_CAPTURE_STREAMS_NV", 0x9024)
    set_enum("GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV", 0x9025)
    set_enum("GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV", 0x9026)
    set_enum("GL_LAST_VIDEO_CAPTURE_STATUS_NV", 0x9027)
    set_enum("GL_VIDEO_BUFFER_PITCH_NV", 0x9028)
    set_enum("GL_VIDEO_COLOR_CONVERSION_MATRIX_NV", 0x9029)
    set_enum("GL_VIDEO_COLOR_CONVERSION_MAX_NV", 0x902A)
    set_enum("GL_VIDEO_COLOR_CONVERSION_MIN_NV", 0x902B)
    set_enum("GL_VIDEO_COLOR_CONVERSION_OFFSET_NV", 0x902C)
    set_enum("GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV", 0x902D)
    set_enum("GL_PARTIAL_SUCCESS_NV", 0x902E)
    set_enum("GL_SUCCESS_NV", 0x902F)
    set_enum("GL_FAILURE_NV", 0x9030)
    set_enum("GL_YCBYCR8_422_NV", 0x9031)
    set_enum("GL_YCBAYCR8A_4224_NV", 0x9032)
    set_enum("GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV", 0x9033)
    set_enum("GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV", 0x9034)
    set_enum("GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV", 0x9035)
    set_enum("GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV", 0x9036)
    set_enum("GL_Z4Y12Z4CB12Z4CR12_444_NV", 0x9037)
    set_enum("GL_VIDEO_CAPTURE_FRAME_WIDTH_NV", 0x9038)
    set_enum("GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV", 0x9039)
    set_enum("GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV", 0x903A)
    set_enum("GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV", 0x903B)
    set_enum("GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV", 0x903C)


#### GL_NV_VIEWPORT_ARRAY ####
def init_gl_nv_viewport_array():
    set_func('glViewportArrayvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glViewportIndexedfNV', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glViewportIndexedfvNV', t.void, (t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glScissorArrayvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glScissorIndexedNV', t.void, (t.GLuint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glScissorIndexedvNV', t.void, (t.GLuint, ct.POINTER(t.GLint)))
    set_func('glDepthRangeArrayfvNV', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glDepthRangeIndexedfNV', t.void, (t.GLuint, t.GLfloat, t.GLfloat))
    set_func('glGetFloati_vNV', t.void, (t.GLenum, t.GLuint, ct.POINTER(t.GLfloat)))
    set_func('glEnableiNV', t.void, (t.GLenum, t.GLuint))
    set_func('glDisableiNV', t.void, (t.GLenum, t.GLuint))
    set_func('glIsEnablediNV', t.GLboolean, (t.GLenum, t.GLuint))
    set_enum("GL_MAX_VIEWPORTS_NV", 0x825B)
    set_enum("GL_VIEWPORT_SUBPIXEL_BITS_NV", 0x825C)
    set_enum("GL_VIEWPORT_BOUNDS_RANGE_NV", 0x825D)
    set_enum("GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV", 0x825F)
    set_enum("GL_SCISSOR_BOX", 0x0C10)
    set_enum("GL_VIEWPORT", 0x0BA2)
    set_enum("GL_DEPTH_RANGE", 0x0B70)
    set_enum("GL_SCISSOR_TEST", 0x0C11)


#### GL_NV_VIEWPORT_SWIZZLE ####
def init_gl_nv_viewport_swizzle():
    set_func('glViewportSwizzleNV', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_enum("GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV", 0x9350)
    set_enum("GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV", 0x9351)
    set_enum("GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV", 0x9352)
    set_enum("GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV", 0x9353)
    set_enum("GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV", 0x9354)
    set_enum("GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV", 0x9355)
    set_enum("GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV", 0x9356)
    set_enum("GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV", 0x9357)
    set_enum("GL_VIEWPORT_SWIZZLE_X_NV", 0x9358)
    set_enum("GL_VIEWPORT_SWIZZLE_Y_NV", 0x9359)
    set_enum("GL_VIEWPORT_SWIZZLE_Z_NV", 0x935A)
    set_enum("GL_VIEWPORT_SWIZZLE_W_NV", 0x935B)


#### GL_OES_EGL_IMAGE ####
def init_gl_oes_egl_image():
    set_func('glEGLImageTargetTexture2DOES', t.void, (t.GLenum, t.GLeglImageOES))
    set_func('glEGLImageTargetRenderbufferStorageOES', t.void, (t.GLenum, t.GLeglImageOES))


#### GL_OES_EGL_IMAGE_EXTERNAL ####
def init_gl_oes_egl_image_external():
    set_enum("GL_TEXTURE_EXTERNAL_OES", 0x8D65)
    set_enum("GL_TEXTURE_BINDING_EXTERNAL_OES", 0x8D67)
    set_enum("GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES", 0x8D68)
    set_enum("GL_SAMPLER_EXTERNAL_OES", 0x8D66)


#### GL_OES_BLEND_EQUATION_SEPARATE ####
def init_gl_oes_blend_equation_separate():
    set_func('glBlendEquationSeparateOES', t.void, (t.GLenum, t.GLenum))
    set_enum("GL_BLEND_EQUATION_RGB_OES", 0x8009)
    set_enum("GL_BLEND_EQUATION_ALPHA_OES", 0x883D)


#### GL_OES_BLEND_FUNC_SEPARATE ####
def init_gl_oes_blend_func_separate():
    set_func('glBlendFuncSeparateOES', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_enum("GL_BLEND_DST_RGB_OES", 0x80C8)
    set_enum("GL_BLEND_SRC_RGB_OES", 0x80C9)
    set_enum("GL_BLEND_DST_ALPHA_OES", 0x80CA)
    set_enum("GL_BLEND_SRC_ALPHA_OES", 0x80CB)


#### GL_OES_BLEND_SUBTRACT ####
def init_gl_oes_blend_subtract():
    set_func('glBlendEquationOES', t.void, (t.GLenum,))
    set_enum("GL_BLEND_EQUATION_OES", 0x8009)
    set_enum("GL_FUNC_ADD_OES", 0x8006)
    set_enum("GL_FUNC_SUBTRACT_OES", 0x800A)
    set_enum("GL_FUNC_REVERSE_SUBTRACT_OES", 0x800B)


#### GL_OES_BYTE_COORDINATES ####
def init_gl_oes_byte_coordinates():
    set_func('glMultiTexCoord1bOES', t.void, (t.GLenum, t.GLbyte))
    set_func('glMultiTexCoord1bvOES', t.void, (t.GLenum, ct.POINTER(t.GLbyte)))
    set_func('glMultiTexCoord2bOES', t.void, (t.GLenum, t.GLbyte, t.GLbyte))
    set_func('glMultiTexCoord2bvOES', t.void, (t.GLenum, ct.POINTER(t.GLbyte)))
    set_func('glMultiTexCoord3bOES', t.void, (t.GLenum, t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glMultiTexCoord3bvOES', t.void, (t.GLenum, ct.POINTER(t.GLbyte)))
    set_func('glMultiTexCoord4bOES', t.void, (t.GLenum, t.GLbyte, t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glMultiTexCoord4bvOES', t.void, (t.GLenum, ct.POINTER(t.GLbyte)))
    set_func('glTexCoord1bOES', t.void, (t.GLbyte,))
    set_func('glTexCoord1bvOES', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glTexCoord2bOES', t.void, (t.GLbyte, t.GLbyte))
    set_func('glTexCoord2bvOES', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glTexCoord3bOES', t.void, (t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glTexCoord3bvOES', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glTexCoord4bOES', t.void, (t.GLbyte, t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glTexCoord4bvOES', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glVertex2bOES', t.void, (t.GLbyte, t.GLbyte))
    set_func('glVertex2bvOES', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glVertex3bOES', t.void, (t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glVertex3bvOES', t.void, (ct.POINTER(t.GLbyte),))
    set_func('glVertex4bOES', t.void, (t.GLbyte, t.GLbyte, t.GLbyte, t.GLbyte))
    set_func('glVertex4bvOES', t.void, (ct.POINTER(t.GLbyte),))
    set_enum("GL_BYTE", 0x1400)


#### GL_OES_COMPRESSED_ETC1_RGB8_TEXTURE ####
def init_gl_oes_compressed_etc1_rgb8_texture():
    set_enum("GL_ETC1_RGB8_OES", 0x8D64)


#### GL_OES_COMPRESSED_PALETTED_TEXTURE ####
def init_gl_oes_compressed_paletted_texture():
    set_enum("GL_PALETTE4_RGB8_OES", 0x8B90)
    set_enum("GL_PALETTE4_RGBA8_OES", 0x8B91)
    set_enum("GL_PALETTE4_R5_G6_B5_OES", 0x8B92)
    set_enum("GL_PALETTE4_RGBA4_OES", 0x8B93)
    set_enum("GL_PALETTE4_RGB5_A1_OES", 0x8B94)
    set_enum("GL_PALETTE8_RGB8_OES", 0x8B95)
    set_enum("GL_PALETTE8_RGBA8_OES", 0x8B96)
    set_enum("GL_PALETTE8_R5_G6_B5_OES", 0x8B97)
    set_enum("GL_PALETTE8_RGBA4_OES", 0x8B98)
    set_enum("GL_PALETTE8_RGB5_A1_OES", 0x8B99)


#### GL_OES_COPY_IMAGE ####
def init_gl_oes_copy_image():
    set_func('glCopyImageSubDataOES', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLuint, t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei))


#### GL_OES_DEPTH24 ####
def init_gl_oes_depth24():
    set_enum("GL_DEPTH_COMPONENT24_OES", 0x81A6)


#### GL_OES_DEPTH32 ####
def init_gl_oes_depth32():
    set_enum("GL_DEPTH_COMPONENT32_OES", 0x81A7)


#### GL_OES_DEPTH_TEXTURE ####
def init_gl_oes_depth_texture():
    set_enum("GL_DEPTH_COMPONENT", 0x1902)
    set_enum("GL_UNSIGNED_SHORT", 0x1403)
    set_enum("GL_UNSIGNED_INT", 0x1405)


#### GL_OES_DRAW_BUFFERS_INDEXED ####
def init_gl_oes_draw_buffers_indexed():
    set_func('glEnableiOES', t.void, (t.GLenum, t.GLuint))
    set_func('glDisableiOES', t.void, (t.GLenum, t.GLuint))
    set_func('glBlendEquationiOES', t.void, (t.GLuint, t.GLenum))
    set_func('glBlendEquationSeparateiOES', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFunciOES', t.void, (t.GLuint, t.GLenum, t.GLenum))
    set_func('glBlendFuncSeparateiOES', t.void, (t.GLuint, t.GLenum, t.GLenum, t.GLenum, t.GLenum))
    set_func('glColorMaskiOES', t.void, (t.GLuint, t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_func('glIsEnablediOES', t.GLboolean, (t.GLenum, t.GLuint))
    set_enum("GL_BLEND_EQUATION_RGB", 0x8009)
    set_enum("GL_BLEND_EQUATION_ALPHA", 0x883D)
    set_enum("GL_BLEND_SRC_RGB", 0x80C9)
    set_enum("GL_BLEND_SRC_ALPHA", 0x80CB)
    set_enum("GL_BLEND_DST_RGB", 0x80C8)
    set_enum("GL_BLEND_DST_ALPHA", 0x80CA)
    set_enum("GL_COLOR_WRITEMASK", 0x0C23)
    set_enum("GL_BLEND", 0x0BE2)
    set_enum("GL_FUNC_ADD", 0x8006)
    set_enum("GL_FUNC_SUBTRACT", 0x800A)
    set_enum("GL_FUNC_REVERSE_SUBTRACT", 0x800B)
    set_enum("GL_MIN", 0x8007)
    set_enum("GL_MAX", 0x8008)
    set_enum("GL_ZERO", 0)
    set_enum("GL_ONE", 1)
    set_enum("GL_SRC_COLOR", 0x0300)
    set_enum("GL_ONE_MINUS_SRC_COLOR", 0x0301)
    set_enum("GL_DST_COLOR", 0x0306)
    set_enum("GL_ONE_MINUS_DST_COLOR", 0x0307)
    set_enum("GL_SRC_ALPHA", 0x0302)
    set_enum("GL_ONE_MINUS_SRC_ALPHA", 0x0303)
    set_enum("GL_DST_ALPHA", 0x0304)
    set_enum("GL_ONE_MINUS_DST_ALPHA", 0x0305)
    set_enum("GL_CONSTANT_COLOR", 0x8001)
    set_enum("GL_ONE_MINUS_CONSTANT_COLOR", 0x8002)
    set_enum("GL_CONSTANT_ALPHA", 0x8003)
    set_enum("GL_ONE_MINUS_CONSTANT_ALPHA", 0x8004)
    set_enum("GL_SRC_ALPHA_SATURATE", 0x0308)


#### GL_OES_DRAW_ELEMENTS_BASE_VERTEX ####
def init_gl_oes_draw_elements_base_vertex():
    set_func('glDrawElementsBaseVertexOES', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawRangeElementsBaseVertexOES', t.void, (t.GLenum, t.GLuint, t.GLuint, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_func('glDrawElementsInstancedBaseVertexOES', t.void, (t.GLenum, t.GLsizei, t.GLenum, ct.POINTER(t.void), t.GLsizei, t.GLint))
    set_func('glMultiDrawElementsBaseVertexOES', t.void, (t.GLenum, ct.POINTER(t.GLsizei), t.GLenum, ct.POINTER(ct.POINTER(t.void)), t.GLsizei, ct.POINTER(t.GLint)))


#### GL_OES_DRAW_TEXTURE ####
def init_gl_oes_draw_texture():
    set_func('glDrawTexsOES', t.void, (t.GLshort, t.GLshort, t.GLshort, t.GLshort, t.GLshort))
    set_func('glDrawTexiOES', t.void, (t.GLint, t.GLint, t.GLint, t.GLint, t.GLint))
    set_func('glDrawTexxOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glDrawTexsvOES', t.void, (ct.POINTER(t.GLshort),))
    set_func('glDrawTexivOES', t.void, (ct.POINTER(t.GLint),))
    set_func('glDrawTexxvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glDrawTexfOES', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glDrawTexfvOES', t.void, (ct.POINTER(t.GLfloat),))
    set_enum("GL_TEXTURE_CROP_RECT_OES", 0x8B9D)


#### GL_OES_ELEMENT_INDEX_UINT ####
def init_gl_oes_element_index_uint():
    set_enum("GL_UNSIGNED_INT", 0x1405)


#### GL_OES_FIXED_POINT ####
def init_gl_oes_fixed_point():
    set_func('glAlphaFuncxOES', t.void, (t.GLenum, t.GLfixed))
    set_func('glClearColorxOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glClearDepthxOES', t.void, (t.GLfixed,))
    set_func('glClipPlanexOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glColor4xOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glDepthRangexOES', t.void, (t.GLfixed, t.GLfixed))
    set_func('glFogxOES', t.void, (t.GLenum, t.GLfixed))
    set_func('glFogxvOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glFrustumxOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glGetClipPlanexOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetFixedvOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetTexEnvxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetTexParameterxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glLightModelxOES', t.void, (t.GLenum, t.GLfixed))
    set_func('glLightModelxvOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glLightxOES', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glLightxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glLineWidthxOES', t.void, (t.GLfixed,))
    set_func('glLoadMatrixxOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glMaterialxOES', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glMaterialxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glMultMatrixxOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glMultiTexCoord4xOES', t.void, (t.GLenum, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glNormal3xOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glOrthoxOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glPointParameterxvOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glPointSizexOES', t.void, (t.GLfixed,))
    set_func('glPolygonOffsetxOES', t.void, (t.GLfixed, t.GLfixed))
    set_func('glRotatexOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glScalexOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glTexEnvxOES', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glTexEnvxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glTexParameterxOES', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glTexParameterxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glTranslatexOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glGetLightxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetMaterialxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glPointParameterxOES', t.void, (t.GLenum, t.GLfixed))
    set_func('glSampleCoveragexOES', t.void, (t.GLclampx, t.GLboolean))
    set_func('glAccumxOES', t.void, (t.GLenum, t.GLfixed))
    set_func('glBitmapxOES', t.void, (t.GLsizei, t.GLsizei, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed, ct.POINTER(t.GLubyte)))
    set_func('glBlendColorxOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glClearAccumxOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glColor3xOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glColor3xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glColor4xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glConvolutionParameterxOES', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glConvolutionParameterxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glEvalCoord1xOES', t.void, (t.GLfixed,))
    set_func('glEvalCoord1xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glEvalCoord2xOES', t.void, (t.GLfixed, t.GLfixed))
    set_func('glEvalCoord2xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glFeedbackBufferxOES', t.void, (t.GLsizei, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetConvolutionParameterxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetHistogramParameterxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetLightxOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetMapxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetMaterialxOES', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glGetPixelMapxv', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLfixed)))
    set_func('glGetTexGenxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetTexLevelParameterxvOES', t.void, (t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glIndexxOES', t.void, (t.GLfixed,))
    set_func('glIndexxvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glLoadTransposeMatrixxOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glMap1xOES', t.void, (t.GLenum, t.GLfixed, t.GLfixed, t.GLint, t.GLint, t.GLfixed))
    set_func('glMap2xOES', t.void, (t.GLenum, t.GLfixed, t.GLfixed, t.GLint, t.GLint, t.GLfixed, t.GLfixed, t.GLint, t.GLint, t.GLfixed))
    set_func('glMapGrid1xOES', t.void, (t.GLint, t.GLfixed, t.GLfixed))
    set_func('glMapGrid2xOES', t.void, (t.GLint, t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glMultTransposeMatrixxOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glMultiTexCoord1xOES', t.void, (t.GLenum, t.GLfixed))
    set_func('glMultiTexCoord1xvOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glMultiTexCoord2xOES', t.void, (t.GLenum, t.GLfixed, t.GLfixed))
    set_func('glMultiTexCoord2xvOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glMultiTexCoord3xOES', t.void, (t.GLenum, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glMultiTexCoord3xvOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glMultiTexCoord4xvOES', t.void, (t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glNormal3xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glPassThroughxOES', t.void, (t.GLfixed,))
    set_func('glPixelMapx', t.void, (t.GLenum, t.GLint, ct.POINTER(t.GLfixed)))
    set_func('glPixelStorex', t.void, (t.GLenum, t.GLfixed))
    set_func('glPixelTransferxOES', t.void, (t.GLenum, t.GLfixed))
    set_func('glPixelZoomxOES', t.void, (t.GLfixed, t.GLfixed))
    set_func('glPrioritizeTexturesxOES', t.void, (t.GLsizei, ct.POINTER(t.GLuint), ct.POINTER(t.GLfixed)))
    set_func('glRasterPos2xOES', t.void, (t.GLfixed, t.GLfixed))
    set_func('glRasterPos2xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glRasterPos3xOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glRasterPos3xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glRasterPos4xOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glRasterPos4xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glRectxOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glRectxvOES', t.void, (ct.POINTER(t.GLfixed), ct.POINTER(t.GLfixed)))
    set_func('glTexCoord1xOES', t.void, (t.GLfixed,))
    set_func('glTexCoord1xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glTexCoord2xOES', t.void, (t.GLfixed, t.GLfixed))
    set_func('glTexCoord2xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glTexCoord3xOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glTexCoord3xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glTexCoord4xOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glTexCoord4xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glTexGenxOES', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glTexGenxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glVertex2xOES', t.void, (t.GLfixed,))
    set_func('glVertex2xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glVertex3xOES', t.void, (t.GLfixed, t.GLfixed))
    set_func('glVertex3xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_func('glVertex4xOES', t.void, (t.GLfixed, t.GLfixed, t.GLfixed))
    set_func('glVertex4xvOES', t.void, (ct.POINTER(t.GLfixed),))
    set_enum("GL_FIXED_OES", 0x140C)


#### GL_OES_FRAMEBUFFER_OBJECT ####
def init_gl_oes_framebuffer_object():
    set_func('glIsRenderbufferOES', t.GLboolean, (t.GLuint,))
    set_func('glBindRenderbufferOES', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteRenderbuffersOES', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenRenderbuffersOES', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glRenderbufferStorageOES', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLsizei))
    set_func('glGetRenderbufferParameterivOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glIsFramebufferOES', t.GLboolean, (t.GLuint,))
    set_func('glBindFramebufferOES', t.void, (t.GLenum, t.GLuint))
    set_func('glDeleteFramebuffersOES', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenFramebuffersOES', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glCheckFramebufferStatusOES', t.GLenum, (t.GLenum,))
    set_func('glFramebufferRenderbufferOES', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint))
    set_func('glFramebufferTexture2DOES', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_func('glGetFramebufferAttachmentParameterivOES', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGenerateMipmapOES', t.void, (t.GLenum,))
    set_enum("GL_NONE_OES", 0)
    set_enum("GL_FRAMEBUFFER_OES", 0x8D40)
    set_enum("GL_RENDERBUFFER_OES", 0x8D41)
    set_enum("GL_RGBA4_OES", 0x8056)
    set_enum("GL_RGB5_A1_OES", 0x8057)
    set_enum("GL_RGB565_OES", 0x8D62)
    set_enum("GL_DEPTH_COMPONENT16_OES", 0x81A5)
    set_enum("GL_RENDERBUFFER_WIDTH_OES", 0x8D42)
    set_enum("GL_RENDERBUFFER_HEIGHT_OES", 0x8D43)
    set_enum("GL_RENDERBUFFER_INTERNAL_FORMAT_OES", 0x8D44)
    set_enum("GL_RENDERBUFFER_RED_SIZE_OES", 0x8D50)
    set_enum("GL_RENDERBUFFER_GREEN_SIZE_OES", 0x8D51)
    set_enum("GL_RENDERBUFFER_BLUE_SIZE_OES", 0x8D52)
    set_enum("GL_RENDERBUFFER_ALPHA_SIZE_OES", 0x8D53)
    set_enum("GL_RENDERBUFFER_DEPTH_SIZE_OES", 0x8D54)
    set_enum("GL_RENDERBUFFER_STENCIL_SIZE_OES", 0x8D55)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES", 0x8CD0)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES", 0x8CD1)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES", 0x8CD2)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES", 0x8CD3)
    set_enum("GL_COLOR_ATTACHMENT0_OES", 0x8CE0)
    set_enum("GL_DEPTH_ATTACHMENT_OES", 0x8D00)
    set_enum("GL_STENCIL_ATTACHMENT_OES", 0x8D20)
    set_enum("GL_FRAMEBUFFER_COMPLETE_OES", 0x8CD5)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES", 0x8CD6)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES", 0x8CD7)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES", 0x8CD9)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES", 0x8CDA)
    set_enum("GL_FRAMEBUFFER_UNSUPPORTED_OES", 0x8CDD)
    set_enum("GL_FRAMEBUFFER_BINDING_OES", 0x8CA6)
    set_enum("GL_RENDERBUFFER_BINDING_OES", 0x8CA7)
    set_enum("GL_MAX_RENDERBUFFER_SIZE_OES", 0x84E8)
    set_enum("GL_INVALID_FRAMEBUFFER_OPERATION_OES", 0x0506)


#### GL_OES_GEOMETRY_SHADER ####
def init_gl_oes_geometry_shader():
    set_func('glFramebufferTextureOES', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint))
    set_enum("GL_GEOMETRY_SHADER_OES", 0x8DD9)
    set_enum("GL_GEOMETRY_SHADER_BIT_OES", 0x00000004)
    set_enum("GL_GEOMETRY_LINKED_VERTICES_OUT_OES", 0x8916)
    set_enum("GL_GEOMETRY_LINKED_INPUT_TYPE_OES", 0x8917)
    set_enum("GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES", 0x8918)
    set_enum("GL_GEOMETRY_SHADER_INVOCATIONS_OES", 0x887F)
    set_enum("GL_LAYER_PROVOKING_VERTEX_OES", 0x825E)
    set_enum("GL_LINES_ADJACENCY_OES", 0x000A)
    set_enum("GL_LINE_STRIP_ADJACENCY_OES", 0x000B)
    set_enum("GL_TRIANGLES_ADJACENCY_OES", 0x000C)
    set_enum("GL_TRIANGLE_STRIP_ADJACENCY_OES", 0x000D)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES", 0x8DDF)
    set_enum("GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES", 0x8A2C)
    set_enum("GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES", 0x8A32)
    set_enum("GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES", 0x9123)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES", 0x9124)
    set_enum("GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES", 0x8DE0)
    set_enum("GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES", 0x8DE1)
    set_enum("GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES", 0x8E5A)
    set_enum("GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES", 0x8C29)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES", 0x92CF)
    set_enum("GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES", 0x92D5)
    set_enum("GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES", 0x90CD)
    set_enum("GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES", 0x90D7)
    set_enum("GL_FIRST_VERTEX_CONVENTION_OES", 0x8E4D)
    set_enum("GL_LAST_VERTEX_CONVENTION_OES", 0x8E4E)
    set_enum("GL_UNDEFINED_VERTEX_OES", 0x8260)
    set_enum("GL_PRIMITIVES_GENERATED_OES", 0x8C87)
    set_enum("GL_FRAMEBUFFER_DEFAULT_LAYERS_OES", 0x9312)
    set_enum("GL_MAX_FRAMEBUFFER_LAYERS_OES", 0x9317)
    set_enum("GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES", 0x8DA8)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES", 0x8DA7)
    set_enum("GL_REFERENCED_BY_GEOMETRY_SHADER_OES", 0x9309)


#### GL_OES_GET_PROGRAM_BINARY ####
def init_gl_oes_get_program_binary():
    set_func('glGetProgramBinaryOES', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLenum), ct.POINTER(t.void)))
    set_func('glProgramBinaryOES', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.void), t.GLint))
    set_enum("GL_PROGRAM_BINARY_LENGTH_OES", 0x8741)
    set_enum("GL_NUM_PROGRAM_BINARY_FORMATS_OES", 0x87FE)
    set_enum("GL_PROGRAM_BINARY_FORMATS_OES", 0x87FF)


#### GL_OES_MAPBUFFER ####
def init_gl_oes_mapbuffer():
    set_func('glMapBufferOES', ct.POINTER(t.void), (t.GLenum, t.GLenum))
    set_func('glUnmapBufferOES', t.GLboolean, (t.GLenum,))
    set_func('glGetBufferPointervOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_WRITE_ONLY_OES", 0x88B9)
    set_enum("GL_BUFFER_ACCESS_OES", 0x88BB)
    set_enum("GL_BUFFER_MAPPED_OES", 0x88BC)
    set_enum("GL_BUFFER_MAP_POINTER_OES", 0x88BD)


#### GL_OES_MATRIX_GET ####
def init_gl_oes_matrix_get():
    set_enum("GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES", 0x898D)
    set_enum("GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES", 0x898E)
    set_enum("GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES", 0x898F)


#### GL_OES_MATRIX_PALETTE ####
def init_gl_oes_matrix_palette():
    set_func('glCurrentPaletteMatrixOES', t.void, (t.GLuint,))
    set_func('glLoadPaletteFromModelViewMatrixOES', t.void, ())
    set_func('glMatrixIndexPointerOES', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glWeightPointerOES', t.void, (t.GLint, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_MAX_VERTEX_UNITS_OES", 0x86A4)
    set_enum("GL_MAX_PALETTE_MATRICES_OES", 0x8842)
    set_enum("GL_MATRIX_PALETTE_OES", 0x8840)
    set_enum("GL_MATRIX_INDEX_ARRAY_OES", 0x8844)
    set_enum("GL_WEIGHT_ARRAY_OES", 0x86AD)
    set_enum("GL_CURRENT_PALETTE_MATRIX_OES", 0x8843)
    set_enum("GL_MATRIX_INDEX_ARRAY_SIZE_OES", 0x8846)
    set_enum("GL_MATRIX_INDEX_ARRAY_TYPE_OES", 0x8847)
    set_enum("GL_MATRIX_INDEX_ARRAY_STRIDE_OES", 0x8848)
    set_enum("GL_MATRIX_INDEX_ARRAY_POINTER_OES", 0x8849)
    set_enum("GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES", 0x8B9E)
    set_enum("GL_WEIGHT_ARRAY_SIZE_OES", 0x86AB)
    set_enum("GL_WEIGHT_ARRAY_TYPE_OES", 0x86A9)
    set_enum("GL_WEIGHT_ARRAY_STRIDE_OES", 0x86AA)
    set_enum("GL_WEIGHT_ARRAY_POINTER_OES", 0x86AC)
    set_enum("GL_WEIGHT_ARRAY_BUFFER_BINDING_OES", 0x889E)


#### GL_OES_PACKED_DEPTH_STENCIL ####
def init_gl_oes_packed_depth_stencil():
    set_enum("GL_DEPTH_STENCIL_OES", 0x84F9)
    set_enum("GL_UNSIGNED_INT_24_8_OES", 0x84FA)
    set_enum("GL_DEPTH24_STENCIL8_OES", 0x88F0)


#### GL_OES_POINT_SIZE_ARRAY ####
def init_gl_oes_point_size_array():
    set_func('glPointSizePointerOES', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_enum("GL_POINT_SIZE_ARRAY_OES", 0x8B9C)
    set_enum("GL_POINT_SIZE_ARRAY_TYPE_OES", 0x898A)
    set_enum("GL_POINT_SIZE_ARRAY_STRIDE_OES", 0x898B)
    set_enum("GL_POINT_SIZE_ARRAY_POINTER_OES", 0x898C)
    set_enum("GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES", 0x8B9F)


#### GL_OES_POINT_SPRITE ####
def init_gl_oes_point_sprite():
    set_enum("GL_POINT_SPRITE_OES", 0x8861)
    set_enum("GL_COORD_REPLACE_OES", 0x8862)


#### GL_OES_PRIMITIVE_BOUNDING_BOX ####
def init_gl_oes_primitive_bounding_box():
    set_func('glPrimitiveBoundingBoxOES', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_enum("GL_PRIMITIVE_BOUNDING_BOX_OES", 0x92BE)


#### GL_OES_QUERY_MATRIX ####
def init_gl_oes_query_matrix():
    set_func('glQueryMatrixxOES', t.GLbitfield, (ct.POINTER(t.GLfixed), ct.POINTER(t.GLint)))


#### GL_OES_READ_FORMAT ####
def init_gl_oes_read_format():
    set_enum("GL_IMPLEMENTATION_COLOR_READ_TYPE_OES", 0x8B9A)
    set_enum("GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES", 0x8B9B)


#### GL_OES_REQUIRED_INTERNALFORMAT ####
def init_gl_oes_required_internalformat():
    set_enum("GL_ALPHA8_OES", 0x803C)
    set_enum("GL_DEPTH_COMPONENT16_OES", 0x81A5)
    set_enum("GL_DEPTH_COMPONENT24_OES", 0x81A6)
    set_enum("GL_DEPTH24_STENCIL8_OES", 0x88F0)
    set_enum("GL_DEPTH_COMPONENT32_OES", 0x81A7)
    set_enum("GL_LUMINANCE4_ALPHA4_OES", 0x8043)
    set_enum("GL_LUMINANCE8_ALPHA8_OES", 0x8045)
    set_enum("GL_LUMINANCE8_OES", 0x8040)
    set_enum("GL_RGBA4_OES", 0x8056)
    set_enum("GL_RGB5_A1_OES", 0x8057)
    set_enum("GL_RGB565_OES", 0x8D62)
    set_enum("GL_RGB8_OES", 0x8051)
    set_enum("GL_RGBA8_OES", 0x8058)
    set_enum("GL_RGB10_EXT", 0x8052)
    set_enum("GL_RGB10_A2_EXT", 0x8059)


#### GL_OES_RGB8_RGBA8 ####
def init_gl_oes_rgb8_rgba8():
    set_enum("GL_RGB8_OES", 0x8051)
    set_enum("GL_RGBA8_OES", 0x8058)


#### GL_OES_SAMPLE_SHADING ####
def init_gl_oes_sample_shading():
    set_func('glMinSampleShadingOES', t.void, (t.GLfloat,))
    set_enum("GL_SAMPLE_SHADING_OES", 0x8C36)
    set_enum("GL_MIN_SAMPLE_SHADING_VALUE_OES", 0x8C37)


#### GL_OES_SHADER_MULTISAMPLE_INTERPOLATION ####
def init_gl_oes_shader_multisample_interpolation():
    set_enum("GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES", 0x8E5B)
    set_enum("GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES", 0x8E5C)
    set_enum("GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES", 0x8E5D)


#### GL_OES_SINGLE_PRECISION ####
def init_gl_oes_single_precision():
    set_func('glClearDepthfOES', t.void, (t.GLclampf,))
    set_func('glClipPlanefOES', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glDepthRangefOES', t.void, (t.GLclampf, t.GLclampf))
    set_func('glFrustumfOES', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glGetClipPlanefOES', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glOrthofOES', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))


#### GL_OES_STANDARD_DERIVATIVES ####
def init_gl_oes_standard_derivatives():
    set_enum("GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES", 0x8B8B)


#### GL_OES_STENCIL1 ####
def init_gl_oes_stencil1():
    set_enum("GL_STENCIL_INDEX1_OES", 0x8D46)


#### GL_OES_STENCIL4 ####
def init_gl_oes_stencil4():
    set_enum("GL_STENCIL_INDEX4_OES", 0x8D47)


#### GL_OES_STENCIL8 ####
def init_gl_oes_stencil8():
    set_enum("GL_STENCIL_INDEX8_OES", 0x8D48)


#### GL_OES_STENCIL_WRAP ####
def init_gl_oes_stencil_wrap():
    set_enum("GL_INCR_WRAP_OES", 0x8507)
    set_enum("GL_DECR_WRAP_OES", 0x8508)


#### GL_OES_SURFACELESS_CONTEXT ####
def init_gl_oes_surfaceless_context():
    set_enum("GL_FRAMEBUFFER_UNDEFINED_OES", 0x8219)


#### GL_OES_TESSELLATION_SHADER ####
def init_gl_oes_tessellation_shader():
    set_func('glPatchParameteriOES', t.void, (t.GLenum, t.GLint))
    set_enum("GL_PATCHES_OES", 0x000E)
    set_enum("GL_PATCH_VERTICES_OES", 0x8E72)
    set_enum("GL_TESS_CONTROL_OUTPUT_VERTICES_OES", 0x8E75)
    set_enum("GL_TESS_GEN_MODE_OES", 0x8E76)
    set_enum("GL_TESS_GEN_SPACING_OES", 0x8E77)
    set_enum("GL_TESS_GEN_VERTEX_ORDER_OES", 0x8E78)
    set_enum("GL_TESS_GEN_POINT_MODE_OES", 0x8E79)
    set_enum("GL_TRIANGLES", 0x0004)
    set_enum("GL_ISOLINES_OES", 0x8E7A)
    set_enum("GL_QUADS_OES", 0x0007)
    set_enum("GL_EQUAL", 0x0202)
    set_enum("GL_FRACTIONAL_ODD_OES", 0x8E7B)
    set_enum("GL_FRACTIONAL_EVEN_OES", 0x8E7C)
    set_enum("GL_CCW", 0x0901)
    set_enum("GL_CW", 0x0900)
    set_enum("GL_MAX_PATCH_VERTICES_OES", 0x8E7D)
    set_enum("GL_MAX_TESS_GEN_LEVEL_OES", 0x8E7E)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES", 0x8E7F)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES", 0x8E80)
    set_enum("GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES", 0x8E81)
    set_enum("GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES", 0x8E82)
    set_enum("GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES", 0x8E83)
    set_enum("GL_MAX_TESS_PATCH_COMPONENTS_OES", 0x8E84)
    set_enum("GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES", 0x8E85)
    set_enum("GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES", 0x8E86)
    set_enum("GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES", 0x8E89)
    set_enum("GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES", 0x8E8A)
    set_enum("GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES", 0x886C)
    set_enum("GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES", 0x886D)
    set_enum("GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES", 0x8E1E)
    set_enum("GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES", 0x8E1F)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES", 0x92CD)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES", 0x92CE)
    set_enum("GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES", 0x92D3)
    set_enum("GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES", 0x92D4)
    set_enum("GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES", 0x90CB)
    set_enum("GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES", 0x90CC)
    set_enum("GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES", 0x90D8)
    set_enum("GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES", 0x90D9)
    set_enum("GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES", 0x8221)
    set_enum("GL_IS_PER_PATCH_OES", 0x92E7)
    set_enum("GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES", 0x9307)
    set_enum("GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES", 0x9308)
    set_enum("GL_TESS_CONTROL_SHADER_OES", 0x8E88)
    set_enum("GL_TESS_EVALUATION_SHADER_OES", 0x8E87)
    set_enum("GL_TESS_CONTROL_SHADER_BIT_OES", 0x00000008)
    set_enum("GL_TESS_EVALUATION_SHADER_BIT_OES", 0x00000010)


#### GL_OES_TEXTURE_3D ####
def init_gl_oes_texture_3d():
    set_func('glTexImage3DOES', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexSubImage3DOES', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glCopyTexSubImage3DOES', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei))
    set_func('glCompressedTexImage3DOES', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLsizei, ct.POINTER(t.void)))
    set_func('glCompressedTexSubImage3DOES', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLsizei, ct.POINTER(t.void)))
    set_func('glFramebufferTexture3DOES', t.void, (t.GLenum, t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint))
    set_enum("GL_TEXTURE_WRAP_R_OES", 0x8072)
    set_enum("GL_TEXTURE_3D_OES", 0x806F)
    set_enum("GL_TEXTURE_BINDING_3D_OES", 0x806A)
    set_enum("GL_MAX_3D_TEXTURE_SIZE_OES", 0x8073)
    set_enum("GL_SAMPLER_3D_OES", 0x8B5F)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES", 0x8CD4)


#### GL_OES_TEXTURE_BORDER_CLAMP ####
def init_gl_oes_texture_border_clamp():
    set_func('glTexParameterIivOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexParameterIuivOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetTexParameterIivOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexParameterIuivOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glSamplerParameterIivOES', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glSamplerParameterIuivOES', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_func('glGetSamplerParameterIivOES', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetSamplerParameterIuivOES', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLuint)))
    set_enum("GL_TEXTURE_BORDER_COLOR_OES", 0x1004)
    set_enum("GL_CLAMP_TO_BORDER_OES", 0x812D)


#### GL_OES_TEXTURE_BUFFER ####
def init_gl_oes_texture_buffer():
    set_func('glTexBufferOES', t.void, (t.GLenum, t.GLenum, t.GLuint))
    set_func('glTexBufferRangeOES', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLintptr, t.GLsizeiptr))
    set_enum("GL_TEXTURE_BUFFER_OES", 0x8C2A)
    set_enum("GL_TEXTURE_BUFFER_BINDING_OES", 0x8C2A)
    set_enum("GL_MAX_TEXTURE_BUFFER_SIZE_OES", 0x8C2B)
    set_enum("GL_TEXTURE_BINDING_BUFFER_OES", 0x8C2C)
    set_enum("GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES", 0x8C2D)
    set_enum("GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES", 0x919F)
    set_enum("GL_SAMPLER_BUFFER_OES", 0x8DC2)
    set_enum("GL_INT_SAMPLER_BUFFER_OES", 0x8DD0)
    set_enum("GL_UNSIGNED_INT_SAMPLER_BUFFER_OES", 0x8DD8)
    set_enum("GL_IMAGE_BUFFER_OES", 0x9051)
    set_enum("GL_INT_IMAGE_BUFFER_OES", 0x905C)
    set_enum("GL_UNSIGNED_INT_IMAGE_BUFFER_OES", 0x9067)
    set_enum("GL_TEXTURE_BUFFER_OFFSET_OES", 0x919D)
    set_enum("GL_TEXTURE_BUFFER_SIZE_OES", 0x919E)


#### GL_OES_TEXTURE_COMPRESSION_ASTC ####
def init_gl_oes_texture_compression_astc():
    set_enum("GL_COMPRESSED_RGBA_ASTC_4x4_KHR", 0x93B0)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x4_KHR", 0x93B1)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x5_KHR", 0x93B2)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x5_KHR", 0x93B3)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x6_KHR", 0x93B4)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x5_KHR", 0x93B5)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x6_KHR", 0x93B6)
    set_enum("GL_COMPRESSED_RGBA_ASTC_8x8_KHR", 0x93B7)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x5_KHR", 0x93B8)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x6_KHR", 0x93B9)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x8_KHR", 0x93BA)
    set_enum("GL_COMPRESSED_RGBA_ASTC_10x10_KHR", 0x93BB)
    set_enum("GL_COMPRESSED_RGBA_ASTC_12x10_KHR", 0x93BC)
    set_enum("GL_COMPRESSED_RGBA_ASTC_12x12_KHR", 0x93BD)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR", 0x93D0)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR", 0x93D1)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR", 0x93D2)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR", 0x93D3)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR", 0x93D4)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR", 0x93D5)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR", 0x93D6)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR", 0x93D7)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR", 0x93D8)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR", 0x93D9)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR", 0x93DA)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR", 0x93DB)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR", 0x93DC)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR", 0x93DD)
    set_enum("GL_COMPRESSED_RGBA_ASTC_3x3x3_OES", 0x93C0)
    set_enum("GL_COMPRESSED_RGBA_ASTC_4x3x3_OES", 0x93C1)
    set_enum("GL_COMPRESSED_RGBA_ASTC_4x4x3_OES", 0x93C2)
    set_enum("GL_COMPRESSED_RGBA_ASTC_4x4x4_OES", 0x93C3)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x4x4_OES", 0x93C4)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x5x4_OES", 0x93C5)
    set_enum("GL_COMPRESSED_RGBA_ASTC_5x5x5_OES", 0x93C6)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x5x5_OES", 0x93C7)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x6x5_OES", 0x93C8)
    set_enum("GL_COMPRESSED_RGBA_ASTC_6x6x6_OES", 0x93C9)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES", 0x93E0)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES", 0x93E1)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES", 0x93E2)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES", 0x93E3)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES", 0x93E4)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES", 0x93E5)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES", 0x93E6)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES", 0x93E7)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES", 0x93E8)
    set_enum("GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES", 0x93E9)


#### GL_OES_TEXTURE_CUBE_MAP ####
def init_gl_oes_texture_cube_map():
    set_func('glTexGenfOES', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glTexGenfvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTexGeniOES', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glTexGenivOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glTexGenxOES', t.void, (t.GLenum, t.GLenum, t.GLfixed))
    set_func('glTexGenxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_func('glGetTexGenfvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetTexGenivOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetTexGenxvOES', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfixed)))
    set_enum("GL_NORMAL_MAP_OES", 0x8511)
    set_enum("GL_REFLECTION_MAP_OES", 0x8512)
    set_enum("GL_TEXTURE_CUBE_MAP_OES", 0x8513)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_OES", 0x8514)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES", 0x8515)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES", 0x8516)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES", 0x8517)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES", 0x8518)
    set_enum("GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES", 0x8519)
    set_enum("GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES", 0x851A)
    set_enum("GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES", 0x851C)
    set_enum("GL_TEXTURE_GEN_MODE_OES", 0x2500)
    set_enum("GL_TEXTURE_GEN_STR_OES", 0x8D60)


#### GL_OES_TEXTURE_CUBE_MAP_ARRAY ####
def init_gl_oes_texture_cube_map_array():
    set_enum("GL_TEXTURE_CUBE_MAP_ARRAY_OES", 0x9009)
    set_enum("GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES", 0x900A)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY_OES", 0x900C)
    set_enum("GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES", 0x900D)
    set_enum("GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES", 0x900E)
    set_enum("GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES", 0x900F)
    set_enum("GL_IMAGE_CUBE_MAP_ARRAY_OES", 0x9054)
    set_enum("GL_INT_IMAGE_CUBE_MAP_ARRAY_OES", 0x905F)
    set_enum("GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES", 0x906A)


#### GL_OES_TEXTURE_FLOAT ####
def init_gl_oes_texture_float():
    set_enum("GL_FLOAT", 0x1406)


#### GL_OES_TEXTURE_HALF_FLOAT ####
def init_gl_oes_texture_half_float():
    set_enum("GL_HALF_FLOAT_OES", 0x8D61)


#### GL_OES_TEXTURE_MIRRORED_REPEAT ####
def init_gl_oes_texture_mirrored_repeat():
    set_enum("GL_MIRRORED_REPEAT_OES", 0x8370)


#### GL_OES_TEXTURE_STENCIL8 ####
def init_gl_oes_texture_stencil8():
    set_enum("GL_STENCIL_INDEX_OES", 0x1901)
    set_enum("GL_STENCIL_INDEX8_OES", 0x8D48)


#### GL_OES_TEXTURE_STORAGE_MULTISAMPLE_2D_ARRAY ####
def init_gl_oes_texture_storage_multisample_2d_array():
    set_func('glTexStorage3DMultisampleOES', t.void, (t.GLenum, t.GLsizei, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLboolean))
    set_enum("GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES", 0x9102)
    set_enum("GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES", 0x9105)
    set_enum("GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES", 0x910B)
    set_enum("GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES", 0x910C)
    set_enum("GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES", 0x910D)


#### GL_OES_TEXTURE_VIEW ####
def init_gl_oes_texture_view():
    set_func('glTextureViewOES', t.void, (t.GLuint, t.GLenum, t.GLuint, t.GLenum, t.GLuint, t.GLuint, t.GLuint, t.GLuint))
    set_enum("GL_TEXTURE_VIEW_MIN_LEVEL_OES", 0x82DB)
    set_enum("GL_TEXTURE_VIEW_NUM_LEVELS_OES", 0x82DC)
    set_enum("GL_TEXTURE_VIEW_MIN_LAYER_OES", 0x82DD)
    set_enum("GL_TEXTURE_VIEW_NUM_LAYERS_OES", 0x82DE)
    set_enum("GL_TEXTURE_IMMUTABLE_LEVELS", 0x82DF)


#### GL_OES_VERTEX_ARRAY_OBJECT ####
def init_gl_oes_vertex_array_object():
    set_func('glBindVertexArrayOES', t.void, (t.GLuint,))
    set_func('glDeleteVertexArraysOES', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGenVertexArraysOES', t.void, (t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glIsVertexArrayOES', t.GLboolean, (t.GLuint,))
    set_enum("GL_VERTEX_ARRAY_BINDING_OES", 0x85B5)


#### GL_OES_VERTEX_HALF_FLOAT ####
def init_gl_oes_vertex_half_float():
    set_enum("GL_HALF_FLOAT_OES", 0x8D61)


#### GL_OES_VERTEX_TYPE_10_10_10_2 ####
def init_gl_oes_vertex_type_10_10_10_2():
    set_enum("GL_UNSIGNED_INT_10_10_10_2_OES", 0x8DF6)
    set_enum("GL_INT_10_10_10_2_OES", 0x8DF7)


#### GL_OML_INTERLACE ####
def init_gl_oml_interlace():
    set_enum("GL_INTERLACE_OML", 0x8980)
    set_enum("GL_INTERLACE_READ_OML", 0x8981)


#### GL_OML_RESAMPLE ####
def init_gl_oml_resample():
    set_enum("GL_PACK_RESAMPLE_OML", 0x8984)
    set_enum("GL_UNPACK_RESAMPLE_OML", 0x8985)
    set_enum("GL_RESAMPLE_REPLICATE_OML", 0x8986)
    set_enum("GL_RESAMPLE_ZERO_FILL_OML", 0x8987)
    set_enum("GL_RESAMPLE_AVERAGE_OML", 0x8988)
    set_enum("GL_RESAMPLE_DECIMATE_OML", 0x8989)


#### GL_OML_SUBSAMPLE ####
def init_gl_oml_subsample():
    set_enum("GL_FORMAT_SUBSAMPLE_24_24_OML", 0x8982)
    set_enum("GL_FORMAT_SUBSAMPLE_244_244_OML", 0x8983)


#### GL_OVR_MULTIVIEW ####
def init_gl_ovr_multiview():
    set_func('glFramebufferTextureMultiviewOVR', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLint, t.GLsizei))
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR", 0x9630)
    set_enum("GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR", 0x9632)
    set_enum("GL_MAX_VIEWS_OVR", 0x9631)


#### GL_OVR_MULTIVIEW_MULTISAMPLED_RENDER_TO_TEXTURE ####
def init_gl_ovr_multiview_multisampled_render_to_texture():
    set_func('glFramebufferTextureMultisampleMultiviewOVR', t.void, (t.GLenum, t.GLenum, t.GLuint, t.GLint, t.GLsizei, t.GLint, t.GLsizei))


#### GL_PGI_MISC_HINTS ####
def init_gl_pgi_misc_hints():
    set_func('glHintPGI', t.void, (t.GLenum, t.GLint))
    set_enum("GL_PREFER_DOUBLEBUFFER_HINT_PGI", 0x1A1F8)
    set_enum("GL_CONSERVE_MEMORY_HINT_PGI", 0x1A1FD)
    set_enum("GL_RECLAIM_MEMORY_HINT_PGI", 0x1A1FE)
    set_enum("GL_NATIVE_GRAPHICS_HANDLE_PGI", 0x1A202)
    set_enum("GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI", 0x1A203)
    set_enum("GL_NATIVE_GRAPHICS_END_HINT_PGI", 0x1A204)
    set_enum("GL_ALWAYS_FAST_HINT_PGI", 0x1A20C)
    set_enum("GL_ALWAYS_SOFT_HINT_PGI", 0x1A20D)
    set_enum("GL_ALLOW_DRAW_OBJ_HINT_PGI", 0x1A20E)
    set_enum("GL_ALLOW_DRAW_WIN_HINT_PGI", 0x1A20F)
    set_enum("GL_ALLOW_DRAW_FRG_HINT_PGI", 0x1A210)
    set_enum("GL_ALLOW_DRAW_MEM_HINT_PGI", 0x1A211)
    set_enum("GL_STRICT_DEPTHFUNC_HINT_PGI", 0x1A216)
    set_enum("GL_STRICT_LIGHTING_HINT_PGI", 0x1A217)
    set_enum("GL_STRICT_SCISSOR_HINT_PGI", 0x1A218)
    set_enum("GL_FULL_STIPPLE_HINT_PGI", 0x1A219)
    set_enum("GL_CLIP_NEAR_HINT_PGI", 0x1A220)
    set_enum("GL_CLIP_FAR_HINT_PGI", 0x1A221)
    set_enum("GL_WIDE_LINE_HINT_PGI", 0x1A222)
    set_enum("GL_BACK_NORMALS_HINT_PGI", 0x1A223)


#### GL_PGI_VERTEX_HINTS ####
def init_gl_pgi_vertex_hints():
    set_enum("GL_VERTEX_DATA_HINT_PGI", 0x1A22A)
    set_enum("GL_VERTEX_CONSISTENT_HINT_PGI", 0x1A22B)
    set_enum("GL_MATERIAL_SIDE_HINT_PGI", 0x1A22C)
    set_enum("GL_MAX_VERTEX_HINT_PGI", 0x1A22D)
    set_enum("GL_COLOR3_BIT_PGI", 0x00010000)
    set_enum("GL_COLOR4_BIT_PGI", 0x00020000)
    set_enum("GL_EDGEFLAG_BIT_PGI", 0x00040000)
    set_enum("GL_INDEX_BIT_PGI", 0x00080000)
    set_enum("GL_MAT_AMBIENT_BIT_PGI", 0x00100000)
    set_enum("GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI", 0x00200000)
    set_enum("GL_MAT_DIFFUSE_BIT_PGI", 0x00400000)
    set_enum("GL_MAT_EMISSION_BIT_PGI", 0x00800000)
    set_enum("GL_MAT_COLOR_INDEXES_BIT_PGI", 0x01000000)
    set_enum("GL_MAT_SHININESS_BIT_PGI", 0x02000000)
    set_enum("GL_MAT_SPECULAR_BIT_PGI", 0x04000000)
    set_enum("GL_NORMAL_BIT_PGI", 0x08000000)
    set_enum("GL_TEXCOORD1_BIT_PGI", 0x10000000)
    set_enum("GL_TEXCOORD2_BIT_PGI", 0x20000000)
    set_enum("GL_TEXCOORD3_BIT_PGI", 0x40000000)
    set_enum("GL_TEXCOORD4_BIT_PGI", 0x80000000)
    set_enum("GL_VERTEX23_BIT_PGI", 0x00000004)
    set_enum("GL_VERTEX4_BIT_PGI", 0x00000008)


#### GL_QCOM_ALPHA_TEST ####
def init_gl_qcom_alpha_test():
    set_func('glAlphaFuncQCOM', t.void, (t.GLenum, t.GLclampf))
    set_enum("GL_ALPHA_TEST_QCOM", 0x0BC0)
    set_enum("GL_ALPHA_TEST_FUNC_QCOM", 0x0BC1)
    set_enum("GL_ALPHA_TEST_REF_QCOM", 0x0BC2)


#### GL_QCOM_BINNING_CONTROL ####
def init_gl_qcom_binning_control():
    set_enum("GL_BINNING_CONTROL_HINT_QCOM", 0x8FB0)
    set_enum("GL_CPU_OPTIMIZED_QCOM", 0x8FB1)
    set_enum("GL_GPU_OPTIMIZED_QCOM", 0x8FB2)
    set_enum("GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM", 0x8FB3)


#### GL_QCOM_DRIVER_CONTROL ####
def init_gl_qcom_driver_control():
    set_func('glGetDriverControlsQCOM', t.void, (ct.POINTER(t.GLint), t.GLsizei, ct.POINTER(t.GLuint)))
    set_func('glGetDriverControlStringQCOM', t.void, (t.GLuint, t.GLsizei, ct.POINTER(t.GLsizei), ct.POINTER(t.GLchar)))
    set_func('glEnableDriverControlQCOM', t.void, (t.GLuint,))
    set_func('glDisableDriverControlQCOM', t.void, (t.GLuint,))


#### GL_QCOM_EXTENDED_GET ####
def init_gl_qcom_extended_get():
    set_func('glExtGetTexturesQCOM', t.void, (ct.POINTER(t.GLuint), t.GLint, ct.POINTER(t.GLint)))
    set_func('glExtGetBuffersQCOM', t.void, (ct.POINTER(t.GLuint), t.GLint, ct.POINTER(t.GLint)))
    set_func('glExtGetRenderbuffersQCOM', t.void, (ct.POINTER(t.GLuint), t.GLint, ct.POINTER(t.GLint)))
    set_func('glExtGetFramebuffersQCOM', t.void, (ct.POINTER(t.GLuint), t.GLint, ct.POINTER(t.GLint)))
    set_func('glExtGetTexLevelParameterivQCOM', t.void, (t.GLuint, t.GLenum, t.GLint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glExtTexObjectStateOverrideiQCOM', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glExtGetTexSubImageQCOM', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glExtGetBufferPointervQCOM', t.void, (t.GLenum, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_TEXTURE_WIDTH_QCOM", 0x8BD2)
    set_enum("GL_TEXTURE_HEIGHT_QCOM", 0x8BD3)
    set_enum("GL_TEXTURE_DEPTH_QCOM", 0x8BD4)
    set_enum("GL_TEXTURE_INTERNAL_FORMAT_QCOM", 0x8BD5)
    set_enum("GL_TEXTURE_FORMAT_QCOM", 0x8BD6)
    set_enum("GL_TEXTURE_TYPE_QCOM", 0x8BD7)
    set_enum("GL_TEXTURE_IMAGE_VALID_QCOM", 0x8BD8)
    set_enum("GL_TEXTURE_NUM_LEVELS_QCOM", 0x8BD9)
    set_enum("GL_TEXTURE_TARGET_QCOM", 0x8BDA)
    set_enum("GL_TEXTURE_OBJECT_VALID_QCOM", 0x8BDB)
    set_enum("GL_STATE_RESTORE", 0x8BDC)


#### GL_QCOM_EXTENDED_GET2 ####
def init_gl_qcom_extended_get2():
    set_func('glExtGetShadersQCOM', t.void, (ct.POINTER(t.GLuint), t.GLint, ct.POINTER(t.GLint)))
    set_func('glExtGetProgramsQCOM', t.void, (ct.POINTER(t.GLuint), t.GLint, ct.POINTER(t.GLint)))
    set_func('glExtIsProgramBinaryQCOM', t.GLboolean, (t.GLuint,))
    set_func('glExtGetProgramBinarySourceQCOM', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLchar), ct.POINTER(t.GLint)))


#### GL_QCOM_PERFMON_GLOBAL_MODE ####
def init_gl_qcom_perfmon_global_mode():
    set_enum("GL_PERFMON_GLOBAL_MODE_QCOM", 0x8FA0)


#### GL_QCOM_TILED_RENDERING ####
def init_gl_qcom_tiled_rendering():
    set_func('glStartTilingQCOM', t.void, (t.GLuint, t.GLuint, t.GLuint, t.GLuint, t.GLbitfield))
    set_func('glEndTilingQCOM', t.void, (t.GLbitfield,))
    set_enum("GL_COLOR_BUFFER_BIT0_QCOM", 0x00000001)
    set_enum("GL_COLOR_BUFFER_BIT1_QCOM", 0x00000002)
    set_enum("GL_COLOR_BUFFER_BIT2_QCOM", 0x00000004)
    set_enum("GL_COLOR_BUFFER_BIT3_QCOM", 0x00000008)
    set_enum("GL_COLOR_BUFFER_BIT4_QCOM", 0x00000010)
    set_enum("GL_COLOR_BUFFER_BIT5_QCOM", 0x00000020)
    set_enum("GL_COLOR_BUFFER_BIT6_QCOM", 0x00000040)
    set_enum("GL_COLOR_BUFFER_BIT7_QCOM", 0x00000080)
    set_enum("GL_DEPTH_BUFFER_BIT0_QCOM", 0x00000100)
    set_enum("GL_DEPTH_BUFFER_BIT1_QCOM", 0x00000200)
    set_enum("GL_DEPTH_BUFFER_BIT2_QCOM", 0x00000400)
    set_enum("GL_DEPTH_BUFFER_BIT3_QCOM", 0x00000800)
    set_enum("GL_DEPTH_BUFFER_BIT4_QCOM", 0x00001000)
    set_enum("GL_DEPTH_BUFFER_BIT5_QCOM", 0x00002000)
    set_enum("GL_DEPTH_BUFFER_BIT6_QCOM", 0x00004000)
    set_enum("GL_DEPTH_BUFFER_BIT7_QCOM", 0x00008000)
    set_enum("GL_STENCIL_BUFFER_BIT0_QCOM", 0x00010000)
    set_enum("GL_STENCIL_BUFFER_BIT1_QCOM", 0x00020000)
    set_enum("GL_STENCIL_BUFFER_BIT2_QCOM", 0x00040000)
    set_enum("GL_STENCIL_BUFFER_BIT3_QCOM", 0x00080000)
    set_enum("GL_STENCIL_BUFFER_BIT4_QCOM", 0x00100000)
    set_enum("GL_STENCIL_BUFFER_BIT5_QCOM", 0x00200000)
    set_enum("GL_STENCIL_BUFFER_BIT6_QCOM", 0x00400000)
    set_enum("GL_STENCIL_BUFFER_BIT7_QCOM", 0x00800000)
    set_enum("GL_MULTISAMPLE_BUFFER_BIT0_QCOM", 0x01000000)
    set_enum("GL_MULTISAMPLE_BUFFER_BIT1_QCOM", 0x02000000)
    set_enum("GL_MULTISAMPLE_BUFFER_BIT2_QCOM", 0x04000000)
    set_enum("GL_MULTISAMPLE_BUFFER_BIT3_QCOM", 0x08000000)
    set_enum("GL_MULTISAMPLE_BUFFER_BIT4_QCOM", 0x10000000)
    set_enum("GL_MULTISAMPLE_BUFFER_BIT5_QCOM", 0x20000000)
    set_enum("GL_MULTISAMPLE_BUFFER_BIT6_QCOM", 0x40000000)
    set_enum("GL_MULTISAMPLE_BUFFER_BIT7_QCOM", 0x80000000)


#### GL_QCOM_WRITEONLY_RENDERING ####
def init_gl_qcom_writeonly_rendering():
    set_enum("GL_WRITEONLY_RENDERING_QCOM", 0x8823)


#### GL_REND_SCREEN_COORDINATES ####
def init_gl_rend_screen_coordinates():
    set_enum("GL_SCREEN_COORDINATES_REND", 0x8490)
    set_enum("GL_INVERTED_SCREEN_W_REND", 0x8491)


#### GL_S3_S3TC ####
def init_gl_s3_s3tc():
    set_enum("GL_RGB_S3TC", 0x83A0)
    set_enum("GL_RGB4_S3TC", 0x83A1)
    set_enum("GL_RGBA_S3TC", 0x83A2)
    set_enum("GL_RGBA4_S3TC", 0x83A3)
    set_enum("GL_RGBA_DXT5_S3TC", 0x83A4)
    set_enum("GL_RGBA4_DXT5_S3TC", 0x83A5)


#### GL_SGIS_DETAIL_TEXTURE ####
def init_gl_sgis_detail_texture():
    set_func('glDetailTexFuncSGIS', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetDetailTexFuncSGIS', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_DETAIL_TEXTURE_2D_SGIS", 0x8095)
    set_enum("GL_DETAIL_TEXTURE_2D_BINDING_SGIS", 0x8096)
    set_enum("GL_LINEAR_DETAIL_SGIS", 0x8097)
    set_enum("GL_LINEAR_DETAIL_ALPHA_SGIS", 0x8098)
    set_enum("GL_LINEAR_DETAIL_COLOR_SGIS", 0x8099)
    set_enum("GL_DETAIL_TEXTURE_LEVEL_SGIS", 0x809A)
    set_enum("GL_DETAIL_TEXTURE_MODE_SGIS", 0x809B)
    set_enum("GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS", 0x809C)


#### GL_SGIS_FOG_FUNCTION ####
def init_gl_sgis_fog_function():
    set_func('glFogFuncSGIS', t.void, (t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetFogFuncSGIS', t.void, (ct.POINTER(t.GLfloat),))
    set_enum("GL_FOG_FUNC_SGIS", 0x812A)
    set_enum("GL_FOG_FUNC_POINTS_SGIS", 0x812B)
    set_enum("GL_MAX_FOG_FUNC_POINTS_SGIS", 0x812C)


#### GL_SGIS_GENERATE_MIPMAP ####
def init_gl_sgis_generate_mipmap():
    set_enum("GL_GENERATE_MIPMAP_SGIS", 0x8191)
    set_enum("GL_GENERATE_MIPMAP_HINT_SGIS", 0x8192)


#### GL_SGIS_MULTISAMPLE ####
def init_gl_sgis_multisample():
    set_func('glSampleMaskSGIS', t.void, (t.GLclampf, t.GLboolean))
    set_func('glSamplePatternSGIS', t.void, (t.GLenum,))
    set_enum("GL_MULTISAMPLE_SGIS", 0x809D)
    set_enum("GL_SAMPLE_ALPHA_TO_MASK_SGIS", 0x809E)
    set_enum("GL_SAMPLE_ALPHA_TO_ONE_SGIS", 0x809F)
    set_enum("GL_SAMPLE_MASK_SGIS", 0x80A0)
    set_enum("GL_1PASS_SGIS", 0x80A1)
    set_enum("GL_2PASS_0_SGIS", 0x80A2)
    set_enum("GL_2PASS_1_SGIS", 0x80A3)
    set_enum("GL_4PASS_0_SGIS", 0x80A4)
    set_enum("GL_4PASS_1_SGIS", 0x80A5)
    set_enum("GL_4PASS_2_SGIS", 0x80A6)
    set_enum("GL_4PASS_3_SGIS", 0x80A7)
    set_enum("GL_SAMPLE_BUFFERS_SGIS", 0x80A8)
    set_enum("GL_SAMPLES_SGIS", 0x80A9)
    set_enum("GL_SAMPLE_MASK_VALUE_SGIS", 0x80AA)
    set_enum("GL_SAMPLE_MASK_INVERT_SGIS", 0x80AB)
    set_enum("GL_SAMPLE_PATTERN_SGIS", 0x80AC)


#### GL_SGIS_PIXEL_TEXTURE ####
def init_gl_sgis_pixel_texture():
    set_func('glPixelTexGenParameteriSGIS', t.void, (t.GLenum, t.GLint))
    set_func('glPixelTexGenParameterivSGIS', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glPixelTexGenParameterfSGIS', t.void, (t.GLenum, t.GLfloat))
    set_func('glPixelTexGenParameterfvSGIS', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetPixelTexGenParameterivSGIS', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetPixelTexGenParameterfvSGIS', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_PIXEL_TEXTURE_SGIS", 0x8353)
    set_enum("GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS", 0x8354)
    set_enum("GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS", 0x8355)
    set_enum("GL_PIXEL_GROUP_COLOR_SGIS", 0x8356)


#### GL_SGIS_POINT_LINE_TEXGEN ####
def init_gl_sgis_point_line_texgen():
    set_enum("GL_EYE_DISTANCE_TO_POINT_SGIS", 0x81F0)
    set_enum("GL_OBJECT_DISTANCE_TO_POINT_SGIS", 0x81F1)
    set_enum("GL_EYE_DISTANCE_TO_LINE_SGIS", 0x81F2)
    set_enum("GL_OBJECT_DISTANCE_TO_LINE_SGIS", 0x81F3)
    set_enum("GL_EYE_POINT_SGIS", 0x81F4)
    set_enum("GL_OBJECT_POINT_SGIS", 0x81F5)
    set_enum("GL_EYE_LINE_SGIS", 0x81F6)
    set_enum("GL_OBJECT_LINE_SGIS", 0x81F7)


#### GL_SGIS_POINT_PARAMETERS ####
def init_gl_sgis_point_parameters():
    set_func('glPointParameterfSGIS', t.void, (t.GLenum, t.GLfloat))
    set_func('glPointParameterfvSGIS', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_POINT_SIZE_MIN_SGIS", 0x8126)
    set_enum("GL_POINT_SIZE_MAX_SGIS", 0x8127)
    set_enum("GL_POINT_FADE_THRESHOLD_SIZE_SGIS", 0x8128)
    set_enum("GL_DISTANCE_ATTENUATION_SGIS", 0x8129)


#### GL_SGIS_SHARPEN_TEXTURE ####
def init_gl_sgis_sharpen_texture():
    set_func('glSharpenTexFuncSGIS', t.void, (t.GLenum, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_func('glGetSharpenTexFuncSGIS', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_enum("GL_LINEAR_SHARPEN_SGIS", 0x80AD)
    set_enum("GL_LINEAR_SHARPEN_ALPHA_SGIS", 0x80AE)
    set_enum("GL_LINEAR_SHARPEN_COLOR_SGIS", 0x80AF)
    set_enum("GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS", 0x80B0)


#### GL_SGIS_TEXTURE4D ####
def init_gl_sgis_texture4d():
    set_func('glTexImage4DSGIS', t.void, (t.GLenum, t.GLint, t.GLenum, t.GLsizei, t.GLsizei, t.GLsizei, t.GLsizei, t.GLint, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glTexSubImage4DSGIS', t.void, (t.GLenum, t.GLint, t.GLint, t.GLint, t.GLint, t.GLint, t.GLsizei, t.GLsizei, t.GLsizei, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_enum("GL_PACK_SKIP_VOLUMES_SGIS", 0x8130)
    set_enum("GL_PACK_IMAGE_DEPTH_SGIS", 0x8131)
    set_enum("GL_UNPACK_SKIP_VOLUMES_SGIS", 0x8132)
    set_enum("GL_UNPACK_IMAGE_DEPTH_SGIS", 0x8133)
    set_enum("GL_TEXTURE_4D_SGIS", 0x8134)
    set_enum("GL_PROXY_TEXTURE_4D_SGIS", 0x8135)
    set_enum("GL_TEXTURE_4DSIZE_SGIS", 0x8136)
    set_enum("GL_TEXTURE_WRAP_Q_SGIS", 0x8137)
    set_enum("GL_MAX_4D_TEXTURE_SIZE_SGIS", 0x8138)
    set_enum("GL_TEXTURE_4D_BINDING_SGIS", 0x814F)


#### GL_SGIS_TEXTURE_BORDER_CLAMP ####
def init_gl_sgis_texture_border_clamp():
    set_enum("GL_CLAMP_TO_BORDER_SGIS", 0x812D)


#### GL_SGIS_TEXTURE_COLOR_MASK ####
def init_gl_sgis_texture_color_mask():
    set_func('glTextureColorMaskSGIS', t.void, (t.GLboolean, t.GLboolean, t.GLboolean, t.GLboolean))
    set_enum("GL_TEXTURE_COLOR_WRITEMASK_SGIS", 0x81EF)


#### GL_SGIS_TEXTURE_EDGE_CLAMP ####
def init_gl_sgis_texture_edge_clamp():
    set_enum("GL_CLAMP_TO_EDGE_SGIS", 0x812F)


#### GL_SGIS_TEXTURE_FILTER4 ####
def init_gl_sgis_texture_filter4():
    set_func('glGetTexFilterFuncSGIS', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glTexFilterFuncSGIS', t.void, (t.GLenum, t.GLenum, t.GLsizei, ct.POINTER(t.GLfloat)))
    set_enum("GL_FILTER4_SGIS", 0x8146)
    set_enum("GL_TEXTURE_FILTER4_SIZE_SGIS", 0x8147)


#### GL_SGIS_TEXTURE_LOD ####
def init_gl_sgis_texture_lod():
    set_enum("GL_TEXTURE_MIN_LOD_SGIS", 0x813A)
    set_enum("GL_TEXTURE_MAX_LOD_SGIS", 0x813B)
    set_enum("GL_TEXTURE_BASE_LEVEL_SGIS", 0x813C)
    set_enum("GL_TEXTURE_MAX_LEVEL_SGIS", 0x813D)


#### GL_SGIS_TEXTURE_SELECT ####
def init_gl_sgis_texture_select():
    set_enum("GL_DUAL_ALPHA4_SGIS", 0x8110)
    set_enum("GL_DUAL_ALPHA8_SGIS", 0x8111)
    set_enum("GL_DUAL_ALPHA12_SGIS", 0x8112)
    set_enum("GL_DUAL_ALPHA16_SGIS", 0x8113)
    set_enum("GL_DUAL_LUMINANCE4_SGIS", 0x8114)
    set_enum("GL_DUAL_LUMINANCE8_SGIS", 0x8115)
    set_enum("GL_DUAL_LUMINANCE12_SGIS", 0x8116)
    set_enum("GL_DUAL_LUMINANCE16_SGIS", 0x8117)
    set_enum("GL_DUAL_INTENSITY4_SGIS", 0x8118)
    set_enum("GL_DUAL_INTENSITY8_SGIS", 0x8119)
    set_enum("GL_DUAL_INTENSITY12_SGIS", 0x811A)
    set_enum("GL_DUAL_INTENSITY16_SGIS", 0x811B)
    set_enum("GL_DUAL_LUMINANCE_ALPHA4_SGIS", 0x811C)
    set_enum("GL_DUAL_LUMINANCE_ALPHA8_SGIS", 0x811D)
    set_enum("GL_QUAD_ALPHA4_SGIS", 0x811E)
    set_enum("GL_QUAD_ALPHA8_SGIS", 0x811F)
    set_enum("GL_QUAD_LUMINANCE4_SGIS", 0x8120)
    set_enum("GL_QUAD_LUMINANCE8_SGIS", 0x8121)
    set_enum("GL_QUAD_INTENSITY4_SGIS", 0x8122)
    set_enum("GL_QUAD_INTENSITY8_SGIS", 0x8123)
    set_enum("GL_DUAL_TEXTURE_SELECT_SGIS", 0x8124)
    set_enum("GL_QUAD_TEXTURE_SELECT_SGIS", 0x8125)


#### GL_SGIX_ASYNC ####
def init_gl_sgix_async():
    set_func('glAsyncMarkerSGIX', t.void, (t.GLuint,))
    set_func('glFinishAsyncSGIX', t.GLint, (ct.POINTER(t.GLuint),))
    set_func('glPollAsyncSGIX', t.GLint, (ct.POINTER(t.GLuint),))
    set_func('glGenAsyncMarkersSGIX', t.GLuint, (t.GLsizei,))
    set_func('glDeleteAsyncMarkersSGIX', t.void, (t.GLuint, t.GLsizei))
    set_func('glIsAsyncMarkerSGIX', t.GLboolean, (t.GLuint,))
    set_enum("GL_ASYNC_MARKER_SGIX", 0x8329)


#### GL_SGIX_ASYNC_HISTOGRAM ####
def init_gl_sgix_async_histogram():
    set_enum("GL_ASYNC_HISTOGRAM_SGIX", 0x832C)
    set_enum("GL_MAX_ASYNC_HISTOGRAM_SGIX", 0x832D)


#### GL_SGIX_ASYNC_PIXEL ####
def init_gl_sgix_async_pixel():
    set_enum("GL_ASYNC_TEX_IMAGE_SGIX", 0x835C)
    set_enum("GL_ASYNC_DRAW_PIXELS_SGIX", 0x835D)
    set_enum("GL_ASYNC_READ_PIXELS_SGIX", 0x835E)
    set_enum("GL_MAX_ASYNC_TEX_IMAGE_SGIX", 0x835F)
    set_enum("GL_MAX_ASYNC_DRAW_PIXELS_SGIX", 0x8360)
    set_enum("GL_MAX_ASYNC_READ_PIXELS_SGIX", 0x8361)


#### GL_SGIX_BLEND_ALPHA_MINMAX ####
def init_gl_sgix_blend_alpha_minmax():
    set_enum("GL_ALPHA_MIN_SGIX", 0x8320)
    set_enum("GL_ALPHA_MAX_SGIX", 0x8321)


#### GL_SGIX_CALLIGRAPHIC_FRAGMENT ####
def init_gl_sgix_calligraphic_fragment():
    set_enum("GL_CALLIGRAPHIC_FRAGMENT_SGIX", 0x8183)


#### GL_SGIX_CLIPMAP ####
def init_gl_sgix_clipmap():
    set_enum("GL_LINEAR_CLIPMAP_LINEAR_SGIX", 0x8170)
    set_enum("GL_TEXTURE_CLIPMAP_CENTER_SGIX", 0x8171)
    set_enum("GL_TEXTURE_CLIPMAP_FRAME_SGIX", 0x8172)
    set_enum("GL_TEXTURE_CLIPMAP_OFFSET_SGIX", 0x8173)
    set_enum("GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX", 0x8174)
    set_enum("GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX", 0x8175)
    set_enum("GL_TEXTURE_CLIPMAP_DEPTH_SGIX", 0x8176)
    set_enum("GL_MAX_CLIPMAP_DEPTH_SGIX", 0x8177)
    set_enum("GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX", 0x8178)
    set_enum("GL_NEAREST_CLIPMAP_NEAREST_SGIX", 0x844D)
    set_enum("GL_NEAREST_CLIPMAP_LINEAR_SGIX", 0x844E)
    set_enum("GL_LINEAR_CLIPMAP_NEAREST_SGIX", 0x844F)


#### GL_SGIX_CONVOLUTION_ACCURACY ####
def init_gl_sgix_convolution_accuracy():
    set_enum("GL_CONVOLUTION_HINT_SGIX", 0x8316)


#### GL_SGIX_DEPTH_TEXTURE ####
def init_gl_sgix_depth_texture():
    set_enum("GL_DEPTH_COMPONENT16_SGIX", 0x81A5)
    set_enum("GL_DEPTH_COMPONENT24_SGIX", 0x81A6)
    set_enum("GL_DEPTH_COMPONENT32_SGIX", 0x81A7)


#### GL_SGIX_FLUSH_RASTER ####
def init_gl_sgix_flush_raster():
    set_func('glFlushRasterSGIX', t.void, ())


#### GL_SGIX_FOG_OFFSET ####
def init_gl_sgix_fog_offset():
    set_enum("GL_FOG_OFFSET_SGIX", 0x8198)
    set_enum("GL_FOG_OFFSET_VALUE_SGIX", 0x8199)


#### GL_SGIX_FRAGMENT_LIGHTING ####
def init_gl_sgix_fragment_lighting():
    set_func('glFragmentColorMaterialSGIX', t.void, (t.GLenum, t.GLenum))
    set_func('glFragmentLightfSGIX', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glFragmentLightfvSGIX', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glFragmentLightiSGIX', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glFragmentLightivSGIX', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glFragmentLightModelfSGIX', t.void, (t.GLenum, t.GLfloat))
    set_func('glFragmentLightModelfvSGIX', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glFragmentLightModeliSGIX', t.void, (t.GLenum, t.GLint))
    set_func('glFragmentLightModelivSGIX', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_func('glFragmentMaterialfSGIX', t.void, (t.GLenum, t.GLenum, t.GLfloat))
    set_func('glFragmentMaterialfvSGIX', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glFragmentMaterialiSGIX', t.void, (t.GLenum, t.GLenum, t.GLint))
    set_func('glFragmentMaterialivSGIX', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetFragmentLightfvSGIX', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetFragmentLightivSGIX', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glGetFragmentMaterialfvSGIX', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetFragmentMaterialivSGIX', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glLightEnviSGIX', t.void, (t.GLenum, t.GLint))
    set_enum("GL_FRAGMENT_LIGHTING_SGIX", 0x8400)
    set_enum("GL_FRAGMENT_COLOR_MATERIAL_SGIX", 0x8401)
    set_enum("GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX", 0x8402)
    set_enum("GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX", 0x8403)
    set_enum("GL_MAX_FRAGMENT_LIGHTS_SGIX", 0x8404)
    set_enum("GL_MAX_ACTIVE_LIGHTS_SGIX", 0x8405)
    set_enum("GL_CURRENT_RASTER_NORMAL_SGIX", 0x8406)
    set_enum("GL_LIGHT_ENV_MODE_SGIX", 0x8407)
    set_enum("GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX", 0x8408)
    set_enum("GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX", 0x8409)
    set_enum("GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX", 0x840A)
    set_enum("GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX", 0x840B)
    set_enum("GL_FRAGMENT_LIGHT0_SGIX", 0x840C)
    set_enum("GL_FRAGMENT_LIGHT1_SGIX", 0x840D)
    set_enum("GL_FRAGMENT_LIGHT2_SGIX", 0x840E)
    set_enum("GL_FRAGMENT_LIGHT3_SGIX", 0x840F)
    set_enum("GL_FRAGMENT_LIGHT4_SGIX", 0x8410)
    set_enum("GL_FRAGMENT_LIGHT5_SGIX", 0x8411)
    set_enum("GL_FRAGMENT_LIGHT6_SGIX", 0x8412)
    set_enum("GL_FRAGMENT_LIGHT7_SGIX", 0x8413)


#### GL_SGIX_FRAMEZOOM ####
def init_gl_sgix_framezoom():
    set_func('glFrameZoomSGIX', t.void, (t.GLint,))
    set_enum("GL_FRAMEZOOM_SGIX", 0x818B)
    set_enum("GL_FRAMEZOOM_FACTOR_SGIX", 0x818C)
    set_enum("GL_MAX_FRAMEZOOM_FACTOR_SGIX", 0x818D)


#### GL_SGIX_IGLOO_INTERFACE ####
def init_gl_sgix_igloo_interface():
    set_func('glIglooInterfaceSGIX', t.void, (t.GLenum, ct.POINTER(t.void)))


#### GL_SGIX_INSTRUMENTS ####
def init_gl_sgix_instruments():
    set_func('glGetInstrumentsSGIX', t.GLint, ())
    set_func('glInstrumentsBufferSGIX', t.void, (t.GLsizei, ct.POINTER(t.GLint)))
    set_func('glPollInstrumentsSGIX', t.GLint, (ct.POINTER(t.GLint),))
    set_func('glReadInstrumentsSGIX', t.void, (t.GLint,))
    set_func('glStartInstrumentsSGIX', t.void, ())
    set_func('glStopInstrumentsSGIX', t.void, (t.GLint,))
    set_enum("GL_INSTRUMENT_BUFFER_POINTER_SGIX", 0x8180)
    set_enum("GL_INSTRUMENT_MEASUREMENTS_SGIX", 0x8181)


#### GL_SGIX_INTERLACE ####
def init_gl_sgix_interlace():
    set_enum("GL_INTERLACE_SGIX", 0x8094)


#### GL_SGIX_IR_INSTRUMENT1 ####
def init_gl_sgix_ir_instrument1():
    set_enum("GL_IR_INSTRUMENT1_SGIX", 0x817F)


#### GL_SGIX_LIST_PRIORITY ####
def init_gl_sgix_list_priority():
    set_func('glGetListParameterfvSGIX', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetListParameterivSGIX', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glListParameterfSGIX', t.void, (t.GLuint, t.GLenum, t.GLfloat))
    set_func('glListParameterfvSGIX', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glListParameteriSGIX', t.void, (t.GLuint, t.GLenum, t.GLint))
    set_func('glListParameterivSGIX', t.void, (t.GLuint, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_LIST_PRIORITY_SGIX", 0x8182)


#### GL_SGIX_PIXEL_TEXTURE ####
def init_gl_sgix_pixel_texture():
    set_func('glPixelTexGenSGIX', t.void, (t.GLenum,))
    set_enum("GL_PIXEL_TEX_GEN_SGIX", 0x8139)
    set_enum("GL_PIXEL_TEX_GEN_MODE_SGIX", 0x832B)


#### GL_SGIX_PIXEL_TILES ####
def init_gl_sgix_pixel_tiles():
    set_enum("GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX", 0x813E)
    set_enum("GL_PIXEL_TILE_CACHE_INCREMENT_SGIX", 0x813F)
    set_enum("GL_PIXEL_TILE_WIDTH_SGIX", 0x8140)
    set_enum("GL_PIXEL_TILE_HEIGHT_SGIX", 0x8141)
    set_enum("GL_PIXEL_TILE_GRID_WIDTH_SGIX", 0x8142)
    set_enum("GL_PIXEL_TILE_GRID_HEIGHT_SGIX", 0x8143)
    set_enum("GL_PIXEL_TILE_GRID_DEPTH_SGIX", 0x8144)
    set_enum("GL_PIXEL_TILE_CACHE_SIZE_SGIX", 0x8145)


#### GL_SGIX_POLYNOMIAL_FFD ####
def init_gl_sgix_polynomial_ffd():
    set_func('glDeformationMap3dSGIX', t.void, (t.GLenum, t.GLdouble, t.GLdouble, t.GLint, t.GLint, t.GLdouble, t.GLdouble, t.GLint, t.GLint, t.GLdouble, t.GLdouble, t.GLint, t.GLint, ct.POINTER(t.GLdouble)))
    set_func('glDeformationMap3fSGIX', t.void, (t.GLenum, t.GLfloat, t.GLfloat, t.GLint, t.GLint, t.GLfloat, t.GLfloat, t.GLint, t.GLint, t.GLfloat, t.GLfloat, t.GLint, t.GLint, ct.POINTER(t.GLfloat)))
    set_func('glDeformSGIX', t.void, (t.GLbitfield,))
    set_func('glLoadIdentityDeformationMapSGIX', t.void, (t.GLbitfield,))
    set_enum("GL_TEXTURE_DEFORMATION_BIT_SGIX", 0x00000001)
    set_enum("GL_GEOMETRY_DEFORMATION_BIT_SGIX", 0x00000002)
    set_enum("GL_GEOMETRY_DEFORMATION_SGIX", 0x8194)
    set_enum("GL_TEXTURE_DEFORMATION_SGIX", 0x8195)
    set_enum("GL_DEFORMATIONS_MASK_SGIX", 0x8196)
    set_enum("GL_MAX_DEFORMATION_ORDER_SGIX", 0x8197)


#### GL_SGIX_REFERENCE_PLANE ####
def init_gl_sgix_reference_plane():
    set_func('glReferencePlaneSGIX', t.void, (ct.POINTER(t.GLdouble),))
    set_enum("GL_REFERENCE_PLANE_SGIX", 0x817D)
    set_enum("GL_REFERENCE_PLANE_EQUATION_SGIX", 0x817E)


#### GL_SGIX_RESAMPLE ####
def init_gl_sgix_resample():
    set_enum("GL_PACK_RESAMPLE_SGIX", 0x842E)
    set_enum("GL_UNPACK_RESAMPLE_SGIX", 0x842F)
    set_enum("GL_RESAMPLE_REPLICATE_SGIX", 0x8433)
    set_enum("GL_RESAMPLE_ZERO_FILL_SGIX", 0x8434)
    set_enum("GL_RESAMPLE_DECIMATE_SGIX", 0x8430)


#### GL_SGIX_SCALEBIAS_HINT ####
def init_gl_sgix_scalebias_hint():
    set_enum("GL_SCALEBIAS_HINT_SGIX", 0x8322)


#### GL_SGIX_SHADOW ####
def init_gl_sgix_shadow():
    set_enum("GL_TEXTURE_COMPARE_SGIX", 0x819A)
    set_enum("GL_TEXTURE_COMPARE_OPERATOR_SGIX", 0x819B)
    set_enum("GL_TEXTURE_LEQUAL_R_SGIX", 0x819C)
    set_enum("GL_TEXTURE_GEQUAL_R_SGIX", 0x819D)


#### GL_SGIX_SHADOW_AMBIENT ####
def init_gl_sgix_shadow_ambient():
    set_enum("GL_SHADOW_AMBIENT_SGIX", 0x80BF)


#### GL_SGIX_SPRITE ####
def init_gl_sgix_sprite():
    set_func('glSpriteParameterfSGIX', t.void, (t.GLenum, t.GLfloat))
    set_func('glSpriteParameterfvSGIX', t.void, (t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glSpriteParameteriSGIX', t.void, (t.GLenum, t.GLint))
    set_func('glSpriteParameterivSGIX', t.void, (t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_SPRITE_SGIX", 0x8148)
    set_enum("GL_SPRITE_MODE_SGIX", 0x8149)
    set_enum("GL_SPRITE_AXIS_SGIX", 0x814A)
    set_enum("GL_SPRITE_TRANSLATION_SGIX", 0x814B)
    set_enum("GL_SPRITE_AXIAL_SGIX", 0x814C)
    set_enum("GL_SPRITE_OBJECT_ALIGNED_SGIX", 0x814D)
    set_enum("GL_SPRITE_EYE_ALIGNED_SGIX", 0x814E)


#### GL_SGIX_SUBSAMPLE ####
def init_gl_sgix_subsample():
    set_enum("GL_PACK_SUBSAMPLE_RATE_SGIX", 0x85A0)
    set_enum("GL_UNPACK_SUBSAMPLE_RATE_SGIX", 0x85A1)
    set_enum("GL_PIXEL_SUBSAMPLE_4444_SGIX", 0x85A2)
    set_enum("GL_PIXEL_SUBSAMPLE_2424_SGIX", 0x85A3)
    set_enum("GL_PIXEL_SUBSAMPLE_4242_SGIX", 0x85A4)


#### GL_SGIX_TAG_SAMPLE_BUFFER ####
def init_gl_sgix_tag_sample_buffer():
    set_func('glTagSampleBufferSGIX', t.void, ())


#### GL_SGIX_TEXTURE_ADD_ENV ####
def init_gl_sgix_texture_add_env():
    set_enum("GL_TEXTURE_ENV_BIAS_SGIX", 0x80BE)


#### GL_SGIX_TEXTURE_COORDINATE_CLAMP ####
def init_gl_sgix_texture_coordinate_clamp():
    set_enum("GL_TEXTURE_MAX_CLAMP_S_SGIX", 0x8369)
    set_enum("GL_TEXTURE_MAX_CLAMP_T_SGIX", 0x836A)
    set_enum("GL_TEXTURE_MAX_CLAMP_R_SGIX", 0x836B)


#### GL_SGIX_TEXTURE_LOD_BIAS ####
def init_gl_sgix_texture_lod_bias():
    set_enum("GL_TEXTURE_LOD_BIAS_S_SGIX", 0x818E)
    set_enum("GL_TEXTURE_LOD_BIAS_T_SGIX", 0x818F)
    set_enum("GL_TEXTURE_LOD_BIAS_R_SGIX", 0x8190)


#### GL_SGIX_TEXTURE_MULTI_BUFFER ####
def init_gl_sgix_texture_multi_buffer():
    set_enum("GL_TEXTURE_MULTI_BUFFER_HINT_SGIX", 0x812E)


#### GL_SGIX_TEXTURE_SCALE_BIAS ####
def init_gl_sgix_texture_scale_bias():
    set_enum("GL_POST_TEXTURE_FILTER_BIAS_SGIX", 0x8179)
    set_enum("GL_POST_TEXTURE_FILTER_SCALE_SGIX", 0x817A)
    set_enum("GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX", 0x817B)
    set_enum("GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX", 0x817C)


#### GL_SGIX_VERTEX_PRECLIP ####
def init_gl_sgix_vertex_preclip():
    set_enum("GL_VERTEX_PRECLIP_SGIX", 0x83EE)
    set_enum("GL_VERTEX_PRECLIP_HINT_SGIX", 0x83EF)


#### GL_SGIX_YCRCB ####
def init_gl_sgix_ycrcb():
    set_enum("GL_YCRCB_422_SGIX", 0x81BB)
    set_enum("GL_YCRCB_444_SGIX", 0x81BC)


#### GL_SGIX_YCRCBA ####
def init_gl_sgix_ycrcba():
    set_enum("GL_YCRCB_SGIX", 0x8318)
    set_enum("GL_YCRCBA_SGIX", 0x8319)


#### GL_SGI_COLOR_MATRIX ####
def init_gl_sgi_color_matrix():
    set_enum("GL_COLOR_MATRIX_SGI", 0x80B1)
    set_enum("GL_COLOR_MATRIX_STACK_DEPTH_SGI", 0x80B2)
    set_enum("GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI", 0x80B3)
    set_enum("GL_POST_COLOR_MATRIX_RED_SCALE_SGI", 0x80B4)
    set_enum("GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI", 0x80B5)
    set_enum("GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI", 0x80B6)
    set_enum("GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI", 0x80B7)
    set_enum("GL_POST_COLOR_MATRIX_RED_BIAS_SGI", 0x80B8)
    set_enum("GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI", 0x80B9)
    set_enum("GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI", 0x80BA)
    set_enum("GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI", 0x80BB)


#### GL_SGI_COLOR_TABLE ####
def init_gl_sgi_color_table():
    set_func('glColorTableSGI', t.void, (t.GLenum, t.GLenum, t.GLsizei, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glColorTableParameterfvSGI', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glColorTableParameterivSGI', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_func('glCopyColorTableSGI', t.void, (t.GLenum, t.GLenum, t.GLint, t.GLint, t.GLsizei))
    set_func('glGetColorTableSGI', t.void, (t.GLenum, t.GLenum, t.GLenum, ct.POINTER(t.void)))
    set_func('glGetColorTableParameterfvSGI', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLfloat)))
    set_func('glGetColorTableParameterivSGI', t.void, (t.GLenum, t.GLenum, ct.POINTER(t.GLint)))
    set_enum("GL_COLOR_TABLE_SGI", 0x80D0)
    set_enum("GL_POST_CONVOLUTION_COLOR_TABLE_SGI", 0x80D1)
    set_enum("GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI", 0x80D2)
    set_enum("GL_PROXY_COLOR_TABLE_SGI", 0x80D3)
    set_enum("GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI", 0x80D4)
    set_enum("GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI", 0x80D5)
    set_enum("GL_COLOR_TABLE_SCALE_SGI", 0x80D6)
    set_enum("GL_COLOR_TABLE_BIAS_SGI", 0x80D7)
    set_enum("GL_COLOR_TABLE_FORMAT_SGI", 0x80D8)
    set_enum("GL_COLOR_TABLE_WIDTH_SGI", 0x80D9)
    set_enum("GL_COLOR_TABLE_RED_SIZE_SGI", 0x80DA)
    set_enum("GL_COLOR_TABLE_GREEN_SIZE_SGI", 0x80DB)
    set_enum("GL_COLOR_TABLE_BLUE_SIZE_SGI", 0x80DC)
    set_enum("GL_COLOR_TABLE_ALPHA_SIZE_SGI", 0x80DD)
    set_enum("GL_COLOR_TABLE_LUMINANCE_SIZE_SGI", 0x80DE)
    set_enum("GL_COLOR_TABLE_INTENSITY_SIZE_SGI", 0x80DF)


#### GL_SGI_TEXTURE_COLOR_TABLE ####
def init_gl_sgi_texture_color_table():
    set_enum("GL_TEXTURE_COLOR_TABLE_SGI", 0x80BC)
    set_enum("GL_PROXY_TEXTURE_COLOR_TABLE_SGI", 0x80BD)


#### GL_SUNX_CONSTANT_DATA ####
def init_gl_sunx_constant_data():
    set_func('glFinishTextureSUNX', t.void, ())
    set_enum("GL_UNPACK_CONSTANT_DATA_SUNX", 0x81D5)
    set_enum("GL_TEXTURE_CONSTANT_DATA_SUNX", 0x81D6)


#### GL_SUN_CONVOLUTION_BORDER_MODES ####
def init_gl_sun_convolution_border_modes():
    set_enum("GL_WRAP_BORDER_SUN", 0x81D4)


#### GL_SUN_GLOBAL_ALPHA ####
def init_gl_sun_global_alpha():
    set_func('glGlobalAlphaFactorbSUN', t.void, (t.GLbyte,))
    set_func('glGlobalAlphaFactorsSUN', t.void, (t.GLshort,))
    set_func('glGlobalAlphaFactoriSUN', t.void, (t.GLint,))
    set_func('glGlobalAlphaFactorfSUN', t.void, (t.GLfloat,))
    set_func('glGlobalAlphaFactordSUN', t.void, (t.GLdouble,))
    set_func('glGlobalAlphaFactorubSUN', t.void, (t.GLubyte,))
    set_func('glGlobalAlphaFactorusSUN', t.void, (t.GLushort,))
    set_func('glGlobalAlphaFactoruiSUN', t.void, (t.GLuint,))
    set_enum("GL_GLOBAL_ALPHA_SUN", 0x81D9)
    set_enum("GL_GLOBAL_ALPHA_FACTOR_SUN", 0x81DA)


#### GL_SUN_MESH_ARRAY ####
def init_gl_sun_mesh_array():
    set_func('glDrawMeshArraysSUN', t.void, (t.GLenum, t.GLint, t.GLsizei, t.GLsizei))
    set_enum("GL_QUAD_MESH_SUN", 0x8614)
    set_enum("GL_TRIANGLE_MESH_SUN", 0x8615)


#### GL_SUN_SLICE_ACCUM ####
def init_gl_sun_slice_accum():
    set_enum("GL_SLICE_ACCUM_SUN", 0x85CC)


#### GL_SUN_TRIANGLE_LIST ####
def init_gl_sun_triangle_list():
    set_func('glReplacementCodeuiSUN', t.void, (t.GLuint,))
    set_func('glReplacementCodeusSUN', t.void, (t.GLushort,))
    set_func('glReplacementCodeubSUN', t.void, (t.GLubyte,))
    set_func('glReplacementCodeuivSUN', t.void, (ct.POINTER(t.GLuint),))
    set_func('glReplacementCodeusvSUN', t.void, (ct.POINTER(t.GLushort),))
    set_func('glReplacementCodeubvSUN', t.void, (ct.POINTER(t.GLubyte),))
    set_func('glReplacementCodePointerSUN', t.void, (t.GLenum, t.GLsizei, ct.POINTER(ct.POINTER(t.void))))
    set_enum("GL_RESTART_SUN", 0x0001)
    set_enum("GL_REPLACE_MIDDLE_SUN", 0x0002)
    set_enum("GL_REPLACE_OLDEST_SUN", 0x0003)
    set_enum("GL_TRIANGLE_LIST_SUN", 0x81D7)
    set_enum("GL_REPLACEMENT_CODE_SUN", 0x81D8)
    set_enum("GL_REPLACEMENT_CODE_ARRAY_SUN", 0x85C0)
    set_enum("GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN", 0x85C1)
    set_enum("GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN", 0x85C2)
    set_enum("GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN", 0x85C3)
    set_enum("GL_R1UI_V3F_SUN", 0x85C4)
    set_enum("GL_R1UI_C4UB_V3F_SUN", 0x85C5)
    set_enum("GL_R1UI_C3F_V3F_SUN", 0x85C6)
    set_enum("GL_R1UI_N3F_V3F_SUN", 0x85C7)
    set_enum("GL_R1UI_C4F_N3F_V3F_SUN", 0x85C8)
    set_enum("GL_R1UI_T2F_V3F_SUN", 0x85C9)
    set_enum("GL_R1UI_T2F_N3F_V3F_SUN", 0x85CA)
    set_enum("GL_R1UI_T2F_C4F_N3F_V3F_SUN", 0x85CB)


#### GL_SUN_VERTEX ####
def init_gl_sun_vertex():
    set_func('glColor4ubVertex2fSUN', t.void, (t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte, t.GLfloat, t.GLfloat))
    set_func('glColor4ubVertex2fvSUN', t.void, (ct.POINTER(t.GLubyte), ct.POINTER(t.GLfloat)))
    set_func('glColor4ubVertex3fSUN', t.void, (t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glColor4ubVertex3fvSUN', t.void, (ct.POINTER(t.GLubyte), ct.POINTER(t.GLfloat)))
    set_func('glColor3fVertex3fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glColor3fVertex3fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glNormal3fVertex3fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glNormal3fVertex3fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glColor4fNormal3fVertex3fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glColor4fNormal3fVertex3fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glTexCoord2fVertex3fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord2fVertex3fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glTexCoord4fVertex4fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord4fVertex4fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glTexCoord2fColor4ubVertex3fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord2fColor4ubVertex3fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLubyte), ct.POINTER(t.GLfloat)))
    set_func('glTexCoord2fColor3fVertex3fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord2fColor3fVertex3fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glTexCoord2fNormal3fVertex3fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord2fNormal3fVertex3fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glTexCoord2fColor4fNormal3fVertex3fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord2fColor4fNormal3fVertex3fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glTexCoord4fColor4fNormal3fVertex4fSUN', t.void, (t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glTexCoord4fColor4fNormal3fVertex4fvSUN', t.void, (ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glReplacementCodeuiVertex3fSUN', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glReplacementCodeuiVertex3fvSUN', t.void, (ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat)))
    set_func('glReplacementCodeuiColor4ubVertex3fSUN', t.void, (t.GLuint, t.GLubyte, t.GLubyte, t.GLubyte, t.GLubyte, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glReplacementCodeuiColor4ubVertex3fvSUN', t.void, (ct.POINTER(t.GLuint), ct.POINTER(t.GLubyte), ct.POINTER(t.GLfloat)))
    set_func('glReplacementCodeuiColor3fVertex3fSUN', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glReplacementCodeuiColor3fVertex3fvSUN', t.void, (ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glReplacementCodeuiNormal3fVertex3fSUN', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glReplacementCodeuiNormal3fVertex3fvSUN', t.void, (ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glReplacementCodeuiColor4fNormal3fVertex3fSUN', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glReplacementCodeuiColor4fNormal3fVertex3fvSUN', t.void, (ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glReplacementCodeuiTexCoord2fVertex3fSUN', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glReplacementCodeuiTexCoord2fVertex3fvSUN', t.void, (ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN', t.void, (ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))
    set_func('glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN', t.void, (t.GLuint, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat, t.GLfloat))
    set_func('glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN', t.void, (ct.POINTER(t.GLuint), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat), ct.POINTER(t.GLfloat)))


#### GL_VIV_SHADER_BINARY ####
def init_gl_viv_shader_binary():
    set_enum("GL_SHADER_BINARY_VIV", 0x8FC4)


#### GL_WIN_PHONG_SHADING ####
def init_gl_win_phong_shading():
    set_enum("GL_PHONG_WIN", 0x80EA)
    set_enum("GL_PHONG_HINT_WIN", 0x80EB)


#### GL_WIN_SPECULAR_FOG ####
def init_gl_win_specular_fog():
    set_enum("GL_FOG_SPECULAR_TEXTURE_WIN", 0x80EC)


def init():
    init_gl_version_1_0()
    init_gl_version_1_1()
    init_gl_version_1_2()
    init_gl_version_1_3()
    init_gl_version_1_4()
    init_gl_version_1_5()
    init_gl_version_2_0()
    init_gl_version_2_1()
    init_gl_version_3_0()
    init_gl_version_3_1()
    init_gl_version_3_2()
    init_gl_version_3_3()
    init_gl_version_4_0()
    init_gl_version_4_1()
    init_gl_version_4_2()
    init_gl_version_4_3()
    init_gl_version_4_4()
    init_gl_version_4_5()
    init_gl_version_es_cm_1_0()
    init_gl_es_version_2_0()
    init_gl_es_version_3_0()
    init_gl_es_version_3_1()
    init_gl_es_version_3_2()
    init_gl_sc_version_2_0()
    init_gl_3dfx_multisample()
    init_gl_3dfx_tbuffer()
    init_gl_3dfx_texture_compression_fxt1()
    init_gl_amd_blend_minmax_factor()
    init_gl_amd_compressed_3dc_texture()
    init_gl_amd_compressed_atc_texture()
    init_gl_amd_debug_output()
    init_gl_amd_depth_clamp_separate()
    init_gl_amd_draw_buffers_blend()
    init_gl_amd_gpu_shader_int64()
    init_gl_amd_interleaved_elements()
    init_gl_amd_multi_draw_indirect()
    init_gl_amd_name_gen_delete()
    init_gl_amd_occlusion_query_event()
    init_gl_amd_performance_monitor()
    init_gl_amd_pinned_memory()
    init_gl_amd_program_binary_z400()
    init_gl_amd_query_buffer_object()
    init_gl_amd_sample_positions()
    init_gl_amd_seamless_cubemap_per_texture()
    init_gl_amd_sparse_texture()
    init_gl_amd_stencil_operation_extended()
    init_gl_amd_transform_feedback4()
    init_gl_amd_vertex_shader_tessellator()
    init_gl_angle_depth_texture()
    init_gl_angle_framebuffer_blit()
    init_gl_angle_framebuffer_multisample()
    init_gl_angle_instanced_arrays()
    init_gl_angle_pack_reverse_row_order()
    init_gl_angle_program_binary()
    init_gl_angle_texture_compression_dxt3()
    init_gl_angle_texture_compression_dxt5()
    init_gl_angle_texture_usage()
    init_gl_angle_translated_shader_source()
    init_gl_apple_aux_depth_stencil()
    init_gl_apple_client_storage()
    init_gl_apple_clip_distance()
    init_gl_apple_copy_texture_levels()
    init_gl_apple_element_array()
    init_gl_apple_fence()
    init_gl_apple_float_pixels()
    init_gl_apple_flush_buffer_range()
    init_gl_apple_framebuffer_multisample()
    init_gl_apple_object_purgeable()
    init_gl_apple_rgb_422()
    init_gl_apple_row_bytes()
    init_gl_apple_specular_vector()
    init_gl_apple_sync()
    init_gl_apple_texture_format_bgra8888()
    init_gl_apple_texture_max_level()
    init_gl_apple_texture_packed_float()
    init_gl_apple_texture_range()
    init_gl_apple_transform_hint()
    init_gl_apple_vertex_array_object()
    init_gl_apple_vertex_array_range()
    init_gl_apple_vertex_program_evaluators()
    init_gl_apple_ycbcr_422()
    init_gl_arb_es2_compatibility()
    init_gl_arb_es3_1_compatibility()
    init_gl_arb_es3_2_compatibility()
    init_gl_arb_es3_compatibility()
    init_gl_arb_base_instance()
    init_gl_arb_bindless_texture()
    init_gl_arb_blend_func_extended()
    init_gl_arb_buffer_storage()
    init_gl_arb_cl_event()
    init_gl_arb_clear_buffer_object()
    init_gl_arb_clear_texture()
    init_gl_arb_clip_control()
    init_gl_arb_color_buffer_float()
    init_gl_arb_compressed_texture_pixel_storage()
    init_gl_arb_compute_shader()
    init_gl_arb_compute_variable_group_size()
    init_gl_arb_conditional_render_inverted()
    init_gl_arb_copy_buffer()
    init_gl_arb_copy_image()
    init_gl_arb_cull_distance()
    init_gl_arb_debug_output()
    init_gl_arb_depth_buffer_float()
    init_gl_arb_depth_clamp()
    init_gl_arb_depth_texture()
    init_gl_arb_direct_state_access()
    init_gl_arb_draw_buffers()
    init_gl_arb_draw_buffers_blend()
    init_gl_arb_draw_elements_base_vertex()
    init_gl_arb_draw_indirect()
    init_gl_arb_draw_instanced()
    init_gl_arb_enhanced_layouts()
    init_gl_arb_explicit_uniform_location()
    init_gl_arb_fragment_program()
    init_gl_arb_fragment_shader()
    init_gl_arb_framebuffer_no_attachments()
    init_gl_arb_framebuffer_object()
    init_gl_arb_framebuffer_srgb()
    init_gl_arb_geometry_shader4()
    init_gl_arb_get_program_binary()
    init_gl_arb_get_texture_sub_image()
    init_gl_arb_gpu_shader5()
    init_gl_arb_gpu_shader_fp64()
    init_gl_arb_gpu_shader_int64()
    init_gl_arb_half_float_pixel()
    init_gl_arb_half_float_vertex()
    init_gl_arb_imaging()
    init_gl_arb_indirect_parameters()
    init_gl_arb_instanced_arrays()
    init_gl_arb_internalformat_query()
    init_gl_arb_internalformat_query2()
    init_gl_arb_invalidate_subdata()
    init_gl_arb_map_buffer_alignment()
    init_gl_arb_map_buffer_range()
    init_gl_arb_matrix_palette()
    init_gl_arb_multi_bind()
    init_gl_arb_multi_draw_indirect()
    init_gl_arb_multisample()
    init_gl_arb_multitexture()
    init_gl_arb_occlusion_query()
    init_gl_arb_occlusion_query2()
    init_gl_arb_parallel_shader_compile()
    init_gl_arb_pipeline_statistics_query()
    init_gl_arb_pixel_buffer_object()
    init_gl_arb_point_parameters()
    init_gl_arb_point_sprite()
    init_gl_arb_program_interface_query()
    init_gl_arb_provoking_vertex()
    init_gl_arb_query_buffer_object()
    init_gl_arb_robustness()
    init_gl_arb_sample_locations()
    init_gl_arb_sample_shading()
    init_gl_arb_sampler_objects()
    init_gl_arb_seamless_cube_map()
    init_gl_arb_seamless_cubemap_per_texture()
    init_gl_arb_separate_shader_objects()
    init_gl_arb_shader_atomic_counters()
    init_gl_arb_shader_image_load_store()
    init_gl_arb_shader_objects()
    init_gl_arb_shader_storage_buffer_object()
    init_gl_arb_shader_subroutine()
    init_gl_arb_shading_language_100()
    init_gl_arb_shading_language_include()
    init_gl_arb_shadow()
    init_gl_arb_shadow_ambient()
    init_gl_arb_sparse_buffer()
    init_gl_arb_sparse_texture()
    init_gl_arb_stencil_texturing()
    init_gl_arb_sync()
    init_gl_arb_tessellation_shader()
    init_gl_arb_texture_barrier()
    init_gl_arb_texture_border_clamp()
    init_gl_arb_texture_buffer_object()
    init_gl_arb_texture_buffer_object_rgb32()
    init_gl_arb_texture_buffer_range()
    init_gl_arb_texture_compression()
    init_gl_arb_texture_compression_bptc()
    init_gl_arb_texture_compression_rgtc()
    init_gl_arb_texture_cube_map()
    init_gl_arb_texture_cube_map_array()
    init_gl_arb_texture_env_combine()
    init_gl_arb_texture_env_dot3()
    init_gl_arb_texture_filter_minmax()
    init_gl_arb_texture_float()
    init_gl_arb_texture_gather()
    init_gl_arb_texture_mirror_clamp_to_edge()
    init_gl_arb_texture_mirrored_repeat()
    init_gl_arb_texture_multisample()
    init_gl_arb_texture_rectangle()
    init_gl_arb_texture_rg()
    init_gl_arb_texture_rgb10_a2ui()
    init_gl_arb_texture_stencil8()
    init_gl_arb_texture_storage()
    init_gl_arb_texture_storage_multisample()
    init_gl_arb_texture_swizzle()
    init_gl_arb_texture_view()
    init_gl_arb_timer_query()
    init_gl_arb_transform_feedback2()
    init_gl_arb_transform_feedback3()
    init_gl_arb_transform_feedback_instanced()
    init_gl_arb_transform_feedback_overflow_query()
    init_gl_arb_transpose_matrix()
    init_gl_arb_uniform_buffer_object()
    init_gl_arb_vertex_array_bgra()
    init_gl_arb_vertex_array_object()
    init_gl_arb_vertex_attrib_64bit()
    init_gl_arb_vertex_attrib_binding()
    init_gl_arb_vertex_blend()
    init_gl_arb_vertex_buffer_object()
    init_gl_arb_vertex_program()
    init_gl_arb_vertex_shader()
    init_gl_arb_vertex_type_10f_11f_11f_rev()
    init_gl_arb_vertex_type_2_10_10_10_rev()
    init_gl_arb_viewport_array()
    init_gl_arb_window_pos()
    init_gl_arm_mali_program_binary()
    init_gl_arm_mali_shader_binary()
    init_gl_arm_shader_framebuffer_fetch()
    init_gl_ati_draw_buffers()
    init_gl_ati_element_array()
    init_gl_ati_envmap_bumpmap()
    init_gl_ati_fragment_shader()
    init_gl_ati_map_object_buffer()
    init_gl_ati_meminfo()
    init_gl_ati_pixel_format_float()
    init_gl_ati_pn_triangles()
    init_gl_ati_separate_stencil()
    init_gl_ati_text_fragment_shader()
    init_gl_ati_texture_env_combine3()
    init_gl_ati_texture_float()
    init_gl_ati_texture_mirror_once()
    init_gl_ati_vertex_array_object()
    init_gl_ati_vertex_attrib_array_object()
    init_gl_ati_vertex_streams()
    init_gl_dmp_program_binary()
    init_gl_dmp_shader_binary()
    init_gl_ext_422_pixels()
    init_gl_ext_yuv_target()
    init_gl_ext_abgr()
    init_gl_ext_base_instance()
    init_gl_ext_bgra()
    init_gl_ext_bindable_uniform()
    init_gl_ext_blend_color()
    init_gl_ext_blend_equation_separate()
    init_gl_ext_blend_func_extended()
    init_gl_ext_blend_func_separate()
    init_gl_ext_blend_minmax()
    init_gl_ext_blend_subtract()
    init_gl_ext_buffer_storage()
    init_gl_ext_clip_cull_distance()
    init_gl_ext_clip_volume_hint()
    init_gl_ext_cmyka()
    init_gl_ext_color_buffer_half_float()
    init_gl_ext_color_subtable()
    init_gl_ext_compiled_vertex_array()
    init_gl_ext_convolution()
    init_gl_ext_coordinate_frame()
    init_gl_ext_copy_image()
    init_gl_ext_copy_texture()
    init_gl_ext_cull_vertex()
    init_gl_ext_debug_label()
    init_gl_ext_debug_marker()
    init_gl_ext_depth_bounds_test()
    init_gl_ext_direct_state_access()
    init_gl_ext_discard_framebuffer()
    init_gl_ext_disjoint_timer_query()
    init_gl_ext_draw_buffers()
    init_gl_ext_draw_buffers2()
    init_gl_ext_draw_buffers_indexed()
    init_gl_ext_draw_elements_base_vertex()
    init_gl_ext_draw_instanced()
    init_gl_ext_draw_range_elements()
    init_gl_ext_fog_coord()
    init_gl_ext_framebuffer_blit()
    init_gl_ext_framebuffer_multisample()
    init_gl_ext_framebuffer_multisample_blit_scaled()
    init_gl_ext_framebuffer_object()
    init_gl_ext_framebuffer_srgb()
    init_gl_ext_geometry_shader()
    init_gl_ext_geometry_shader4()
    init_gl_ext_gpu_program_parameters()
    init_gl_ext_gpu_shader4()
    init_gl_ext_histogram()
    init_gl_ext_index_array_formats()
    init_gl_ext_index_func()
    init_gl_ext_index_material()
    init_gl_ext_instanced_arrays()
    init_gl_ext_light_texture()
    init_gl_ext_map_buffer_range()
    init_gl_ext_multi_draw_arrays()
    init_gl_ext_multi_draw_indirect()
    init_gl_ext_multisample()
    init_gl_ext_multisampled_compatibility()
    init_gl_ext_multisampled_render_to_texture()
    init_gl_ext_multiview_draw_buffers()
    init_gl_ext_occlusion_query_boolean()
    init_gl_ext_packed_depth_stencil()
    init_gl_ext_packed_float()
    init_gl_ext_packed_pixels()
    init_gl_ext_paletted_texture()
    init_gl_ext_pixel_buffer_object()
    init_gl_ext_pixel_transform()
    init_gl_ext_point_parameters()
    init_gl_ext_polygon_offset()
    init_gl_ext_polygon_offset_clamp()
    init_gl_ext_primitive_bounding_box()
    init_gl_ext_protected_textures()
    init_gl_ext_provoking_vertex()
    init_gl_ext_pvrtc_srgb()
    init_gl_ext_raster_multisample()
    init_gl_ext_read_format_bgra()
    init_gl_ext_render_snorm()
    init_gl_ext_rescale_normal()
    init_gl_ext_robustness()
    init_gl_ext_srgb()
    init_gl_ext_srgb_write_control()
    init_gl_ext_secondary_color()
    init_gl_ext_separate_shader_objects()
    init_gl_ext_separate_specular_color()
    init_gl_ext_shader_framebuffer_fetch()
    init_gl_ext_shader_image_load_store()
    init_gl_ext_shader_pixel_local_storage()
    init_gl_ext_shader_pixel_local_storage2()
    init_gl_ext_shadow_samplers()
    init_gl_ext_shared_texture_palette()
    init_gl_ext_sparse_texture()
    init_gl_ext_stencil_clear_tag()
    init_gl_ext_stencil_two_side()
    init_gl_ext_stencil_wrap()
    init_gl_ext_subtexture()
    init_gl_ext_tessellation_shader()
    init_gl_ext_texture()
    init_gl_ext_texture3d()
    init_gl_ext_texture_array()
    init_gl_ext_texture_border_clamp()
    init_gl_ext_texture_buffer()
    init_gl_ext_texture_buffer_object()
    init_gl_ext_texture_compression_dxt1()
    init_gl_ext_texture_compression_latc()
    init_gl_ext_texture_compression_rgtc()
    init_gl_ext_texture_compression_s3tc()
    init_gl_ext_texture_cube_map()
    init_gl_ext_texture_cube_map_array()
    init_gl_ext_texture_env_combine()
    init_gl_ext_texture_env_dot3()
    init_gl_ext_texture_filter_anisotropic()
    init_gl_ext_texture_filter_minmax()
    init_gl_ext_texture_format_bgra8888()
    init_gl_ext_texture_integer()
    init_gl_ext_texture_lod_bias()
    init_gl_ext_texture_mirror_clamp()
    init_gl_ext_texture_norm16()
    init_gl_ext_texture_object()
    init_gl_ext_texture_perturb_normal()
    init_gl_ext_texture_rg()
    init_gl_ext_texture_srgb()
    init_gl_ext_texture_srgb_r8()
    init_gl_ext_texture_srgb_rg8()
    init_gl_ext_texture_srgb_decode()
    init_gl_ext_texture_shared_exponent()
    init_gl_ext_texture_snorm()
    init_gl_ext_texture_storage()
    init_gl_ext_texture_swizzle()
    init_gl_ext_texture_type_2_10_10_10_rev()
    init_gl_ext_texture_view()
    init_gl_ext_timer_query()
    init_gl_ext_transform_feedback()
    init_gl_ext_unpack_subimage()
    init_gl_ext_vertex_array()
    init_gl_ext_vertex_array_bgra()
    init_gl_ext_vertex_attrib_64bit()
    init_gl_ext_vertex_shader()
    init_gl_ext_vertex_weighting()
    init_gl_ext_x11_sync_object()
    init_gl_fj_shader_binary_gccso()
    init_gl_gremedy_frame_terminator()
    init_gl_gremedy_string_marker()
    init_gl_hp_convolution_border_modes()
    init_gl_hp_image_transform()
    init_gl_hp_occlusion_test()
    init_gl_hp_texture_lighting()
    init_gl_ibm_cull_vertex()
    init_gl_ibm_multimode_draw_arrays()
    init_gl_ibm_rasterpos_clip()
    init_gl_ibm_static_data()
    init_gl_ibm_texture_mirrored_repeat()
    init_gl_ibm_vertex_array_lists()
    init_gl_img_framebuffer_downsample()
    init_gl_img_multisampled_render_to_texture()
    init_gl_img_program_binary()
    init_gl_img_read_format()
    init_gl_img_shader_binary()
    init_gl_img_texture_compression_pvrtc()
    init_gl_img_texture_compression_pvrtc2()
    init_gl_img_texture_env_enhanced_fixed_function()
    init_gl_img_texture_filter_cubic()
    init_gl_img_user_clip_plane()
    init_gl_ingr_blend_func_separate()
    init_gl_ingr_color_clamp()
    init_gl_ingr_interlace_read()
    init_gl_intel_framebuffer_cmaa()
    init_gl_intel_map_texture()
    init_gl_intel_parallel_arrays()
    init_gl_intel_performance_query()
    init_gl_khr_blend_equation_advanced()
    init_gl_khr_blend_equation_advanced_coherent()
    init_gl_khr_context_flush_control()
    init_gl_khr_debug()
    init_gl_khr_no_error()
    init_gl_khr_robustness()
    init_gl_khr_texture_compression_astc_hdr()
    init_gl_khr_texture_compression_astc_ldr()
    init_gl_mesax_texture_stack()
    init_gl_mesa_pack_invert()
    init_gl_mesa_resize_buffers()
    init_gl_mesa_window_pos()
    init_gl_mesa_ycbcr_texture()
    init_gl_nvx_conditional_render()
    init_gl_nvx_gpu_memory_info()
    init_gl_nv_bindless_multi_draw_indirect()
    init_gl_nv_bindless_multi_draw_indirect_count()
    init_gl_nv_bindless_texture()
    init_gl_nv_blend_equation_advanced()
    init_gl_nv_blend_equation_advanced_coherent()
    init_gl_nv_command_list()
    init_gl_nv_compute_program5()
    init_gl_nv_conditional_render()
    init_gl_nv_conservative_raster()
    init_gl_nv_conservative_raster_dilate()
    init_gl_nv_copy_buffer()
    init_gl_nv_copy_depth_to_color()
    init_gl_nv_copy_image()
    init_gl_nv_coverage_sample()
    init_gl_nv_deep_texture3d()
    init_gl_nv_depth_buffer_float()
    init_gl_nv_depth_clamp()
    init_gl_nv_depth_nonlinear()
    init_gl_nv_draw_buffers()
    init_gl_nv_draw_instanced()
    init_gl_nv_draw_texture()
    init_gl_nv_evaluators()
    init_gl_nv_explicit_multisample()
    init_gl_nv_fbo_color_attachments()
    init_gl_nv_fence()
    init_gl_nv_fill_rectangle()
    init_gl_nv_float_buffer()
    init_gl_nv_fog_distance()
    init_gl_nv_fragment_coverage_to_color()
    init_gl_nv_fragment_program()
    init_gl_nv_fragment_program2()
    init_gl_nv_framebuffer_blit()
    init_gl_nv_framebuffer_mixed_samples()
    init_gl_nv_framebuffer_multisample()
    init_gl_nv_framebuffer_multisample_coverage()
    init_gl_nv_geometry_program4()
    init_gl_nv_gpu_program4()
    init_gl_nv_gpu_program5()
    init_gl_nv_gpu_shader5()
    init_gl_nv_half_float()
    init_gl_nv_instanced_arrays()
    init_gl_nv_internalformat_sample_query()
    init_gl_nv_light_max_exponent()
    init_gl_nv_multisample_coverage()
    init_gl_nv_multisample_filter_hint()
    init_gl_nv_non_square_matrices()
    init_gl_nv_occlusion_query()
    init_gl_nv_packed_depth_stencil()
    init_gl_nv_parameter_buffer_object()
    init_gl_nv_path_rendering()
    init_gl_nv_path_rendering_shared_edge()
    init_gl_nv_pixel_data_range()
    init_gl_nv_point_sprite()
    init_gl_nv_polygon_mode()
    init_gl_nv_present_video()
    init_gl_nv_primitive_restart()
    init_gl_nv_read_buffer()
    init_gl_nv_register_combiners()
    init_gl_nv_register_combiners2()
    init_gl_nv_srgb_formats()
    init_gl_nv_sample_locations()
    init_gl_nv_shader_buffer_load()
    init_gl_nv_shader_buffer_store()
    init_gl_nv_shader_thread_group()
    init_gl_nv_shadow_samplers_array()
    init_gl_nv_shadow_samplers_cube()
    init_gl_nv_tessellation_program5()
    init_gl_nv_texgen_emboss()
    init_gl_nv_texgen_reflection()
    init_gl_nv_texture_barrier()
    init_gl_nv_texture_border_clamp()
    init_gl_nv_texture_env_combine4()
    init_gl_nv_texture_expand_normal()
    init_gl_nv_texture_multisample()
    init_gl_nv_texture_rectangle()
    init_gl_nv_texture_shader()
    init_gl_nv_texture_shader2()
    init_gl_nv_texture_shader3()
    init_gl_nv_transform_feedback()
    init_gl_nv_transform_feedback2()
    init_gl_nv_uniform_buffer_unified_memory()
    init_gl_nv_vdpau_interop()
    init_gl_nv_vertex_array_range()
    init_gl_nv_vertex_array_range2()
    init_gl_nv_vertex_attrib_integer_64bit()
    init_gl_nv_vertex_buffer_unified_memory()
    init_gl_nv_vertex_program()
    init_gl_nv_vertex_program2_option()
    init_gl_nv_vertex_program3()
    init_gl_nv_vertex_program4()
    init_gl_nv_video_capture()
    init_gl_nv_viewport_array()
    init_gl_nv_viewport_swizzle()
    init_gl_oes_egl_image()
    init_gl_oes_egl_image_external()
    init_gl_oes_blend_equation_separate()
    init_gl_oes_blend_func_separate()
    init_gl_oes_blend_subtract()
    init_gl_oes_byte_coordinates()
    init_gl_oes_compressed_etc1_rgb8_texture()
    init_gl_oes_compressed_paletted_texture()
    init_gl_oes_copy_image()
    init_gl_oes_depth24()
    init_gl_oes_depth32()
    init_gl_oes_depth_texture()
    init_gl_oes_draw_buffers_indexed()
    init_gl_oes_draw_elements_base_vertex()
    init_gl_oes_draw_texture()
    init_gl_oes_element_index_uint()
    init_gl_oes_fixed_point()
    init_gl_oes_framebuffer_object()
    init_gl_oes_geometry_shader()
    init_gl_oes_get_program_binary()
    init_gl_oes_mapbuffer()
    init_gl_oes_matrix_get()
    init_gl_oes_matrix_palette()
    init_gl_oes_packed_depth_stencil()
    init_gl_oes_point_size_array()
    init_gl_oes_point_sprite()
    init_gl_oes_primitive_bounding_box()
    init_gl_oes_query_matrix()
    init_gl_oes_read_format()
    init_gl_oes_required_internalformat()
    init_gl_oes_rgb8_rgba8()
    init_gl_oes_sample_shading()
    init_gl_oes_shader_multisample_interpolation()
    init_gl_oes_single_precision()
    init_gl_oes_standard_derivatives()
    init_gl_oes_stencil1()
    init_gl_oes_stencil4()
    init_gl_oes_stencil8()
    init_gl_oes_stencil_wrap()
    init_gl_oes_surfaceless_context()
    init_gl_oes_tessellation_shader()
    init_gl_oes_texture_3d()
    init_gl_oes_texture_border_clamp()
    init_gl_oes_texture_buffer()
    init_gl_oes_texture_compression_astc()
    init_gl_oes_texture_cube_map()
    init_gl_oes_texture_cube_map_array()
    init_gl_oes_texture_float()
    init_gl_oes_texture_half_float()
    init_gl_oes_texture_mirrored_repeat()
    init_gl_oes_texture_stencil8()
    init_gl_oes_texture_storage_multisample_2d_array()
    init_gl_oes_texture_view()
    init_gl_oes_vertex_array_object()
    init_gl_oes_vertex_half_float()
    init_gl_oes_vertex_type_10_10_10_2()
    init_gl_oml_interlace()
    init_gl_oml_resample()
    init_gl_oml_subsample()
    init_gl_ovr_multiview()
    init_gl_ovr_multiview_multisampled_render_to_texture()
    init_gl_pgi_misc_hints()
    init_gl_pgi_vertex_hints()
    init_gl_qcom_alpha_test()
    init_gl_qcom_binning_control()
    init_gl_qcom_driver_control()
    init_gl_qcom_extended_get()
    init_gl_qcom_extended_get2()
    init_gl_qcom_perfmon_global_mode()
    init_gl_qcom_tiled_rendering()
    init_gl_qcom_writeonly_rendering()
    init_gl_rend_screen_coordinates()
    init_gl_s3_s3tc()
    init_gl_sgis_detail_texture()
    init_gl_sgis_fog_function()
    init_gl_sgis_generate_mipmap()
    init_gl_sgis_multisample()
    init_gl_sgis_pixel_texture()
    init_gl_sgis_point_line_texgen()
    init_gl_sgis_point_parameters()
    init_gl_sgis_sharpen_texture()
    init_gl_sgis_texture4d()
    init_gl_sgis_texture_border_clamp()
    init_gl_sgis_texture_color_mask()
    init_gl_sgis_texture_edge_clamp()
    init_gl_sgis_texture_filter4()
    init_gl_sgis_texture_lod()
    init_gl_sgis_texture_select()
    init_gl_sgix_async()
    init_gl_sgix_async_histogram()
    init_gl_sgix_async_pixel()
    init_gl_sgix_blend_alpha_minmax()
    init_gl_sgix_calligraphic_fragment()
    init_gl_sgix_clipmap()
    init_gl_sgix_convolution_accuracy()
    init_gl_sgix_depth_texture()
    init_gl_sgix_flush_raster()
    init_gl_sgix_fog_offset()
    init_gl_sgix_fragment_lighting()
    init_gl_sgix_framezoom()
    init_gl_sgix_igloo_interface()
    init_gl_sgix_instruments()
    init_gl_sgix_interlace()
    init_gl_sgix_ir_instrument1()
    init_gl_sgix_list_priority()
    init_gl_sgix_pixel_texture()
    init_gl_sgix_pixel_tiles()
    init_gl_sgix_polynomial_ffd()
    init_gl_sgix_reference_plane()
    init_gl_sgix_resample()
    init_gl_sgix_scalebias_hint()
    init_gl_sgix_shadow()
    init_gl_sgix_shadow_ambient()
    init_gl_sgix_sprite()
    init_gl_sgix_subsample()
    init_gl_sgix_tag_sample_buffer()
    init_gl_sgix_texture_add_env()
    init_gl_sgix_texture_coordinate_clamp()
    init_gl_sgix_texture_lod_bias()
    init_gl_sgix_texture_multi_buffer()
    init_gl_sgix_texture_scale_bias()
    init_gl_sgix_vertex_preclip()
    init_gl_sgix_ycrcb()
    init_gl_sgix_ycrcba()
    init_gl_sgi_color_matrix()
    init_gl_sgi_color_table()
    init_gl_sgi_texture_color_table()
    init_gl_sunx_constant_data()
    init_gl_sun_convolution_border_modes()
    init_gl_sun_global_alpha()
    init_gl_sun_mesh_array()
    init_gl_sun_slice_accum()
    init_gl_sun_triangle_list()
    init_gl_sun_vertex()
    init_gl_viv_shader_binary()
    init_gl_win_phong_shading()
    init_gl_win_specular_fog()

